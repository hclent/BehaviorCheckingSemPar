[
    {
        "db_id": "perpetrator",
        "query": "SELECT People_ID FROM people WHERE Name = 'Ovie Dotson';",
        "question": "Select people id from people when name equals Ovie Dotson",
        "tables": [
            "people",
            "perpetrator"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "people",
            "id",
            "from",
            "people",
            "when",
            "name",
            "equals",
            "Ovie",
            "Dotson"
        ],
        "query_toks": [
            "SELECT",
            "People_ID",
            "FROM",
            "people",
            "WHERE",
            "Name",
            "=",
            "'Ovie",
            "Dotson'"
        ],
        "query_toks_no_value": [
            "select",
            "people_id",
            "from",
            "people",
            "where",
            "name",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__people__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__people.people_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__people.name__",
                            false
                        ],
                        null
                    ],
                    "\"Ovie Dotson\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "perpetrator",
        "query": "SELECT Year FROM perpetrator WHERE Location = 'Zhaodong';",
        "question": "Select year from perpetrator when location equals Zhaodong",
        "tables": [
            "people",
            "perpetrator"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "year",
            "from",
            "perpetrator",
            "when",
            "location",
            "equals",
            "Zhaodong"
        ],
        "query_toks": [
            "SELECT",
            "Year",
            "FROM",
            "perpetrator",
            "WHERE",
            "Location",
            "=",
            "'Zhaodong'"
        ],
        "query_toks_no_value": [
            "select",
            "year",
            "from",
            "perpetrator",
            "where",
            "location",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__perpetrator__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__perpetrator.year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__perpetrator.location__",
                            false
                        ],
                        null
                    ],
                    "\"Zhaodong\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "perpetrator",
        "query": "SELECT Year FROM perpetrator WHERE Injured = 16;",
        "question": "Select year from perpetrator when injured equals 16",
        "tables": [
            "people",
            "perpetrator"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "year",
            "from",
            "perpetrator",
            "when",
            "injured",
            "equals",
            "16"
        ],
        "query_toks": [
            "SELECT",
            "Year",
            "FROM",
            "perpetrator",
            "WHERE",
            "Injured",
            "=",
            "16"
        ],
        "query_toks_no_value": [
            "select",
            "year",
            "from",
            "perpetrator",
            "where",
            "injured",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__perpetrator__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__perpetrator.year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__perpetrator.injured__",
                            false
                        ],
                        null
                    ],
                    16.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT i_ID FROM advisor WHERE s_ID = '81638';",
        "question": "Select instructor id from advisor when student id equals 81638",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "instructor",
            "id",
            "from",
            "advisor",
            "when",
            "student",
            "id",
            "equals",
            "81638"
        ],
        "query_toks": [
            "SELECT",
            "i_ID",
            "FROM",
            "advisor",
            "WHERE",
            "s_ID",
            "=",
            "'81638'"
        ],
        "query_toks_no_value": [
            "select",
            "i_id",
            "from",
            "advisor",
            "where",
            "s_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__advisor__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__advisor.i_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__advisor.s_id__",
                            false
                        ],
                        null
                    ],
                    "\"81638\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT * FROM advisor WHERE i_ID = 25946;",
        "question": "Select all columns from advisor when instructor id equals 25946",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "advisor",
            "when",
            "instructor",
            "id",
            "equals",
            "25946"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "advisor",
            "WHERE",
            "i_ID",
            "=",
            "25946"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "advisor",
            "where",
            "i_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__advisor__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__advisor.i_id__",
                            false
                        ],
                        null
                    ],
                    25946.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT course_id FROM prereq WHERE prereq_id = '489';",
        "question": "Select course id from prerequisite when prerequisite id equals 489",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "course",
            "id",
            "from",
            "prerequisite",
            "when",
            "prerequisite",
            "id",
            "equals",
            "489"
        ],
        "query_toks": [
            "SELECT",
            "course_id",
            "FROM",
            "prereq",
            "WHERE",
            "prereq_id",
            "=",
            "'489'"
        ],
        "query_toks_no_value": [
            "select",
            "course_id",
            "from",
            "prereq",
            "where",
            "prereq_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__prereq__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__prereq.course_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__prereq.prereq_id__",
                            false
                        ],
                        null
                    ],
                    "\"489\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT * FROM prereq WHERE course_id = 692;",
        "question": "Select all columns from prerequisite when course id equals 692",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "prerequisite",
            "when",
            "course",
            "id",
            "equals",
            "692"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "prereq",
            "WHERE",
            "course_id",
            "=",
            "692"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "prereq",
            "where",
            "course_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__prereq__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__prereq.course_id__",
                            false
                        ],
                        null
                    ],
                    692.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT name FROM student WHERE ID = '70310';",
        "question": "Select name from student when id equals 70310",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "name",
            "from",
            "student",
            "when",
            "id",
            "equals",
            "70310"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "student",
            "WHERE",
            "ID",
            "=",
            "'70310'"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "student",
            "where",
            "id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__student.id__",
                            false
                        ],
                        null
                    ],
                    "\"70310\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT capacity FROM classroom WHERE building = 'Power';",
        "question": "Select capacity from classroom when building equals Power",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "capacity",
            "from",
            "classroom",
            "when",
            "building",
            "equals",
            "Power"
        ],
        "query_toks": [
            "SELECT",
            "capacity",
            "FROM",
            "classroom",
            "WHERE",
            "building",
            "=",
            "'Power'"
        ],
        "query_toks_no_value": [
            "select",
            "capacity",
            "from",
            "classroom",
            "where",
            "building",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__classroom__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__classroom.capacity__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__classroom.building__",
                            false
                        ],
                        null
                    ],
                    "\"Power\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT building FROM classroom WHERE room_number = 434;",
        "question": "Select building from classroom when room number equals 434",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "building",
            "from",
            "classroom",
            "when",
            "room",
            "number",
            "equals",
            "434"
        ],
        "query_toks": [
            "SELECT",
            "building",
            "FROM",
            "classroom",
            "WHERE",
            "room_number",
            "=",
            "434"
        ],
        "query_toks_no_value": [
            "select",
            "building",
            "from",
            "classroom",
            "where",
            "room_number",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__classroom__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__classroom.building__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__classroom.room_number__",
                            false
                        ],
                        null
                    ],
                    434.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT sec_id FROM teaches WHERE semester = 'Fall';",
        "question": "Select section id from teaches when semester equals Fall",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "section",
            "id",
            "from",
            "teaches",
            "when",
            "semester",
            "equals",
            "Fall"
        ],
        "query_toks": [
            "SELECT",
            "sec_id",
            "FROM",
            "teaches",
            "WHERE",
            "semester",
            "=",
            "'Fall'"
        ],
        "query_toks_no_value": [
            "select",
            "sec_id",
            "from",
            "teaches",
            "where",
            "semester",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__teaches__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__teaches.sec_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__teaches.semester__",
                            false
                        ],
                        null
                    ],
                    "\"Fall\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT course_id FROM teaches WHERE sec_id = 2;",
        "question": "Select course id from teaches when section id equals 2",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "course",
            "id",
            "from",
            "teaches",
            "when",
            "section",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "course_id",
            "FROM",
            "teaches",
            "WHERE",
            "sec_id",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "course_id",
            "from",
            "teaches",
            "where",
            "sec_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__teaches__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__teaches.course_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__teaches.sec_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT * FROM takes WHERE year = 2006;",
        "question": "Select all columns from takes classes when year equals 2006",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "takes",
            "classes",
            "when",
            "year",
            "equals",
            "2006"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "takes",
            "WHERE",
            "year",
            "=",
            "2006"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "takes",
            "where",
            "year",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__takes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__takes.year__",
                            false
                        ],
                        null
                    ],
                    2006.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT semester FROM section WHERE course_id = '793';",
        "question": "Select semester from section when course id equals 793",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "semester",
            "from",
            "section",
            "when",
            "course",
            "id",
            "equals",
            "793"
        ],
        "query_toks": [
            "SELECT",
            "semester",
            "FROM",
            "section",
            "WHERE",
            "course_id",
            "=",
            "'793'"
        ],
        "query_toks_no_value": [
            "select",
            "semester",
            "from",
            "section",
            "where",
            "course_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__section__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__section.semester__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__section.course_id__",
                            false
                        ],
                        null
                    ],
                    "\"793\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT * FROM section WHERE room_number = 707;",
        "question": "Select all columns from section when room number equals 707",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "section",
            "when",
            "room",
            "number",
            "equals",
            "707"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "section",
            "WHERE",
            "room_number",
            "=",
            "707"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "section",
            "where",
            "room_number",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__section__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__section.room_number__",
                            false
                        ],
                        null
                    ],
                    707.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT name FROM instructor WHERE dept_name = 'Geology';",
        "question": "Select name from instructor when department name equals Geology",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "name",
            "from",
            "instructor",
            "when",
            "department",
            "name",
            "equals",
            "Geology"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "instructor",
            "WHERE",
            "dept_name",
            "=",
            "'Geology'"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "instructor",
            "where",
            "dept_name",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__instructor__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__instructor.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__instructor.dept_name__",
                            false
                        ],
                        null
                    ],
                    "\"Geology\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT dept_name FROM course WHERE title = 'Creative Writing';",
        "question": "Select department name from course when title equals Creative Writing",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "department",
            "name",
            "from",
            "course",
            "when",
            "title",
            "equals",
            "Creative",
            "Writing"
        ],
        "query_toks": [
            "SELECT",
            "dept_name",
            "FROM",
            "course",
            "WHERE",
            "title",
            "=",
            "'Creative",
            "Writing'"
        ],
        "query_toks_no_value": [
            "select",
            "dept_name",
            "from",
            "course",
            "where",
            "title",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__course__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__course.dept_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__course.title__",
                            false
                        ],
                        null
                    ],
                    "\"Creative Writing\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT start_min FROM time_slot WHERE start_hr = '10';",
        "question": "Select start minute from time slot when start hour equals 10",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "start",
            "minute",
            "from",
            "time",
            "slot",
            "when",
            "start",
            "hour",
            "equals",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "start_min",
            "FROM",
            "time_slot",
            "WHERE",
            "start_hr",
            "=",
            "'10'"
        ],
        "query_toks_no_value": [
            "select",
            "start_min",
            "from",
            "time_slot",
            "where",
            "start_hr",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__time_slot__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__time_slot.start_min__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__time_slot.start_hr__",
                            false
                        ],
                        null
                    ],
                    "\"10\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT start_hr FROM time_slot WHERE start_min = 0;",
        "question": "Select start hour from time slot when start minute equals 0",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "start",
            "hour",
            "from",
            "time",
            "slot",
            "when",
            "start",
            "minute",
            "equals",
            "0"
        ],
        "query_toks": [
            "SELECT",
            "start_hr",
            "FROM",
            "time_slot",
            "WHERE",
            "start_min",
            "=",
            "0"
        ],
        "query_toks_no_value": [
            "select",
            "start_hr",
            "from",
            "time_slot",
            "where",
            "start_min",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__time_slot__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__time_slot.start_hr__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__time_slot.start_min__",
                            false
                        ],
                        null
                    ],
                    0.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_company",
        "query": "SELECT name FROM airport WHERE Country = 'Denmark';",
        "question": "Select name from airport when country equals Denmark",
        "tables": [
            "airport",
            "operate_company",
            "flight"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "name",
            "from",
            "airport",
            "when",
            "country",
            "equals",
            "Denmark"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "airport",
            "WHERE",
            "Countr",
            "(",
            "Countr",
            ")",
            "=",
            "'Denmark'"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "airport",
            "where",
            "countr",
            "(",
            "countr",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__airport__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__airport.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__airport.country__",
                            false
                        ],
                        null
                    ],
                    "\"Denmark\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_company",
        "query": "SELECT Type FROM operate_company WHERE Incorporated_in = 'Canada';",
        "question": "Select type from operate company when incorporated in equals Canada",
        "tables": [
            "airport",
            "operate_company",
            "flight"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "type",
            "from",
            "operate",
            "company",
            "when",
            "incorporated",
            "in",
            "equals",
            "Canada"
        ],
        "query_toks": [
            "SELECT",
            "Type",
            "FROM",
            "operate_company",
            "WHERE",
            "Incorporated_in",
            "=",
            "'Canada'"
        ],
        "query_toks_no_value": [
            "select",
            "type",
            "from",
            "operate_company",
            "where",
            "incorporated_in",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__operate_company__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__operate_company.type__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__operate_company.incorporated_in__",
                            false
                        ],
                        null
                    ],
                    "\"Canada\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_company",
        "query": "SELECT * FROM flight WHERE airport_id = 2;",
        "question": "Select all columns from flight when airport id equals 2",
        "tables": [
            "airport",
            "operate_company",
            "flight"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "flight",
            "when",
            "airport",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "flight",
            "WHERE",
            "airport_id",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "flight",
            "where",
            "airport_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__flight__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__flight.airport_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "icfp_1",
        "query": "SELECT authID FROM Authorship WHERE paperID = '203';",
        "question": "Select author id from authorship count when paper id equals 203",
        "tables": [
            "Authorship",
            "Papers",
            "Inst",
            "Authors"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "author",
            "id",
            "from",
            "authorship",
            "count",
            "when",
            "paper",
            "id",
            "equals",
            "203"
        ],
        "query_toks": [
            "SELECT",
            "authID",
            "FROM",
            "Authorship",
            "WHERE",
            "paperID",
            "=",
            "'203'"
        ],
        "query_toks_no_value": [
            "select",
            "authid",
            "from",
            "authorship",
            "where",
            "paperid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__authorship__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__authorship.authid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__authorship.paperid__",
                            false
                        ],
                        null
                    ],
                    "\"203\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "icfp_1",
        "query": "SELECT authOrder FROM Authorship WHERE authID = 52;",
        "question": "Select author count from authorship count when author id equals 52",
        "tables": [
            "Authorship",
            "Papers",
            "Inst",
            "Authors"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "author",
            "count",
            "from",
            "authorship",
            "count",
            "when",
            "author",
            "id",
            "equals",
            "52"
        ],
        "query_toks": [
            "SELECT",
            "authOrder",
            "FROM",
            "Authorship",
            "WHERE",
            "authID",
            "=",
            "52"
        ],
        "query_toks_no_value": [
            "select",
            "authorder",
            "from",
            "authorship",
            "where",
            "authid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__authorship__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__authorship.authorder__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__authorship.authid__",
                            false
                        ],
                        null
                    ],
                    52.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "icfp_1",
        "query": "SELECT title FROM Papers WHERE paperID = '202';",
        "question": "Select title from papers when paper id equals 202",
        "tables": [
            "Authorship",
            "Papers",
            "Inst",
            "Authors"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "title",
            "from",
            "papers",
            "when",
            "paper",
            "id",
            "equals",
            "202"
        ],
        "query_toks": [
            "SELECT",
            "title",
            "FROM",
            "Papers",
            "WHERE",
            "paperID",
            "=",
            "'202'"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "papers",
            "where",
            "paperid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__papers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__papers.title__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__papers.paperid__",
                            false
                        ],
                        null
                    ],
                    "\"202\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "icfp_1",
        "query": "SELECT country FROM Inst WHERE name = 'Indiana University';",
        "question": "Select country from institution when name equals Indiana University",
        "tables": [
            "Authorship",
            "Papers",
            "Inst",
            "Authors"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "country",
            "from",
            "institution",
            "when",
            "name",
            "equals",
            "Indiana",
            "University"
        ],
        "query_toks": [
            "SELECT",
            "countr",
            "(",
            "countr",
            ")",
            "FROM",
            "Inst",
            "WHERE",
            "name",
            "=",
            "'Indiana",
            "University'"
        ],
        "query_toks_no_value": [
            "select",
            "countr",
            "(",
            "countr",
            ")",
            "from",
            "inst",
            "where",
            "name",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__inst__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__inst.country__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__inst.name__",
                            false
                        ],
                        null
                    ],
                    "\"Indiana University\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "icfp_1",
        "query": "SELECT country FROM Inst WHERE instID = 1030;",
        "question": "Select country from institution when institution id equals 1030",
        "tables": [
            "Authorship",
            "Papers",
            "Inst",
            "Authors"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "country",
            "from",
            "institution",
            "when",
            "institution",
            "id",
            "equals",
            "1030"
        ],
        "query_toks": [
            "SELECT",
            "countr",
            "(",
            "countr",
            ")",
            "FROM",
            "Inst",
            "WHERE",
            "instID",
            "=",
            "1030"
        ],
        "query_toks_no_value": [
            "select",
            "countr",
            "(",
            "countr",
            ")",
            "from",
            "inst",
            "where",
            "instid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__inst__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__inst.country__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__inst.instid__",
                            false
                        ],
                        null
                    ],
                    1030.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "icfp_1",
        "query": "SELECT lname FROM Authors WHERE authID = '50';",
        "question": "Select last name from authors when author id equals 50",
        "tables": [
            "Authorship",
            "Papers",
            "Inst",
            "Authors"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "last",
            "name",
            "from",
            "authors",
            "when",
            "author",
            "id",
            "equals",
            "50"
        ],
        "query_toks": [
            "SELECT",
            "lname",
            "FROM",
            "Authors",
            "WHERE",
            "authID",
            "=",
            "'50'"
        ],
        "query_toks_no_value": [
            "select",
            "lname",
            "from",
            "authors",
            "where",
            "authid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__authors__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__authors.lname__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__authors.authid__",
                            false
                        ],
                        null
                    ],
                    "\"50\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "storm_record",
        "query": "SELECT Max_speed FROM storm WHERE Dates_active = 'September18\u2013September25';",
        "question": "Select max speed from storm when dates active equals September18\u2013September25",
        "tables": [
            "storm",
            "affected_region",
            "region"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "max",
            "speed",
            "from",
            "storm",
            "when",
            "dates",
            "active",
            "equals",
            "September18\u2013September25"
        ],
        "query_toks": [
            "SELECT",
            "Max_spee",
            "(",
            "Max_spee",
            ")",
            "FROM",
            "storm",
            "WHERE",
            "Dates_active",
            "=",
            "'September18\u2013September25'"
        ],
        "query_toks_no_value": [
            "select",
            "max_spee",
            "(",
            "max_spee",
            ")",
            "from",
            "storm",
            "where",
            "dates_active",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__storm__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__storm.max_speed__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__storm.dates_active__",
                            false
                        ],
                        null
                    ],
                    "\"September18\u2013September25\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "storm_record",
        "query": "SELECT Number_city_affected FROM affected_region WHERE Storm_ID = 1;",
        "question": "Select number city affected from affected region when storm id equals 1",
        "tables": [
            "storm",
            "affected_region",
            "region"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "number",
            "city",
            "affected",
            "from",
            "affected",
            "region",
            "when",
            "storm",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Number_city_affected",
            "FROM",
            "affected_region",
            "WHERE",
            "Storm_ID",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "number_city_affected",
            "from",
            "affected_region",
            "where",
            "storm_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__affected_region__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__affected_region.number_city_affected__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__affected_region.storm_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "storm_record",
        "query": "SELECT Region_code FROM region WHERE Region_id = '2';",
        "question": "Select region code from region when region id equals 2",
        "tables": [
            "storm",
            "affected_region",
            "region"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "region",
            "code",
            "from",
            "region",
            "when",
            "region",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Region_code",
            "FROM",
            "region",
            "WHERE",
            "Region_id",
            "=",
            "'2'"
        ],
        "query_toks_no_value": [
            "select",
            "region_code",
            "from",
            "region",
            "where",
            "region_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__region__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__region.region_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__region.region_id__",
                            false
                        ],
                        null
                    ],
                    "\"2\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pilot_record",
        "query": "SELECT Age FROM pilot WHERE Rank = '6';",
        "question": "Select age from pilot when rank equals 6",
        "tables": [
            "pilot",
            "aircraft",
            "pilot_record"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "age",
            "from",
            "pilot",
            "when",
            "rank",
            "equals",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "Age",
            "FROM",
            "pilot",
            "WHERE",
            "Rank",
            "=",
            "'6'"
        ],
        "query_toks_no_value": [
            "select",
            "age",
            "from",
            "pilot",
            "where",
            "rank",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__pilot__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__pilot.age__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__pilot.rank__",
                            false
                        ],
                        null
                    ],
                    "\"6\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pilot_record",
        "query": "SELECT Pilot_name FROM pilot WHERE Rank = 34;",
        "question": "Select pilot name from pilot when rank equals 34",
        "tables": [
            "pilot",
            "aircraft",
            "pilot_record"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "pilot",
            "name",
            "from",
            "pilot",
            "when",
            "rank",
            "equals",
            "34"
        ],
        "query_toks": [
            "SELECT",
            "Pilot_name",
            "FROM",
            "pilot",
            "WHERE",
            "Rank",
            "=",
            "34"
        ],
        "query_toks_no_value": [
            "select",
            "pilot_name",
            "from",
            "pilot",
            "where",
            "rank",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__pilot__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__pilot.pilot_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__pilot.rank__",
                            false
                        ],
                        null
                    ],
                    34.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pilot_record",
        "query": "SELECT Model FROM aircraft WHERE Fuel_Propulsion = 'Hybrid';",
        "question": "Select model from aircraft when fuel propulsion equals Hybrid",
        "tables": [
            "pilot",
            "aircraft",
            "pilot_record"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "model",
            "from",
            "aircraft",
            "when",
            "fuel",
            "propulsion",
            "equals",
            "Hybrid"
        ],
        "query_toks": [
            "SELECT",
            "Model",
            "FROM",
            "aircraft",
            "WHERE",
            "Fuel_Propulsion",
            "=",
            "'Hybrid'"
        ],
        "query_toks_no_value": [
            "select",
            "model",
            "from",
            "aircraft",
            "where",
            "fuel_propulsion",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__aircraft__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__aircraft.model__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__aircraft.fuel_propulsion__",
                            false
                        ],
                        null
                    ],
                    "\"Hybrid\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pilot_record",
        "query": "SELECT * FROM aircraft WHERE Aircraft_ID = 2;",
        "question": "Select all columns from aircraft when aircraft id equals 2",
        "tables": [
            "pilot",
            "aircraft",
            "pilot_record"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "aircraft",
            "when",
            "aircraft",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "aircraft",
            "WHERE",
            "Aircraft_ID",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "aircraft",
            "where",
            "aircraft_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__aircraft__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__aircraft.aircraft_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pilot_record",
        "query": "SELECT Date FROM pilot_record WHERE Aircraft_ID = '6';",
        "question": "Select date from pilot record when aircraft id equals 6",
        "tables": [
            "pilot",
            "aircraft",
            "pilot_record"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "date",
            "from",
            "pilot",
            "record",
            "when",
            "aircraft",
            "id",
            "equals",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "Date",
            "FROM",
            "pilot_record",
            "WHERE",
            "Aircraft_ID",
            "=",
            "'6'"
        ],
        "query_toks_no_value": [
            "select",
            "date",
            "from",
            "pilot_record",
            "where",
            "aircraft_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__pilot_record__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__pilot_record.date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__pilot_record.aircraft_id__",
                            false
                        ],
                        null
                    ],
                    "\"6\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pilot_record",
        "query": "SELECT * FROM pilot_record WHERE Aircraft_ID = 2;",
        "question": "Select all columns from pilot record when aircraft id equals 2",
        "tables": [
            "pilot",
            "aircraft",
            "pilot_record"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "pilot",
            "record",
            "when",
            "aircraft",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "pilot_record",
            "WHERE",
            "Aircraft_ID",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "pilot_record",
            "where",
            "aircraft_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__pilot_record__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__pilot_record.aircraft_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "race_track",
        "query": "SELECT Track_ID FROM race WHERE Date = 'May 17';",
        "question": "Select track id from race when date equals May 17",
        "tables": [
            "race",
            "track"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "track",
            "id",
            "from",
            "race",
            "when",
            "date",
            "equals",
            "May",
            "17"
        ],
        "query_toks": [
            "SELECT",
            "Track_ID",
            "FROM",
            "race",
            "WHERE",
            "Date",
            "=",
            "'May",
            "17'"
        ],
        "query_toks_no_value": [
            "select",
            "track_id",
            "from",
            "race",
            "where",
            "date",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__race__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__race.track_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__race.date__",
                            false
                        ],
                        null
                    ],
                    "\"May 17\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "race_track",
        "query": "SELECT Name FROM race WHERE Race_ID = 1;",
        "question": "Select name from race when race id equals 1",
        "tables": [
            "race",
            "track"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "name",
            "from",
            "race",
            "when",
            "race",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "race",
            "WHERE",
            "Race_ID",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "race",
            "where",
            "race_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__race__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__race.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__race.race_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "race_track",
        "query": "SELECT Name FROM track WHERE Track_ID = '9';",
        "question": "Select name from track when track id equals 9",
        "tables": [
            "race",
            "track"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "name",
            "from",
            "track",
            "when",
            "track",
            "id",
            "equals",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "track",
            "WHERE",
            "Track_ID",
            "=",
            "'9'"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "track",
            "where",
            "track_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__track__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__track.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__track.track_id__",
                            false
                        ],
                        null
                    ],
                    "\"9\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT staff_id FROM Staff WHERE staff_name = 'Vito';",
        "question": "Select staff id from staff when staff name equals Vito",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "staff",
            "id",
            "from",
            "staff",
            "when",
            "staff",
            "name",
            "equals",
            "Vito"
        ],
        "query_toks": [
            "SELECT",
            "staff_id",
            "FROM",
            "Staff",
            "WHERE",
            "staff_name",
            "=",
            "'Vito'"
        ],
        "query_toks_no_value": [
            "select",
            "staff_id",
            "from",
            "staff",
            "where",
            "staff_name",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__staff__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__staff.staff_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__staff.staff_name__",
                            false
                        ],
                        null
                    ],
                    "\"Vito\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT product_price FROM Products WHERE product_type_code = 'Hardware';",
        "question": "Select product price from products when product type code equals Hardware",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "product",
            "price",
            "from",
            "products",
            "when",
            "product",
            "type",
            "code",
            "equals",
            "Hardware"
        ],
        "query_toks": [
            "SELECT",
            "product_price",
            "FROM",
            "Products",
            "WHERE",
            "product_type_code",
            "=",
            "'Hardware'"
        ],
        "query_toks_no_value": [
            "select",
            "product_price",
            "from",
            "products",
            "where",
            "product_type_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products.product_price__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__products.product_type_code__",
                            false
                        ],
                        null
                    ],
                    "\"Hardware\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT product_id FROM Order_Items WHERE order_id = '15';",
        "question": "Select product id from order items when order id equals 15",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "product",
            "id",
            "from",
            "order",
            "items",
            "when",
            "order",
            "id",
            "equals",
            "15"
        ],
        "query_toks": [
            "SELECT",
            "product_id",
            "FROM",
            "Order_Items",
            "WHERE",
            "order_id",
            "=",
            "'15'"
        ],
        "query_toks_no_value": [
            "select",
            "product_id",
            "from",
            "order_items",
            "where",
            "order_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__order_items__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__order_items.product_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__order_items.order_id__",
                            false
                        ],
                        null
                    ],
                    "\"15\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT product_id FROM Order_Items WHERE order_id = 5;",
        "question": "Select product id from order items when order id equals 5",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "product",
            "id",
            "from",
            "order",
            "items",
            "when",
            "order",
            "id",
            "equals",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "product_id",
            "FROM",
            "Order_Items",
            "WHERE",
            "order_id",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "product_id",
            "from",
            "order_items",
            "where",
            "order_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__order_items__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__order_items.product_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__order_items.order_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT department_id FROM Staff_Department_Assignments WHERE job_title_code = 'Administration';",
        "question": "Select department id from staff department assignments when job title code equals Administration",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "department",
            "id",
            "from",
            "staff",
            "department",
            "assignments",
            "when",
            "job",
            "title",
            "code",
            "equals",
            "Administration"
        ],
        "query_toks": [
            "SELECT",
            "department_id",
            "FROM",
            "Staff_Department_Assignments",
            "WHERE",
            "job_title_code",
            "=",
            "'Administration'"
        ],
        "query_toks_no_value": [
            "select",
            "department_id",
            "from",
            "staff_department_assignments",
            "where",
            "job_title_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__staff_department_assignments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__staff_department_assignments.department_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__staff_department_assignments.job_title_code__",
                            false
                        ],
                        null
                    ],
                    "\"Administration\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT job_title_code FROM Staff_Department_Assignments WHERE department_id = 2;",
        "question": "Select job title code from staff department assignments when department id equals 2",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "job",
            "title",
            "code",
            "from",
            "staff",
            "department",
            "assignments",
            "when",
            "department",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "job_title_code",
            "FROM",
            "Staff_Department_Assignments",
            "WHERE",
            "department_id",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "job_title_code",
            "from",
            "staff_department_assignments",
            "where",
            "department_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__staff_department_assignments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__staff_department_assignments.job_title_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__staff_department_assignments.department_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT address_details FROM Addresses WHERE address_id = '7';",
        "question": "Select address details from addresses when address id equals 7",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "address",
            "details",
            "from",
            "addresses",
            "when",
            "address",
            "id",
            "equals",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "address_details",
            "FROM",
            "Addresses",
            "WHERE",
            "address_id",
            "=",
            "'7'"
        ],
        "query_toks_no_value": [
            "select",
            "address_details",
            "from",
            "addresses",
            "where",
            "address_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__addresses.address_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__addresses.address_id__",
                            false
                        ],
                        null
                    ],
                    "\"7\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT order_id FROM Customer_Orders WHERE order_status_code = 'New';",
        "question": "Select order id from customer orders when order status code equals New",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "order",
            "id",
            "from",
            "customer",
            "orders",
            "when",
            "order",
            "status",
            "code",
            "equals",
            "New"
        ],
        "query_toks": [
            "SELECT",
            "order_id",
            "FROM",
            "Customer_Orders",
            "WHERE",
            "order_status_code",
            "=",
            "'New'"
        ],
        "query_toks_no_value": [
            "select",
            "order_id",
            "from",
            "customer_orders",
            "where",
            "order_status_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_orders__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_orders.order_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customer_orders.order_status_code__",
                            false
                        ],
                        null
                    ],
                    "\"New\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT * FROM Customer_Orders WHERE customer_id = 4;",
        "question": "Select all columns from customer orders when customer id equals 4",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "customer",
            "orders",
            "when",
            "customer",
            "id",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Customer_Orders",
            "WHERE",
            "customer_id",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "customer_orders",
            "where",
            "customer_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_orders__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customer_orders.customer_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT dept_store_chain_id FROM Department_Stores WHERE dept_store_id = '11';",
        "question": "Select department store chain id from department stores when department store id equals 11",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "department",
            "store",
            "chain",
            "id",
            "from",
            "department",
            "stores",
            "when",
            "department",
            "store",
            "id",
            "equals",
            "11"
        ],
        "query_toks": [
            "SELECT",
            "dept_store_chain_id",
            "FROM",
            "Department_Stores",
            "WHERE",
            "dept_store_id",
            "=",
            "'11'"
        ],
        "query_toks_no_value": [
            "select",
            "dept_store_chain_id",
            "from",
            "department_stores",
            "where",
            "dept_store_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__department_stores__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__department_stores.dept_store_chain_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__department_stores.dept_store_id__",
                            false
                        ],
                        null
                    ],
                    "\"11\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT customer_id FROM Customer_Addresses WHERE address_id = '9';",
        "question": "Select customer id from customer addresses when address id equals 9",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "customer",
            "id",
            "from",
            "customer",
            "addresses",
            "when",
            "address",
            "id",
            "equals",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "customer_id",
            "FROM",
            "Customer_Addresses",
            "WHERE",
            "address_id",
            "=",
            "'9'"
        ],
        "query_toks_no_value": [
            "select",
            "customer_id",
            "from",
            "customer_addresses",
            "where",
            "address_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_addresses.customer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customer_addresses.address_id__",
                            false
                        ],
                        null
                    ],
                    "\"9\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT customer_id FROM Customer_Addresses WHERE address_id = 10;",
        "question": "Select customer id from customer addresses when address id equals 10",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "customer",
            "id",
            "from",
            "customer",
            "addresses",
            "when",
            "address",
            "id",
            "equals",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "customer_id",
            "FROM",
            "Customer_Addresses",
            "WHERE",
            "address_id",
            "=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "customer_id",
            "from",
            "customer_addresses",
            "where",
            "address_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_addresses.customer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customer_addresses.address_id__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT department_id FROM Departments WHERE department_name = 'purchasing';",
        "question": "Select department id from departments when department name equals purchasing",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "department",
            "id",
            "from",
            "departments",
            "when",
            "department",
            "name",
            "equals",
            "purchasing"
        ],
        "query_toks": [
            "SELECT",
            "department_id",
            "FROM",
            "Departments",
            "WHERE",
            "department_name",
            "=",
            "'purchasing'"
        ],
        "query_toks_no_value": [
            "select",
            "department_id",
            "from",
            "departments",
            "where",
            "department_name",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__departments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__departments.department_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__departments.department_name__",
                            false
                        ],
                        null
                    ],
                    "\"purchasing\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT customer_email FROM Customers WHERE customer_id = '4';",
        "question": "Select customer email from customers when customer id equals 4",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "customer",
            "email",
            "from",
            "customers",
            "when",
            "customer",
            "id",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "customer_email",
            "FROM",
            "Customers",
            "WHERE",
            "customer_id",
            "=",
            "'4'"
        ],
        "query_toks_no_value": [
            "select",
            "customer_email",
            "from",
            "customers",
            "where",
            "customer_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_email__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customers.customer_id__",
                            false
                        ],
                        null
                    ],
                    "\"4\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT customer_code FROM Customers WHERE customer_id = 7;",
        "question": "Select customer code from customers when customer id equals 7",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "customer",
            "code",
            "from",
            "customers",
            "when",
            "customer",
            "id",
            "equals",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "customer_code",
            "FROM",
            "Customers",
            "WHERE",
            "customer_id",
            "=",
            "7"
        ],
        "query_toks_no_value": [
            "select",
            "customer_code",
            "from",
            "customers",
            "where",
            "customer_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customers.customer_id__",
                            false
                        ],
                        null
                    ],
                    7.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT date_to FROM Supplier_Addresses WHERE address_id = '5';",
        "question": "Select date to from supplier addresses when address id equals 5",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "date",
            "to",
            "from",
            "supplier",
            "addresses",
            "when",
            "address",
            "id",
            "equals",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "date_to",
            "FROM",
            "Supplier_Addresses",
            "WHERE",
            "address_id",
            "=",
            "'5'"
        ],
        "query_toks_no_value": [
            "select",
            "date_to",
            "from",
            "supplier_addresses",
            "where",
            "address_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__supplier_addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__supplier_addresses.date_to__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__supplier_addresses.address_id__",
                            false
                        ],
                        null
                    ],
                    "\"5\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT dept_store_chain_name FROM Department_Store_Chain WHERE dept_store_chain_id = '1';",
        "question": "Select department store chain name from department store chain when department store chain id equals 1",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "department",
            "store",
            "chain",
            "name",
            "from",
            "department",
            "store",
            "chain",
            "when",
            "department",
            "store",
            "chain",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "dept_store_chain_name",
            "FROM",
            "Department_Store_Chain",
            "WHERE",
            "dept_store_chain_id",
            "=",
            "'1'"
        ],
        "query_toks_no_value": [
            "select",
            "dept_store_chain_name",
            "from",
            "department_store_chain",
            "where",
            "dept_store_chain_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__department_store_chain__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__department_store_chain.dept_store_chain_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__department_store_chain.dept_store_chain_id__",
                            false
                        ],
                        null
                    ],
                    "\"1\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT * FROM Product_Suppliers WHERE product_id = 7;",
        "question": "Select all columns from product suppliers when product id equals 7",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "product",
            "suppliers",
            "when",
            "product",
            "id",
            "equals",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Product_Suppliers",
            "WHERE",
            "product_id",
            "=",
            "7"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "product_suppliers",
            "where",
            "product_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__product_suppliers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__product_suppliers.product_id__",
                            false
                        ],
                        null
                    ],
                    7.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "music_4",
        "query": "SELECT Famous_Release_date FROM artist WHERE Artist = 'Ophiolatry';",
        "question": "Select famous release date from artist when artist equals Ophiolatry",
        "tables": [
            "artist",
            "music_festival",
            "volume"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "famous",
            "release",
            "date",
            "from",
            "artist",
            "when",
            "artist",
            "equals",
            "Ophiolatry"
        ],
        "query_toks": [
            "SELECT",
            "Famous_Release_date",
            "FROM",
            "artist",
            "WHERE",
            "Artist",
            "=",
            "'Ophiolatry'"
        ],
        "query_toks_no_value": [
            "select",
            "famous_release_date",
            "from",
            "artist",
            "where",
            "artist",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__artist__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__artist.famous_release_date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__artist.artist__",
                            false
                        ],
                        null
                    ],
                    "\"Ophiolatry\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "music_4",
        "query": "SELECT * FROM artist WHERE Artist_ID = 6;",
        "question": "Select all columns from artist when artist id equals 6",
        "tables": [
            "artist",
            "music_festival",
            "volume"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "artist",
            "when",
            "artist",
            "id",
            "equals",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "artist",
            "WHERE",
            "Artist_ID",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "artist",
            "where",
            "artist_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__artist__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__artist.artist_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "music_4",
        "query": "SELECT Volume FROM music_festival WHERE Result = 'Awarded';",
        "question": "Select volume from music festival when result equals Awarded",
        "tables": [
            "artist",
            "music_festival",
            "volume"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "volume",
            "from",
            "music",
            "festival",
            "when",
            "result",
            "equals",
            "Awarded"
        ],
        "query_toks": [
            "SELECT",
            "Volume",
            "FROM",
            "music_festival",
            "WHERE",
            "Result",
            "=",
            "'Awarded'"
        ],
        "query_toks_no_value": [
            "select",
            "volume",
            "from",
            "music_festival",
            "where",
            "result",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__music_festival__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__music_festival.volume__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__music_festival.result__",
                            false
                        ],
                        null
                    ],
                    "\"Awarded\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "music_4",
        "query": "SELECT * FROM music_festival WHERE Volume = 7;",
        "question": "Select all columns from music festival when volume equals 7",
        "tables": [
            "artist",
            "music_festival",
            "volume"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "music",
            "festival",
            "when",
            "volume",
            "equals",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "music_festival",
            "WHERE",
            "Volume",
            "=",
            "7"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "music_festival",
            "where",
            "volume",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__music_festival__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__music_festival.volume__",
                            false
                        ],
                        null
                    ],
                    7.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_fnol",
        "query": "SELECT Claim_ID FROM Claims WHERE FNOL_ID = 1722;",
        "question": "Select claim id from claims when fnol id equals 1722",
        "tables": [
            "Settlements",
            "Claims",
            "Services",
            "First_Notification_of_Loss",
            "Customers_Policies",
            "Customers",
            "Available_Policies"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "claim",
            "id",
            "from",
            "claims",
            "when",
            "fnol",
            "id",
            "equals",
            "1722"
        ],
        "query_toks": [
            "SELECT",
            "Claim_ID",
            "FROM",
            "Claims",
            "WHERE",
            "FNOL_ID",
            "=",
            "1722"
        ],
        "query_toks_no_value": [
            "select",
            "claim_id",
            "from",
            "claims",
            "where",
            "fnol_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__claims__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__claims.claim_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__claims.fnol_id__",
                            false
                        ],
                        null
                    ],
                    1722.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_fnol",
        "query": "SELECT Service_ID FROM Services WHERE Service_name = 'New policy application';",
        "question": "Select service id from services when service name equals New policy application",
        "tables": [
            "Settlements",
            "Claims",
            "Services",
            "First_Notification_of_Loss",
            "Customers_Policies",
            "Customers",
            "Available_Policies"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "service",
            "id",
            "from",
            "services",
            "when",
            "service",
            "name",
            "equals",
            "New",
            "policy",
            "application"
        ],
        "query_toks": [
            "SELECT",
            "Service_ID",
            "FROM",
            "Services",
            "WHERE",
            "Service_name",
            "=",
            "'New",
            "policy",
            "application'"
        ],
        "query_toks_no_value": [
            "select",
            "service_id",
            "from",
            "services",
            "where",
            "service_name",
            "=",
            "value",
            "policy",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__services__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__services.service_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__services.service_name__",
                            false
                        ],
                        null
                    ],
                    "\"New policy application\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_fnol",
        "query": "SELECT Service_ID FROM First_Notification_of_Loss WHERE Policy_ID = '366';",
        "question": "Select service id from first notification of loss when policy id equals 366",
        "tables": [
            "Settlements",
            "Claims",
            "Services",
            "First_Notification_of_Loss",
            "Customers_Policies",
            "Customers",
            "Available_Policies"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "service",
            "id",
            "from",
            "first",
            "notification",
            "of",
            "loss",
            "when",
            "policy",
            "id",
            "equals",
            "366"
        ],
        "query_toks": [
            "SELECT",
            "Service_ID",
            "FROM",
            "First_Notification_of_Loss",
            "WHERE",
            "Policy_ID",
            "=",
            "'366'"
        ],
        "query_toks_no_value": [
            "select",
            "service_id",
            "from",
            "first_notification_of_loss",
            "where",
            "policy_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__first_notification_of_loss__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__first_notification_of_loss.service_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__first_notification_of_loss.policy_id__",
                            false
                        ],
                        null
                    ],
                    "\"366\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_fnol",
        "query": "SELECT Customer_ID FROM First_Notification_of_Loss WHERE Policy_ID = 879;",
        "question": "Select customer id from first notification of loss when policy id equals 879",
        "tables": [
            "Settlements",
            "Claims",
            "Services",
            "First_Notification_of_Loss",
            "Customers_Policies",
            "Customers",
            "Available_Policies"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "customer",
            "id",
            "from",
            "first",
            "notification",
            "of",
            "loss",
            "when",
            "policy",
            "id",
            "equals",
            "879"
        ],
        "query_toks": [
            "SELECT",
            "Customer_ID",
            "FROM",
            "First_Notification_of_Loss",
            "WHERE",
            "Policy_ID",
            "=",
            "879"
        ],
        "query_toks_no_value": [
            "select",
            "customer_id",
            "from",
            "first_notification_of_loss",
            "where",
            "policy_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__first_notification_of_loss__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__first_notification_of_loss.customer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__first_notification_of_loss.policy_id__",
                            false
                        ],
                        null
                    ],
                    879.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_fnol",
        "query": "SELECT Customer_ID FROM Customers_Policies WHERE Policy_ID = '346';",
        "question": "Select customer id from customers policies when policy id equals 346",
        "tables": [
            "Settlements",
            "Claims",
            "Services",
            "First_Notification_of_Loss",
            "Customers_Policies",
            "Customers",
            "Available_Policies"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "customer",
            "id",
            "from",
            "customers",
            "policies",
            "when",
            "policy",
            "id",
            "equals",
            "346"
        ],
        "query_toks": [
            "SELECT",
            "Customer_ID",
            "FROM",
            "Customers_Policies",
            "WHERE",
            "Policy_ID",
            "=",
            "'346'"
        ],
        "query_toks_no_value": [
            "select",
            "customer_id",
            "from",
            "customers_policies",
            "where",
            "policy_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers_policies__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers_policies.customer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customers_policies.policy_id__",
                            false
                        ],
                        null
                    ],
                    "\"346\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_fnol",
        "query": "SELECT Customer_name FROM Customers WHERE Customer_ID = '996';",
        "question": "Select customer name from customers when customer id equals 996",
        "tables": [
            "Settlements",
            "Claims",
            "Services",
            "First_Notification_of_Loss",
            "Customers_Policies",
            "Customers",
            "Available_Policies"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "customer",
            "name",
            "from",
            "customers",
            "when",
            "customer",
            "id",
            "equals",
            "996"
        ],
        "query_toks": [
            "SELECT",
            "Customer_name",
            "FROM",
            "Customers",
            "WHERE",
            "Customer_ID",
            "=",
            "'996'"
        ],
        "query_toks_no_value": [
            "select",
            "customer_name",
            "from",
            "customers",
            "where",
            "customer_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customers.customer_id__",
                            false
                        ],
                        null
                    ],
                    "\"996\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_fnol",
        "query": "SELECT policy_type_code FROM Available_Policies WHERE Policy_ID = '586';",
        "question": "Select policy type code from available policies when policy id equals 586",
        "tables": [
            "Settlements",
            "Claims",
            "Services",
            "First_Notification_of_Loss",
            "Customers_Policies",
            "Customers",
            "Available_Policies"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "policy",
            "type",
            "code",
            "from",
            "available",
            "policies",
            "when",
            "policy",
            "id",
            "equals",
            "586"
        ],
        "query_toks": [
            "SELECT",
            "policy_type_code",
            "FROM",
            "Available_Policies",
            "WHERE",
            "Policy_ID",
            "=",
            "'586'"
        ],
        "query_toks_no_value": [
            "select",
            "policy_type_code",
            "from",
            "available_policies",
            "where",
            "policy_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__available_policies__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__available_policies.policy_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__available_policies.policy_id__",
                            false
                        ],
                        null
                    ],
                    "\"586\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cinema",
        "query": "SELECT Original_air_date FROM film WHERE Directed_by = 'Jesus Salvador Trevi\u00f1o';",
        "question": "Select original air date from film when directed by equals Jesus Salvador Trevi\u00f1o",
        "tables": [
            "film",
            "cinema",
            "schedule"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "original",
            "air",
            "date",
            "from",
            "film",
            "when",
            "directed",
            "by",
            "equals",
            "Jesus",
            "Salvador",
            "Trevi\u00f1o"
        ],
        "query_toks": [
            "SELECT",
            "Original_air_date",
            "FROM",
            "film",
            "WHERE",
            "Directed_by",
            "=",
            "'Jesus",
            "Salvador",
            "Trevi\u00f1o'"
        ],
        "query_toks_no_value": [
            "select",
            "original_air_date",
            "from",
            "film",
            "where",
            "directed_by",
            "=",
            "value",
            "salvador",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__film__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__film.original_air_date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__film.directed_by__",
                            false
                        ],
                        null
                    ],
                    "\"Jesus Salvador Trevi\u00f1o\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cinema",
        "query": "SELECT Location FROM cinema WHERE Capacity = '225';",
        "question": "Select location from cinema when capacity equals 225",
        "tables": [
            "film",
            "cinema",
            "schedule"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "location",
            "from",
            "cinema",
            "when",
            "capacity",
            "equals",
            "225"
        ],
        "query_toks": [
            "SELECT",
            "Location",
            "FROM",
            "cinema",
            "WHERE",
            "Capacity",
            "=",
            "'225'"
        ],
        "query_toks_no_value": [
            "select",
            "location",
            "from",
            "cinema",
            "where",
            "capacity",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__cinema__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__cinema.location__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__cinema.capacity__",
                            false
                        ],
                        null
                    ],
                    "\"225\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cinema",
        "query": "SELECT Film_ID FROM schedule WHERE Cinema_ID = '9';",
        "question": "Select film id from schedule when cinema id equals 9",
        "tables": [
            "film",
            "cinema",
            "schedule"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "film",
            "id",
            "from",
            "schedule",
            "when",
            "cinema",
            "id",
            "equals",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "Film_ID",
            "FROM",
            "schedule",
            "WHERE",
            "Cinema_ID",
            "=",
            "'9'"
        ],
        "query_toks_no_value": [
            "select",
            "film_id",
            "from",
            "schedule",
            "where",
            "cinema_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__schedule__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__schedule.film_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__schedule.cinema_id__",
                            false
                        ],
                        null
                    ],
                    "\"9\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cinema",
        "query": "SELECT * FROM schedule WHERE Film_ID = 5;",
        "question": "Select all columns from schedule when film id equals 5",
        "tables": [
            "film",
            "cinema",
            "schedule"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "schedule",
            "when",
            "film",
            "id",
            "equals",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "schedule",
            "WHERE",
            "Film_ID",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "schedule",
            "where",
            "film_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__schedule__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__schedule.film_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "decoration_competition",
        "query": "SELECT College_ID FROM member WHERE Member_ID = '7';",
        "question": "Select college id from member when member id equals 7",
        "tables": [
            "member",
            "round",
            "college"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "college",
            "id",
            "from",
            "member",
            "when",
            "member",
            "id",
            "equals",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "College_ID",
            "FROM",
            "member",
            "WHERE",
            "Member_ID",
            "=",
            "'7'"
        ],
        "query_toks_no_value": [
            "select",
            "college_id",
            "from",
            "member",
            "where",
            "member_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__member__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__member.college_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__member.member_id__",
                            false
                        ],
                        null
                    ],
                    "\"7\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "decoration_competition",
        "query": "SELECT * FROM member WHERE Member_ID = 3;",
        "question": "Select all columns from member when member id equals 3",
        "tables": [
            "member",
            "round",
            "college"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "member",
            "when",
            "member",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "member",
            "WHERE",
            "Member_ID",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "member",
            "where",
            "member_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__member__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__member.member_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "decoration_competition",
        "query": "SELECT Rank_in_Round FROM round WHERE Member_ID = '6';",
        "question": "Select rank in round from round when member id equals 6",
        "tables": [
            "member",
            "round",
            "college"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "rank",
            "in",
            "round",
            "from",
            "round",
            "when",
            "member",
            "id",
            "equals",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "Rank_in_Round",
            "FROM",
            "round",
            "WHERE",
            "Member_ID",
            "=",
            "'6'"
        ],
        "query_toks_no_value": [
            "select",
            "rank_in_round",
            "from",
            "round",
            "where",
            "member_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__round__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__round.rank_in_round__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__round.member_id__",
                            false
                        ],
                        null
                    ],
                    "\"6\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "decoration_competition",
        "query": "SELECT * FROM round WHERE Member_ID = 4;",
        "question": "Select all columns from round when member id equals 4",
        "tables": [
            "member",
            "round",
            "college"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "round",
            "when",
            "member",
            "id",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "round",
            "WHERE",
            "Member_ID",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "round",
            "where",
            "member_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__round__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__round.member_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "decoration_competition",
        "query": "SELECT Leader_Name FROM college WHERE Name = 'Saskatchewan School';",
        "question": "Select leader name from college when name equals Saskatchewan School",
        "tables": [
            "member",
            "round",
            "college"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "leader",
            "name",
            "from",
            "college",
            "when",
            "name",
            "equals",
            "Saskatchewan",
            "School"
        ],
        "query_toks": [
            "SELECT",
            "Leader_Name",
            "FROM",
            "college",
            "WHERE",
            "Name",
            "=",
            "'Saskatchewan",
            "School'"
        ],
        "query_toks_no_value": [
            "select",
            "leader_name",
            "from",
            "college",
            "where",
            "name",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__college__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__college.leader_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__college.name__",
                            false
                        ],
                        null
                    ],
                    "\"Saskatchewan School\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "decoration_competition",
        "query": "SELECT College_Location FROM college WHERE College_ID = 3;",
        "question": "Select college location from college when college id equals 3",
        "tables": [
            "member",
            "round",
            "college"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "college",
            "location",
            "from",
            "college",
            "when",
            "college",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "College_Location",
            "FROM",
            "college",
            "WHERE",
            "College_ID",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "college_location",
            "from",
            "college",
            "where",
            "college_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__college__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__college.college_location__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__college.college_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "phone_market",
        "query": "SELECT Market_ID FROM phone_market WHERE Num_of_stock = '874';",
        "question": "Select market id from phone market when num of stock equals 874",
        "tables": [
            "phone_market",
            "market",
            "phone"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "market",
            "id",
            "from",
            "phone",
            "market",
            "when",
            "num",
            "of",
            "stock",
            "equals",
            "874"
        ],
        "query_toks": [
            "SELECT",
            "Market_ID",
            "FROM",
            "phone_market",
            "WHERE",
            "Num_of_stock",
            "=",
            "'874'"
        ],
        "query_toks_no_value": [
            "select",
            "market_id",
            "from",
            "phone_market",
            "where",
            "num_of_stock",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__phone_market__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__phone_market.market_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__phone_market.num_of_stock__",
                            false
                        ],
                        null
                    ],
                    "\"874\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "phone_market",
        "query": "SELECT * FROM phone_market WHERE Num_of_stock = 908;",
        "question": "Select all columns from phone market when num of stock equals 908",
        "tables": [
            "phone_market",
            "market",
            "phone"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "phone",
            "market",
            "when",
            "num",
            "of",
            "stock",
            "equals",
            "908"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "phone_market",
            "WHERE",
            "Num_of_stock",
            "=",
            "908"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "phone_market",
            "where",
            "num_of_stock",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__phone_market__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__phone_market.num_of_stock__",
                            false
                        ],
                        null
                    ],
                    908.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "phone_market",
        "query": "SELECT Ranking FROM market WHERE Num_of_employees = '1968';",
        "question": "Select ranking from market when num of employees equals 1968",
        "tables": [
            "phone_market",
            "market",
            "phone"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "ranking",
            "from",
            "market",
            "when",
            "num",
            "of",
            "employees",
            "equals",
            "1968"
        ],
        "query_toks": [
            "SELECT",
            "Ranking",
            "FROM",
            "market",
            "WHERE",
            "Num_of_employees",
            "=",
            "'1968'"
        ],
        "query_toks_no_value": [
            "select",
            "ranking",
            "from",
            "market",
            "where",
            "num_of_employees",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__market__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__market.ranking__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__market.num_of_employees__",
                            false
                        ],
                        null
                    ],
                    "\"1968\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_product",
        "query": "SELECT * FROM product WHERE product_id = 2;",
        "question": "Select all columns from product when product id equals 2",
        "tables": [
            "product",
            "store",
            "store_district",
            "district",
            "store_product"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "product",
            "when",
            "product",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "product",
            "WHERE",
            "product_id",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "product",
            "where",
            "product_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__product__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__product.product_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_product",
        "query": "SELECT Area_size FROM store WHERE Type = 'Village Store';",
        "question": "Select area size from store when type equals Village Store",
        "tables": [
            "product",
            "store",
            "store_district",
            "district",
            "store_product"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "area",
            "size",
            "from",
            "store",
            "when",
            "type",
            "equals",
            "Village",
            "Store"
        ],
        "query_toks": [
            "SELECT",
            "Area_size",
            "FROM",
            "store",
            "WHERE",
            "Type",
            "=",
            "'Village",
            "Store'"
        ],
        "query_toks_no_value": [
            "select",
            "area_size",
            "from",
            "store",
            "where",
            "type",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__store__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__store.area_size__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__store.type__",
                            false
                        ],
                        null
                    ],
                    "\"Village Store\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_product",
        "query": "SELECT Store_ID FROM store_district WHERE District_ID = '4';",
        "question": "Select store id from store district when district id equals 4",
        "tables": [
            "product",
            "store",
            "store_district",
            "district",
            "store_product"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "store",
            "id",
            "from",
            "store",
            "district",
            "when",
            "district",
            "id",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Store_ID",
            "FROM",
            "store_district",
            "WHERE",
            "District_ID",
            "=",
            "'4'"
        ],
        "query_toks_no_value": [
            "select",
            "store_id",
            "from",
            "store_district",
            "where",
            "district_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__store_district__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__store_district.store_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__store_district.district_id__",
                            false
                        ],
                        null
                    ],
                    "\"4\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_product",
        "query": "SELECT District_ID FROM store_district WHERE Store_ID = 1;",
        "question": "Select district id from store district when store id equals 1",
        "tables": [
            "product",
            "store",
            "store_district",
            "district",
            "store_product"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "district",
            "id",
            "from",
            "store",
            "district",
            "when",
            "store",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "District_ID",
            "FROM",
            "store_district",
            "WHERE",
            "Store_ID",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "district_id",
            "from",
            "store_district",
            "where",
            "store_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__store_district__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__store_district.district_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__store_district.store_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_product",
        "query": "SELECT * FROM district WHERE District_ID = 10;",
        "question": "Select all columns from district when district id equals 10",
        "tables": [
            "product",
            "store",
            "store_district",
            "district",
            "store_product"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "district",
            "when",
            "district",
            "id",
            "equals",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "district",
            "WHERE",
            "District_ID",
            "=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "district",
            "where",
            "district_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__district__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__district.district_id__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_product",
        "query": "SELECT Product_ID FROM store_product WHERE Store_ID = '5';",
        "question": "Select product id from store product when store id equals 5",
        "tables": [
            "product",
            "store",
            "store_district",
            "district",
            "store_product"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "product",
            "id",
            "from",
            "store",
            "product",
            "when",
            "store",
            "id",
            "equals",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "Product_ID",
            "FROM",
            "store_product",
            "WHERE",
            "Store_ID",
            "=",
            "'5'"
        ],
        "query_toks_no_value": [
            "select",
            "product_id",
            "from",
            "store_product",
            "where",
            "store_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__store_product__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__store_product.product_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__store_product.store_id__",
                            false
                        ],
                        null
                    ],
                    "\"5\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_product",
        "query": "SELECT * FROM store_product WHERE Store_ID = 5;",
        "question": "Select all columns from store product when store id equals 5",
        "tables": [
            "product",
            "store",
            "store_district",
            "district",
            "store_product"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "store",
            "product",
            "when",
            "store",
            "id",
            "equals",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "store_product",
            "WHERE",
            "Store_ID",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "store_product",
            "where",
            "store_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__store_product__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__store_product.store_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT other_staff_details FROM Staff WHERE staff_id = '3';",
        "question": "Select other staff details from staff when staff id equals 3",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "other",
            "staff",
            "details",
            "from",
            "staff",
            "when",
            "staff",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "other_staff_details",
            "FROM",
            "Staff",
            "WHERE",
            "staff_id",
            "=",
            "'3'"
        ],
        "query_toks_no_value": [
            "select",
            "other_staff_details",
            "from",
            "staff",
            "where",
            "staff_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__staff__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__staff.other_staff_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__staff.staff_id__",
                            false
                        ],
                        null
                    ],
                    "\"3\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT * FROM Staff WHERE gender = 0;",
        "question": "Select all columns from staff when gender equals 0",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "staff",
            "when",
            "gender",
            "equals",
            "0"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Staff",
            "WHERE",
            "gender",
            "=",
            "0"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "staff",
            "where",
            "gender",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__staff__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__staff.gender__",
                            false
                        ],
                        null
                    ],
                    0.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT chargeable_yn FROM Parts WHERE part_name = 'package';",
        "question": "Select chargeable yn from parts when part name equals package",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "chargeable",
            "yn",
            "from",
            "parts",
            "when",
            "part",
            "name",
            "equals",
            "package"
        ],
        "query_toks": [
            "SELECT",
            "chargeable_yn",
            "FROM",
            "Parts",
            "WHERE",
            "part_name",
            "=",
            "'package'"
        ],
        "query_toks_no_value": [
            "select",
            "chargeable_yn",
            "from",
            "parts",
            "where",
            "part_name",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__parts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__parts.chargeable_yn__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__parts.part_name__",
                            false
                        ],
                        null
                    ],
                    "\"package\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT other_asset_details FROM Assets WHERE supplier_company_id = '5';",
        "question": "Select other asset details from assets when supplier company id equals 5",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "other",
            "asset",
            "details",
            "from",
            "assets",
            "when",
            "supplier",
            "company",
            "id",
            "equals",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "other_asset_details",
            "FROM",
            "Assets",
            "WHERE",
            "supplier_company_id",
            "=",
            "'5'"
        ],
        "query_toks_no_value": [
            "select",
            "other_asset_details",
            "from",
            "assets",
            "where",
            "supplier_company_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__assets__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__assets.other_asset_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__assets.supplier_company_id__",
                            false
                        ],
                        null
                    ],
                    "\"5\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT skill_id FROM Engineer_Skills WHERE engineer_id = '2';",
        "question": "Select skill id from engineer skills when engineer id equals 2",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "skill",
            "id",
            "from",
            "engineer",
            "skills",
            "when",
            "engineer",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "skill_id",
            "FROM",
            "Engineer_Skills",
            "WHERE",
            "engineer_id",
            "=",
            "'2'"
        ],
        "query_toks_no_value": [
            "select",
            "skill_id",
            "from",
            "engineer_skills",
            "where",
            "engineer_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__engineer_skills__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__engineer_skills.skill_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__engineer_skills.engineer_id__",
                            false
                        ],
                        null
                    ],
                    "\"2\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT engineer_id FROM Engineer_Skills WHERE skill_id = 2;",
        "question": "Select engineer id from engineer skills when skill id equals 2",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "engineer",
            "id",
            "from",
            "engineer",
            "skills",
            "when",
            "skill",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "engineer_id",
            "FROM",
            "Engineer_Skills",
            "WHERE",
            "skill_id",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "engineer_id",
            "from",
            "engineer_skills",
            "where",
            "skill_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__engineer_skills__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__engineer_skills.engineer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__engineer_skills.skill_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT other_fault_details FROM Part_Faults WHERE part_fault_id = '13';",
        "question": "Select other fault details from part faults when part fault id equals 13",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "other",
            "fault",
            "details",
            "from",
            "part",
            "faults",
            "when",
            "part",
            "fault",
            "id",
            "equals",
            "13"
        ],
        "query_toks": [
            "SELECT",
            "other_fault_details",
            "FROM",
            "Part_Faults",
            "WHERE",
            "part_fault_id",
            "=",
            "'13'"
        ],
        "query_toks_no_value": [
            "select",
            "other_fault_details",
            "from",
            "part_faults",
            "where",
            "part_fault_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__part_faults__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__part_faults.other_fault_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__part_faults.part_fault_id__",
                            false
                        ],
                        null
                    ],
                    "\"13\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT contract_end_date FROM Maintenance_Contracts WHERE maintenance_contract_id = '2';",
        "question": "Select contract end date from maintenance contracts when maintenance contract id equals 2",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "contract",
            "end",
            "date",
            "from",
            "maintenance",
            "contracts",
            "when",
            "maintenance",
            "contract",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "contract_end_date",
            "FROM",
            "Maintenance_Contracts",
            "WHERE",
            "maintenance_contract_id",
            "=",
            "'2'"
        ],
        "query_toks_no_value": [
            "select",
            "contract_end_date",
            "from",
            "maintenance_contracts",
            "where",
            "maintenance_contract_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__maintenance_contracts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__maintenance_contracts.contract_end_date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__maintenance_contracts.maintenance_contract_id__",
                            false
                        ],
                        null
                    ],
                    "\"2\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT contract_end_date FROM Maintenance_Contracts WHERE maintenance_contract_id = 7;",
        "question": "Select contract end date from maintenance contracts when maintenance contract id equals 7",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "contract",
            "end",
            "date",
            "from",
            "maintenance",
            "contracts",
            "when",
            "maintenance",
            "contract",
            "id",
            "equals",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "contract_end_date",
            "FROM",
            "Maintenance_Contracts",
            "WHERE",
            "maintenance_contract_id",
            "=",
            "7"
        ],
        "query_toks_no_value": [
            "select",
            "contract_end_date",
            "from",
            "maintenance_contracts",
            "where",
            "maintenance_contract_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__maintenance_contracts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__maintenance_contracts.contract_end_date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__maintenance_contracts.maintenance_contract_id__",
                            false
                        ],
                        null
                    ],
                    7.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT skill_description FROM Skills WHERE skill_code = 'TV';",
        "question": "Select skill description from skills when skill code equals TV",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "skill",
            "description",
            "from",
            "skills",
            "when",
            "skill",
            "code",
            "equals",
            "TV"
        ],
        "query_toks": [
            "SELECT",
            "skill_description",
            "FROM",
            "Skills",
            "WHERE",
            "skill_code",
            "=",
            "'TV'"
        ],
        "query_toks_no_value": [
            "select",
            "skill_description",
            "from",
            "skills",
            "where",
            "skill_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__skills__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__skills.skill_description__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__skills.skill_code__",
                            false
                        ],
                        null
                    ],
                    "\"TV\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT skill_description FROM Skills WHERE skill_id = 2;",
        "question": "Select skill description from skills when skill id equals 2",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "skill",
            "description",
            "from",
            "skills",
            "when",
            "skill",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "skill_description",
            "FROM",
            "Skills",
            "WHERE",
            "skill_id",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "skill_description",
            "from",
            "skills",
            "where",
            "skill_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__skills__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__skills.skill_description__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__skills.skill_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT part_fault_id FROM Skills_Required_To_Fix WHERE skill_id = '2';",
        "question": "Select part fault id from skills required to fix when skill id equals 2",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "part",
            "fault",
            "id",
            "from",
            "skills",
            "required",
            "to",
            "fix",
            "when",
            "skill",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "part_fault_id",
            "FROM",
            "Skills_Required_To_Fix",
            "WHERE",
            "skill_id",
            "=",
            "'2'"
        ],
        "query_toks_no_value": [
            "select",
            "part_fault_id",
            "from",
            "skills_required_to_fix",
            "where",
            "skill_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__skills_required_to_fix__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__skills_required_to_fix.part_fault_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__skills_required_to_fix.skill_id__",
                            false
                        ],
                        null
                    ],
                    "\"2\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT * FROM Skills_Required_To_Fix WHERE part_fault_id = 6;",
        "question": "Select all columns from skills required to fix when part fault id equals 6",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "skills",
            "required",
            "to",
            "fix",
            "when",
            "part",
            "fault",
            "id",
            "equals",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Skills_Required_To_Fix",
            "WHERE",
            "part_fault_id",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "skills_required_to_fix",
            "where",
            "part_fault_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__skills_required_to_fix__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__skills_required_to_fix.part_fault_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT engineer_id FROM Maintenance_Engineers WHERE first_name = 'Samanta';",
        "question": "Select engineer id from maintenance engineers when first name equals Samanta",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "engineer",
            "id",
            "from",
            "maintenance",
            "engineers",
            "when",
            "first",
            "name",
            "equals",
            "Samanta"
        ],
        "query_toks": [
            "SELECT",
            "engineer_id",
            "FROM",
            "Maintenance_Engineers",
            "WHERE",
            "first_name",
            "=",
            "'Samanta'"
        ],
        "query_toks_no_value": [
            "select",
            "engineer_id",
            "from",
            "maintenance_engineers",
            "where",
            "first_name",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__maintenance_engineers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__maintenance_engineers.engineer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__maintenance_engineers.first_name__",
                            false
                        ],
                        null
                    ],
                    "\"Samanta\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT last_name FROM Maintenance_Engineers WHERE company_id = 7;",
        "question": "Select last name from maintenance engineers when company id equals 7",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "last",
            "name",
            "from",
            "maintenance",
            "engineers",
            "when",
            "company",
            "id",
            "equals",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "last_name",
            "FROM",
            "Maintenance_Engineers",
            "WHERE",
            "company_id",
            "=",
            "7"
        ],
        "query_toks_no_value": [
            "select",
            "last_name",
            "from",
            "maintenance_engineers",
            "where",
            "company_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__maintenance_engineers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__maintenance_engineers.last_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__maintenance_engineers.company_id__",
                            false
                        ],
                        null
                    ],
                    7.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT company_type FROM Third_Party_Companies WHERE company_name = 'White Ltd';",
        "question": "Select company type from third party companies when company name equals White Ltd",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "company",
            "type",
            "from",
            "third",
            "party",
            "companies",
            "when",
            "company",
            "name",
            "equals",
            "White",
            "Ltd"
        ],
        "query_toks": [
            "SELECT",
            "company_type",
            "FROM",
            "Third_Party_Companies",
            "WHERE",
            "company_name",
            "=",
            "'White",
            "Ltd'"
        ],
        "query_toks_no_value": [
            "select",
            "company_type",
            "from",
            "third_party_companies",
            "where",
            "company_name",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__third_party_companies__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__third_party_companies.company_type__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__third_party_companies.company_name__",
                            false
                        ],
                        null
                    ],
                    "\"White Ltd\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT * FROM Third_Party_Companies WHERE company_id = 5;",
        "question": "Select all columns from third party companies when company id equals 5",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "third",
            "party",
            "companies",
            "when",
            "company",
            "id",
            "equals",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Third_Party_Companies",
            "WHERE",
            "company_id",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "third_party_companies",
            "where",
            "company_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__third_party_companies__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__third_party_companies.company_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT fault_log_entry_id FROM Fault_Log WHERE recorded_by_staff_id = '14';",
        "question": "Select fault log entry id from fault log when recorded by staff id equals 14",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "fault",
            "log",
            "entry",
            "id",
            "from",
            "fault",
            "log",
            "when",
            "recorded",
            "by",
            "staff",
            "id",
            "equals",
            "14"
        ],
        "query_toks": [
            "SELECT",
            "fault_log_entry_id",
            "FROM",
            "Fault_Log",
            "WHERE",
            "recorded_by_staff_id",
            "=",
            "'14'"
        ],
        "query_toks_no_value": [
            "select",
            "fault_log_entry_id",
            "from",
            "fault_log",
            "where",
            "recorded_by_staff_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__fault_log__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__fault_log.fault_log_entry_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__fault_log.recorded_by_staff_id__",
                            false
                        ],
                        null
                    ],
                    "\"14\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT * FROM Fault_Log WHERE fault_log_entry_id = 8;",
        "question": "Select all columns from fault log when fault log entry id equals 8",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "fault",
            "log",
            "when",
            "fault",
            "log",
            "entry",
            "id",
            "equals",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Fault_Log",
            "WHERE",
            "fault_log_entry_id",
            "=",
            "8"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "fault_log",
            "where",
            "fault_log_entry_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__fault_log__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__fault_log.fault_log_entry_id__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT asset_id FROM Asset_Parts WHERE part_id = '2';",
        "question": "Select asset id from asset parts when part id equals 2",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "asset",
            "id",
            "from",
            "asset",
            "parts",
            "when",
            "part",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "asset_id",
            "FROM",
            "Asset_Parts",
            "WHERE",
            "part_id",
            "=",
            "'2'"
        ],
        "query_toks_no_value": [
            "select",
            "asset_id",
            "from",
            "asset_parts",
            "where",
            "part_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__asset_parts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__asset_parts.asset_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__asset_parts.part_id__",
                            false
                        ],
                        null
                    ],
                    "\"2\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT * FROM Asset_Parts WHERE asset_id = 1;",
        "question": "Select all columns from asset parts when asset id equals 1",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "asset",
            "parts",
            "when",
            "asset",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Asset_Parts",
            "WHERE",
            "asset_id",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "asset_parts",
            "where",
            "asset_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__asset_parts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__asset_parts.asset_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT fault_status FROM Fault_Log_Parts WHERE fault_log_entry_id = '6';",
        "question": "Select fault status from fault log parts when fault log entry id equals 6",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "fault",
            "status",
            "from",
            "fault",
            "log",
            "parts",
            "when",
            "fault",
            "log",
            "entry",
            "id",
            "equals",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "fault_status",
            "FROM",
            "Fault_Log_Parts",
            "WHERE",
            "fault_log_entry_id",
            "=",
            "'6'"
        ],
        "query_toks_no_value": [
            "select",
            "fault_status",
            "from",
            "fault_log_parts",
            "where",
            "fault_log_entry_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__fault_log_parts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__fault_log_parts.fault_status__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__fault_log_parts.fault_log_entry_id__",
                            false
                        ],
                        null
                    ],
                    "\"6\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_assessment",
        "query": "SELECT course_name FROM Courses WHERE course_id = 304;",
        "question": "Select course name from courses when course id equals 304",
        "tables": [
            "Courses",
            "Students",
            "Candidates",
            "Addresses",
            "People_Addresses",
            "Student_Course_Registrations",
            "People",
            "Candidate_Assessments",
            "Student_Course_Attendance"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "course",
            "name",
            "from",
            "courses",
            "when",
            "course",
            "id",
            "equals",
            "304"
        ],
        "query_toks": [
            "SELECT",
            "course_name",
            "FROM",
            "Courses",
            "WHERE",
            "course_id",
            "=",
            "304"
        ],
        "query_toks_no_value": [
            "select",
            "course_name",
            "from",
            "courses",
            "where",
            "course_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__courses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__courses.course_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__courses.course_id__",
                            false
                        ],
                        null
                    ],
                    304.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_assessment",
        "query": "SELECT student_details FROM Students WHERE student_id = '181';",
        "question": "Select student details from students when student id equals 181",
        "tables": [
            "Courses",
            "Students",
            "Candidates",
            "Addresses",
            "People_Addresses",
            "Student_Course_Registrations",
            "People",
            "Candidate_Assessments",
            "Student_Course_Attendance"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "student",
            "details",
            "from",
            "students",
            "when",
            "student",
            "id",
            "equals",
            "181"
        ],
        "query_toks": [
            "SELECT",
            "student_details",
            "FROM",
            "Students",
            "WHERE",
            "student_id",
            "=",
            "'181'"
        ],
        "query_toks_no_value": [
            "select",
            "student_details",
            "from",
            "students",
            "where",
            "student_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__students__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__students.student_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__students.student_id__",
                            false
                        ],
                        null
                    ],
                    "\"181\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_assessment",
        "query": "SELECT * FROM Students WHERE student_id = 111;",
        "question": "Select all columns from students when student id equals 111",
        "tables": [
            "Courses",
            "Students",
            "Candidates",
            "Addresses",
            "People_Addresses",
            "Student_Course_Registrations",
            "People",
            "Candidate_Assessments",
            "Student_Course_Attendance"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "students",
            "when",
            "student",
            "id",
            "equals",
            "111"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Students",
            "WHERE",
            "student_id",
            "=",
            "111"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "students",
            "where",
            "student_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__students__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__students.student_id__",
                            false
                        ],
                        null
                    ],
                    111.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_assessment",
        "query": "SELECT candidate_id FROM Candidates WHERE candidate_details = 'Robert';",
        "question": "Select candidate id from candidates when candidate details equals Robert",
        "tables": [
            "Courses",
            "Students",
            "Candidates",
            "Addresses",
            "People_Addresses",
            "Student_Course_Registrations",
            "People",
            "Candidate_Assessments",
            "Student_Course_Attendance"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "candidate",
            "id",
            "from",
            "candidates",
            "when",
            "candidate",
            "details",
            "equals",
            "Robert"
        ],
        "query_toks": [
            "SELECT",
            "candidate_id",
            "FROM",
            "Candidates",
            "WHERE",
            "candidate_details",
            "=",
            "'Robert'"
        ],
        "query_toks_no_value": [
            "select",
            "candidate_id",
            "from",
            "candidates",
            "where",
            "candidate_details",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__candidates__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__candidates.candidate_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__candidates.candidate_details__",
                            false
                        ],
                        null
                    ],
                    "\"Robert\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_assessment",
        "query": "SELECT candidate_details FROM Candidates WHERE candidate_id = 141;",
        "question": "Select candidate details from candidates when candidate id equals 141",
        "tables": [
            "Courses",
            "Students",
            "Candidates",
            "Addresses",
            "People_Addresses",
            "Student_Course_Registrations",
            "People",
            "Candidate_Assessments",
            "Student_Course_Attendance"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "candidate",
            "details",
            "from",
            "candidates",
            "when",
            "candidate",
            "id",
            "equals",
            "141"
        ],
        "query_toks": [
            "SELECT",
            "candidate_details",
            "FROM",
            "Candidates",
            "WHERE",
            "candidate_id",
            "=",
            "141"
        ],
        "query_toks_no_value": [
            "select",
            "candidate_details",
            "from",
            "candidates",
            "where",
            "candidate_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__candidates__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__candidates.candidate_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__candidates.candidate_id__",
                            false
                        ],
                        null
                    ],
                    141.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_assessment",
        "query": "SELECT line_2 FROM Addresses WHERE country = 'USA';",
        "question": "Select line 2 from addresses when country equals USA",
        "tables": [
            "Courses",
            "Students",
            "Candidates",
            "Addresses",
            "People_Addresses",
            "Student_Course_Registrations",
            "People",
            "Candidate_Assessments",
            "Student_Course_Attendance"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "line",
            "2",
            "from",
            "addresses",
            "when",
            "country",
            "equals",
            "USA"
        ],
        "query_toks": [
            "SELECT",
            "line_2",
            "FROM",
            "Addresses",
            "WHERE",
            "countr",
            "(",
            "countr",
            ")",
            "=",
            "'USA'"
        ],
        "query_toks_no_value": [
            "select",
            "line_2",
            "from",
            "addresses",
            "where",
            "countr",
            "(",
            "countr",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__addresses.line_2__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__addresses.country__",
                            false
                        ],
                        null
                    ],
                    "\"USA\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_assessment",
        "query": "SELECT date_to FROM People_Addresses WHERE address_id = 82;",
        "question": "Select date to from people addresses when address id equals 82",
        "tables": [
            "Courses",
            "Students",
            "Candidates",
            "Addresses",
            "People_Addresses",
            "Student_Course_Registrations",
            "People",
            "Candidate_Assessments",
            "Student_Course_Attendance"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "date",
            "to",
            "from",
            "people",
            "addresses",
            "when",
            "address",
            "id",
            "equals",
            "82"
        ],
        "query_toks": [
            "SELECT",
            "date_to",
            "FROM",
            "People_Addresses",
            "WHERE",
            "address_id",
            "=",
            "82"
        ],
        "query_toks_no_value": [
            "select",
            "date_to",
            "from",
            "people_addresses",
            "where",
            "address_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__people_addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__people_addresses.date_to__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__people_addresses.address_id__",
                            false
                        ],
                        null
                    ],
                    82.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_assessment",
        "query": "SELECT course_id FROM Student_Course_Registrations WHERE student_id = '161';",
        "question": "Select course id from student course registrations when student id equals 161",
        "tables": [
            "Courses",
            "Students",
            "Candidates",
            "Addresses",
            "People_Addresses",
            "Student_Course_Registrations",
            "People",
            "Candidate_Assessments",
            "Student_Course_Attendance"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "course",
            "id",
            "from",
            "student",
            "course",
            "registrations",
            "when",
            "student",
            "id",
            "equals",
            "161"
        ],
        "query_toks": [
            "SELECT",
            "course_id",
            "FROM",
            "Student_Course_Registrations",
            "WHERE",
            "student_id",
            "=",
            "'161'"
        ],
        "query_toks_no_value": [
            "select",
            "course_id",
            "from",
            "student_course_registrations",
            "where",
            "student_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student_course_registrations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student_course_registrations.course_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__student_course_registrations.student_id__",
                            false
                        ],
                        null
                    ],
                    "\"161\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_assessment",
        "query": "SELECT * FROM Student_Course_Registrations WHERE student_id = 141;",
        "question": "Select all columns from student course registrations when student id equals 141",
        "tables": [
            "Courses",
            "Students",
            "Candidates",
            "Addresses",
            "People_Addresses",
            "Student_Course_Registrations",
            "People",
            "Candidate_Assessments",
            "Student_Course_Attendance"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "student",
            "course",
            "registrations",
            "when",
            "student",
            "id",
            "equals",
            "141"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Student_Course_Registrations",
            "WHERE",
            "student_id",
            "=",
            "141"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "student_course_registrations",
            "where",
            "student_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student_course_registrations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__student_course_registrations.student_id__",
                            false
                        ],
                        null
                    ],
                    141.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_assessment",
        "query": "SELECT person_id FROM People WHERE password = '7be9c03d5467d563555c51ebb3eb78e7f90832ec';",
        "question": "Select person id from people when password equals 7be9c03d5467d563555c51ebb3eb78e7f90832ec",
        "tables": [
            "Courses",
            "Students",
            "Candidates",
            "Addresses",
            "People_Addresses",
            "Student_Course_Registrations",
            "People",
            "Candidate_Assessments",
            "Student_Course_Attendance"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "person",
            "id",
            "from",
            "people",
            "when",
            "password",
            "equals",
            "7be9c03d5467d563555c51ebb3eb78e7f90832ec"
        ],
        "query_toks": [
            "SELECT",
            "person_id",
            "FROM",
            "People",
            "WHERE",
            "password",
            "=",
            "'7be9c03d5467d563555c51ebb3eb78e7f90832ec'"
        ],
        "query_toks_no_value": [
            "select",
            "person_id",
            "from",
            "people",
            "where",
            "password",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__people__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__people.person_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__people.password__",
                            false
                        ],
                        null
                    ],
                    "\"7be9c03d5467d563555c51ebb3eb78e7f90832ec\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_assessment",
        "query": "SELECT candidate_id FROM Candidate_Assessments WHERE qualification = 'D';",
        "question": "Select candidate id from candidate assessments when qualification equals D",
        "tables": [
            "Courses",
            "Students",
            "Candidates",
            "Addresses",
            "People_Addresses",
            "Student_Course_Registrations",
            "People",
            "Candidate_Assessments",
            "Student_Course_Attendance"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "candidate",
            "id",
            "from",
            "candidate",
            "assessments",
            "when",
            "qualification",
            "equals",
            "D"
        ],
        "query_toks": [
            "SELECT",
            "candidate_id",
            "FROM",
            "Candidate_Assessments",
            "WHERE",
            "qualification",
            "=",
            "'D'"
        ],
        "query_toks_no_value": [
            "select",
            "candidate_id",
            "from",
            "candidate_assessments",
            "where",
            "qualification",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__candidate_assessments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__candidate_assessments.candidate_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__candidate_assessments.qualification__",
                            false
                        ],
                        null
                    ],
                    "\"D\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT breed_code FROM Breeds WHERE breed_name = 'Husky';",
        "question": "Select breed code from breeds when breed name equals Husky",
        "tables": [
            "Owners",
            "Breeds",
            "Treatment_Types",
            "Dogs",
            "Professionals",
            "Treatments",
            "Charges",
            "Sizes"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "breed",
            "code",
            "from",
            "breeds",
            "when",
            "breed",
            "name",
            "equals",
            "Husky"
        ],
        "query_toks": [
            "SELECT",
            "breed_code",
            "FROM",
            "Breeds",
            "WHERE",
            "breed_name",
            "=",
            "'Husky'"
        ],
        "query_toks_no_value": [
            "select",
            "breed_code",
            "from",
            "breeds",
            "where",
            "breed_name",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__breeds__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__breeds.breed_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__breeds.breed_name__",
                            false
                        ],
                        null
                    ],
                    "\"Husky\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT treatment_type_code FROM Treatment_Types WHERE treatment_type_description = 'Take for a Walk';",
        "question": "Select treatment type code from treatment types when treatment type description equals Take for a Walk",
        "tables": [
            "Owners",
            "Breeds",
            "Treatment_Types",
            "Dogs",
            "Professionals",
            "Treatments",
            "Charges",
            "Sizes"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "treatment",
            "type",
            "code",
            "from",
            "treatment",
            "types",
            "when",
            "treatment",
            "type",
            "description",
            "equals",
            "Take",
            "for",
            "a",
            "Walk"
        ],
        "query_toks": [
            "SELECT",
            "treatment_type_code",
            "FROM",
            "Treatment_Types",
            "WHERE",
            "treatment_type_description",
            "=",
            "'Take",
            "for",
            "a",
            "Walk'"
        ],
        "query_toks_no_value": [
            "select",
            "treatment_type_code",
            "from",
            "treatment_types",
            "where",
            "treatment_type_description",
            "=",
            "value",
            "for",
            "a",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__treatment_types__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__treatment_types.treatment_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__treatment_types.treatment_type_description__",
                            false
                        ],
                        null
                    ],
                    "\"Take for a Walk\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT size_code FROM Dogs WHERE abandoned_yn = '1';",
        "question": "Select size code from dogs when abandoned yes or no equals 1",
        "tables": [
            "Owners",
            "Breeds",
            "Treatment_Types",
            "Dogs",
            "Professionals",
            "Treatments",
            "Charges",
            "Sizes"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "size",
            "code",
            "from",
            "dogs",
            "when",
            "abandoned",
            "yes",
            "or",
            "no",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "size_code",
            "FROM",
            "Dogs",
            "WHERE",
            "abandoned_yn",
            "=",
            "'1'"
        ],
        "query_toks_no_value": [
            "select",
            "size_code",
            "from",
            "dogs",
            "where",
            "abandoned_yn",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__dogs__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__dogs.size_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__dogs.abandoned_yn__",
                            false
                        ],
                        null
                    ],
                    "\"1\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT last_name FROM Professionals WHERE state = 'Hawaii';",
        "question": "Select last name from professionals when state equals Hawaii",
        "tables": [
            "Owners",
            "Breeds",
            "Treatment_Types",
            "Dogs",
            "Professionals",
            "Treatments",
            "Charges",
            "Sizes"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "last",
            "name",
            "from",
            "professionals",
            "when",
            "state",
            "equals",
            "Hawaii"
        ],
        "query_toks": [
            "SELECT",
            "last_name",
            "FROM",
            "Professionals",
            "WHERE",
            "state",
            "=",
            "'Hawaii'"
        ],
        "query_toks_no_value": [
            "select",
            "last_name",
            "from",
            "professionals",
            "where",
            "state",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__professionals__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__professionals.last_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__professionals.state__",
                            false
                        ],
                        null
                    ],
                    "\"Hawaii\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT professional_id FROM Treatments WHERE dog_id = '10';",
        "question": "Select professional id from treatments when dog id equals 10",
        "tables": [
            "Owners",
            "Breeds",
            "Treatment_Types",
            "Dogs",
            "Professionals",
            "Treatments",
            "Charges",
            "Sizes"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "professional",
            "id",
            "from",
            "treatments",
            "when",
            "dog",
            "id",
            "equals",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "professional_id",
            "FROM",
            "Treatments",
            "WHERE",
            "dog_id",
            "=",
            "'10'"
        ],
        "query_toks_no_value": [
            "select",
            "professional_id",
            "from",
            "treatments",
            "where",
            "dog_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__treatments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__treatments.professional_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__treatments.dog_id__",
                            false
                        ],
                        null
                    ],
                    "\"10\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT cost_of_treatment FROM Treatments WHERE professional_id = 5;",
        "question": "Select cost of treatment from treatments when professional id equals 5",
        "tables": [
            "Owners",
            "Breeds",
            "Treatment_Types",
            "Dogs",
            "Professionals",
            "Treatments",
            "Charges",
            "Sizes"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "cost",
            "of",
            "treatment",
            "from",
            "treatments",
            "when",
            "professional",
            "id",
            "equals",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "cost_of_treatment",
            "FROM",
            "Treatments",
            "WHERE",
            "professional_id",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "cost_of_treatment",
            "from",
            "treatments",
            "where",
            "professional_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__treatments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__treatments.cost_of_treatment__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__treatments.professional_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT charge_id FROM Charges WHERE charge_type = 'Daily Accommodation';",
        "question": "Select charge id from charges when charge type equals Daily Accommodation",
        "tables": [
            "Owners",
            "Breeds",
            "Treatment_Types",
            "Dogs",
            "Professionals",
            "Treatments",
            "Charges",
            "Sizes"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "charge",
            "id",
            "from",
            "charges",
            "when",
            "charge",
            "type",
            "equals",
            "Daily",
            "Accommodation"
        ],
        "query_toks": [
            "SELECT",
            "charge_id",
            "FROM",
            "Charges",
            "WHERE",
            "charge_type",
            "=",
            "'Daily",
            "Accommodation'"
        ],
        "query_toks_no_value": [
            "select",
            "charge_id",
            "from",
            "charges",
            "where",
            "charge_type",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__charges__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__charges.charge_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__charges.charge_type__",
                            false
                        ],
                        null
                    ],
                    "\"Daily Accommodation\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT * FROM Charges WHERE charge_id = 1;",
        "question": "Select all columns from charges when charge id equals 1",
        "tables": [
            "Owners",
            "Breeds",
            "Treatment_Types",
            "Dogs",
            "Professionals",
            "Treatments",
            "Charges",
            "Sizes"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "charges",
            "when",
            "charge",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Charges",
            "WHERE",
            "charge_id",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "charges",
            "where",
            "charge_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__charges__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__charges.charge_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT size_code FROM Sizes WHERE size_description = 'Large';",
        "question": "Select size code from sizes when size description equals Large",
        "tables": [
            "Owners",
            "Breeds",
            "Treatment_Types",
            "Dogs",
            "Professionals",
            "Treatments",
            "Charges",
            "Sizes"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "size",
            "code",
            "from",
            "sizes",
            "when",
            "size",
            "description",
            "equals",
            "Large"
        ],
        "query_toks": [
            "SELECT",
            "size_code",
            "FROM",
            "Sizes",
            "WHERE",
            "size_description",
            "=",
            "'Large'"
        ],
        "query_toks_no_value": [
            "select",
            "size_code",
            "from",
            "sizes",
            "where",
            "size_description",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__sizes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__sizes.size_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__sizes.size_description__",
                            false
                        ],
                        null
                    ],
                    "\"Large\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "music_1",
        "query": "SELECT gender FROM artist WHERE preferred_genre = 'pop';",
        "question": "Select gender from artist when preferred genre equals pop",
        "tables": [
            "artist",
            "song",
            "genre",
            "files"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "gender",
            "from",
            "artist",
            "when",
            "preferred",
            "genre",
            "equals",
            "pop"
        ],
        "query_toks": [
            "SELECT",
            "gender",
            "FROM",
            "artist",
            "WHERE",
            "preferred_genre",
            "=",
            "'pop'"
        ],
        "query_toks_no_value": [
            "select",
            "gender",
            "from",
            "artist",
            "where",
            "preferred_genre",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__artist__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__artist.gender__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__artist.preferred_genre__",
                            false
                        ],
                        null
                    ],
                    "\"pop\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "music_1",
        "query": "SELECT f_id FROM song WHERE resolution = '320';",
        "question": "Select song id from song when resolution equals 320",
        "tables": [
            "artist",
            "song",
            "genre",
            "files"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "song",
            "id",
            "from",
            "song",
            "when",
            "resolution",
            "equals",
            "320"
        ],
        "query_toks": [
            "SELECT",
            "f_id",
            "FROM",
            "song",
            "WHERE",
            "resolution",
            "=",
            "'320'"
        ],
        "query_toks_no_value": [
            "select",
            "f_id",
            "from",
            "song",
            "where",
            "resolution",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__song__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__song.f_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__song.resolution__",
                            false
                        ],
                        null
                    ],
                    "\"320\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "music_1",
        "query": "SELECT rating FROM song WHERE f_id = 2;",
        "question": "Select rating from song when song id equals 2",
        "tables": [
            "artist",
            "song",
            "genre",
            "files"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "rating",
            "from",
            "song",
            "when",
            "song",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "rating",
            "FROM",
            "song",
            "WHERE",
            "f_id",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "rating",
            "from",
            "song",
            "where",
            "f_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__song__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__song.rating__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__song.f_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "music_1",
        "query": "SELECT most_popular_in FROM genre WHERE g_name = 'pop';",
        "question": "Select most popular in from genre when genre name equals pop",
        "tables": [
            "artist",
            "song",
            "genre",
            "files"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "most",
            "popular",
            "in",
            "from",
            "genre",
            "when",
            "genre",
            "name",
            "equals",
            "pop"
        ],
        "query_toks": [
            "SELECT",
            "most_popular_in",
            "FROM",
            "genre",
            "WHERE",
            "g_name",
            "=",
            "'pop'"
        ],
        "query_toks_no_value": [
            "select",
            "most_popular_in",
            "from",
            "genre",
            "where",
            "g_name",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__genre__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__genre.most_popular_in__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__genre.g_name__",
                            false
                        ],
                        null
                    ],
                    "\"pop\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_employee",
        "query": "SELECT People_ID FROM employment WHERE Company_ID = '7';",
        "question": "Select people id from employment when company id equals 7",
        "tables": [
            "employment",
            "people",
            "company"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "people",
            "id",
            "from",
            "employment",
            "when",
            "company",
            "id",
            "equals",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "People_ID",
            "FROM",
            "employment",
            "WHERE",
            "Company_ID",
            "=",
            "'7'"
        ],
        "query_toks_no_value": [
            "select",
            "people_id",
            "from",
            "employment",
            "where",
            "company_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__employment__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__employment.people_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__employment.company_id__",
                            false
                        ],
                        null
                    ],
                    "\"7\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_employee",
        "query": "SELECT * FROM employment WHERE Year_working = 1;",
        "question": "Select all columns from employment when year working equals 1",
        "tables": [
            "employment",
            "people",
            "company"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "employment",
            "when",
            "year",
            "working",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "employment",
            "WHERE",
            "Year_working",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "employment",
            "where",
            "year_working",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__employment__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__employment.year_working__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_employee",
        "query": "SELECT Age FROM people WHERE Graduation_College = 'California';",
        "question": "Select age from people when graduation college equals California",
        "tables": [
            "employment",
            "people",
            "company"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "age",
            "from",
            "people",
            "when",
            "graduation",
            "college",
            "equals",
            "California"
        ],
        "query_toks": [
            "SELECT",
            "Age",
            "FROM",
            "people",
            "WHERE",
            "Graduation_College",
            "=",
            "'California'"
        ],
        "query_toks_no_value": [
            "select",
            "age",
            "from",
            "people",
            "where",
            "graduation_college",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__people__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__people.age__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__people.graduation_college__",
                            false
                        ],
                        null
                    ],
                    "\"California\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_employee",
        "query": "SELECT * FROM people WHERE People_ID = 6;",
        "question": "Select all columns from people when people id equals 6",
        "tables": [
            "employment",
            "people",
            "company"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "people",
            "when",
            "people",
            "id",
            "equals",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "people",
            "WHERE",
            "People_ID",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "people",
            "where",
            "people_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__people__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__people.people_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_employee",
        "query": "SELECT Sales_in_Billion FROM company WHERE Industry = 'Banking';",
        "question": "Select sales in billion from company when industry equals Banking",
        "tables": [
            "employment",
            "people",
            "company"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "sales",
            "in",
            "billion",
            "from",
            "company",
            "when",
            "industry",
            "equals",
            "Banking"
        ],
        "query_toks": [
            "SELECT",
            "Sales_in_Billion",
            "FROM",
            "company",
            "WHERE",
            "Industry",
            "=",
            "'Banking'"
        ],
        "query_toks_no_value": [
            "select",
            "sales_in_billion",
            "from",
            "company",
            "where",
            "industry",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__company__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__company.sales_in_billion__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__company.industry__",
                            false
                        ],
                        null
                    ],
                    "\"Banking\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "farm",
        "query": "SELECT Year FROM farm_competition WHERE Theme = 'MTV Cube';",
        "question": "Select year from farm competition when theme equals MTV Cube",
        "tables": [
            "farm_competition",
            "farm",
            "city",
            "competition_record"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "year",
            "from",
            "farm",
            "competition",
            "when",
            "theme",
            "equals",
            "MTV",
            "Cube"
        ],
        "query_toks": [
            "SELECT",
            "Year",
            "FROM",
            "farm_competition",
            "WHERE",
            "Theme",
            "=",
            "'MTV",
            "Cube'"
        ],
        "query_toks_no_value": [
            "select",
            "year",
            "from",
            "farm_competition",
            "where",
            "theme",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__farm_competition__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__farm_competition.year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__farm_competition.theme__",
                            false
                        ],
                        null
                    ],
                    "\"MTV Cube\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "farm",
        "query": "SELECT * FROM farm WHERE Year = 1934;",
        "question": "Select all columns from farm when year equals 1934",
        "tables": [
            "farm_competition",
            "farm",
            "city",
            "competition_record"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "farm",
            "when",
            "year",
            "equals",
            "1934"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "farm",
            "WHERE",
            "Year",
            "=",
            "1934"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "farm",
            "where",
            "year",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__farm__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__farm.year__",
                            false
                        ],
                        null
                    ],
                    1934.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "farm",
        "query": "SELECT Population FROM city WHERE City_ID = '3';",
        "question": "Select population from city when city id equals 3",
        "tables": [
            "farm_competition",
            "farm",
            "city",
            "competition_record"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "population",
            "from",
            "city",
            "when",
            "city",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Population",
            "FROM",
            "city",
            "WHERE",
            "City_ID",
            "=",
            "'3'"
        ],
        "query_toks_no_value": [
            "select",
            "population",
            "from",
            "city",
            "where",
            "city_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__city__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__city.population__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__city.city_id__",
                            false
                        ],
                        null
                    ],
                    "\"3\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "farm",
        "query": "SELECT Rank FROM competition_record WHERE Farm_ID = '5';",
        "question": "Select rank from competition record when farm id equals 5",
        "tables": [
            "farm_competition",
            "farm",
            "city",
            "competition_record"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "rank",
            "from",
            "competition",
            "record",
            "when",
            "farm",
            "id",
            "equals",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "Rank",
            "FROM",
            "competition_record",
            "WHERE",
            "Farm_ID",
            "=",
            "'5'"
        ],
        "query_toks_no_value": [
            "select",
            "rank",
            "from",
            "competition_record",
            "where",
            "farm_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__competition_record__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__competition_record.rank__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__competition_record.farm_id__",
                            false
                        ],
                        null
                    ],
                    "\"5\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "farm",
        "query": "SELECT Farm_ID FROM competition_record WHERE Rank = 1;",
        "question": "Select farm id from competition record when rank equals 1",
        "tables": [
            "farm_competition",
            "farm",
            "city",
            "competition_record"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "farm",
            "id",
            "from",
            "competition",
            "record",
            "when",
            "rank",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Farm_ID",
            "FROM",
            "competition_record",
            "WHERE",
            "Rank",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "farm_id",
            "from",
            "competition_record",
            "where",
            "rank",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__competition_record__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__competition_record.farm_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__competition_record.rank__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT Asset_ID FROM Assets_in_Events WHERE Event_ID = '2';",
        "question": "Select asset id from assets in events when event id equals 2",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "asset",
            "id",
            "from",
            "assets",
            "in",
            "events",
            "when",
            "event",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Asset_ID",
            "FROM",
            "Assets_in_Events",
            "WHERE",
            "Event_ID",
            "=",
            "'2'"
        ],
        "query_toks_no_value": [
            "select",
            "asset_id",
            "from",
            "assets_in_events",
            "where",
            "event_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__assets_in_events__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__assets_in_events.asset_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__assets_in_events.event_id__",
                            false
                        ],
                        null
                    ],
                    "\"2\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT * FROM Assets_in_Events WHERE Event_ID = 5;",
        "question": "Select all columns from assets in events when event id equals 5",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "assets",
            "in",
            "events",
            "when",
            "event",
            "id",
            "equals",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Assets_in_Events",
            "WHERE",
            "Event_ID",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "assets_in_events",
            "where",
            "event_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__assets_in_events__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__assets_in_events.event_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT Product_Price FROM Products WHERE Product_ID = '5';",
        "question": "Select product price from products when product id equals 5",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "product",
            "price",
            "from",
            "products",
            "when",
            "product",
            "id",
            "equals",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "Product_Price",
            "FROM",
            "Products",
            "WHERE",
            "Product_ID",
            "=",
            "'5'"
        ],
        "query_toks_no_value": [
            "select",
            "product_price",
            "from",
            "products",
            "where",
            "product_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products.product_price__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__products.product_id__",
                            false
                        ],
                        null
                    ],
                    "\"5\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT Other_Details FROM Assets WHERE Asset_ID = '2';",
        "question": "Select other details from assets when asset id equals 2",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "other",
            "details",
            "from",
            "assets",
            "when",
            "asset",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Other_Details",
            "FROM",
            "Assets",
            "WHERE",
            "Asset_ID",
            "=",
            "'2'"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            "from",
            "assets",
            "where",
            "asset_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__assets__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__assets.other_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__assets.asset_id__",
                            false
                        ],
                        null
                    ],
                    "\"2\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT * FROM Assets WHERE Asset_ID = 3;",
        "question": "Select all columns from assets when asset id equals 3",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "assets",
            "when",
            "asset",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Assets",
            "WHERE",
            "Asset_ID",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "assets",
            "where",
            "asset_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__assets__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__assets.asset_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT Event_ID FROM Events WHERE Address_ID = '3';",
        "question": "Select event id from events when address id equals 3",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "event",
            "id",
            "from",
            "events",
            "when",
            "address",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Event_ID",
            "FROM",
            "Events",
            "WHERE",
            "Address_ID",
            "=",
            "'3'"
        ],
        "query_toks_no_value": [
            "select",
            "event_id",
            "from",
            "events",
            "where",
            "address_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__events__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__events.event_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__events.address_id__",
                            false
                        ],
                        null
                    ],
                    "\"3\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT * FROM Events WHERE Finance_ID = 15;",
        "question": "Select all columns from events when finance id equals 15",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "events",
            "when",
            "finance",
            "id",
            "equals",
            "15"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Events",
            "WHERE",
            "Finance_ID",
            "=",
            "15"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "events",
            "where",
            "finance_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__events__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__events.finance_id__",
                            false
                        ],
                        null
                    ],
                    15.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT * FROM Addresses WHERE Address_ID = 4;",
        "question": "Select all columns from addresses when address id equals 4",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "addresses",
            "when",
            "address",
            "id",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Addresses",
            "WHERE",
            "Address_ID",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "addresses",
            "where",
            "address_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__addresses.address_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT Role_Code FROM Parties_in_Events WHERE Event_ID = '7';",
        "question": "Select role code from parties in events when event id equals 7",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "role",
            "code",
            "from",
            "parties",
            "in",
            "events",
            "when",
            "event",
            "id",
            "equals",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "Role_Code",
            "FROM",
            "Parties_in_Events",
            "WHERE",
            "Event_ID",
            "=",
            "'7'"
        ],
        "query_toks_no_value": [
            "select",
            "role_code",
            "from",
            "parties_in_events",
            "where",
            "event_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__parties_in_events__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__parties_in_events.role_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__parties_in_events.event_id__",
                            false
                        ],
                        null
                    ],
                    "\"7\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT Document_ID FROM Agreements WHERE Event_ID = '10';",
        "question": "Select document id from agreements when event id equals 10",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "document",
            "id",
            "from",
            "agreements",
            "when",
            "event",
            "id",
            "equals",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "Document_ID",
            "FROM",
            "Agreements",
            "WHERE",
            "Event_ID",
            "=",
            "'10'"
        ],
        "query_toks_no_value": [
            "select",
            "document_id",
            "from",
            "agreements",
            "where",
            "event_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__agreements__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__agreements.document_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__agreements.event_id__",
                            false
                        ],
                        null
                    ],
                    "\"10\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT * FROM Agreements WHERE Event_ID = 13;",
        "question": "Select all columns from agreements when event id equals 13",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "agreements",
            "when",
            "event",
            "id",
            "equals",
            "13"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Agreements",
            "WHERE",
            "Event_ID",
            "=",
            "13"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "agreements",
            "where",
            "event_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__agreements__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__agreements.event_id__",
                            false
                        ],
                        null
                    ],
                    13.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT Other_Details FROM Finances WHERE Finance_ID = '8';",
        "question": "Select other details from finances when finance id equals 8",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "other",
            "details",
            "from",
            "finances",
            "when",
            "finance",
            "id",
            "equals",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "Other_Details",
            "FROM",
            "Finances",
            "WHERE",
            "Finance_ID",
            "=",
            "'8'"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            "from",
            "finances",
            "where",
            "finance_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__finances__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__finances.other_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__finances.finance_id__",
                            false
                        ],
                        null
                    ],
                    "\"8\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT Other_Details FROM Locations WHERE Location_ID = '13';",
        "question": "Select other details from locations when location id equals 13",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "other",
            "details",
            "from",
            "locations",
            "when",
            "location",
            "id",
            "equals",
            "13"
        ],
        "query_toks": [
            "SELECT",
            "Other_Details",
            "FROM",
            "Locations",
            "WHERE",
            "Location_ID",
            "=",
            "'13'"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            "from",
            "locations",
            "where",
            "location_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__locations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__locations.other_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__locations.location_id__",
                            false
                        ],
                        null
                    ],
                    "\"13\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT * FROM Locations WHERE Location_ID = 3;",
        "question": "Select all columns from locations when location id equals 3",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "locations",
            "when",
            "location",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Locations",
            "WHERE",
            "Location_ID",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "locations",
            "where",
            "location_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__locations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__locations.location_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT Channel_ID FROM Channels WHERE Other_Details = '177';",
        "question": "Select channel id from channels when other details equals 177",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "channel",
            "id",
            "from",
            "channels",
            "when",
            "other",
            "details",
            "equals",
            "177"
        ],
        "query_toks": [
            "SELECT",
            "Channel_ID",
            "FROM",
            "Channels",
            "WHERE",
            "Other_Details",
            "=",
            "'177'"
        ],
        "query_toks_no_value": [
            "select",
            "channel_id",
            "from",
            "channels",
            "where",
            "other_details",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__channels__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__channels.channel_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__channels.other_details__",
                            false
                        ],
                        null
                    ],
                    "\"177\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT Channel_ID FROM Channels WHERE Other_Details = 631;",
        "question": "Select channel id from channels when other details equals 631",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "channel",
            "id",
            "from",
            "channels",
            "when",
            "other",
            "details",
            "equals",
            "631"
        ],
        "query_toks": [
            "SELECT",
            "Channel_ID",
            "FROM",
            "Channels",
            "WHERE",
            "Other_Details",
            "=",
            "631"
        ],
        "query_toks_no_value": [
            "select",
            "channel_id",
            "from",
            "channels",
            "where",
            "other_details",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__channels__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__channels.channel_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__channels.other_details__",
                            false
                        ],
                        null
                    ],
                    631.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT Product_ID FROM Products_in_Events WHERE Product_in_Event_ID = '13';",
        "question": "Select product id from products in events when product in event id equals 13",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "product",
            "id",
            "from",
            "products",
            "in",
            "events",
            "when",
            "product",
            "in",
            "event",
            "id",
            "equals",
            "13"
        ],
        "query_toks": [
            "SELECT",
            "Product_ID",
            "FROM",
            "Products_in_Events",
            "WHERE",
            "Product_in_Event_ID",
            "=",
            "'13'"
        ],
        "query_toks_no_value": [
            "select",
            "product_id",
            "from",
            "products_in_events",
            "where",
            "product_in_event_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products_in_events__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products_in_events.product_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__products_in_events.product_in_event_id__",
                            false
                        ],
                        null
                    ],
                    "\"13\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT * FROM Products_in_Events WHERE Event_ID = 5;",
        "question": "Select all columns from products in events when event id equals 5",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "products",
            "in",
            "events",
            "when",
            "event",
            "id",
            "equals",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Products_in_Events",
            "WHERE",
            "Event_ID",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "products_in_events",
            "where",
            "event_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products_in_events__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__products_in_events.event_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT Party_ID FROM Parties WHERE Party_Details = 'European Christian Political Movement';",
        "question": "Select party id from parties when party details equals European Christian Political Movement",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "party",
            "id",
            "from",
            "parties",
            "when",
            "party",
            "details",
            "equals",
            "European",
            "Christian",
            "Political",
            "Movement"
        ],
        "query_toks": [
            "SELECT",
            "Party_ID",
            "FROM",
            "Parties",
            "WHERE",
            "Party_Details",
            "=",
            "'European",
            "Christian",
            "Political",
            "Movement'"
        ],
        "query_toks_no_value": [
            "select",
            "party_id",
            "from",
            "parties",
            "where",
            "party_details",
            "=",
            "value",
            "christian",
            "political",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__parties__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__parties.party_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__parties.party_details__",
                            false
                        ],
                        null
                    ],
                    "\"European Christian Political Movement\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "city_record",
        "query": "SELECT Match_ID FROM hosting_city WHERE Year = '2009';",
        "question": "Select match id from hosting city when year equals 2009",
        "tables": [
            "temperature",
            "hosting_city",
            "city",
            "match"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "match",
            "id",
            "from",
            "hosting",
            "city",
            "when",
            "year",
            "equals",
            "2009"
        ],
        "query_toks": [
            "SELECT",
            "Match_ID",
            "FROM",
            "hosting_city",
            "WHERE",
            "Year",
            "=",
            "'2009'"
        ],
        "query_toks_no_value": [
            "select",
            "match_id",
            "from",
            "hosting_city",
            "where",
            "year",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__hosting_city__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__hosting_city.match_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__hosting_city.year__",
                            false
                        ],
                        null
                    ],
                    "\"2009\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "city_record",
        "query": "SELECT Match_ID FROM hosting_city WHERE Host_City = 11;",
        "question": "Select match id from hosting city when host city equals 11",
        "tables": [
            "temperature",
            "hosting_city",
            "city",
            "match"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "match",
            "id",
            "from",
            "hosting",
            "city",
            "when",
            "host",
            "city",
            "equals",
            "11"
        ],
        "query_toks": [
            "SELECT",
            "Match_ID",
            "FROM",
            "hosting_city",
            "WHERE",
            "Host_City",
            "=",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "match_id",
            "from",
            "hosting_city",
            "where",
            "host_city",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__hosting_city__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__hosting_city.match_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__hosting_city.host_city__",
                            false
                        ],
                        null
                    ],
                    11.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "city_record",
        "query": "SELECT Result FROM match WHERE Competition = 'Friendly match';",
        "question": "Select result from match when competition equals Friendly match",
        "tables": [
            "temperature",
            "hosting_city",
            "city",
            "match"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "result",
            "from",
            "match",
            "when",
            "competition",
            "equals",
            "Friendly",
            "match"
        ],
        "query_toks": [
            "SELECT",
            "Result",
            "FROM",
            "match",
            "WHERE",
            "Competition",
            "=",
            "'Friendly",
            "match'"
        ],
        "query_toks_no_value": [
            "select",
            "result",
            "from",
            "match",
            "where",
            "competition",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__match__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__match.result__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__match.competition__",
                            false
                        ],
                        null
                    ],
                    "\"Friendly match\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "swimming",
        "query": "SELECT Stadium_ID FROM event WHERE Name = 'Pacific';",
        "question": "Select stadium id from event when name equals Pacific",
        "tables": [
            "event",
            "stadium",
            "record",
            "swimmer"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "stadium",
            "id",
            "from",
            "event",
            "when",
            "name",
            "equals",
            "Pacific"
        ],
        "query_toks": [
            "SELECT",
            "Stadium_ID",
            "FROM",
            "event",
            "WHERE",
            "Name",
            "=",
            "'Pacific'"
        ],
        "query_toks_no_value": [
            "select",
            "stadium_id",
            "from",
            "event",
            "where",
            "name",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__event__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__event.stadium_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__event.name__",
                            false
                        ],
                        null
                    ],
                    "\"Pacific\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "swimming",
        "query": "SELECT ID FROM event WHERE Year = 2014;",
        "question": "Select id from event when year equals 2014",
        "tables": [
            "event",
            "stadium",
            "record",
            "swimmer"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "id",
            "from",
            "event",
            "when",
            "year",
            "equals",
            "2014"
        ],
        "query_toks": [
            "SELECT",
            "ID",
            "FROM",
            "event",
            "WHERE",
            "Year",
            "=",
            "2014"
        ],
        "query_toks_no_value": [
            "select",
            "id",
            "from",
            "event",
            "where",
            "year",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__event__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__event.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__event.year__",
                            false
                        ],
                        null
                    ],
                    2014.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "swimming",
        "query": "SELECT Capacity FROM stadium WHERE Country = 'Spain';",
        "question": "Select capacity from stadium when country equals Spain",
        "tables": [
            "event",
            "stadium",
            "record",
            "swimmer"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "capacity",
            "from",
            "stadium",
            "when",
            "country",
            "equals",
            "Spain"
        ],
        "query_toks": [
            "SELECT",
            "Capacity",
            "FROM",
            "stadium",
            "WHERE",
            "Countr",
            "(",
            "Countr",
            ")",
            "=",
            "'Spain'"
        ],
        "query_toks_no_value": [
            "select",
            "capacity",
            "from",
            "stadium",
            "where",
            "countr",
            "(",
            "countr",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__stadium__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__stadium.capacity__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__stadium.country__",
                            false
                        ],
                        null
                    ],
                    "\"Spain\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "swimming",
        "query": "SELECT * FROM stadium WHERE ID = 10;",
        "question": "Select all columns from stadium when id equals 10",
        "tables": [
            "event",
            "stadium",
            "record",
            "swimmer"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "stadium",
            "when",
            "id",
            "equals",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "stadium",
            "WHERE",
            "ID",
            "=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "stadium",
            "where",
            "id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__stadium__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__stadium.id__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "swimming",
        "query": "SELECT Event_ID FROM record WHERE Result = 'Loss';",
        "question": "Select event id from record when result equals Loss",
        "tables": [
            "event",
            "stadium",
            "record",
            "swimmer"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "event",
            "id",
            "from",
            "record",
            "when",
            "result",
            "equals",
            "Loss"
        ],
        "query_toks": [
            "SELECT",
            "Event_ID",
            "FROM",
            "record",
            "WHERE",
            "Result",
            "=",
            "'Loss'"
        ],
        "query_toks_no_value": [
            "select",
            "event_id",
            "from",
            "record",
            "where",
            "result",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__record__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__record.event_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__record.result__",
                            false
                        ],
                        null
                    ],
                    "\"Loss\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "query": "SELECT CountryAbbrev FROM airports WHERE AirportCode = 'AKK';",
        "question": "Select country abbrev from airports when airport code equals AKK",
        "tables": [
            "airports",
            "flights",
            "airlines"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "country",
            "abbrev",
            "from",
            "airports",
            "when",
            "airport",
            "code",
            "equals",
            "AKK"
        ],
        "query_toks": [
            "SELECT",
            "CountryAbbre",
            "(",
            "CountryAbbre",
            ")",
            "FROM",
            "airports",
            "WHERE",
            "AirportCode",
            "=",
            "'AKK'"
        ],
        "query_toks_no_value": [
            "select",
            "countryabbre",
            "(",
            "countryabbre",
            ")",
            "from",
            "airports",
            "where",
            "airportcode",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__airports__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__airports.countryabbrev__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__airports.airportcode__",
                            false
                        ],
                        null
                    ],
                    "\"AKK\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "query": "SELECT DestAirport FROM flights WHERE Airline = '3';",
        "question": "Select destination airport from flights when airline equals 3",
        "tables": [
            "airports",
            "flights",
            "airlines"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "destination",
            "airport",
            "from",
            "flights",
            "when",
            "airline",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "DestAirport",
            "FROM",
            "flights",
            "WHERE",
            "Airline",
            "=",
            "'3'"
        ],
        "query_toks_no_value": [
            "select",
            "destairport",
            "from",
            "flights",
            "where",
            "airline",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__flights__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__flights.destairport__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__flights.airline__",
                            false
                        ],
                        null
                    ],
                    "\"3\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "query": "SELECT * FROM flights WHERE Airline = 10;",
        "question": "Select all columns from flights when airline equals 10",
        "tables": [
            "airports",
            "flights",
            "airlines"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "flights",
            "when",
            "airline",
            "equals",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "flights",
            "WHERE",
            "Airline",
            "=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "flights",
            "where",
            "airline",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__flights__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__flights.airline__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "query": "SELECT uid FROM airlines WHERE Airline = 'Continental Airlines';",
        "question": "Select airline id from airlines when airline name equals Continental Airlines",
        "tables": [
            "airports",
            "flights",
            "airlines"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "airline",
            "id",
            "from",
            "airlines",
            "when",
            "airline",
            "name",
            "equals",
            "Continental",
            "Airlines"
        ],
        "query_toks": [
            "SELECT",
            "uid",
            "FROM",
            "airlines",
            "WHERE",
            "Airline",
            "=",
            "'Continental",
            "Airlines'"
        ],
        "query_toks_no_value": [
            "select",
            "uid",
            "from",
            "airlines",
            "where",
            "airline",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__airlines__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__airlines.uid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__airlines.airline__",
                            false
                        ],
                        null
                    ],
                    "\"Continental Airlines\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "election",
        "query": "SELECT Delegate FROM election WHERE Election_ID = '7';",
        "question": "Select delegate from election when election id equals 7",
        "tables": [
            "election",
            "county",
            "party"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "delegate",
            "from",
            "election",
            "when",
            "election",
            "id",
            "equals",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "Delegate",
            "FROM",
            "election",
            "WHERE",
            "Election_ID",
            "=",
            "'7'"
        ],
        "query_toks_no_value": [
            "select",
            "delegate",
            "from",
            "election",
            "where",
            "election_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__election__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__election.delegate__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__election.election_id__",
                            false
                        ],
                        null
                    ],
                    "\"7\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "election",
        "query": "SELECT Zip_code FROM county WHERE County_name = 'Baltimore County';",
        "question": "Select zip code from county when county name equals Baltimore County",
        "tables": [
            "election",
            "county",
            "party"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "zip",
            "code",
            "from",
            "county",
            "when",
            "county",
            "name",
            "equals",
            "Baltimore",
            "County"
        ],
        "query_toks": [
            "SELECT",
            "Zip_code",
            "FROM",
            "count",
            "(",
            "count",
            ")",
            "WHERE",
            "County_nam",
            "(",
            "County_nam",
            ")",
            "=",
            "'Baltimore",
            "County'",
            "(",
            "County'",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "zip_code",
            "from",
            "count",
            "(",
            "count",
            ")",
            "where",
            "county_nam",
            "(",
            "county_nam",
            ")",
            "=",
            "value",
            "value",
            "(",
            "value",
            ")"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__county__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__county.zip_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__county.county_name__",
                            false
                        ],
                        null
                    ],
                    "\"Baltimore County\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "election",
        "query": "SELECT Party FROM party WHERE Party_ID = '2';",
        "question": "Select party from party when party id equals 2",
        "tables": [
            "election",
            "county",
            "party"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "party",
            "from",
            "party",
            "when",
            "party",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Party",
            "FROM",
            "party",
            "WHERE",
            "Party_ID",
            "=",
            "'2'"
        ],
        "query_toks_no_value": [
            "select",
            "party",
            "from",
            "party",
            "where",
            "party_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__party__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__party.party__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__party.party_id__",
                            false
                        ],
                        null
                    ],
                    "\"2\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "manufactory_1",
        "query": "SELECT Founder FROM Manufacturers WHERE Headquarter = 'Taiwan';",
        "question": "Select founder from manufacturers when headquarter equals Taiwan",
        "tables": [
            "Manufacturers",
            "Products"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "founder",
            "from",
            "manufacturers",
            "when",
            "headquarter",
            "equals",
            "Taiwan"
        ],
        "query_toks": [
            "SELECT",
            "Founder",
            "FROM",
            "Manufacturers",
            "WHERE",
            "Headquarter",
            "=",
            "'Taiwan'"
        ],
        "query_toks_no_value": [
            "select",
            "founder",
            "from",
            "manufacturers",
            "where",
            "headquarter",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__manufacturers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__manufacturers.founder__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__manufacturers.headquarter__",
                            false
                        ],
                        null
                    ],
                    "\"Taiwan\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "manufactory_1",
        "query": "SELECT * FROM Manufacturers WHERE Code = 2;",
        "question": "Select all columns from manufacturers when code equals 2",
        "tables": [
            "Manufacturers",
            "Products"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "manufacturers",
            "when",
            "code",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Manufacturers",
            "WHERE",
            "Code",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "manufacturers",
            "where",
            "code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__manufacturers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__manufacturers.code__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "manufactory_1",
        "query": "SELECT Price FROM Products WHERE Name = 'ZIP drive';",
        "question": "Select price from products when name equals ZIP drive",
        "tables": [
            "Manufacturers",
            "Products"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "price",
            "from",
            "products",
            "when",
            "name",
            "equals",
            "ZIP",
            "drive"
        ],
        "query_toks": [
            "SELECT",
            "Price",
            "FROM",
            "Products",
            "WHERE",
            "Name",
            "=",
            "'ZIP",
            "drive'"
        ],
        "query_toks_no_value": [
            "select",
            "price",
            "from",
            "products",
            "where",
            "name",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products.price__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__products.name__",
                            false
                        ],
                        null
                    ],
                    "\"ZIP drive\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "manufactory_1",
        "query": "SELECT * FROM Products WHERE Manufacturer = 3;",
        "question": "Select all columns from products when manufacturer equals 3",
        "tables": [
            "Manufacturers",
            "Products"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "products",
            "when",
            "manufacturer",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Products",
            "WHERE",
            "Manufacturer",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "products",
            "where",
            "manufacturer",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__products.manufacturer__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "debate",
        "query": "SELECT Num_of_Audience FROM debate WHERE Date = 'December 17, 2014';",
        "question": "Select num of audience from debate when date equals December 17, 2014",
        "tables": [
            "debate",
            "people",
            "debate_people"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "num",
            "of",
            "audience",
            "from",
            "debate",
            "when",
            "date",
            "equals",
            "December",
            "17",
            ",",
            "2014"
        ],
        "query_toks": [
            "SELECT",
            "Num_of_Audience",
            "FROM",
            "debate",
            "WHERE",
            "Date",
            "=",
            "'December",
            "17",
            ",",
            "2014'"
        ],
        "query_toks_no_value": [
            "select",
            "num_of_audience",
            "from",
            "debate",
            "where",
            "date",
            "=",
            "value",
            "value",
            ",",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__debate__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__debate.num_of_audience__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__debate.date__",
                            false
                        ],
                        null
                    ],
                    "\"December 17, 2014\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "debate",
        "query": "SELECT Affirmative FROM debate_people WHERE Negative = '7';",
        "question": "Select affirmative from debate people when negative equals 7",
        "tables": [
            "debate",
            "people",
            "debate_people"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "affirmative",
            "from",
            "debate",
            "people",
            "when",
            "negative",
            "equals",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "Affirmative",
            "FROM",
            "debate_people",
            "WHERE",
            "Negative",
            "=",
            "'7'"
        ],
        "query_toks_no_value": [
            "select",
            "affirmative",
            "from",
            "debate_people",
            "where",
            "negative",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__debate_people__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__debate_people.affirmative__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__debate_people.negative__",
                            false
                        ],
                        null
                    ],
                    "\"7\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "debate",
        "query": "SELECT If_Affirmative_Win FROM debate_people WHERE Debate_ID = 6;",
        "question": "Select if affirmative win from debate people when debate id equals 6",
        "tables": [
            "debate",
            "people",
            "debate_people"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "if",
            "affirmative",
            "win",
            "from",
            "debate",
            "people",
            "when",
            "debate",
            "id",
            "equals",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "If_Affirmative_Win",
            "FROM",
            "debate_people",
            "WHERE",
            "Debate_ID",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "if_affirmative_win",
            "from",
            "debate_people",
            "where",
            "debate_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__debate_people__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__debate_people.if_affirmative_win__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__debate_people.debate_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_2",
        "query": "SELECT name FROM Person WHERE city = 'chicago';",
        "question": "Select name from person when city equals chicago",
        "tables": [
            "Person",
            "PersonFriend"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "name",
            "from",
            "person",
            "when",
            "city",
            "equals",
            "chicago"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "Person",
            "WHERE",
            "city",
            "=",
            "'chicago'"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "person",
            "where",
            "city",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__person__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__person.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__person.city__",
                            false
                        ],
                        null
                    ],
                    "\"chicago\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_2",
        "query": "SELECT name FROM PersonFriend WHERE friend = 'Alice';",
        "question": "Select name from person friend when friend equals Alice",
        "tables": [
            "Person",
            "PersonFriend"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "name",
            "from",
            "person",
            "friend",
            "when",
            "friend",
            "equals",
            "Alice"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "PersonFriend",
            "WHERE",
            "friend",
            "=",
            "'Alice'"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "personfriend",
            "where",
            "friend",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__personfriend__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__personfriend.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__personfriend.friend__",
                            false
                        ],
                        null
                    ],
                    "\"Alice\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_in_alabama",
        "query": "SELECT Participant_Type_Code FROM Participants WHERE Participant_Details = 'Karlee Batz';",
        "question": "Select participant type code from participants when participant details equals Karlee Batz",
        "tables": [
            "Participants",
            "Services",
            "Events",
            "Participants_in_Events"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "participant",
            "type",
            "code",
            "from",
            "participants",
            "when",
            "participant",
            "details",
            "equals",
            "Karlee",
            "Batz"
        ],
        "query_toks": [
            "SELECT",
            "Participant_Type_Code",
            "FROM",
            "Participants",
            "WHERE",
            "Participant_Details",
            "=",
            "'Karlee",
            "Batz'"
        ],
        "query_toks_no_value": [
            "select",
            "participant_type_code",
            "from",
            "participants",
            "where",
            "participant_details",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__participants__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__participants.participant_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__participants.participant_details__",
                            false
                        ],
                        null
                    ],
                    "\"Karlee Batz\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_in_alabama",
        "query": "SELECT Service_ID FROM Services WHERE Service_Type_Code = 'Birth Proof';",
        "question": "Select service id from services when service type code equals Birth Proof",
        "tables": [
            "Participants",
            "Services",
            "Events",
            "Participants_in_Events"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "service",
            "id",
            "from",
            "services",
            "when",
            "service",
            "type",
            "code",
            "equals",
            "Birth",
            "Proof"
        ],
        "query_toks": [
            "SELECT",
            "Service_ID",
            "FROM",
            "Services",
            "WHERE",
            "Service_Type_Code",
            "=",
            "'Birth",
            "Proof'"
        ],
        "query_toks_no_value": [
            "select",
            "service_id",
            "from",
            "services",
            "where",
            "service_type_code",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__services__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__services.service_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__services.service_type_code__",
                            false
                        ],
                        null
                    ],
                    "\"Birth Proof\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_in_alabama",
        "query": "SELECT Service_Type_Code FROM Services WHERE Service_ID = 5;",
        "question": "Select service type code from services when service id equals 5",
        "tables": [
            "Participants",
            "Services",
            "Events",
            "Participants_in_Events"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "service",
            "type",
            "code",
            "from",
            "services",
            "when",
            "service",
            "id",
            "equals",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "Service_Type_Code",
            "FROM",
            "Services",
            "WHERE",
            "Service_ID",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "service_type_code",
            "from",
            "services",
            "where",
            "service_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__services__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__services.service_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__services.service_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_in_alabama",
        "query": "SELECT Event_Details FROM Events WHERE Event_ID = '48';",
        "question": "Select event details from events when event id equals 48",
        "tables": [
            "Participants",
            "Services",
            "Events",
            "Participants_in_Events"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "event",
            "details",
            "from",
            "events",
            "when",
            "event",
            "id",
            "equals",
            "48"
        ],
        "query_toks": [
            "SELECT",
            "Event_Details",
            "FROM",
            "Events",
            "WHERE",
            "Event_ID",
            "=",
            "'48'"
        ],
        "query_toks_no_value": [
            "select",
            "event_details",
            "from",
            "events",
            "where",
            "event_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__events__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__events.event_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__events.event_id__",
                            false
                        ],
                        null
                    ],
                    "\"48\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_in_alabama",
        "query": "SELECT Event_Details FROM Events WHERE Service_ID = 6;",
        "question": "Select event details from events when service id equals 6",
        "tables": [
            "Participants",
            "Services",
            "Events",
            "Participants_in_Events"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "event",
            "details",
            "from",
            "events",
            "when",
            "service",
            "id",
            "equals",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "Event_Details",
            "FROM",
            "Events",
            "WHERE",
            "Service_ID",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "event_details",
            "from",
            "events",
            "where",
            "service_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__events__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__events.event_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__events.service_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_in_alabama",
        "query": "SELECT Event_ID FROM Participants_in_Events WHERE Participant_ID = '36';",
        "question": "Select event id from participants in events when participant id equals 36",
        "tables": [
            "Participants",
            "Services",
            "Events",
            "Participants_in_Events"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "event",
            "id",
            "from",
            "participants",
            "in",
            "events",
            "when",
            "participant",
            "id",
            "equals",
            "36"
        ],
        "query_toks": [
            "SELECT",
            "Event_ID",
            "FROM",
            "Participants_in_Events",
            "WHERE",
            "Participant_ID",
            "=",
            "'36'"
        ],
        "query_toks_no_value": [
            "select",
            "event_id",
            "from",
            "participants_in_events",
            "where",
            "participant_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__participants_in_events__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__participants_in_events.event_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__participants_in_events.participant_id__",
                            false
                        ],
                        null
                    ],
                    "\"36\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_in_alabama",
        "query": "SELECT Event_ID FROM Participants_in_Events WHERE Participant_ID = 64;",
        "question": "Select event id from participants in events when participant id equals 64",
        "tables": [
            "Participants",
            "Services",
            "Events",
            "Participants_in_Events"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "event",
            "id",
            "from",
            "participants",
            "in",
            "events",
            "when",
            "participant",
            "id",
            "equals",
            "64"
        ],
        "query_toks": [
            "SELECT",
            "Event_ID",
            "FROM",
            "Participants_in_Events",
            "WHERE",
            "Participant_ID",
            "=",
            "64"
        ],
        "query_toks_no_value": [
            "select",
            "event_id",
            "from",
            "participants_in_events",
            "where",
            "participant_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__participants_in_events__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__participants_in_events.event_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__participants_in_events.participant_id__",
                            false
                        ],
                        null
                    ],
                    64.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "climbing",
        "query": "SELECT Time FROM climber WHERE Mountain_ID = '2';",
        "question": "Select time from climber when mountain id equals 2",
        "tables": [
            "climber",
            "mountain"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "time",
            "from",
            "climber",
            "when",
            "mountain",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Time",
            "FROM",
            "climber",
            "WHERE",
            "Mountain_ID",
            "=",
            "'2'"
        ],
        "query_toks_no_value": [
            "select",
            "time",
            "from",
            "climber",
            "where",
            "mountain_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__climber__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__climber.time__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__climber.mountain_id__",
                            false
                        ],
                        null
                    ],
                    "\"2\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "climbing",
        "query": "SELECT * FROM mountain WHERE Mountain_ID = 4;",
        "question": "Select all columns from mountain when mountain id equals 4",
        "tables": [
            "climber",
            "mountain"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "mountain",
            "when",
            "mountain",
            "id",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "mountain",
            "WHERE",
            "Mountain_ID",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "mountain",
            "where",
            "mountain_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__mountain__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__mountain.mountain_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_learning",
        "query": "SELECT course_id FROM Courses WHERE author_id = '9';",
        "question": "Select course id from courses when author id equals 9",
        "tables": [
            "Courses",
            "Students",
            "Subjects",
            "Course_Authors_and_Tutors",
            "Student_Course_Enrolment",
            "Student_Tests_Taken"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "course",
            "id",
            "from",
            "courses",
            "when",
            "author",
            "id",
            "equals",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "course_id",
            "FROM",
            "Courses",
            "WHERE",
            "author_id",
            "=",
            "'9'"
        ],
        "query_toks_no_value": [
            "select",
            "course_id",
            "from",
            "courses",
            "where",
            "author_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__courses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__courses.course_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__courses.author_id__",
                            false
                        ],
                        null
                    ],
                    "\"9\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_learning",
        "query": "SELECT family_name FROM Students WHERE password = '8e064ec4e6';",
        "question": "Select family name from students when password equals 8e064ec4e6",
        "tables": [
            "Courses",
            "Students",
            "Subjects",
            "Course_Authors_and_Tutors",
            "Student_Course_Enrolment",
            "Student_Tests_Taken"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "family",
            "name",
            "from",
            "students",
            "when",
            "password",
            "equals",
            "8e064ec4e6"
        ],
        "query_toks": [
            "SELECT",
            "family_name",
            "FROM",
            "Students",
            "WHERE",
            "password",
            "=",
            "'8e064ec4e6'"
        ],
        "query_toks_no_value": [
            "select",
            "family_name",
            "from",
            "students",
            "where",
            "password",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__students__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__students.family_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__students.password__",
                            false
                        ],
                        null
                    ],
                    "\"8e064ec4e6\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_learning",
        "query": "SELECT subject_id FROM Subjects WHERE subject_name = 'Arts';",
        "question": "Select subject id from subjects when subject name equals Arts",
        "tables": [
            "Courses",
            "Students",
            "Subjects",
            "Course_Authors_and_Tutors",
            "Student_Course_Enrolment",
            "Student_Tests_Taken"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "subject",
            "id",
            "from",
            "subjects",
            "when",
            "subject",
            "name",
            "equals",
            "Arts"
        ],
        "query_toks": [
            "SELECT",
            "subject_id",
            "FROM",
            "Subjects",
            "WHERE",
            "subject_name",
            "=",
            "'Arts'"
        ],
        "query_toks_no_value": [
            "select",
            "subject_id",
            "from",
            "subjects",
            "where",
            "subject_name",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__subjects__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__subjects.subject_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__subjects.subject_name__",
                            false
                        ],
                        null
                    ],
                    "\"Arts\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_learning",
        "query": "SELECT password FROM Course_Authors_and_Tutors WHERE gender_mf = '0';",
        "question": "Select password from course authors and tutors when gender mf equals 0",
        "tables": [
            "Courses",
            "Students",
            "Subjects",
            "Course_Authors_and_Tutors",
            "Student_Course_Enrolment",
            "Student_Tests_Taken"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "password",
            "from",
            "course",
            "authors",
            "and",
            "tutors",
            "when",
            "gender",
            "mf",
            "equals",
            "0"
        ],
        "query_toks": [
            "SELECT",
            "password",
            "FROM",
            "Course_Authors_and_Tutors",
            "WHERE",
            "gender_mf",
            "=",
            "'0'"
        ],
        "query_toks_no_value": [
            "select",
            "password",
            "from",
            "course_authors_and_tutors",
            "where",
            "gender_mf",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__course_authors_and_tutors__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__course_authors_and_tutors.password__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__course_authors_and_tutors.gender_mf__",
                            false
                        ],
                        null
                    ],
                    "\"0\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_learning",
        "query": "SELECT date_of_enrolment FROM Student_Course_Enrolment WHERE course_id = '9';",
        "question": "Select date of enrolment from student course enrolment when course id equals 9",
        "tables": [
            "Courses",
            "Students",
            "Subjects",
            "Course_Authors_and_Tutors",
            "Student_Course_Enrolment",
            "Student_Tests_Taken"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "date",
            "of",
            "enrolment",
            "from",
            "student",
            "course",
            "enrolment",
            "when",
            "course",
            "id",
            "equals",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "date_of_enrolment",
            "FROM",
            "Student_Course_Enrolment",
            "WHERE",
            "course_id",
            "=",
            "'9'"
        ],
        "query_toks_no_value": [
            "select",
            "date_of_enrolment",
            "from",
            "student_course_enrolment",
            "where",
            "course_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student_course_enrolment__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student_course_enrolment.date_of_enrolment__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__student_course_enrolment.course_id__",
                            false
                        ],
                        null
                    ],
                    "\"9\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "scientist_1",
        "query": "SELECT Project FROM AssignedTo WHERE Scientist = '326587417';",
        "question": "Select project from assigned to when scientist equals 326587417",
        "tables": [
            "AssignedTo",
            "Projects",
            "Scientists"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "project",
            "from",
            "assigned",
            "to",
            "when",
            "scientist",
            "equals",
            "326587417"
        ],
        "query_toks": [
            "SELECT",
            "Project",
            "FROM",
            "AssignedTo",
            "WHERE",
            "Scientist",
            "=",
            "'326587417'"
        ],
        "query_toks_no_value": [
            "select",
            "project",
            "from",
            "assignedto",
            "where",
            "scientist",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__assignedto__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__assignedto.project__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__assignedto.scientist__",
                            false
                        ],
                        null
                    ],
                    "\"326587417\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "scientist_1",
        "query": "SELECT Hours FROM Projects WHERE Name = 'Aerodynamics and Ice Hockey';",
        "question": "Select hours from projects when name equals Aerodynamics and Ice Hockey",
        "tables": [
            "AssignedTo",
            "Projects",
            "Scientists"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "hours",
            "from",
            "projects",
            "when",
            "name",
            "equals",
            "Aerodynamics",
            "and",
            "Ice",
            "Hockey"
        ],
        "query_toks": [
            "SELECT",
            "Hours",
            "FROM",
            "Projects",
            "WHERE",
            "Name",
            "=",
            "'Aerodynamics",
            "and",
            "Ice",
            "Hockey'"
        ],
        "query_toks_no_value": [
            "select",
            "hours",
            "from",
            "projects",
            "where",
            "name",
            "=",
            "value",
            "and",
            "ice",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__projects__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__projects.hours__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__projects.name__",
                            false
                        ],
                        null
                    ],
                    "\"Aerodynamics and Ice Hockey\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "scientist_1",
        "query": "SELECT Name FROM Scientists WHERE SSN = '123234877';",
        "question": "Select name from scientists when ssn equals 123234877",
        "tables": [
            "AssignedTo",
            "Projects",
            "Scientists"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "name",
            "from",
            "scientists",
            "when",
            "ssn",
            "equals",
            "123234877"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "Scientists",
            "WHERE",
            "SSN",
            "=",
            "'123234877'"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "scientists",
            "where",
            "ssn",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__scientists__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__scientists.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__scientists.ssn__",
                            false
                        ],
                        null
                    ],
                    "\"123234877\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "ship_1",
        "query": "SELECT Ship_ID FROM captain WHERE Rank = 'Commander, junior captain';",
        "question": "Select ship id from captain when rank equals Commander, junior captain",
        "tables": [
            "captain",
            "Ship"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "ship",
            "id",
            "from",
            "captain",
            "when",
            "rank",
            "equals",
            "Commander",
            ",",
            "junior",
            "captain"
        ],
        "query_toks": [
            "SELECT",
            "Ship_ID",
            "FROM",
            "captain",
            "WHERE",
            "Rank",
            "=",
            "'Commander",
            ",",
            "junior",
            "captain'"
        ],
        "query_toks_no_value": [
            "select",
            "ship_id",
            "from",
            "captain",
            "where",
            "rank",
            "=",
            "value",
            ",",
            "junior",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__captain__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__captain.ship_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__captain.rank__",
                            false
                        ],
                        null
                    ],
                    "\"Commander, junior captain\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "ship_1",
        "query": "SELECT Built_Year FROM Ship WHERE Class = 'KR';",
        "question": "Select built year from ship when class equals KR",
        "tables": [
            "captain",
            "Ship"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "built",
            "year",
            "from",
            "ship",
            "when",
            "class",
            "equals",
            "KR"
        ],
        "query_toks": [
            "SELECT",
            "Built_Year",
            "FROM",
            "Ship",
            "WHERE",
            "Class",
            "=",
            "'KR'"
        ],
        "query_toks_no_value": [
            "select",
            "built_year",
            "from",
            "ship",
            "where",
            "class",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__ship__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__ship.built_year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__ship.class__",
                            false
                        ],
                        null
                    ],
                    "\"KR\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "entertainment_awards",
        "query": "SELECT Artwork_ID FROM nomination WHERE Festival_ID = '2';",
        "question": "Select artwork id from nomination when festival id equals 2",
        "tables": [
            "nomination",
            "festival_detail",
            "artwork"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "artwork",
            "id",
            "from",
            "nomination",
            "when",
            "festival",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Artwork_ID",
            "FROM",
            "nomination",
            "WHERE",
            "Festival_ID",
            "=",
            "'2'"
        ],
        "query_toks_no_value": [
            "select",
            "artwork_id",
            "from",
            "nomination",
            "where",
            "festival_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__nomination__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__nomination.artwork_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__nomination.festival_id__",
                            false
                        ],
                        null
                    ],
                    "\"2\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "entertainment_awards",
        "query": "SELECT * FROM nomination WHERE Festival_ID = 5;",
        "question": "Select all columns from nomination when festival id equals 5",
        "tables": [
            "nomination",
            "festival_detail",
            "artwork"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "nomination",
            "when",
            "festival",
            "id",
            "equals",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "nomination",
            "WHERE",
            "Festival_ID",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "nomination",
            "where",
            "festival_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__nomination__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__nomination.festival_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "entertainment_awards",
        "query": "SELECT Year FROM festival_detail WHERE Location = 'United States';",
        "question": "Select year from festival detail when location equals United States",
        "tables": [
            "nomination",
            "festival_detail",
            "artwork"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "year",
            "from",
            "festival",
            "detail",
            "when",
            "location",
            "equals",
            "United",
            "States"
        ],
        "query_toks": [
            "SELECT",
            "Year",
            "FROM",
            "festival_detail",
            "WHERE",
            "Location",
            "=",
            "'United",
            "States'"
        ],
        "query_toks_no_value": [
            "select",
            "year",
            "from",
            "festival_detail",
            "where",
            "location",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__festival_detail__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__festival_detail.year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__festival_detail.location__",
                            false
                        ],
                        null
                    ],
                    "\"United States\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "entertainment_awards",
        "query": "SELECT * FROM festival_detail WHERE Year = 2008;",
        "question": "Select all columns from festival detail when year equals 2008",
        "tables": [
            "nomination",
            "festival_detail",
            "artwork"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "festival",
            "detail",
            "when",
            "year",
            "equals",
            "2008"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "festival_detail",
            "WHERE",
            "Year",
            "=",
            "2008"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "festival_detail",
            "where",
            "year",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__festival_detail__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__festival_detail.year__",
                            false
                        ],
                        null
                    ],
                    2008.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "entertainment_awards",
        "query": "SELECT Type FROM artwork WHERE Name = 'I Know';",
        "question": "Select type from artwork when name equals I Know",
        "tables": [
            "nomination",
            "festival_detail",
            "artwork"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "type",
            "from",
            "artwork",
            "when",
            "name",
            "equals",
            "I",
            "Know"
        ],
        "query_toks": [
            "SELECT",
            "Type",
            "FROM",
            "artwork",
            "WHERE",
            "Name",
            "=",
            "'I",
            "Know'"
        ],
        "query_toks_no_value": [
            "select",
            "type",
            "from",
            "artwork",
            "where",
            "name",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__artwork__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__artwork.type__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__artwork.name__",
                            false
                        ],
                        null
                    ],
                    "\"I Know\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "entertainment_awards",
        "query": "SELECT Type FROM artwork WHERE Artwork_ID = 5;",
        "question": "Select type from artwork when artwork id equals 5",
        "tables": [
            "nomination",
            "festival_detail",
            "artwork"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "type",
            "from",
            "artwork",
            "when",
            "artwork",
            "id",
            "equals",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "Type",
            "FROM",
            "artwork",
            "WHERE",
            "Artwork_ID",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "type",
            "from",
            "artwork",
            "where",
            "artwork_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__artwork__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__artwork.type__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__artwork.artwork_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "allergy_1",
        "query": "SELECT Allergy FROM Allergy_Type WHERE AllergyType = 'animal';",
        "question": "Select allergy name from allergy type when allergy type equals animal",
        "tables": [
            "Allergy_Type",
            "Student",
            "Has_Allergy"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "allergy",
            "name",
            "from",
            "allergy",
            "type",
            "when",
            "allergy",
            "type",
            "equals",
            "animal"
        ],
        "query_toks": [
            "SELECT",
            "Allergy",
            "FROM",
            "Allergy_Type",
            "WHERE",
            "AllergyType",
            "=",
            "'animal'"
        ],
        "query_toks_no_value": [
            "select",
            "allergy",
            "from",
            "allergy_type",
            "where",
            "allergytype",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__allergy_type__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__allergy_type.allergy__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__allergy_type.allergytype__",
                            false
                        ],
                        null
                    ],
                    "\"animal\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "allergy_1",
        "query": "SELECT Advisor FROM Student WHERE Sex = 'M';",
        "question": "Select advisor from student when sex equals M",
        "tables": [
            "Allergy_Type",
            "Student",
            "Has_Allergy"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "advisor",
            "from",
            "student",
            "when",
            "sex",
            "equals",
            "M"
        ],
        "query_toks": [
            "SELECT",
            "Advisor",
            "FROM",
            "Student",
            "WHERE",
            "Sex",
            "=",
            "'M'"
        ],
        "query_toks_no_value": [
            "select",
            "advisor",
            "from",
            "student",
            "where",
            "sex",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.advisor__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__student.sex__",
                            false
                        ],
                        null
                    ],
                    "\"M\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "allergy_1",
        "query": "SELECT Allergy FROM Has_Allergy WHERE StuID = '1030';",
        "question": "Select allergy from has allergy when stuid equals 1030",
        "tables": [
            "Allergy_Type",
            "Student",
            "Has_Allergy"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "allergy",
            "from",
            "has",
            "allergy",
            "when",
            "stuid",
            "equals",
            "1030"
        ],
        "query_toks": [
            "SELECT",
            "Allergy",
            "FROM",
            "Has_Allergy",
            "WHERE",
            "StuID",
            "=",
            "'1030'"
        ],
        "query_toks_no_value": [
            "select",
            "allergy",
            "from",
            "has_allergy",
            "where",
            "stuid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__has_allergy__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__has_allergy.allergy__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__has_allergy.stuid__",
                            false
                        ],
                        null
                    ],
                    "\"1030\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_for_hire",
        "query": "SELECT booked_amount FROM Products_Booked WHERE booked_count = '9';",
        "question": "Select booked amount from products booked when booked count equals 9",
        "tables": [
            "Products_Booked",
            "Bookings",
            "Customers",
            "Discount_Coupons",
            "View_Product_Availability",
            "Products_for_Hire",
            "Payments"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "booked",
            "amount",
            "from",
            "products",
            "booked",
            "when",
            "booked",
            "count",
            "equals",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "booked_amount",
            "FROM",
            "Products_Booked",
            "WHERE",
            "booked_count",
            "=",
            "'9'"
        ],
        "query_toks_no_value": [
            "select",
            "booked_amount",
            "from",
            "products_booked",
            "where",
            "booked_count",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products_booked__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products_booked.booked_amount__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__products_booked.booked_count__",
                            false
                        ],
                        null
                    ],
                    "\"9\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_for_hire",
        "query": "SELECT * FROM Products_Booked WHERE returned_late_yn = 0;",
        "question": "Select all columns from products booked when returned late yes or no equals 0",
        "tables": [
            "Products_Booked",
            "Bookings",
            "Customers",
            "Discount_Coupons",
            "View_Product_Availability",
            "Products_for_Hire",
            "Payments"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "products",
            "booked",
            "when",
            "returned",
            "late",
            "yes",
            "or",
            "no",
            "equals",
            "0"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Products_Booked",
            "WHERE",
            "returned_late_yn",
            "=",
            "0"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "products_booked",
            "where",
            "returned_late_yn",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products_booked__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__products_booked.returned_late_yn__",
                            false
                        ],
                        null
                    ],
                    0.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_for_hire",
        "query": "SELECT * FROM Bookings WHERE count_hired = 152;",
        "question": "Select all columns from bookings when count hired equals 152",
        "tables": [
            "Products_Booked",
            "Bookings",
            "Customers",
            "Discount_Coupons",
            "View_Product_Availability",
            "Products_for_Hire",
            "Payments"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "bookings",
            "when",
            "count",
            "hired",
            "equals",
            "152"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Bookings",
            "WHERE",
            "count_hire",
            "(",
            "count_hire",
            ")",
            "=",
            "152"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "bookings",
            "where",
            "count_hire",
            "(",
            "count_hire",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__bookings__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__bookings.count_hired__",
                            false
                        ],
                        null
                    ],
                    152.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_for_hire",
        "query": "SELECT coupon_id FROM Customers WHERE last_name = 'Lemke';",
        "question": "Select coupon id from customers when last name equals Lemke",
        "tables": [
            "Products_Booked",
            "Bookings",
            "Customers",
            "Discount_Coupons",
            "View_Product_Availability",
            "Products_for_Hire",
            "Payments"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "coupon",
            "id",
            "from",
            "customers",
            "when",
            "last",
            "name",
            "equals",
            "Lemke"
        ],
        "query_toks": [
            "SELECT",
            "coupon_id",
            "FROM",
            "Customers",
            "WHERE",
            "last_name",
            "=",
            "'Lemke'"
        ],
        "query_toks_no_value": [
            "select",
            "coupon_id",
            "from",
            "customers",
            "where",
            "last_name",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.coupon_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customers.last_name__",
                            false
                        ],
                        null
                    ],
                    "\"Lemke\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_for_hire",
        "query": "SELECT first_name FROM Customers WHERE gender_mf = 1;",
        "question": "Select first name from customers when gender equals 1",
        "tables": [
            "Products_Booked",
            "Bookings",
            "Customers",
            "Discount_Coupons",
            "View_Product_Availability",
            "Products_for_Hire",
            "Payments"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "first",
            "name",
            "from",
            "customers",
            "when",
            "gender",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "first_name",
            "FROM",
            "Customers",
            "WHERE",
            "gender_mf",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            "from",
            "customers",
            "where",
            "gender_mf",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.first_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customers.gender_mf__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_for_hire",
        "query": "SELECT status_date FROM View_Product_Availability WHERE booking_id = '5';",
        "question": "Select status date from view product availability when booking id equals 5",
        "tables": [
            "Products_Booked",
            "Bookings",
            "Customers",
            "Discount_Coupons",
            "View_Product_Availability",
            "Products_for_Hire",
            "Payments"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "status",
            "date",
            "from",
            "view",
            "product",
            "availability",
            "when",
            "booking",
            "id",
            "equals",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "status_date",
            "FROM",
            "View_Product_Availability",
            "WHERE",
            "booking_id",
            "=",
            "'5'"
        ],
        "query_toks_no_value": [
            "select",
            "status_date",
            "from",
            "view_product_availability",
            "where",
            "booking_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__view_product_availability__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__view_product_availability.status_date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__view_product_availability.booking_id__",
                            false
                        ],
                        null
                    ],
                    "\"5\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_for_hire",
        "query": "SELECT available_yn FROM View_Product_Availability WHERE product_id = 5;",
        "question": "Select available yes or no from view product availability when product id equals 5",
        "tables": [
            "Products_Booked",
            "Bookings",
            "Customers",
            "Discount_Coupons",
            "View_Product_Availability",
            "Products_for_Hire",
            "Payments"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "available",
            "yes",
            "or",
            "no",
            "from",
            "view",
            "product",
            "availability",
            "when",
            "product",
            "id",
            "equals",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "available_yn",
            "FROM",
            "View_Product_Availability",
            "WHERE",
            "product_id",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "available_yn",
            "from",
            "view_product_availability",
            "where",
            "product_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__view_product_availability__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__view_product_availability.available_yn__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__view_product_availability.product_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_for_hire",
        "query": "SELECT payment_date FROM Payments WHERE payment_id = '4';",
        "question": "Select payment date from payments when payment id equals 4",
        "tables": [
            "Products_Booked",
            "Bookings",
            "Customers",
            "Discount_Coupons",
            "View_Product_Availability",
            "Products_for_Hire",
            "Payments"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "payment",
            "date",
            "from",
            "payments",
            "when",
            "payment",
            "id",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "payment_date",
            "FROM",
            "Payments",
            "WHERE",
            "payment_id",
            "=",
            "'4'"
        ],
        "query_toks_no_value": [
            "select",
            "payment_date",
            "from",
            "payments",
            "where",
            "payment_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__payments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__payments.payment_date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__payments.payment_id__",
                            false
                        ],
                        null
                    ],
                    "\"4\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_for_hire",
        "query": "SELECT payment_date FROM Payments WHERE amount_paid_in_full_yn = 0;",
        "question": "Select payment date from payments when amount paid in full yn equals 0",
        "tables": [
            "Products_Booked",
            "Bookings",
            "Customers",
            "Discount_Coupons",
            "View_Product_Availability",
            "Products_for_Hire",
            "Payments"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "payment",
            "date",
            "from",
            "payments",
            "when",
            "amount",
            "paid",
            "in",
            "full",
            "yn",
            "equals",
            "0"
        ],
        "query_toks": [
            "SELECT",
            "payment_date",
            "FROM",
            "Payments",
            "WHERE",
            "amount_paid_in_full_yn",
            "=",
            "0"
        ],
        "query_toks_no_value": [
            "select",
            "payment_date",
            "from",
            "payments",
            "where",
            "amount_paid_in_full_yn",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__payments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__payments.payment_date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__payments.amount_paid_in_full_yn__",
                            false
                        ],
                        null
                    ],
                    0.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "chinook_1",
        "query": "SELECT Name FROM Artist WHERE ArtistId = '41';",
        "question": "Select name from artist when artist id equals 41",
        "tables": [
            "Invoice",
            "Artist",
            "Album",
            "Track",
            "InvoiceLine",
            "Employee",
            "Playlist",
            "Genre",
            "Customer",
            "PlaylistTrack",
            "MediaType"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "name",
            "from",
            "artist",
            "when",
            "artist",
            "id",
            "equals",
            "41"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "Artist",
            "WHERE",
            "ArtistId",
            "=",
            "'41'"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "artist",
            "where",
            "artistid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__artist__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__artist.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__artist.artistid__",
                            false
                        ],
                        null
                    ],
                    "\"41\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "chinook_1",
        "query": "SELECT AlbumId FROM Album WHERE Title = 'Somewhere in Time';",
        "question": "Select album id from album when title equals Somewhere in Time",
        "tables": [
            "Invoice",
            "Artist",
            "Album",
            "Track",
            "InvoiceLine",
            "Employee",
            "Playlist",
            "Genre",
            "Customer",
            "PlaylistTrack",
            "MediaType"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "album",
            "id",
            "from",
            "album",
            "when",
            "title",
            "equals",
            "Somewhere",
            "in",
            "Time"
        ],
        "query_toks": [
            "SELECT",
            "AlbumId",
            "FROM",
            "Album",
            "WHERE",
            "Title",
            "=",
            "'Somewhere",
            "in",
            "Time'"
        ],
        "query_toks_no_value": [
            "select",
            "albumid",
            "from",
            "album",
            "where",
            "title",
            "=",
            "value",
            "in",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__album__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__album.albumid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__album.title__",
                            false
                        ],
                        null
                    ],
                    "\"Somewhere in Time\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "chinook_1",
        "query": "SELECT Milliseconds FROM Track WHERE Name = 'Muita Estrela, Pouca Constela\u00e7\u00e3o';",
        "question": "Select milliseconds from track when name equals Muita Estrela, Pouca Constela\u00e7\u00e3o",
        "tables": [
            "Invoice",
            "Artist",
            "Album",
            "Track",
            "InvoiceLine",
            "Employee",
            "Playlist",
            "Genre",
            "Customer",
            "PlaylistTrack",
            "MediaType"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "milliseconds",
            "from",
            "track",
            "when",
            "name",
            "equals",
            "Muita",
            "Estrela",
            ",",
            "Pouca",
            "Constela\u00e7\u00e3o"
        ],
        "query_toks": [
            "SELECT",
            "Milliseconds",
            "FROM",
            "Track",
            "WHERE",
            "Name",
            "=",
            "'Muita",
            "Estrela",
            ",",
            "Pouca",
            "Constela\u00e7\u00e3o'"
        ],
        "query_toks_no_value": [
            "select",
            "milliseconds",
            "from",
            "track",
            "where",
            "name",
            "=",
            "value",
            "estrela",
            ",",
            "pouca",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__track__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__track.milliseconds__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__track.name__",
                            false
                        ],
                        null
                    ],
                    "\"Muita Estrela, Pouca Constela\u00e7\u00e3o\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "chinook_1",
        "query": "SELECT * FROM Track WHERE TrackId = 692;",
        "question": "Select all columns from track when track id equals 692",
        "tables": [
            "Invoice",
            "Artist",
            "Album",
            "Track",
            "InvoiceLine",
            "Employee",
            "Playlist",
            "Genre",
            "Customer",
            "PlaylistTrack",
            "MediaType"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "track",
            "when",
            "track",
            "id",
            "equals",
            "692"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Track",
            "WHERE",
            "TrackId",
            "=",
            "692"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "track",
            "where",
            "trackid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__track__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__track.trackid__",
                            false
                        ],
                        null
                    ],
                    692.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "chinook_1",
        "query": "SELECT UnitPrice FROM InvoiceLine WHERE Quantity = '1';",
        "question": "Select unit price from invoice line when quantity equals 1",
        "tables": [
            "Invoice",
            "Artist",
            "Album",
            "Track",
            "InvoiceLine",
            "Employee",
            "Playlist",
            "Genre",
            "Customer",
            "PlaylistTrack",
            "MediaType"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "unit",
            "price",
            "from",
            "invoice",
            "line",
            "when",
            "quantity",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "UnitPrice",
            "FROM",
            "InvoiceLine",
            "WHERE",
            "Quantity",
            "=",
            "'1'"
        ],
        "query_toks_no_value": [
            "select",
            "unitprice",
            "from",
            "invoiceline",
            "where",
            "quantity",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__invoiceline__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__invoiceline.unitprice__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__invoiceline.quantity__",
                            false
                        ],
                        null
                    ],
                    "\"1\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "chinook_1",
        "query": "SELECT Quantity FROM InvoiceLine WHERE InvoiceId = 157;",
        "question": "Select quantity from invoice line when invoice id equals 157",
        "tables": [
            "Invoice",
            "Artist",
            "Album",
            "Track",
            "InvoiceLine",
            "Employee",
            "Playlist",
            "Genre",
            "Customer",
            "PlaylistTrack",
            "MediaType"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "quantity",
            "from",
            "invoice",
            "line",
            "when",
            "invoice",
            "id",
            "equals",
            "157"
        ],
        "query_toks": [
            "SELECT",
            "Quantity",
            "FROM",
            "InvoiceLine",
            "WHERE",
            "InvoiceId",
            "=",
            "157"
        ],
        "query_toks_no_value": [
            "select",
            "quantity",
            "from",
            "invoiceline",
            "where",
            "invoiceid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__invoiceline__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__invoiceline.quantity__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__invoiceline.invoiceid__",
                            false
                        ],
                        null
                    ],
                    157.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "chinook_1",
        "query": "SELECT Country FROM Employee WHERE LastName = 'King';",
        "question": "Select country from employee when last name equals King",
        "tables": [
            "Invoice",
            "Artist",
            "Album",
            "Track",
            "InvoiceLine",
            "Employee",
            "Playlist",
            "Genre",
            "Customer",
            "PlaylistTrack",
            "MediaType"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "country",
            "from",
            "employee",
            "when",
            "last",
            "name",
            "equals",
            "King"
        ],
        "query_toks": [
            "SELECT",
            "Countr",
            "(",
            "Countr",
            ")",
            "FROM",
            "Employee",
            "WHERE",
            "LastName",
            "=",
            "'King'"
        ],
        "query_toks_no_value": [
            "select",
            "countr",
            "(",
            "countr",
            ")",
            "from",
            "employee",
            "where",
            "lastname",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__employee__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__employee.country__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__employee.lastname__",
                            false
                        ],
                        null
                    ],
                    "\"King\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "chinook_1",
        "query": "SELECT PlaylistId FROM Playlist WHERE Name = 'TV Shows';",
        "question": "Select play list id from playlist when name equals TV Shows",
        "tables": [
            "Invoice",
            "Artist",
            "Album",
            "Track",
            "InvoiceLine",
            "Employee",
            "Playlist",
            "Genre",
            "Customer",
            "PlaylistTrack",
            "MediaType"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "play",
            "list",
            "id",
            "from",
            "playlist",
            "when",
            "name",
            "equals",
            "TV",
            "Shows"
        ],
        "query_toks": [
            "SELECT",
            "PlaylistId",
            "FROM",
            "Playlist",
            "WHERE",
            "Name",
            "=",
            "'TV",
            "Shows'"
        ],
        "query_toks_no_value": [
            "select",
            "playlistid",
            "from",
            "playlist",
            "where",
            "name",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__playlist__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__playlist.playlistid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__playlist.name__",
                            false
                        ],
                        null
                    ],
                    "\"TV Shows\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "chinook_1",
        "query": "SELECT Name FROM Genre WHERE GenreId = '7';",
        "question": "Select name from genre when genre id equals 7",
        "tables": [
            "Invoice",
            "Artist",
            "Album",
            "Track",
            "InvoiceLine",
            "Employee",
            "Playlist",
            "Genre",
            "Customer",
            "PlaylistTrack",
            "MediaType"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "name",
            "from",
            "genre",
            "when",
            "genre",
            "id",
            "equals",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "Genre",
            "WHERE",
            "GenreId",
            "=",
            "'7'"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "genre",
            "where",
            "genreid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__genre__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__genre.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__genre.genreid__",
                            false
                        ],
                        null
                    ],
                    "\"7\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "chinook_1",
        "query": "SELECT PostalCode FROM Customer WHERE City = 'Dijon';",
        "question": "Select postal code from customer when city equals Dijon",
        "tables": [
            "Invoice",
            "Artist",
            "Album",
            "Track",
            "InvoiceLine",
            "Employee",
            "Playlist",
            "Genre",
            "Customer",
            "PlaylistTrack",
            "MediaType"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "postal",
            "code",
            "from",
            "customer",
            "when",
            "city",
            "equals",
            "Dijon"
        ],
        "query_toks": [
            "SELECT",
            "PostalCode",
            "FROM",
            "Customer",
            "WHERE",
            "City",
            "=",
            "'Dijon'"
        ],
        "query_toks_no_value": [
            "select",
            "postalcode",
            "from",
            "customer",
            "where",
            "city",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer.postalcode__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customer.city__",
                            false
                        ],
                        null
                    ],
                    "\"Dijon\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "chinook_1",
        "query": "SELECT PlaylistId FROM PlaylistTrack WHERE TrackId = '2641';",
        "question": "Select play list id from playlist track when track id equals 2641",
        "tables": [
            "Invoice",
            "Artist",
            "Album",
            "Track",
            "InvoiceLine",
            "Employee",
            "Playlist",
            "Genre",
            "Customer",
            "PlaylistTrack",
            "MediaType"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "play",
            "list",
            "id",
            "from",
            "playlist",
            "track",
            "when",
            "track",
            "id",
            "equals",
            "2641"
        ],
        "query_toks": [
            "SELECT",
            "PlaylistId",
            "FROM",
            "PlaylistTrack",
            "WHERE",
            "TrackId",
            "=",
            "'2641'"
        ],
        "query_toks_no_value": [
            "select",
            "playlistid",
            "from",
            "playlisttrack",
            "where",
            "trackid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__playlisttrack__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__playlisttrack.playlistid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__playlisttrack.trackid__",
                            false
                        ],
                        null
                    ],
                    "\"2641\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "chinook_1",
        "query": "SELECT PlaylistId FROM PlaylistTrack WHERE TrackId = 27;",
        "question": "Select play list id from playlist track when track id equals 27",
        "tables": [
            "Invoice",
            "Artist",
            "Album",
            "Track",
            "InvoiceLine",
            "Employee",
            "Playlist",
            "Genre",
            "Customer",
            "PlaylistTrack",
            "MediaType"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "play",
            "list",
            "id",
            "from",
            "playlist",
            "track",
            "when",
            "track",
            "id",
            "equals",
            "27"
        ],
        "query_toks": [
            "SELECT",
            "PlaylistId",
            "FROM",
            "PlaylistTrack",
            "WHERE",
            "TrackId",
            "=",
            "27"
        ],
        "query_toks_no_value": [
            "select",
            "playlistid",
            "from",
            "playlisttrack",
            "where",
            "trackid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__playlisttrack__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__playlisttrack.playlistid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__playlisttrack.trackid__",
                            false
                        ],
                        null
                    ],
                    27.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_4",
        "query": "SELECT dst_apid FROM routes WHERE rid = '278';",
        "question": "Select destination airport id from routes when route id equals 278",
        "tables": [
            "airports",
            "routes",
            "airlines"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "destination",
            "airport",
            "id",
            "from",
            "routes",
            "when",
            "route",
            "id",
            "equals",
            "278"
        ],
        "query_toks": [
            "SELECT",
            "dst_apid",
            "FROM",
            "routes",
            "WHERE",
            "rid",
            "=",
            "'278'"
        ],
        "query_toks_no_value": [
            "select",
            "dst_apid",
            "from",
            "routes",
            "where",
            "rid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__routes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__routes.dst_apid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__routes.rid__",
                            false
                        ],
                        null
                    ],
                    "\"278\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_4",
        "query": "SELECT iata FROM airlines WHERE country = 'Iran';",
        "question": "Select iata from airlines when country equals Iran",
        "tables": [
            "airports",
            "routes",
            "airlines"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "iata",
            "from",
            "airlines",
            "when",
            "country",
            "equals",
            "Iran"
        ],
        "query_toks": [
            "SELECT",
            "iata",
            "FROM",
            "airlines",
            "WHERE",
            "countr",
            "(",
            "countr",
            ")",
            "=",
            "'Iran'"
        ],
        "query_toks_no_value": [
            "select",
            "iata",
            "from",
            "airlines",
            "where",
            "countr",
            "(",
            "countr",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__airlines__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__airlines.iata__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__airlines.country__",
                            false
                        ],
                        null
                    ],
                    "\"Iran\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "query": "SELECT PetID FROM Has_Pet WHERE StuID = '1001';",
        "question": "Select pet id from has pet when student id equals 1001",
        "tables": [
            "Has_Pet",
            "Student",
            "Pets"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "pet",
            "id",
            "from",
            "has",
            "pet",
            "when",
            "student",
            "id",
            "equals",
            "1001"
        ],
        "query_toks": [
            "SELECT",
            "PetID",
            "FROM",
            "Has_Pet",
            "WHERE",
            "StuID",
            "=",
            "'1001'"
        ],
        "query_toks_no_value": [
            "select",
            "petid",
            "from",
            "has_pet",
            "where",
            "stuid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__has_pet__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__has_pet.petid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__has_pet.stuid__",
                            false
                        ],
                        null
                    ],
                    "\"1001\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "query": "SELECT StuID FROM Has_Pet WHERE PetID = 2003;",
        "question": "Select student id from has pet when pet id equals 2003",
        "tables": [
            "Has_Pet",
            "Student",
            "Pets"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "student",
            "id",
            "from",
            "has",
            "pet",
            "when",
            "pet",
            "id",
            "equals",
            "2003"
        ],
        "query_toks": [
            "SELECT",
            "StuID",
            "FROM",
            "Has_Pet",
            "WHERE",
            "PetID",
            "=",
            "2003"
        ],
        "query_toks_no_value": [
            "select",
            "stuid",
            "from",
            "has_pet",
            "where",
            "petid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__has_pet__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__has_pet.stuid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__has_pet.petid__",
                            false
                        ],
                        null
                    ],
                    2003.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "query": "SELECT Advisor FROM Student WHERE Age = '18';",
        "question": "Select advisor from student when age equals 18",
        "tables": [
            "Has_Pet",
            "Student",
            "Pets"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "advisor",
            "from",
            "student",
            "when",
            "age",
            "equals",
            "18"
        ],
        "query_toks": [
            "SELECT",
            "Advisor",
            "FROM",
            "Student",
            "WHERE",
            "Age",
            "=",
            "'18'"
        ],
        "query_toks_no_value": [
            "select",
            "advisor",
            "from",
            "student",
            "where",
            "age",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.advisor__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__student.age__",
                            false
                        ],
                        null
                    ],
                    "\"18\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "query": "SELECT PetType FROM Pets WHERE PetID = 2002;",
        "question": "Select pet type from pets when pet id equals 2002",
        "tables": [
            "Has_Pet",
            "Student",
            "Pets"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "pet",
            "type",
            "from",
            "pets",
            "when",
            "pet",
            "id",
            "equals",
            "2002"
        ],
        "query_toks": [
            "SELECT",
            "PetType",
            "FROM",
            "Pets",
            "WHERE",
            "PetID",
            "=",
            "2002"
        ],
        "query_toks_no_value": [
            "select",
            "pettype",
            "from",
            "pets",
            "where",
            "petid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__pets__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__pets.pettype__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__pets.petid__",
                            false
                        ],
                        null
                    ],
                    2002.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dorm_1",
        "query": "SELECT student_capacity FROM Dorm WHERE dormid = '100';",
        "question": "Select student capacity from dorm when dorm id equals 100",
        "tables": [
            "Dorm",
            "Has_amenity",
            "Student",
            "Lives_in",
            "Dorm_amenity"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "student",
            "capacity",
            "from",
            "dorm",
            "when",
            "dorm",
            "id",
            "equals",
            "100"
        ],
        "query_toks": [
            "SELECT",
            "student_capacity",
            "FROM",
            "Dorm",
            "WHERE",
            "dormid",
            "=",
            "'100'"
        ],
        "query_toks_no_value": [
            "select",
            "student_capacity",
            "from",
            "dorm",
            "where",
            "dormid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__dorm__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__dorm.student_capacity__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__dorm.dormid__",
                            false
                        ],
                        null
                    ],
                    "\"100\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dorm_1",
        "query": "SELECT dormid FROM Has_amenity WHERE amenid = '900';",
        "question": "Select dorm id from has amenity when amenity id equals 900",
        "tables": [
            "Dorm",
            "Has_amenity",
            "Student",
            "Lives_in",
            "Dorm_amenity"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "dorm",
            "id",
            "from",
            "has",
            "amenity",
            "when",
            "amenity",
            "id",
            "equals",
            "900"
        ],
        "query_toks": [
            "SELECT",
            "dormid",
            "FROM",
            "Has_amenity",
            "WHERE",
            "amenid",
            "=",
            "'900'"
        ],
        "query_toks_no_value": [
            "select",
            "dormid",
            "from",
            "has_amenity",
            "where",
            "amenid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__has_amenity__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__has_amenity.dormid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__has_amenity.amenid__",
                            false
                        ],
                        null
                    ],
                    "\"900\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dorm_1",
        "query": "SELECT * FROM Has_amenity WHERE amenid = 931;",
        "question": "Select all columns from has amenity when amenity id equals 931",
        "tables": [
            "Dorm",
            "Has_amenity",
            "Student",
            "Lives_in",
            "Dorm_amenity"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "has",
            "amenity",
            "when",
            "amenity",
            "id",
            "equals",
            "931"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Has_amenity",
            "WHERE",
            "amenid",
            "=",
            "931"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "has_amenity",
            "where",
            "amenid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__has_amenity__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__has_amenity.amenid__",
                            false
                        ],
                        null
                    ],
                    931.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dorm_1",
        "query": "SELECT Major FROM Student WHERE Sex = 'M';",
        "question": "Select major from student when sex equals M",
        "tables": [
            "Dorm",
            "Has_amenity",
            "Student",
            "Lives_in",
            "Dorm_amenity"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "major",
            "from",
            "student",
            "when",
            "sex",
            "equals",
            "M"
        ],
        "query_toks": [
            "SELECT",
            "Major",
            "FROM",
            "Student",
            "WHERE",
            "Sex",
            "=",
            "'M'"
        ],
        "query_toks_no_value": [
            "select",
            "major",
            "from",
            "student",
            "where",
            "sex",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.major__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__student.sex__",
                            false
                        ],
                        null
                    ],
                    "\"M\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dorm_1",
        "query": "SELECT room_number FROM Lives_in WHERE dormid = '104';",
        "question": "Select room number from lives in when dorm id equals 104",
        "tables": [
            "Dorm",
            "Has_amenity",
            "Student",
            "Lives_in",
            "Dorm_amenity"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "room",
            "number",
            "from",
            "lives",
            "in",
            "when",
            "dorm",
            "id",
            "equals",
            "104"
        ],
        "query_toks": [
            "SELECT",
            "room_number",
            "FROM",
            "Lives_in",
            "WHERE",
            "dormid",
            "=",
            "'104'"
        ],
        "query_toks_no_value": [
            "select",
            "room_number",
            "from",
            "lives_in",
            "where",
            "dormid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__lives_in__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__lives_in.room_number__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__lives_in.dormid__",
                            false
                        ],
                        null
                    ],
                    "\"104\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dorm_1",
        "query": "SELECT * FROM Lives_in WHERE dormid = 160;",
        "question": "Select all columns from lives in when dorm id equals 160",
        "tables": [
            "Dorm",
            "Has_amenity",
            "Student",
            "Lives_in",
            "Dorm_amenity"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "lives",
            "in",
            "when",
            "dorm",
            "id",
            "equals",
            "160"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Lives_in",
            "WHERE",
            "dormid",
            "=",
            "160"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "lives_in",
            "where",
            "dormid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__lives_in__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__lives_in.dormid__",
                            false
                        ],
                        null
                    ],
                    160.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dorm_1",
        "query": "SELECT amenid FROM Dorm_amenity WHERE amenity_name = 'Roof';",
        "question": "Select amenity id from dorm amenity when amenity name equals Roof",
        "tables": [
            "Dorm",
            "Has_amenity",
            "Student",
            "Lives_in",
            "Dorm_amenity"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "amenity",
            "id",
            "from",
            "dorm",
            "amenity",
            "when",
            "amenity",
            "name",
            "equals",
            "Roof"
        ],
        "query_toks": [
            "SELECT",
            "amenid",
            "FROM",
            "Dorm_amenity",
            "WHERE",
            "amenity_name",
            "=",
            "'Roof'"
        ],
        "query_toks_no_value": [
            "select",
            "amenid",
            "from",
            "dorm_amenity",
            "where",
            "amenity_name",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__dorm_amenity__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__dorm_amenity.amenid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__dorm_amenity.amenity_name__",
                            false
                        ],
                        null
                    ],
                    "\"Roof\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "journal_committee",
        "query": "SELECT Journal_ID FROM journal_committee WHERE Editor_ID = '4';",
        "question": "Select journal id from journal committee when editor id equals 4",
        "tables": [
            "journal_committee",
            "editor",
            "journal"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "journal",
            "id",
            "from",
            "journal",
            "committee",
            "when",
            "editor",
            "id",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Journal_ID",
            "FROM",
            "journal_committee",
            "WHERE",
            "Editor_ID",
            "=",
            "'4'"
        ],
        "query_toks_no_value": [
            "select",
            "journal_id",
            "from",
            "journal_committee",
            "where",
            "editor_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__journal_committee__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__journal_committee.journal_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__journal_committee.editor_id__",
                            false
                        ],
                        null
                    ],
                    "\"4\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "journal_committee",
        "query": "SELECT Journal_ID FROM journal WHERE Sales = '5342';",
        "question": "Select journal id from journal when sales equals 5342",
        "tables": [
            "journal_committee",
            "editor",
            "journal"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "journal",
            "id",
            "from",
            "journal",
            "when",
            "sales",
            "equals",
            "5342"
        ],
        "query_toks": [
            "SELECT",
            "Journal_ID",
            "FROM",
            "journal",
            "WHERE",
            "Sales",
            "=",
            "'5342'"
        ],
        "query_toks_no_value": [
            "select",
            "journal_id",
            "from",
            "journal",
            "where",
            "sales",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__journal__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__journal.journal_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__journal.sales__",
                            false
                        ],
                        null
                    ],
                    "\"5342\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "journal_committee",
        "query": "SELECT Sales FROM journal WHERE Journal_ID = 7;",
        "question": "Select sales from journal when journal id equals 7",
        "tables": [
            "journal_committee",
            "editor",
            "journal"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "sales",
            "from",
            "journal",
            "when",
            "journal",
            "id",
            "equals",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "Sales",
            "FROM",
            "journal",
            "WHERE",
            "Journal_ID",
            "=",
            "7"
        ],
        "query_toks_no_value": [
            "select",
            "sales",
            "from",
            "journal",
            "where",
            "journal_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__journal__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__journal.sales__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__journal.journal_id__",
                            false
                        ],
                        null
                    ],
                    7.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_1",
        "query": "SELECT eid FROM employee WHERE name = 'Linda Davis';",
        "question": "Select employee id from employee when name equals Linda Davis",
        "tables": [
            "employee",
            "aircraft",
            "certificate",
            "flight"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "employee",
            "id",
            "from",
            "employee",
            "when",
            "name",
            "equals",
            "Linda",
            "Davis"
        ],
        "query_toks": [
            "SELECT",
            "eid",
            "FROM",
            "employee",
            "WHERE",
            "name",
            "=",
            "'Linda",
            "Davis'"
        ],
        "query_toks_no_value": [
            "select",
            "eid",
            "from",
            "employee",
            "where",
            "name",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__employee__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__employee.eid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__employee.name__",
                            false
                        ],
                        null
                    ],
                    "\"Linda Davis\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_1",
        "query": "SELECT distance FROM aircraft WHERE aid = '15';",
        "question": "Select distance from aircraft when airline id equals 15",
        "tables": [
            "employee",
            "aircraft",
            "certificate",
            "flight"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "distance",
            "from",
            "aircraft",
            "when",
            "airline",
            "id",
            "equals",
            "15"
        ],
        "query_toks": [
            "SELECT",
            "distance",
            "FROM",
            "aircraft",
            "WHERE",
            "aid",
            "=",
            "'15'"
        ],
        "query_toks_no_value": [
            "select",
            "distance",
            "from",
            "aircraft",
            "where",
            "aid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__aircraft__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__aircraft.distance__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__aircraft.aid__",
                            false
                        ],
                        null
                    ],
                    "\"15\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_1",
        "query": "SELECT eid FROM certificate WHERE aid = '13';",
        "question": "Select employee id from certificate when airline id equals 13",
        "tables": [
            "employee",
            "aircraft",
            "certificate",
            "flight"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "employee",
            "id",
            "from",
            "certificate",
            "when",
            "airline",
            "id",
            "equals",
            "13"
        ],
        "query_toks": [
            "SELECT",
            "eid",
            "FROM",
            "certificate",
            "WHERE",
            "aid",
            "=",
            "'13'"
        ],
        "query_toks_no_value": [
            "select",
            "eid",
            "from",
            "certificate",
            "where",
            "aid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__certificate__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__certificate.eid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__certificate.aid__",
                            false
                        ],
                        null
                    ],
                    "\"13\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_1",
        "query": "SELECT * FROM certificate WHERE eid = 574489456;",
        "question": "Select all columns from certificate when employee id equals 574489456",
        "tables": [
            "employee",
            "aircraft",
            "certificate",
            "flight"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "certificate",
            "when",
            "employee",
            "id",
            "equals",
            "574489456"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "certificate",
            "WHERE",
            "eid",
            "=",
            "574489456"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "certificate",
            "where",
            "eid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__certificate__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__certificate.eid__",
                            false
                        ],
                        null
                    ],
                    574489456.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_1",
        "query": "SELECT arrival_date FROM flight WHERE distance = '2606';",
        "question": "Select arrival date from flight when distance equals 2606",
        "tables": [
            "employee",
            "aircraft",
            "certificate",
            "flight"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "arrival",
            "date",
            "from",
            "flight",
            "when",
            "distance",
            "equals",
            "2606"
        ],
        "query_toks": [
            "SELECT",
            "arrival_date",
            "FROM",
            "flight",
            "WHERE",
            "distance",
            "=",
            "'2606'"
        ],
        "query_toks_no_value": [
            "select",
            "arrival_date",
            "from",
            "flight",
            "where",
            "distance",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__flight__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__flight.arrival_date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__flight.distance__",
                            false
                        ],
                        null
                    ],
                    "\"2606\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_1",
        "query": "SELECT * FROM flight WHERE flno = 2;",
        "question": "Select all columns from flight when flight number equals 2",
        "tables": [
            "employee",
            "aircraft",
            "certificate",
            "flight"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "flight",
            "when",
            "flight",
            "number",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "flight",
            "WHERE",
            "flno",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "flight",
            "where",
            "flno",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__flight__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__flight.flno__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "query": "SELECT medicine_id FROM medicine_enzyme_interaction WHERE interaction_type = 'inhibitor';",
        "question": "Select medicine id from medicine enzyme interaction when interaction type equals inhibitor",
        "tables": [
            "medicine_enzyme_interaction",
            "enzyme",
            "medicine"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "medicine",
            "id",
            "from",
            "medicine",
            "enzyme",
            "interaction",
            "when",
            "interaction",
            "type",
            "equals",
            "inhibitor"
        ],
        "query_toks": [
            "SELECT",
            "medicine_id",
            "FROM",
            "medicine_enzyme_interaction",
            "WHERE",
            "interaction_type",
            "=",
            "'inhibitor'"
        ],
        "query_toks_no_value": [
            "select",
            "medicine_id",
            "from",
            "medicine_enzyme_interaction",
            "where",
            "interaction_type",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__medicine_enzyme_interaction__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__medicine_enzyme_interaction.medicine_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__medicine_enzyme_interaction.interaction_type__",
                            false
                        ],
                        null
                    ],
                    "\"inhibitor\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "query": "SELECT * FROM medicine_enzyme_interaction WHERE enzyme_id = 4;",
        "question": "Select all columns from medicine enzyme interaction when enzyme id equals 4",
        "tables": [
            "medicine_enzyme_interaction",
            "enzyme",
            "medicine"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "medicine",
            "enzyme",
            "interaction",
            "when",
            "enzyme",
            "id",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "medicine_enzyme_interaction",
            "WHERE",
            "enzyme_id",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "medicine_enzyme_interaction",
            "where",
            "enzyme_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__medicine_enzyme_interaction__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__medicine_enzyme_interaction.enzyme_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "query": "SELECT OMIM FROM enzyme WHERE Location = 'Mitochondrion';",
        "question": "Select omim from enzyme when location equals Mitochondrion",
        "tables": [
            "medicine_enzyme_interaction",
            "enzyme",
            "medicine"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "omim",
            "from",
            "enzyme",
            "when",
            "location",
            "equals",
            "Mitochondrion"
        ],
        "query_toks": [
            "SELECT",
            "OMIM",
            "FROM",
            "enzyme",
            "WHERE",
            "Location",
            "=",
            "'Mitochondrion'"
        ],
        "query_toks_no_value": [
            "select",
            "omim",
            "from",
            "enzyme",
            "where",
            "location",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__enzyme__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__enzyme.omim__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__enzyme.location__",
                            false
                        ],
                        null
                    ],
                    "\"Mitochondrion\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "query": "SELECT Trade_Name FROM medicine WHERE FDA_approved = 'Yes';",
        "question": "Select trade name from medicine when fda approved equals Yes",
        "tables": [
            "medicine_enzyme_interaction",
            "enzyme",
            "medicine"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "trade",
            "name",
            "from",
            "medicine",
            "when",
            "fda",
            "approved",
            "equals",
            "Yes"
        ],
        "query_toks": [
            "SELECT",
            "Trade_Name",
            "FROM",
            "medicine",
            "WHERE",
            "FDA_approved",
            "=",
            "'Yes'"
        ],
        "query_toks_no_value": [
            "select",
            "trade_name",
            "from",
            "medicine",
            "where",
            "fda_approved",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__medicine__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__medicine.trade_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__medicine.fda_approved__",
                            false
                        ],
                        null
                    ],
                    "\"Yes\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "query": "SELECT * FROM medicine WHERE id = 2;",
        "question": "Select all columns from medicine when id equals 2",
        "tables": [
            "medicine_enzyme_interaction",
            "enzyme",
            "medicine"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "medicine",
            "when",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "medicine",
            "WHERE",
            "id",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "medicine",
            "where",
            "id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__medicine__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__medicine.id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_and_lot",
        "query": "SELECT date_moved_out FROM Residents WHERE other_details = 'Loy Walter';",
        "question": "Select date moved out from residents when other details equals Loy Walter",
        "tables": [
            "Residents",
            "Timed_Status_of_Things",
            "Things",
            "Organizations",
            "Services",
            "Residents_Services",
            "Customers",
            "Properties",
            "Customer_Events",
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "date",
            "moved",
            "out",
            "from",
            "residents",
            "when",
            "other",
            "details",
            "equals",
            "Loy",
            "Walter"
        ],
        "query_toks": [
            "SELECT",
            "date_moved_out",
            "FROM",
            "Residents",
            "WHERE",
            "other_details",
            "=",
            "'Loy",
            "Walter'"
        ],
        "query_toks_no_value": [
            "select",
            "date_moved_out",
            "from",
            "residents",
            "where",
            "other_details",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__residents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__residents.date_moved_out__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__residents.other_details__",
                            false
                        ],
                        null
                    ],
                    "\"Loy Walter\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_and_lot",
        "query": "SELECT * FROM Residents WHERE resident_id = 87;",
        "question": "Select all columns from residents when resident id equals 87",
        "tables": [
            "Residents",
            "Timed_Status_of_Things",
            "Things",
            "Organizations",
            "Services",
            "Residents_Services",
            "Customers",
            "Properties",
            "Customer_Events",
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "residents",
            "when",
            "resident",
            "id",
            "equals",
            "87"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Residents",
            "WHERE",
            "resident_id",
            "=",
            "87"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "residents",
            "where",
            "resident_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__residents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__residents.resident_id__",
                            false
                        ],
                        null
                    ],
                    87.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_and_lot",
        "query": "SELECT organization_id FROM Things WHERE service_type_code = 'Check';",
        "question": "Select organization id from things when service type code equals Check",
        "tables": [
            "Residents",
            "Timed_Status_of_Things",
            "Things",
            "Organizations",
            "Services",
            "Residents_Services",
            "Customers",
            "Properties",
            "Customer_Events",
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "organization",
            "id",
            "from",
            "things",
            "when",
            "service",
            "type",
            "code",
            "equals",
            "Check"
        ],
        "query_toks": [
            "SELECT",
            "organization_id",
            "FROM",
            "Things",
            "WHERE",
            "service_type_code",
            "=",
            "'Check'"
        ],
        "query_toks_no_value": [
            "select",
            "organization_id",
            "from",
            "things",
            "where",
            "service_type_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__things__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__things.organization_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__things.service_type_code__",
                            false
                        ],
                        null
                    ],
                    "\"Check\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_and_lot",
        "query": "SELECT organization_id FROM Organizations WHERE parent_organization_id = '8';",
        "question": "Select organization id from organizations when parent organization id equals 8",
        "tables": [
            "Residents",
            "Timed_Status_of_Things",
            "Things",
            "Organizations",
            "Services",
            "Residents_Services",
            "Customers",
            "Properties",
            "Customer_Events",
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "organization",
            "id",
            "from",
            "organizations",
            "when",
            "parent",
            "organization",
            "id",
            "equals",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "organization_id",
            "FROM",
            "Organizations",
            "WHERE",
            "parent_organization_id",
            "=",
            "'8'"
        ],
        "query_toks_no_value": [
            "select",
            "organization_id",
            "from",
            "organizations",
            "where",
            "parent_organization_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__organizations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__organizations.organization_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__organizations.parent_organization_id__",
                            false
                        ],
                        null
                    ],
                    "\"8\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_and_lot",
        "query": "SELECT organization_id FROM Services WHERE service_id = '11';",
        "question": "Select organization id from services when service id equals 11",
        "tables": [
            "Residents",
            "Timed_Status_of_Things",
            "Things",
            "Organizations",
            "Services",
            "Residents_Services",
            "Customers",
            "Properties",
            "Customer_Events",
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "organization",
            "id",
            "from",
            "services",
            "when",
            "service",
            "id",
            "equals",
            "11"
        ],
        "query_toks": [
            "SELECT",
            "organization_id",
            "FROM",
            "Services",
            "WHERE",
            "service_id",
            "=",
            "'11'"
        ],
        "query_toks_no_value": [
            "select",
            "organization_id",
            "from",
            "services",
            "where",
            "service_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__services__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__services.organization_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__services.service_id__",
                            false
                        ],
                        null
                    ],
                    "\"11\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_and_lot",
        "query": "SELECT date_moved_in FROM Residents_Services WHERE property_id = '629';",
        "question": "Select date moved in from residents services when property id equals 629",
        "tables": [
            "Residents",
            "Timed_Status_of_Things",
            "Things",
            "Organizations",
            "Services",
            "Residents_Services",
            "Customers",
            "Properties",
            "Customer_Events",
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "date",
            "moved",
            "in",
            "from",
            "residents",
            "services",
            "when",
            "property",
            "id",
            "equals",
            "629"
        ],
        "query_toks": [
            "SELECT",
            "date_moved_in",
            "FROM",
            "Residents_Services",
            "WHERE",
            "property_id",
            "=",
            "'629'"
        ],
        "query_toks_no_value": [
            "select",
            "date_moved_in",
            "from",
            "residents_services",
            "where",
            "property_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__residents_services__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__residents_services.date_moved_in__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__residents_services.property_id__",
                            false
                        ],
                        null
                    ],
                    "\"629\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_and_lot",
        "query": "SELECT customer_details FROM Customers WHERE customer_id = '69';",
        "question": "Select customer details from customers when customer id equals 69",
        "tables": [
            "Residents",
            "Timed_Status_of_Things",
            "Things",
            "Organizations",
            "Services",
            "Residents_Services",
            "Customers",
            "Properties",
            "Customer_Events",
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "customer",
            "details",
            "from",
            "customers",
            "when",
            "customer",
            "id",
            "equals",
            "69"
        ],
        "query_toks": [
            "SELECT",
            "customer_details",
            "FROM",
            "Customers",
            "WHERE",
            "customer_id",
            "=",
            "'69'"
        ],
        "query_toks_no_value": [
            "select",
            "customer_details",
            "from",
            "customers",
            "where",
            "customer_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customers.customer_id__",
                            false
                        ],
                        null
                    ],
                    "\"69\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_and_lot",
        "query": "SELECT other_details FROM Properties WHERE property_id = '120';",
        "question": "Select other details from properties when property id equals 120",
        "tables": [
            "Residents",
            "Timed_Status_of_Things",
            "Things",
            "Organizations",
            "Services",
            "Residents_Services",
            "Customers",
            "Properties",
            "Customer_Events",
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "other",
            "details",
            "from",
            "properties",
            "when",
            "property",
            "id",
            "equals",
            "120"
        ],
        "query_toks": [
            "SELECT",
            "other_details",
            "FROM",
            "Properties",
            "WHERE",
            "property_id",
            "=",
            "'120'"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            "from",
            "properties",
            "where",
            "property_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__properties__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__properties.other_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__properties.property_id__",
                            false
                        ],
                        null
                    ],
                    "\"120\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_and_lot",
        "query": "SELECT * FROM Properties WHERE property_id = 791;",
        "question": "Select all columns from properties when property id equals 791",
        "tables": [
            "Residents",
            "Timed_Status_of_Things",
            "Things",
            "Organizations",
            "Services",
            "Residents_Services",
            "Customers",
            "Properties",
            "Customer_Events",
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "properties",
            "when",
            "property",
            "id",
            "equals",
            "791"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Properties",
            "WHERE",
            "property_id",
            "=",
            "791"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "properties",
            "where",
            "property_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__properties__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__properties.property_id__",
                            false
                        ],
                        null
                    ],
                    791.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_and_lot",
        "query": "SELECT customer_id FROM Customer_Events WHERE resident_id = '67';",
        "question": "Select customer id from customer events when resident id equals 67",
        "tables": [
            "Residents",
            "Timed_Status_of_Things",
            "Things",
            "Organizations",
            "Services",
            "Residents_Services",
            "Customers",
            "Properties",
            "Customer_Events",
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "customer",
            "id",
            "from",
            "customer",
            "events",
            "when",
            "resident",
            "id",
            "equals",
            "67"
        ],
        "query_toks": [
            "SELECT",
            "customer_id",
            "FROM",
            "Customer_Events",
            "WHERE",
            "resident_id",
            "=",
            "'67'"
        ],
        "query_toks_no_value": [
            "select",
            "customer_id",
            "from",
            "customer_events",
            "where",
            "resident_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_events__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_events.customer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customer_events.resident_id__",
                            false
                        ],
                        null
                    ],
                    "\"67\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_and_lot",
        "query": "SELECT resident_id FROM Customer_Events WHERE Customer_Event_ID = 559;",
        "question": "Select resident id from customer events when customer event id equals 559",
        "tables": [
            "Residents",
            "Timed_Status_of_Things",
            "Things",
            "Organizations",
            "Services",
            "Residents_Services",
            "Customers",
            "Properties",
            "Customer_Events",
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "resident",
            "id",
            "from",
            "customer",
            "events",
            "when",
            "customer",
            "event",
            "id",
            "equals",
            "559"
        ],
        "query_toks": [
            "SELECT",
            "resident_id",
            "FROM",
            "Customer_Events",
            "WHERE",
            "Customer_Event_ID",
            "=",
            "559"
        ],
        "query_toks_no_value": [
            "select",
            "resident_id",
            "from",
            "customer_events",
            "where",
            "customer_event_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_events__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_events.resident_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customer_events.customer_event_id__",
                            false
                        ],
                        null
                    ],
                    559.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_and_lot",
        "query": "SELECT Customer_Event_Note_ID FROM Customer_Event_Notes WHERE Customer_Event_ID = '428';",
        "question": "Select customer event note id from customer event notes when customer event id equals 428",
        "tables": [
            "Residents",
            "Timed_Status_of_Things",
            "Things",
            "Organizations",
            "Services",
            "Residents_Services",
            "Customers",
            "Properties",
            "Customer_Events",
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "customer",
            "event",
            "note",
            "id",
            "from",
            "customer",
            "event",
            "notes",
            "when",
            "customer",
            "event",
            "id",
            "equals",
            "428"
        ],
        "query_toks": [
            "SELECT",
            "Customer_Event_Note_ID",
            "FROM",
            "Customer_Event_Notes",
            "WHERE",
            "Customer_Event_ID",
            "=",
            "'428'"
        ],
        "query_toks_no_value": [
            "select",
            "customer_event_note_id",
            "from",
            "customer_event_notes",
            "where",
            "customer_event_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_event_notes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_event_notes.customer_event_note_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customer_event_notes.customer_event_id__",
                            false
                        ],
                        null
                    ],
                    "\"428\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_and_lot",
        "query": "SELECT date_moved_in FROM Customer_Event_Notes WHERE Customer_Event_ID = 559;",
        "question": "Select date moved in from customer event notes when customer event id equals 559",
        "tables": [
            "Residents",
            "Timed_Status_of_Things",
            "Things",
            "Organizations",
            "Services",
            "Residents_Services",
            "Customers",
            "Properties",
            "Customer_Events",
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "date",
            "moved",
            "in",
            "from",
            "customer",
            "event",
            "notes",
            "when",
            "customer",
            "event",
            "id",
            "equals",
            "559"
        ],
        "query_toks": [
            "SELECT",
            "date_moved_in",
            "FROM",
            "Customer_Event_Notes",
            "WHERE",
            "Customer_Event_ID",
            "=",
            "559"
        ],
        "query_toks_no_value": [
            "select",
            "date_moved_in",
            "from",
            "customer_event_notes",
            "where",
            "customer_event_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_event_notes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_event_notes.date_moved_in__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customer_event_notes.customer_event_id__",
                            false
                        ],
                        null
                    ],
                    559.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_and_lot",
        "query": "SELECT Date_and_Time FROM Timed_Locations_of_Things WHERE Location_Code = '9628 Bins Islan';",
        "question": "Select date and time from timed locations of things when location code equals 9628 Bins Islan",
        "tables": [
            "Residents",
            "Timed_Status_of_Things",
            "Things",
            "Organizations",
            "Services",
            "Residents_Services",
            "Customers",
            "Properties",
            "Customer_Events",
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "date",
            "and",
            "time",
            "from",
            "timed",
            "locations",
            "of",
            "things",
            "when",
            "location",
            "code",
            "equals",
            "9628",
            "Bins",
            "Islan"
        ],
        "query_toks": [
            "SELECT",
            "Date_and_Time",
            "FROM",
            "Timed_Locations_of_Things",
            "WHERE",
            "Location_Code",
            "=",
            "'9628",
            "Bins",
            "Islan'"
        ],
        "query_toks_no_value": [
            "select",
            "date_and_time",
            "from",
            "timed_locations_of_things",
            "where",
            "location_code",
            "=",
            "value",
            "bins",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__timed_locations_of_things__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__timed_locations_of_things.date_and_time__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__timed_locations_of_things.location_code__",
                            false
                        ],
                        null
                    ],
                    "\"9628 Bins Islan\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "station_weather",
        "query": "SELECT station_id FROM weekly_weather WHERE low_temperature = '55';",
        "question": "Select station id from weekly weather when low temperature equals 55",
        "tables": [
            "weekly_weather",
            "route",
            "train",
            "station"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "station",
            "id",
            "from",
            "weekly",
            "weather",
            "when",
            "low",
            "temperature",
            "equals",
            "55"
        ],
        "query_toks": [
            "SELECT",
            "station_id",
            "FROM",
            "weekly_weather",
            "WHERE",
            "low_temperature",
            "=",
            "'55'"
        ],
        "query_toks_no_value": [
            "select",
            "station_id",
            "from",
            "weekly_weather",
            "where",
            "low_temperature",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__weekly_weather__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__weekly_weather.station_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__weekly_weather.low_temperature__",
                            false
                        ],
                        null
                    ],
                    "\"55\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "station_weather",
        "query": "SELECT station_id FROM route WHERE train_id = '2';",
        "question": "Select station id from route when train id equals 2",
        "tables": [
            "weekly_weather",
            "route",
            "train",
            "station"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "station",
            "id",
            "from",
            "route",
            "when",
            "train",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "station_id",
            "FROM",
            "route",
            "WHERE",
            "train_id",
            "=",
            "'2'"
        ],
        "query_toks_no_value": [
            "select",
            "station_id",
            "from",
            "route",
            "where",
            "train_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__route__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__route.station_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__route.train_id__",
                            false
                        ],
                        null
                    ],
                    "\"2\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "station_weather",
        "query": "SELECT train_id FROM route WHERE station_id = 3;",
        "question": "Select train id from route when station id equals 3",
        "tables": [
            "weekly_weather",
            "route",
            "train",
            "station"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "train",
            "id",
            "from",
            "route",
            "when",
            "station",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "train_id",
            "FROM",
            "route",
            "WHERE",
            "station_id",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "train_id",
            "from",
            "route",
            "where",
            "station_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__route__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__route.train_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__route.station_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "station_weather",
        "query": "SELECT train_number FROM train WHERE origin = 'Quilon';",
        "question": "Select train number from train when origin equals Quilon",
        "tables": [
            "weekly_weather",
            "route",
            "train",
            "station"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "train",
            "number",
            "from",
            "train",
            "when",
            "origin",
            "equals",
            "Quilon"
        ],
        "query_toks": [
            "SELECT",
            "train_number",
            "FROM",
            "train",
            "WHERE",
            "origin",
            "=",
            "'Quilon'"
        ],
        "query_toks_no_value": [
            "select",
            "train_number",
            "from",
            "train",
            "where",
            "origin",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__train__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__train.train_number__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__train.origin__",
                            false
                        ],
                        null
                    ],
                    "\"Quilon\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "station_weather",
        "query": "SELECT local_authority FROM station WHERE services = 'Greater Anglia';",
        "question": "Select local authority from station when services equals Greater Anglia",
        "tables": [
            "weekly_weather",
            "route",
            "train",
            "station"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "local",
            "authority",
            "from",
            "station",
            "when",
            "services",
            "equals",
            "Greater",
            "Anglia"
        ],
        "query_toks": [
            "SELECT",
            "local_authority",
            "FROM",
            "station",
            "WHERE",
            "services",
            "=",
            "'Greater",
            "Anglia'"
        ],
        "query_toks_no_value": [
            "select",
            "local_authority",
            "from",
            "station",
            "where",
            "services",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__station__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__station.local_authority__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__station.services__",
                            false
                        ],
                        null
                    ],
                    "\"Greater Anglia\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "shop_membership",
        "query": "SELECT Member_ID FROM purchase WHERE Year = '2018';",
        "question": "Select member id from purchase when year equals 2018",
        "tables": [
            "purchase",
            "membership_register_branch",
            "member",
            "branch"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "member",
            "id",
            "from",
            "purchase",
            "when",
            "year",
            "equals",
            "2018"
        ],
        "query_toks": [
            "SELECT",
            "Member_ID",
            "FROM",
            "purchase",
            "WHERE",
            "Year",
            "=",
            "'2018'"
        ],
        "query_toks_no_value": [
            "select",
            "member_id",
            "from",
            "purchase",
            "where",
            "year",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__purchase__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__purchase.member_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__purchase.year__",
                            false
                        ],
                        null
                    ],
                    "\"2018\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "shop_membership",
        "query": "SELECT Branch_ID FROM membership_register_branch WHERE Register_Year = '2016';",
        "question": "Select branch id from membership register branch when register year equals 2016",
        "tables": [
            "purchase",
            "membership_register_branch",
            "member",
            "branch"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "branch",
            "id",
            "from",
            "membership",
            "register",
            "branch",
            "when",
            "register",
            "year",
            "equals",
            "2016"
        ],
        "query_toks": [
            "SELECT",
            "Branch_ID",
            "FROM",
            "membership_register_branch",
            "WHERE",
            "Register_Year",
            "=",
            "'2016'"
        ],
        "query_toks_no_value": [
            "select",
            "branch_id",
            "from",
            "membership_register_branch",
            "where",
            "register_year",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__membership_register_branch__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__membership_register_branch.branch_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__membership_register_branch.register_year__",
                            false
                        ],
                        null
                    ],
                    "\"2016\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "shop_membership",
        "query": "SELECT * FROM membership_register_branch WHERE Member_ID = 2;",
        "question": "Select all columns from membership register branch when member id equals 2",
        "tables": [
            "purchase",
            "membership_register_branch",
            "member",
            "branch"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "membership",
            "register",
            "branch",
            "when",
            "member",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "membership_register_branch",
            "WHERE",
            "Member_ID",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "membership_register_branch",
            "where",
            "member_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__membership_register_branch__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__membership_register_branch.member_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "shop_membership",
        "query": "SELECT Level FROM member WHERE Card_Number = 'FS10';",
        "question": "Select level from member when card number equals FS10",
        "tables": [
            "purchase",
            "membership_register_branch",
            "member",
            "branch"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "level",
            "from",
            "member",
            "when",
            "card",
            "number",
            "equals",
            "FS10"
        ],
        "query_toks": [
            "SELECT",
            "Level",
            "FROM",
            "member",
            "WHERE",
            "Card_Number",
            "=",
            "'FS10'"
        ],
        "query_toks_no_value": [
            "select",
            "level",
            "from",
            "member",
            "where",
            "card_number",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__member__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__member.level__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__member.card_number__",
                            false
                        ],
                        null
                    ],
                    "\"FS10\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "shop_membership",
        "query": "SELECT Name FROM member WHERE Level = 6;",
        "question": "Select name from member when level equals 6",
        "tables": [
            "purchase",
            "membership_register_branch",
            "member",
            "branch"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "name",
            "from",
            "member",
            "when",
            "level",
            "equals",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "member",
            "WHERE",
            "Level",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "member",
            "where",
            "level",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__member__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__member.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__member.level__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "shop_membership",
        "query": "SELECT City FROM branch WHERE Name = 'Alexandre';",
        "question": "Select city from branch when name equals Alexandre",
        "tables": [
            "purchase",
            "membership_register_branch",
            "member",
            "branch"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "city",
            "from",
            "branch",
            "when",
            "name",
            "equals",
            "Alexandre"
        ],
        "query_toks": [
            "SELECT",
            "City",
            "FROM",
            "branch",
            "WHERE",
            "Name",
            "=",
            "'Alexandre'"
        ],
        "query_toks_no_value": [
            "select",
            "city",
            "from",
            "branch",
            "where",
            "name",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__branch__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__branch.city__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__branch.name__",
                            false
                        ],
                        null
                    ],
                    "\"Alexandre\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "driving_school",
        "query": "SELECT date_of_birth FROM Staff WHERE middle_name = 'Sherwood';",
        "question": "Select date of birth from staff when middle name equals Sherwood",
        "tables": [
            "Staff",
            "Customer_Payments",
            "Addresses",
            "Customers",
            "Vehicles",
            "Lessons"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "date",
            "of",
            "birth",
            "from",
            "staff",
            "when",
            "middle",
            "name",
            "equals",
            "Sherwood"
        ],
        "query_toks": [
            "SELECT",
            "date_of_birth",
            "FROM",
            "Staff",
            "WHERE",
            "middle_name",
            "=",
            "'Sherwood'"
        ],
        "query_toks_no_value": [
            "select",
            "date_of_birth",
            "from",
            "staff",
            "where",
            "middle_name",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__staff__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__staff.date_of_birth__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__staff.middle_name__",
                            false
                        ],
                        null
                    ],
                    "\"Sherwood\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "driving_school",
        "query": "SELECT amount_payment FROM Customer_Payments WHERE customer_id = '12';",
        "question": "Select amount payment from customer payments when customer id equals 12",
        "tables": [
            "Staff",
            "Customer_Payments",
            "Addresses",
            "Customers",
            "Vehicles",
            "Lessons"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "amount",
            "payment",
            "from",
            "customer",
            "payments",
            "when",
            "customer",
            "id",
            "equals",
            "12"
        ],
        "query_toks": [
            "SELECT",
            "amount_payment",
            "FROM",
            "Customer_Payments",
            "WHERE",
            "customer_id",
            "=",
            "'12'"
        ],
        "query_toks_no_value": [
            "select",
            "amount_payment",
            "from",
            "customer_payments",
            "where",
            "customer_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_payments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_payments.amount_payment__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customer_payments.customer_id__",
                            false
                        ],
                        null
                    ],
                    "\"12\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "driving_school",
        "query": "SELECT city FROM Addresses WHERE line_1_number_building = '29085 Dejah Pine Suite 059';",
        "question": "Select city from addresses when line 1 number building equals 29085 Dejah Pine Suite 059",
        "tables": [
            "Staff",
            "Customer_Payments",
            "Addresses",
            "Customers",
            "Vehicles",
            "Lessons"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "city",
            "from",
            "addresses",
            "when",
            "line",
            "1",
            "number",
            "building",
            "equals",
            "29085",
            "Dejah",
            "Pine",
            "Suite",
            "059"
        ],
        "query_toks": [
            "SELECT",
            "city",
            "FROM",
            "Addresses",
            "WHERE",
            "line_1_number_building",
            "=",
            "'29085",
            "Dejah",
            "Pine",
            "Suite",
            "059'"
        ],
        "query_toks_no_value": [
            "select",
            "city",
            "from",
            "addresses",
            "where",
            "line_1_number_building",
            "=",
            "value",
            "dejah",
            "pine",
            "suite",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__addresses.city__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__addresses.line_1_number_building__",
                            false
                        ],
                        null
                    ],
                    "\"29085 Dejah Pine Suite 059\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "driving_school",
        "query": "SELECT state_province_county FROM Addresses WHERE address_id = 13;",
        "question": "Select state province county from addresses when address id equals 13",
        "tables": [
            "Staff",
            "Customer_Payments",
            "Addresses",
            "Customers",
            "Vehicles",
            "Lessons"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "state",
            "province",
            "county",
            "from",
            "addresses",
            "when",
            "address",
            "id",
            "equals",
            "13"
        ],
        "query_toks": [
            "SELECT",
            "state_province_county",
            "FROM",
            "Addresses",
            "WHERE",
            "address_id",
            "=",
            "13"
        ],
        "query_toks_no_value": [
            "select",
            "state_province_county",
            "from",
            "addresses",
            "where",
            "address_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__addresses.state_province_county__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__addresses.address_id__",
                            false
                        ],
                        null
                    ],
                    13.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "driving_school",
        "query": "SELECT date_became_customer FROM Customers WHERE last_name = 'Kohler';",
        "question": "Select date became customer from customers when last name equals Kohler",
        "tables": [
            "Staff",
            "Customer_Payments",
            "Addresses",
            "Customers",
            "Vehicles",
            "Lessons"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "date",
            "became",
            "customer",
            "from",
            "customers",
            "when",
            "last",
            "name",
            "equals",
            "Kohler"
        ],
        "query_toks": [
            "SELECT",
            "date_became_customer",
            "FROM",
            "Customers",
            "WHERE",
            "last_name",
            "=",
            "'Kohler'"
        ],
        "query_toks_no_value": [
            "select",
            "date_became_customer",
            "from",
            "customers",
            "where",
            "last_name",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.date_became_customer__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customers.last_name__",
                            false
                        ],
                        null
                    ],
                    "\"Kohler\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "driving_school",
        "query": "SELECT vehicle_id FROM Vehicles WHERE vehicle_details = 'Truck';",
        "question": "Select vehicle id from vehicles when vehicle details equals Truck",
        "tables": [
            "Staff",
            "Customer_Payments",
            "Addresses",
            "Customers",
            "Vehicles",
            "Lessons"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "vehicle",
            "id",
            "from",
            "vehicles",
            "when",
            "vehicle",
            "details",
            "equals",
            "Truck"
        ],
        "query_toks": [
            "SELECT",
            "vehicle_id",
            "FROM",
            "Vehicles",
            "WHERE",
            "vehicle_details",
            "=",
            "'Truck'"
        ],
        "query_toks_no_value": [
            "select",
            "vehicle_id",
            "from",
            "vehicles",
            "where",
            "vehicle_details",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__vehicles__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__vehicles.vehicle_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__vehicles.vehicle_details__",
                            false
                        ],
                        null
                    ],
                    "\"Truck\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "driving_school",
        "query": "SELECT * FROM Vehicles WHERE vehicle_id = 3;",
        "question": "Select all columns from vehicles when vehicle id equals 3",
        "tables": [
            "Staff",
            "Customer_Payments",
            "Addresses",
            "Customers",
            "Vehicles",
            "Lessons"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "vehicles",
            "when",
            "vehicle",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Vehicles",
            "WHERE",
            "vehicle_id",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "vehicles",
            "where",
            "vehicle_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__vehicles__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__vehicles.vehicle_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "driving_school",
        "query": "SELECT staff_id FROM Lessons WHERE customer_id = '11';",
        "question": "Select staff id from lessons when customer id equals 11",
        "tables": [
            "Staff",
            "Customer_Payments",
            "Addresses",
            "Customers",
            "Vehicles",
            "Lessons"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "staff",
            "id",
            "from",
            "lessons",
            "when",
            "customer",
            "id",
            "equals",
            "11"
        ],
        "query_toks": [
            "SELECT",
            "staff_id",
            "FROM",
            "Lessons",
            "WHERE",
            "customer_id",
            "=",
            "'11'"
        ],
        "query_toks_no_value": [
            "select",
            "staff_id",
            "from",
            "lessons",
            "where",
            "customer_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__lessons__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__lessons.staff_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__lessons.customer_id__",
                            false
                        ],
                        null
                    ],
                    "\"11\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT Country FROM singer WHERE Is_male = 'F';",
        "question": "Select country from singer when is male equals F",
        "tables": [
            "singer",
            "stadium",
            "singer_in_concert",
            "concert"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "country",
            "from",
            "singer",
            "when",
            "is",
            "male",
            "equals",
            "F"
        ],
        "query_toks": [
            "SELECT",
            "Countr",
            "(",
            "Countr",
            ")",
            "FROM",
            "singer",
            "WHERE",
            "Is_male",
            "=",
            "'F'"
        ],
        "query_toks_no_value": [
            "select",
            "countr",
            "(",
            "countr",
            ")",
            "from",
            "singer",
            "where",
            "is_male",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__singer__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__singer.country__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__singer.is_male__",
                            false
                        ],
                        null
                    ],
                    "\"F\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT Name FROM stadium WHERE Average = '552';",
        "question": "Select name from stadium when average equals 552",
        "tables": [
            "singer",
            "stadium",
            "singer_in_concert",
            "concert"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "name",
            "from",
            "stadium",
            "when",
            "average",
            "equals",
            "552"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "stadium",
            "WHERE",
            "Average",
            "=",
            "'552'"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "stadium",
            "where",
            "average",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__stadium__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__stadium.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__stadium.average__",
                            false
                        ],
                        null
                    ],
                    "\"552\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT * FROM stadium WHERE Lowest = 400;",
        "question": "Select all columns from stadium when lowest equals 400",
        "tables": [
            "singer",
            "stadium",
            "singer_in_concert",
            "concert"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "stadium",
            "when",
            "lowest",
            "equals",
            "400"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "stadium",
            "WHERE",
            "Lowest",
            "=",
            "400"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "stadium",
            "where",
            "lowest",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__stadium__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__stadium.lowest__",
                            false
                        ],
                        null
                    ],
                    400.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT Singer_ID FROM singer_in_concert WHERE concert_ID = '5';",
        "question": "Select singer id from singer in concert when concert id equals 5",
        "tables": [
            "singer",
            "stadium",
            "singer_in_concert",
            "concert"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "singer",
            "id",
            "from",
            "singer",
            "in",
            "concert",
            "when",
            "concert",
            "id",
            "equals",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "Singer_ID",
            "FROM",
            "singer_in_concert",
            "WHERE",
            "concert_ID",
            "=",
            "'5'"
        ],
        "query_toks_no_value": [
            "select",
            "singer_id",
            "from",
            "singer_in_concert",
            "where",
            "concert_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__singer_in_concert__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__singer_in_concert.singer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__singer_in_concert.concert_id__",
                            false
                        ],
                        null
                    ],
                    "\"5\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT concert_ID FROM singer_in_concert WHERE Singer_ID = 2;",
        "question": "Select concert id from singer in concert when singer id equals 2",
        "tables": [
            "singer",
            "stadium",
            "singer_in_concert",
            "concert"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "concert",
            "id",
            "from",
            "singer",
            "in",
            "concert",
            "when",
            "singer",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "concert_ID",
            "FROM",
            "singer_in_concert",
            "WHERE",
            "Singer_ID",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "concert_id",
            "from",
            "singer_in_concert",
            "where",
            "singer_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__singer_in_concert__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__singer_in_concert.concert_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__singer_in_concert.singer_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT Stadium_ID FROM concert WHERE Theme = 'Bleeding Love';",
        "question": "Select stadium id from concert when theme equals Bleeding Love",
        "tables": [
            "singer",
            "stadium",
            "singer_in_concert",
            "concert"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "stadium",
            "id",
            "from",
            "concert",
            "when",
            "theme",
            "equals",
            "Bleeding",
            "Love"
        ],
        "query_toks": [
            "SELECT",
            "Stadium_ID",
            "FROM",
            "concert",
            "WHERE",
            "Theme",
            "=",
            "'Bleeding",
            "Love'"
        ],
        "query_toks_no_value": [
            "select",
            "stadium_id",
            "from",
            "concert",
            "where",
            "theme",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__concert__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__concert.stadium_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__concert.theme__",
                            false
                        ],
                        null
                    ],
                    "\"Bleeding Love\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sports_competition",
        "query": "SELECT Year FROM competition WHERE Competition_ID = '3';",
        "question": "Select year from competition when competition id equals 3",
        "tables": [
            "club_rank",
            "competition",
            "club",
            "competition_result",
            "player"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "year",
            "from",
            "competition",
            "when",
            "competition",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Year",
            "FROM",
            "competition",
            "WHERE",
            "Competition_ID",
            "=",
            "'3'"
        ],
        "query_toks_no_value": [
            "select",
            "year",
            "from",
            "competition",
            "where",
            "competition_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__competition__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__competition.year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__competition.competition_id__",
                            false
                        ],
                        null
                    ],
                    "\"3\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sports_competition",
        "query": "SELECT Country FROM competition WHERE Competition_ID = 8;",
        "question": "Select country from competition when competition id equals 8",
        "tables": [
            "club_rank",
            "competition",
            "club",
            "competition_result",
            "player"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "country",
            "from",
            "competition",
            "when",
            "competition",
            "id",
            "equals",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "Countr",
            "(",
            "Countr",
            ")",
            "FROM",
            "competition",
            "WHERE",
            "Competition_ID",
            "=",
            "8"
        ],
        "query_toks_no_value": [
            "select",
            "countr",
            "(",
            "countr",
            ")",
            "from",
            "competition",
            "where",
            "competition_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__competition__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__competition.country__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__competition.competition_id__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sports_competition",
        "query": "SELECT Start_year FROM club WHERE name = 'HSBIF';",
        "question": "Select start year from club when name equals HSBIF",
        "tables": [
            "club_rank",
            "competition",
            "club",
            "competition_result",
            "player"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "start",
            "year",
            "from",
            "club",
            "when",
            "name",
            "equals",
            "HSBIF"
        ],
        "query_toks": [
            "SELECT",
            "Start_year",
            "FROM",
            "club",
            "WHERE",
            "name",
            "=",
            "'HSBIF'"
        ],
        "query_toks_no_value": [
            "select",
            "start_year",
            "from",
            "club",
            "where",
            "name",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__club__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__club.start_year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__club.name__",
                            false
                        ],
                        null
                    ],
                    "\"HSBIF\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sports_competition",
        "query": "SELECT Region FROM club WHERE Club_ID = 1;",
        "question": "Select region from club when club id equals 1",
        "tables": [
            "club_rank",
            "competition",
            "club",
            "competition_result",
            "player"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "region",
            "from",
            "club",
            "when",
            "club",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Region",
            "FROM",
            "club",
            "WHERE",
            "Club_ID",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "region",
            "from",
            "club",
            "where",
            "club_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__club__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__club.region__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__club.club_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sports_competition",
        "query": "SELECT Club_ID_1 FROM competition_result WHERE Club_ID_2 = '2';",
        "question": "Select club id 1 from competition result when club id 2 equals 2",
        "tables": [
            "club_rank",
            "competition",
            "club",
            "competition_result",
            "player"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "club",
            "id",
            "1",
            "from",
            "competition",
            "result",
            "when",
            "club",
            "id",
            "2",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Club_ID_1",
            "FROM",
            "competition_result",
            "WHERE",
            "Club_ID_2",
            "=",
            "'2'"
        ],
        "query_toks_no_value": [
            "select",
            "club_id_1",
            "from",
            "competition_result",
            "where",
            "club_id_2",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__competition_result__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__competition_result.club_id_1__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__competition_result.club_id_2__",
                            false
                        ],
                        null
                    ],
                    "\"2\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sports_competition",
        "query": "SELECT * FROM competition_result WHERE Club_ID_1 = 3;",
        "question": "Select all columns from competition result when club id 1 equals 3",
        "tables": [
            "club_rank",
            "competition",
            "club",
            "competition_result",
            "player"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "competition",
            "result",
            "when",
            "club",
            "id",
            "1",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "competition_result",
            "WHERE",
            "Club_ID_1",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "competition_result",
            "where",
            "club_id_1",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__competition_result__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__competition_result.club_id_1__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sports_competition",
        "query": "SELECT name FROM player WHERE Position = 'Prop';",
        "question": "Select name from player when position equals Prop",
        "tables": [
            "club_rank",
            "competition",
            "club",
            "competition_result",
            "player"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "name",
            "from",
            "player",
            "when",
            "position",
            "equals",
            "Prop"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "player",
            "WHERE",
            "Position",
            "=",
            "'Prop'"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "player",
            "where",
            "position",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__player__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__player.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__player.position__",
                            false
                        ],
                        null
                    ],
                    "\"Prop\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "railway",
        "query": "SELECT Manager_ID FROM railway_manage WHERE Railway_ID = '2';",
        "question": "Select manager id from railway manage when railway id equals 2",
        "tables": [
            "railway_manage",
            "train",
            "manager",
            "railway"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "manager",
            "id",
            "from",
            "railway",
            "manage",
            "when",
            "railway",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Manager_ID",
            "FROM",
            "railway_manage",
            "WHERE",
            "Railway_ID",
            "=",
            "'2'"
        ],
        "query_toks_no_value": [
            "select",
            "manager_id",
            "from",
            "railway_manage",
            "where",
            "railway_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__railway_manage__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__railway_manage.manager_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__railway_manage.railway_id__",
                            false
                        ],
                        null
                    ],
                    "\"2\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "railway",
        "query": "SELECT Manager_ID FROM railway_manage WHERE Railway_ID = 2;",
        "question": "Select manager id from railway manage when railway id equals 2",
        "tables": [
            "railway_manage",
            "train",
            "manager",
            "railway"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "manager",
            "id",
            "from",
            "railway",
            "manage",
            "when",
            "railway",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Manager_ID",
            "FROM",
            "railway_manage",
            "WHERE",
            "Railway_ID",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "manager_id",
            "from",
            "railway_manage",
            "where",
            "railway_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__railway_manage__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__railway_manage.manager_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__railway_manage.railway_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "railway",
        "query": "SELECT Train_ID FROM train WHERE Train_Num = '57135';",
        "question": "Select train id from train when train num equals 57135",
        "tables": [
            "railway_manage",
            "train",
            "manager",
            "railway"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "train",
            "id",
            "from",
            "train",
            "when",
            "train",
            "num",
            "equals",
            "57135"
        ],
        "query_toks": [
            "SELECT",
            "Train_ID",
            "FROM",
            "train",
            "WHERE",
            "Train_Num",
            "=",
            "'57135'"
        ],
        "query_toks_no_value": [
            "select",
            "train_id",
            "from",
            "train",
            "where",
            "train_num",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__train__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__train.train_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__train.train_num__",
                            false
                        ],
                        null
                    ],
                    "\"57135\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "railway",
        "query": "SELECT Railway_ID FROM train WHERE Train_Num = 57135;",
        "question": "Select railway id from train when train num equals 57135",
        "tables": [
            "railway_manage",
            "train",
            "manager",
            "railway"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "railway",
            "id",
            "from",
            "train",
            "when",
            "train",
            "num",
            "equals",
            "57135"
        ],
        "query_toks": [
            "SELECT",
            "Railway_ID",
            "FROM",
            "train",
            "WHERE",
            "Train_Num",
            "=",
            "57135"
        ],
        "query_toks_no_value": [
            "select",
            "railway_id",
            "from",
            "train",
            "where",
            "train_num",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__train__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__train.railway_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__train.train_num__",
                            false
                        ],
                        null
                    ],
                    57135.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "railway",
        "query": "SELECT Level FROM manager WHERE Age = '52';",
        "question": "Select level from manager when age equals 52",
        "tables": [
            "railway_manage",
            "train",
            "manager",
            "railway"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "level",
            "from",
            "manager",
            "when",
            "age",
            "equals",
            "52"
        ],
        "query_toks": [
            "SELECT",
            "Level",
            "FROM",
            "manager",
            "WHERE",
            "Age",
            "=",
            "'52'"
        ],
        "query_toks_no_value": [
            "select",
            "level",
            "from",
            "manager",
            "where",
            "age",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__manager__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__manager.level__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__manager.age__",
                            false
                        ],
                        null
                    ],
                    "\"52\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "railway",
        "query": "SELECT * FROM manager WHERE Working_year_starts = 1999;",
        "question": "Select all columns from manager when working year starts equals 1999",
        "tables": [
            "railway_manage",
            "train",
            "manager",
            "railway"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "manager",
            "when",
            "working",
            "year",
            "starts",
            "equals",
            "1999"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "manager",
            "WHERE",
            "Working_year_starts",
            "=",
            "1999"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "manager",
            "where",
            "working_year_starts",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__manager__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__manager.working_year_starts__",
                            false
                        ],
                        null
                    ],
                    1999.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "railway",
        "query": "SELECT ObjectNumber FROM railway WHERE Railway = 'GNRD';",
        "question": "Select objectnumber from railway when railway equals GNRD",
        "tables": [
            "railway_manage",
            "train",
            "manager",
            "railway"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "objectnumber",
            "from",
            "railway",
            "when",
            "railway",
            "equals",
            "GNRD"
        ],
        "query_toks": [
            "SELECT",
            "ObjectNumber",
            "FROM",
            "railway",
            "WHERE",
            "Railway",
            "=",
            "'GNRD'"
        ],
        "query_toks_no_value": [
            "select",
            "objectnumber",
            "from",
            "railway",
            "where",
            "railway",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__railway__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__railway.objectnumber__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__railway.railway__",
                            false
                        ],
                        null
                    ],
                    "\"GNRD\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "railway",
        "query": "SELECT Wheels FROM railway WHERE Railway_ID = 10;",
        "question": "Select wheels from railway when railway id equals 10",
        "tables": [
            "railway_manage",
            "train",
            "manager",
            "railway"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "wheels",
            "from",
            "railway",
            "when",
            "railway",
            "id",
            "equals",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "Wheels",
            "FROM",
            "railway",
            "WHERE",
            "Railway_ID",
            "=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "wheels",
            "from",
            "railway",
            "where",
            "railway_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__railway__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__railway.wheels__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__railway.railway_id__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "inn_1",
        "query": "SELECT roomName FROM Rooms WHERE basePrice = '150';",
        "question": "Select room name from rooms when base price equals 150",
        "tables": [
            "Rooms",
            "Reservations"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "room",
            "name",
            "from",
            "rooms",
            "when",
            "base",
            "price",
            "equals",
            "150"
        ],
        "query_toks": [
            "SELECT",
            "roomName",
            "FROM",
            "Rooms",
            "WHERE",
            "basePrice",
            "=",
            "'150'"
        ],
        "query_toks_no_value": [
            "select",
            "roomname",
            "from",
            "rooms",
            "where",
            "baseprice",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__rooms__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__rooms.roomname__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__rooms.baseprice__",
                            false
                        ],
                        null
                    ],
                    "\"150\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "inn_1",
        "query": "SELECT * FROM Rooms WHERE beds = 2;",
        "question": "Select all columns from rooms when beds equals 2",
        "tables": [
            "Rooms",
            "Reservations"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "rooms",
            "when",
            "beds",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Rooms",
            "WHERE",
            "beds",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "rooms",
            "where",
            "beds",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__rooms__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__rooms.beds__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "inn_1",
        "query": "SELECT Rate FROM Reservations WHERE Adults = '2';",
        "question": "Select rate from reservations when adults equals 2",
        "tables": [
            "Rooms",
            "Reservations"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "rate",
            "from",
            "reservations",
            "when",
            "adults",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Rate",
            "FROM",
            "Reservations",
            "WHERE",
            "Adults",
            "=",
            "'2'"
        ],
        "query_toks_no_value": [
            "select",
            "rate",
            "from",
            "reservations",
            "where",
            "adults",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__reservations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__reservations.rate__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__reservations.adults__",
                            false
                        ],
                        null
                    ],
                    "\"2\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "museum_visit",
        "query": "SELECT Total_spent FROM visit WHERE Museum_ID = '2';",
        "question": "Select total spent from visit when museum id equals 2",
        "tables": [
            "visit",
            "visitor",
            "museum"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "total",
            "spent",
            "from",
            "visit",
            "when",
            "museum",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Total_spent",
            "FROM",
            "visit",
            "WHERE",
            "Museum_ID",
            "=",
            "'2'"
        ],
        "query_toks_no_value": [
            "select",
            "total_spent",
            "from",
            "visit",
            "where",
            "museum_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__visit__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__visit.total_spent__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__visit.museum_id__",
                            false
                        ],
                        null
                    ],
                    "\"2\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "museum_visit",
        "query": "SELECT * FROM visit WHERE Num_of_Ticket = 3;",
        "question": "Select all columns from visit when num of ticket equals 3",
        "tables": [
            "visit",
            "visitor",
            "museum"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "visit",
            "when",
            "num",
            "of",
            "ticket",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "visit",
            "WHERE",
            "Num_of_Ticket",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "visit",
            "where",
            "num_of_ticket",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__visit__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__visit.num_of_ticket__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "museum_visit",
        "query": "SELECT Level_of_membership FROM visitor WHERE ID = '2';",
        "question": "Select level of membership from customer when customer id equals 2",
        "tables": [
            "visit",
            "visitor",
            "museum"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "level",
            "of",
            "membership",
            "from",
            "customer",
            "when",
            "customer",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Level_of_membership",
            "FROM",
            "visitor",
            "WHERE",
            "ID",
            "=",
            "'2'"
        ],
        "query_toks_no_value": [
            "select",
            "level_of_membership",
            "from",
            "visitor",
            "where",
            "id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__visitor__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__visitor.level_of_membership__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__visitor.id__",
                            false
                        ],
                        null
                    ],
                    "\"2\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "museum_visit",
        "query": "SELECT Name FROM visitor WHERE ID = 2;",
        "question": "Select name from customer when customer id equals 2",
        "tables": [
            "visit",
            "visitor",
            "museum"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "name",
            "from",
            "customer",
            "when",
            "customer",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "visitor",
            "WHERE",
            "ID",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "visitor",
            "where",
            "id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__visitor__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__visitor.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__visitor.id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "museum_visit",
        "query": "SELECT Open_Year FROM museum WHERE Museum_ID = '4';",
        "question": "Select open year from museum when museum id equals 4",
        "tables": [
            "visit",
            "visitor",
            "museum"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "open",
            "year",
            "from",
            "museum",
            "when",
            "museum",
            "id",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Open_Year",
            "FROM",
            "museum",
            "WHERE",
            "Museum_ID",
            "=",
            "'4'"
        ],
        "query_toks_no_value": [
            "select",
            "open_year",
            "from",
            "museum",
            "where",
            "museum_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__museum__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__museum.open_year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__museum.museum_id__",
                            false
                        ],
                        null
                    ],
                    "\"4\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "museum_visit",
        "query": "SELECT Open_Year FROM museum WHERE Num_of_Staff = 25;",
        "question": "Select open year from museum when num of staff equals 25",
        "tables": [
            "visit",
            "visitor",
            "museum"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "open",
            "year",
            "from",
            "museum",
            "when",
            "num",
            "of",
            "staff",
            "equals",
            "25"
        ],
        "query_toks": [
            "SELECT",
            "Open_Year",
            "FROM",
            "museum",
            "WHERE",
            "Num_of_Staff",
            "=",
            "25"
        ],
        "query_toks_no_value": [
            "select",
            "open_year",
            "from",
            "museum",
            "where",
            "num_of_staff",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__museum__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__museum.open_year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__museum.num_of_staff__",
                            false
                        ],
                        null
                    ],
                    25.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "browser_web",
        "query": "SELECT accelerator_id FROM accelerator_compatible_browser WHERE browser_id = '1';",
        "question": "Select accelerator id from accelerator compatible browser when browser id equals 1",
        "tables": [
            "browser",
            "accelerator_compatible_browser",
            "Web_client_accelerator"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "accelerator",
            "id",
            "from",
            "accelerator",
            "compatible",
            "browser",
            "when",
            "browser",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "accelerator_id",
            "FROM",
            "accelerator_compatible_browser",
            "WHERE",
            "browser_id",
            "=",
            "'1'"
        ],
        "query_toks_no_value": [
            "select",
            "accelerator_id",
            "from",
            "accelerator_compatible_browser",
            "where",
            "browser_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__accelerator_compatible_browser__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__accelerator_compatible_browser.accelerator_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__accelerator_compatible_browser.browser_id__",
                            false
                        ],
                        null
                    ],
                    "\"1\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "browser_web",
        "query": "SELECT accelerator_id FROM accelerator_compatible_browser WHERE browser_id = 3;",
        "question": "Select accelerator id from accelerator compatible browser when browser id equals 3",
        "tables": [
            "browser",
            "accelerator_compatible_browser",
            "Web_client_accelerator"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "accelerator",
            "id",
            "from",
            "accelerator",
            "compatible",
            "browser",
            "when",
            "browser",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "accelerator_id",
            "FROM",
            "accelerator_compatible_browser",
            "WHERE",
            "browser_id",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "accelerator_id",
            "from",
            "accelerator_compatible_browser",
            "where",
            "browser_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__accelerator_compatible_browser__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__accelerator_compatible_browser.accelerator_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__accelerator_compatible_browser.browser_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "browser_web",
        "query": "SELECT Client FROM Web_client_accelerator WHERE id = '5';",
        "question": "Select client from web client accelerator when id equals 5",
        "tables": [
            "browser",
            "accelerator_compatible_browser",
            "Web_client_accelerator"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "client",
            "from",
            "web",
            "client",
            "accelerator",
            "when",
            "id",
            "equals",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "Client",
            "FROM",
            "Web_client_accelerator",
            "WHERE",
            "id",
            "=",
            "'5'"
        ],
        "query_toks_no_value": [
            "select",
            "client",
            "from",
            "web_client_accelerator",
            "where",
            "id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__web_client_accelerator__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__web_client_accelerator.client__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__web_client_accelerator.id__",
                            false
                        ],
                        null
                    ],
                    "\"5\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "architecture",
        "query": "SELECT gender FROM architect WHERE name = 'Mies Van Der Rohe';",
        "question": "Select gender from architect when name equals Mies Van Der Rohe",
        "tables": [
            "architect",
            "mill",
            "bridge"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "gender",
            "from",
            "architect",
            "when",
            "name",
            "equals",
            "Mies",
            "Van",
            "Der",
            "Rohe"
        ],
        "query_toks": [
            "SELECT",
            "gender",
            "FROM",
            "architect",
            "WHERE",
            "name",
            "=",
            "'Mies",
            "Van",
            "Der",
            "Rohe'"
        ],
        "query_toks_no_value": [
            "select",
            "gender",
            "from",
            "architect",
            "where",
            "name",
            "=",
            "value",
            "van",
            "der",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__architect__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__architect.gender__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__architect.name__",
                            false
                        ],
                        null
                    ],
                    "\"Mies Van Der Rohe\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "architecture",
        "query": "SELECT type FROM mill WHERE architect_id = '2';",
        "question": "Select type from mill when architect id equals 2",
        "tables": [
            "architect",
            "mill",
            "bridge"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "type",
            "from",
            "mill",
            "when",
            "architect",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "type",
            "FROM",
            "mill",
            "WHERE",
            "architect_id",
            "=",
            "'2'"
        ],
        "query_toks_no_value": [
            "select",
            "type",
            "from",
            "mill",
            "where",
            "architect_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__mill__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__mill.type__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__mill.architect_id__",
                            false
                        ],
                        null
                    ],
                    "\"2\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "architecture",
        "query": "SELECT * FROM mill WHERE architect_id = 1;",
        "question": "Select all columns from mill when architect id equals 1",
        "tables": [
            "architect",
            "mill",
            "bridge"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "mill",
            "when",
            "architect",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "mill",
            "WHERE",
            "architect_id",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "mill",
            "where",
            "architect_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__mill__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__mill.architect_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "architecture",
        "query": "SELECT architect_id FROM bridge WHERE location = 'Bamiyan Province , Afghanistan';",
        "question": "Select architect id from bridge when location equals Bamiyan Province , Afghanistan",
        "tables": [
            "architect",
            "mill",
            "bridge"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "architect",
            "id",
            "from",
            "bridge",
            "when",
            "location",
            "equals",
            "Bamiyan",
            "Province",
            ",",
            "Afghanistan"
        ],
        "query_toks": [
            "SELECT",
            "architect_id",
            "FROM",
            "bridge",
            "WHERE",
            "location",
            "=",
            "'Bamiyan",
            "Province",
            "",
            ",",
            "Afghanistan'"
        ],
        "query_toks_no_value": [
            "select",
            "architect_id",
            "from",
            "bridge",
            "where",
            "location",
            "=",
            "value",
            "province",
            "",
            ",",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__bridge__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__bridge.architect_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__bridge.location__",
                            false
                        ],
                        null
                    ],
                    "\"Bamiyan Province , Afghanistan\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "csu_1",
        "query": "SELECT Undergraduate FROM discipline_enrollments WHERE Year = '2004';",
        "question": "Select undergraduate from discipline enrollments when year equals 2004",
        "tables": [
            "discipline_enrollments",
            "Campuses",
            "degrees",
            "csu_fees",
            "faculty",
            "enrollments"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "undergraduate",
            "from",
            "discipline",
            "enrollments",
            "when",
            "year",
            "equals",
            "2004"
        ],
        "query_toks": [
            "SELECT",
            "Undergraduate",
            "FROM",
            "discipline_enrollments",
            "WHERE",
            "Year",
            "=",
            "'2004'"
        ],
        "query_toks_no_value": [
            "select",
            "undergraduate",
            "from",
            "discipline_enrollments",
            "where",
            "year",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__discipline_enrollments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__discipline_enrollments.undergraduate__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__discipline_enrollments.year__",
                            false
                        ],
                        null
                    ],
                    "\"2004\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "csu_1",
        "query": "SELECT * FROM discipline_enrollments WHERE Year = 2004;",
        "question": "Select all columns from discipline enrollments when year equals 2004",
        "tables": [
            "discipline_enrollments",
            "Campuses",
            "degrees",
            "csu_fees",
            "faculty",
            "enrollments"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "discipline",
            "enrollments",
            "when",
            "year",
            "equals",
            "2004"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "discipline_enrollments",
            "WHERE",
            "Year",
            "=",
            "2004"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "discipline_enrollments",
            "where",
            "year",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__discipline_enrollments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__discipline_enrollments.year__",
                            false
                        ],
                        null
                    ],
                    2004.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "csu_1",
        "query": "SELECT Location FROM Campuses WHERE Year = '1947';",
        "question": "Select location from campuses when year equals 1947",
        "tables": [
            "discipline_enrollments",
            "Campuses",
            "degrees",
            "csu_fees",
            "faculty",
            "enrollments"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "location",
            "from",
            "campuses",
            "when",
            "year",
            "equals",
            "1947"
        ],
        "query_toks": [
            "SELECT",
            "Location",
            "FROM",
            "Campuses",
            "WHERE",
            "Year",
            "=",
            "'1947'"
        ],
        "query_toks_no_value": [
            "select",
            "location",
            "from",
            "campuses",
            "where",
            "year",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__campuses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__campuses.location__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__campuses.year__",
                            false
                        ],
                        null
                    ],
                    "\"1947\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "csu_1",
        "query": "SELECT Degrees FROM degrees WHERE Year = '1996';",
        "question": "Select degrees from degrees when year equals 1996",
        "tables": [
            "discipline_enrollments",
            "Campuses",
            "degrees",
            "csu_fees",
            "faculty",
            "enrollments"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "degrees",
            "from",
            "degrees",
            "when",
            "year",
            "equals",
            "1996"
        ],
        "query_toks": [
            "SELECT",
            "Degrees",
            "FROM",
            "degrees",
            "WHERE",
            "Year",
            "=",
            "'1996'"
        ],
        "query_toks_no_value": [
            "select",
            "degrees",
            "from",
            "degrees",
            "where",
            "year",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__degrees__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__degrees.degrees__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__degrees.year__",
                            false
                        ],
                        null
                    ],
                    "\"1996\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "csu_1",
        "query": "SELECT * FROM degrees WHERE Campus = 8;",
        "question": "Select all columns from degrees when campus equals 8",
        "tables": [
            "discipline_enrollments",
            "Campuses",
            "degrees",
            "csu_fees",
            "faculty",
            "enrollments"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "degrees",
            "when",
            "campus",
            "equals",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "degrees",
            "WHERE",
            "Campus",
            "=",
            "8"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "degrees",
            "where",
            "campus",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__degrees__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__degrees.campus__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "csu_1",
        "query": "SELECT CampusFee FROM csu_fees WHERE Campus = '18';",
        "question": "Select campus fee from csu fees when campus equals 18",
        "tables": [
            "discipline_enrollments",
            "Campuses",
            "degrees",
            "csu_fees",
            "faculty",
            "enrollments"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "campus",
            "fee",
            "from",
            "csu",
            "fees",
            "when",
            "campus",
            "equals",
            "18"
        ],
        "query_toks": [
            "SELECT",
            "CampusFee",
            "FROM",
            "csu_fees",
            "WHERE",
            "Campus",
            "=",
            "'18'"
        ],
        "query_toks_no_value": [
            "select",
            "campusfee",
            "from",
            "csu_fees",
            "where",
            "campus",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__csu_fees__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__csu_fees.campusfee__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__csu_fees.campus__",
                            false
                        ],
                        null
                    ],
                    "\"18\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "csu_1",
        "query": "SELECT * FROM csu_fees WHERE CampusFee = 1916;",
        "question": "Select all columns from csu fees when campus fee equals 1916",
        "tables": [
            "discipline_enrollments",
            "Campuses",
            "degrees",
            "csu_fees",
            "faculty",
            "enrollments"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "csu",
            "fees",
            "when",
            "campus",
            "fee",
            "equals",
            "1916"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "csu_fees",
            "WHERE",
            "CampusFee",
            "=",
            "1916"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "csu_fees",
            "where",
            "campusfee",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__csu_fees__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__csu_fees.campusfee__",
                            false
                        ],
                        null
                    ],
                    1916.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "csu_1",
        "query": "SELECT Faculty FROM faculty WHERE Campus = '12';",
        "question": "Select faculty from faculty when campus equals 12",
        "tables": [
            "discipline_enrollments",
            "Campuses",
            "degrees",
            "csu_fees",
            "faculty",
            "enrollments"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "faculty",
            "from",
            "faculty",
            "when",
            "campus",
            "equals",
            "12"
        ],
        "query_toks": [
            "SELECT",
            "Faculty",
            "FROM",
            "faculty",
            "WHERE",
            "Campus",
            "=",
            "'12'"
        ],
        "query_toks_no_value": [
            "select",
            "faculty",
            "from",
            "faculty",
            "where",
            "campus",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__faculty__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__faculty.faculty__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__faculty.campus__",
                            false
                        ],
                        null
                    ],
                    "\"12\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "csu_1",
        "query": "SELECT TotalEnrollment_AY FROM enrollments WHERE FTE_AY = '2882';",
        "question": "Select totalenrollment ay from enrollments when fte ay equals 2882",
        "tables": [
            "discipline_enrollments",
            "Campuses",
            "degrees",
            "csu_fees",
            "faculty",
            "enrollments"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "totalenrollment",
            "ay",
            "from",
            "enrollments",
            "when",
            "fte",
            "ay",
            "equals",
            "2882"
        ],
        "query_toks": [
            "SELECT",
            "TotalEnrollment_AY",
            "FROM",
            "enrollments",
            "WHERE",
            "FTE_AY",
            "=",
            "'2882'"
        ],
        "query_toks_no_value": [
            "select",
            "totalenrollment_ay",
            "from",
            "enrollments",
            "where",
            "fte_ay",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__enrollments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__enrollments.totalenrollment_ay__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__enrollments.fte_ay__",
                            false
                        ],
                        null
                    ],
                    "\"2882\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "csu_1",
        "query": "SELECT FTE_AY FROM enrollments WHERE Campus = 22;",
        "question": "Select fte ay from enrollments when campus equals 22",
        "tables": [
            "discipline_enrollments",
            "Campuses",
            "degrees",
            "csu_fees",
            "faculty",
            "enrollments"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "fte",
            "ay",
            "from",
            "enrollments",
            "when",
            "campus",
            "equals",
            "22"
        ],
        "query_toks": [
            "SELECT",
            "FTE_AY",
            "FROM",
            "enrollments",
            "WHERE",
            "Campus",
            "=",
            "22"
        ],
        "query_toks_no_value": [
            "select",
            "fte_ay",
            "from",
            "enrollments",
            "where",
            "campus",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__enrollments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__enrollments.fte_ay__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__enrollments.campus__",
                            false
                        ],
                        null
                    ],
                    22.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_orders",
        "query": "SELECT product_details FROM Products WHERE product_id = '14';",
        "question": "Select product details from products when product id equals 14",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Shipments",
            "Customers",
            "Shipment_Items",
            "Orders"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "product",
            "details",
            "from",
            "products",
            "when",
            "product",
            "id",
            "equals",
            "14"
        ],
        "query_toks": [
            "SELECT",
            "product_details",
            "FROM",
            "Products",
            "WHERE",
            "product_id",
            "=",
            "'14'"
        ],
        "query_toks_no_value": [
            "select",
            "product_details",
            "from",
            "products",
            "where",
            "product_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products.product_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__products.product_id__",
                            false
                        ],
                        null
                    ],
                    "\"14\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_orders",
        "query": "SELECT order_item_status FROM Order_Items WHERE order_id = '6';",
        "question": "Select order item status from order items when order id equals 6",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Shipments",
            "Customers",
            "Shipment_Items",
            "Orders"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "order",
            "item",
            "status",
            "from",
            "order",
            "items",
            "when",
            "order",
            "id",
            "equals",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "order_item_status",
            "FROM",
            "Order_Items",
            "WHERE",
            "order_id",
            "=",
            "'6'"
        ],
        "query_toks_no_value": [
            "select",
            "order_item_status",
            "from",
            "order_items",
            "where",
            "order_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__order_items__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__order_items.order_item_status__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__order_items.order_id__",
                            false
                        ],
                        null
                    ],
                    "\"6\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_orders",
        "query": "SELECT invoice_date FROM Invoices WHERE invoice_details = 'labore';",
        "question": "Select invoice date from invoices when invoice details equals labore",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Shipments",
            "Customers",
            "Shipment_Items",
            "Orders"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "invoice",
            "date",
            "from",
            "invoices",
            "when",
            "invoice",
            "details",
            "equals",
            "labore"
        ],
        "query_toks": [
            "SELECT",
            "invoice_date",
            "FROM",
            "Invoices",
            "WHERE",
            "invoice_details",
            "=",
            "'labore'"
        ],
        "query_toks_no_value": [
            "select",
            "invoice_date",
            "from",
            "invoices",
            "where",
            "invoice_details",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__invoices__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__invoices.invoice_date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__invoices.invoice_details__",
                            false
                        ],
                        null
                    ],
                    "\"labore\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_orders",
        "query": "SELECT shipment_tracking_number FROM Shipments WHERE shipment_id = '3';",
        "question": "Select shipment tracking number from shipments when shipment id equals 3",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Shipments",
            "Customers",
            "Shipment_Items",
            "Orders"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "shipment",
            "tracking",
            "number",
            "from",
            "shipments",
            "when",
            "shipment",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "shipment_tracking_number",
            "FROM",
            "Shipments",
            "WHERE",
            "shipment_id",
            "=",
            "'3'"
        ],
        "query_toks_no_value": [
            "select",
            "shipment_tracking_number",
            "from",
            "shipments",
            "where",
            "shipment_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__shipments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__shipments.shipment_tracking_number__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__shipments.shipment_id__",
                            false
                        ],
                        null
                    ],
                    "\"3\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_orders",
        "query": "SELECT * FROM Shipments WHERE shipment_id = 7;",
        "question": "Select all columns from shipments when shipment id equals 7",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Shipments",
            "Customers",
            "Shipment_Items",
            "Orders"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "shipments",
            "when",
            "shipment",
            "id",
            "equals",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Shipments",
            "WHERE",
            "shipment_id",
            "=",
            "7"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "shipments",
            "where",
            "shipment_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__shipments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__shipments.shipment_id__",
                            false
                        ],
                        null
                    ],
                    7.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_orders",
        "query": "SELECT customer_details FROM Customers WHERE customer_name = 'Parker';",
        "question": "Select customer details from customers when customer name equals Parker",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Shipments",
            "Customers",
            "Shipment_Items",
            "Orders"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "customer",
            "details",
            "from",
            "customers",
            "when",
            "customer",
            "name",
            "equals",
            "Parker"
        ],
        "query_toks": [
            "SELECT",
            "customer_details",
            "FROM",
            "Customers",
            "WHERE",
            "customer_name",
            "=",
            "'Parker'"
        ],
        "query_toks_no_value": [
            "select",
            "customer_details",
            "from",
            "customers",
            "where",
            "customer_name",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customers.customer_name__",
                            false
                        ],
                        null
                    ],
                    "\"Parker\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_orders",
        "query": "SELECT * FROM Customers WHERE customer_id = 10;",
        "question": "Select all columns from customers when customer id equals 10",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Shipments",
            "Customers",
            "Shipment_Items",
            "Orders"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "customers",
            "when",
            "customer",
            "id",
            "equals",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Customers",
            "WHERE",
            "customer_id",
            "=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "customers",
            "where",
            "customer_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customers.customer_id__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_orders",
        "query": "SELECT shipment_id FROM Shipment_Items WHERE order_item_id = '2';",
        "question": "Select shipment id from shipment items when order item id equals 2",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Shipments",
            "Customers",
            "Shipment_Items",
            "Orders"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "shipment",
            "id",
            "from",
            "shipment",
            "items",
            "when",
            "order",
            "item",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "shipment_id",
            "FROM",
            "Shipment_Items",
            "WHERE",
            "order_item_id",
            "=",
            "'2'"
        ],
        "query_toks_no_value": [
            "select",
            "shipment_id",
            "from",
            "shipment_items",
            "where",
            "order_item_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__shipment_items__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__shipment_items.shipment_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__shipment_items.order_item_id__",
                            false
                        ],
                        null
                    ],
                    "\"2\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_orders",
        "query": "SELECT * FROM Shipment_Items WHERE shipment_id = 11;",
        "question": "Select all columns from shipment items when shipment id equals 11",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Shipments",
            "Customers",
            "Shipment_Items",
            "Orders"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "shipment",
            "items",
            "when",
            "shipment",
            "id",
            "equals",
            "11"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Shipment_Items",
            "WHERE",
            "shipment_id",
            "=",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "shipment_items",
            "where",
            "shipment_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__shipment_items__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__shipment_items.shipment_id__",
                            false
                        ],
                        null
                    ],
                    11.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_policies",
        "query": "SELECT Customer_Policy_ID FROM Settlements WHERE Claim_ID = 957;",
        "question": "Select customer policy id from settlements when claim id equals 957",
        "tables": [
            "Settlements",
            "Claims",
            "Customer_Policies",
            "Customers",
            "Payments"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "customer",
            "policy",
            "id",
            "from",
            "settlements",
            "when",
            "claim",
            "id",
            "equals",
            "957"
        ],
        "query_toks": [
            "SELECT",
            "Customer_Policy_ID",
            "FROM",
            "Settlements",
            "WHERE",
            "Claim_ID",
            "=",
            "957"
        ],
        "query_toks_no_value": [
            "select",
            "customer_policy_id",
            "from",
            "settlements",
            "where",
            "claim_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__settlements__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__settlements.customer_policy_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__settlements.claim_id__",
                            false
                        ],
                        null
                    ],
                    957.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_policies",
        "query": "SELECT Date_Claim_Settled FROM Claims WHERE Claim_ID = '486';",
        "question": "Select date claim settled from claims when claim id equals 486",
        "tables": [
            "Settlements",
            "Claims",
            "Customer_Policies",
            "Customers",
            "Payments"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "date",
            "claim",
            "settled",
            "from",
            "claims",
            "when",
            "claim",
            "id",
            "equals",
            "486"
        ],
        "query_toks": [
            "SELECT",
            "Date_Claim_Settled",
            "FROM",
            "Claims",
            "WHERE",
            "Claim_ID",
            "=",
            "'486'"
        ],
        "query_toks_no_value": [
            "select",
            "date_claim_settled",
            "from",
            "claims",
            "where",
            "claim_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__claims__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__claims.date_claim_settled__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__claims.claim_id__",
                            false
                        ],
                        null
                    ],
                    "\"486\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_policies",
        "query": "SELECT Date_Claim_Settled FROM Claims WHERE Amount_Settled = 1724;",
        "question": "Select date claim settled from claims when amount settled equals 1724",
        "tables": [
            "Settlements",
            "Claims",
            "Customer_Policies",
            "Customers",
            "Payments"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "date",
            "claim",
            "settled",
            "from",
            "claims",
            "when",
            "amount",
            "settled",
            "equals",
            "1724"
        ],
        "query_toks": [
            "SELECT",
            "Date_Claim_Settled",
            "FROM",
            "Claims",
            "WHERE",
            "Amount_Settled",
            "=",
            "1724"
        ],
        "query_toks_no_value": [
            "select",
            "date_claim_settled",
            "from",
            "claims",
            "where",
            "amount_settled",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__claims__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__claims.date_claim_settled__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__claims.amount_settled__",
                            false
                        ],
                        null
                    ],
                    1724.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_policies",
        "query": "SELECT Policy_ID FROM Customer_Policies WHERE Customer_ID = '4';",
        "question": "Select policy id from customer policies when customer id equals 4",
        "tables": [
            "Settlements",
            "Claims",
            "Customer_Policies",
            "Customers",
            "Payments"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "policy",
            "id",
            "from",
            "customer",
            "policies",
            "when",
            "customer",
            "id",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Policy_ID",
            "FROM",
            "Customer_Policies",
            "WHERE",
            "Customer_ID",
            "=",
            "'4'"
        ],
        "query_toks_no_value": [
            "select",
            "policy_id",
            "from",
            "customer_policies",
            "where",
            "customer_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_policies__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_policies.policy_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customer_policies.customer_id__",
                            false
                        ],
                        null
                    ],
                    "\"4\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_policies",
        "query": "SELECT Customer_ID FROM Customers WHERE Customer_Details = 'Miss Felicita Reichel';",
        "question": "Select customer id from customers when customer details equals Miss Felicita Reichel",
        "tables": [
            "Settlements",
            "Claims",
            "Customer_Policies",
            "Customers",
            "Payments"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "customer",
            "id",
            "from",
            "customers",
            "when",
            "customer",
            "details",
            "equals",
            "Miss",
            "Felicita",
            "Reichel"
        ],
        "query_toks": [
            "SELECT",
            "Customer_ID",
            "FROM",
            "Customers",
            "WHERE",
            "Customer_Details",
            "=",
            "'Miss",
            "Felicita",
            "Reichel'"
        ],
        "query_toks_no_value": [
            "select",
            "customer_id",
            "from",
            "customers",
            "where",
            "customer_details",
            "=",
            "value",
            "felicita",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customers.customer_details__",
                            false
                        ],
                        null
                    ],
                    "\"Miss Felicita Reichel\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_policies",
        "query": "SELECT Customer_Details FROM Customers WHERE Customer_ID = 8;",
        "question": "Select customer details from customers when customer id equals 8",
        "tables": [
            "Settlements",
            "Claims",
            "Customer_Policies",
            "Customers",
            "Payments"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "customer",
            "details",
            "from",
            "customers",
            "when",
            "customer",
            "id",
            "equals",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "Customer_Details",
            "FROM",
            "Customers",
            "WHERE",
            "Customer_ID",
            "=",
            "8"
        ],
        "query_toks_no_value": [
            "select",
            "customer_details",
            "from",
            "customers",
            "where",
            "customer_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customers.customer_id__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_policies",
        "query": "SELECT Payment_ID FROM Payments WHERE Settlement_ID = 512;",
        "question": "Select payment id from payments when settlement id equals 512",
        "tables": [
            "Settlements",
            "Claims",
            "Customer_Policies",
            "Customers",
            "Payments"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "payment",
            "id",
            "from",
            "payments",
            "when",
            "settlement",
            "id",
            "equals",
            "512"
        ],
        "query_toks": [
            "SELECT",
            "Payment_ID",
            "FROM",
            "Payments",
            "WHERE",
            "Settlement_ID",
            "=",
            "512"
        ],
        "query_toks_no_value": [
            "select",
            "payment_id",
            "from",
            "payments",
            "where",
            "settlement_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__payments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__payments.payment_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__payments.settlement_id__",
                            false
                        ],
                        null
                    ],
                    512.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "gas_company",
        "query": "SELECT Location FROM gas_station WHERE Vice_Manager_Name = 'Russell Brown';",
        "question": "Select location from gas station when vice manager name equals Russell Brown",
        "tables": [
            "gas_station",
            "company",
            "station_company"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "location",
            "from",
            "gas",
            "station",
            "when",
            "vice",
            "manager",
            "name",
            "equals",
            "Russell",
            "Brown"
        ],
        "query_toks": [
            "SELECT",
            "Location",
            "FROM",
            "gas_station",
            "WHERE",
            "Vice_Manager_Name",
            "=",
            "'Russell",
            "Brown'"
        ],
        "query_toks_no_value": [
            "select",
            "location",
            "from",
            "gas_station",
            "where",
            "vice_manager_name",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__gas_station__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__gas_station.location__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__gas_station.vice_manager_name__",
                            false
                        ],
                        null
                    ],
                    "\"Russell Brown\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "gas_company",
        "query": "SELECT Station_ID FROM station_company WHERE Rank_of_the_Year = '13';",
        "question": "Select station id from station company when rank of the year equals 13",
        "tables": [
            "gas_station",
            "company",
            "station_company"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "station",
            "id",
            "from",
            "station",
            "company",
            "when",
            "rank",
            "of",
            "the",
            "year",
            "equals",
            "13"
        ],
        "query_toks": [
            "SELECT",
            "Station_ID",
            "FROM",
            "station_company",
            "WHERE",
            "Rank_of_the_Year",
            "=",
            "'13'"
        ],
        "query_toks_no_value": [
            "select",
            "station_id",
            "from",
            "station_company",
            "where",
            "rank_of_the_year",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__station_company__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__station_company.station_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__station_company.rank_of_the_year__",
                            false
                        ],
                        null
                    ],
                    "\"13\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "gas_company",
        "query": "SELECT * FROM station_company WHERE Rank_of_the_Year = 1;",
        "question": "Select all columns from station company when rank of the year equals 1",
        "tables": [
            "gas_station",
            "company",
            "station_company"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "station",
            "company",
            "when",
            "rank",
            "of",
            "the",
            "year",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "station_company",
            "WHERE",
            "Rank_of_the_Year",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "station_company",
            "where",
            "rank_of_the_year",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__station_company__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__station_company.rank_of_the_year__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_government",
        "query": "SELECT country FROM Addresses WHERE zip_postcode = '215';",
        "question": "Select country from addresses when zip postcode equals 215",
        "tables": [
            "Individuals",
            "Organization_Contact_Individuals",
            "Addresses",
            "Organizations",
            "Services",
            "Party_Forms",
            "Party_Addresses",
            "Party_Services",
            "Parties",
            "Forms"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "country",
            "from",
            "addresses",
            "when",
            "zip",
            "postcode",
            "equals",
            "215"
        ],
        "query_toks": [
            "SELECT",
            "countr",
            "(",
            "countr",
            ")",
            "FROM",
            "Addresses",
            "WHERE",
            "zip_postcode",
            "=",
            "'215'"
        ],
        "query_toks_no_value": [
            "select",
            "countr",
            "(",
            "countr",
            ")",
            "from",
            "addresses",
            "where",
            "zip_postcode",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__addresses.country__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__addresses.zip_postcode__",
                            false
                        ],
                        null
                    ],
                    "\"215\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_government",
        "query": "SELECT * FROM Addresses WHERE address_id = 10;",
        "question": "Select all columns from addresses when address id equals 10",
        "tables": [
            "Individuals",
            "Organization_Contact_Individuals",
            "Addresses",
            "Organizations",
            "Services",
            "Party_Forms",
            "Party_Addresses",
            "Party_Services",
            "Parties",
            "Forms"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "addresses",
            "when",
            "address",
            "id",
            "equals",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Addresses",
            "WHERE",
            "address_id",
            "=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "addresses",
            "where",
            "address_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__addresses.address_id__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_government",
        "query": "SELECT date_formed FROM Organizations WHERE organization_id = '1';",
        "question": "Select date formed from organizations when organization id equals 1",
        "tables": [
            "Individuals",
            "Organization_Contact_Individuals",
            "Addresses",
            "Organizations",
            "Services",
            "Party_Forms",
            "Party_Addresses",
            "Party_Services",
            "Parties",
            "Forms"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "date",
            "formed",
            "from",
            "organizations",
            "when",
            "organization",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "date_formed",
            "FROM",
            "Organizations",
            "WHERE",
            "organization_id",
            "=",
            "'1'"
        ],
        "query_toks_no_value": [
            "select",
            "date_formed",
            "from",
            "organizations",
            "where",
            "organization_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__organizations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__organizations.date_formed__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__organizations.organization_id__",
                            false
                        ],
                        null
                    ],
                    "\"1\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_government",
        "query": "SELECT date_formed FROM Organizations WHERE organization_id = 5;",
        "question": "Select date formed from organizations when organization id equals 5",
        "tables": [
            "Individuals",
            "Organization_Contact_Individuals",
            "Addresses",
            "Organizations",
            "Services",
            "Party_Forms",
            "Party_Addresses",
            "Party_Services",
            "Parties",
            "Forms"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "date",
            "formed",
            "from",
            "organizations",
            "when",
            "organization",
            "id",
            "equals",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "date_formed",
            "FROM",
            "Organizations",
            "WHERE",
            "organization_id",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "date_formed",
            "from",
            "organizations",
            "where",
            "organization_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__organizations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__organizations.date_formed__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__organizations.organization_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_government",
        "query": "SELECT service_id FROM Services WHERE service_type_code = 'Health';",
        "question": "Select service id from services when service type code equals Health",
        "tables": [
            "Individuals",
            "Organization_Contact_Individuals",
            "Addresses",
            "Organizations",
            "Services",
            "Party_Forms",
            "Party_Addresses",
            "Party_Services",
            "Parties",
            "Forms"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "service",
            "id",
            "from",
            "services",
            "when",
            "service",
            "type",
            "code",
            "equals",
            "Health"
        ],
        "query_toks": [
            "SELECT",
            "service_id",
            "FROM",
            "Services",
            "WHERE",
            "service_type_code",
            "=",
            "'Health'"
        ],
        "query_toks_no_value": [
            "select",
            "service_id",
            "from",
            "services",
            "where",
            "service_type_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__services__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__services.service_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__services.service_type_code__",
                            false
                        ],
                        null
                    ],
                    "\"Health\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_government",
        "query": "SELECT date_fully_completed FROM Party_Forms WHERE form_status_code = 'Partially Completed';",
        "question": "Select date fully completed from party forms when form status code equals Partially Completed",
        "tables": [
            "Individuals",
            "Organization_Contact_Individuals",
            "Addresses",
            "Organizations",
            "Services",
            "Party_Forms",
            "Party_Addresses",
            "Party_Services",
            "Parties",
            "Forms"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "date",
            "fully",
            "completed",
            "from",
            "party",
            "forms",
            "when",
            "form",
            "status",
            "code",
            "equals",
            "Partially",
            "Completed"
        ],
        "query_toks": [
            "SELECT",
            "date_fully_completed",
            "FROM",
            "Party_Forms",
            "WHERE",
            "form_status_code",
            "=",
            "'Partially",
            "Completed'"
        ],
        "query_toks_no_value": [
            "select",
            "date_fully_completed",
            "from",
            "party_forms",
            "where",
            "form_status_code",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__party_forms__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__party_forms.date_fully_completed__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__party_forms.form_status_code__",
                            false
                        ],
                        null
                    ],
                    "\"Partially Completed\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_government",
        "query": "SELECT * FROM Party_Forms WHERE party_id = 8;",
        "question": "Select all columns from party forms when party id equals 8",
        "tables": [
            "Individuals",
            "Organization_Contact_Individuals",
            "Addresses",
            "Organizations",
            "Services",
            "Party_Forms",
            "Party_Addresses",
            "Party_Services",
            "Parties",
            "Forms"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "party",
            "forms",
            "when",
            "party",
            "id",
            "equals",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Party_Forms",
            "WHERE",
            "party_id",
            "=",
            "8"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "party_forms",
            "where",
            "party_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__party_forms__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__party_forms.party_id__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_government",
        "query": "SELECT booking_made_date FROM Party_Services WHERE booking_id = '7';",
        "question": "Select booking made date from party services when booking id equals 7",
        "tables": [
            "Individuals",
            "Organization_Contact_Individuals",
            "Addresses",
            "Organizations",
            "Services",
            "Party_Forms",
            "Party_Addresses",
            "Party_Services",
            "Parties",
            "Forms"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "booking",
            "made",
            "date",
            "from",
            "party",
            "services",
            "when",
            "booking",
            "id",
            "equals",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "booking_made_date",
            "FROM",
            "Party_Services",
            "WHERE",
            "booking_id",
            "=",
            "'7'"
        ],
        "query_toks_no_value": [
            "select",
            "booking_made_date",
            "from",
            "party_services",
            "where",
            "booking_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__party_services__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__party_services.booking_made_date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__party_services.booking_id__",
                            false
                        ],
                        null
                    ],
                    "\"7\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_government",
        "query": "SELECT * FROM Party_Services WHERE service_id = 3;",
        "question": "Select all columns from party services when service id equals 3",
        "tables": [
            "Individuals",
            "Organization_Contact_Individuals",
            "Addresses",
            "Organizations",
            "Services",
            "Party_Forms",
            "Party_Addresses",
            "Party_Services",
            "Parties",
            "Forms"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "party",
            "services",
            "when",
            "service",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Party_Services",
            "WHERE",
            "service_id",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "party_services",
            "where",
            "service_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__party_services__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__party_services.service_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_government",
        "query": "SELECT party_id FROM Parties WHERE party_phone = '04177934231';",
        "question": "Select party id from parties when party phone equals 04177934231",
        "tables": [
            "Individuals",
            "Organization_Contact_Individuals",
            "Addresses",
            "Organizations",
            "Services",
            "Party_Forms",
            "Party_Addresses",
            "Party_Services",
            "Parties",
            "Forms"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "party",
            "id",
            "from",
            "parties",
            "when",
            "party",
            "phone",
            "equals",
            "04177934231"
        ],
        "query_toks": [
            "SELECT",
            "party_id",
            "FROM",
            "Parties",
            "WHERE",
            "party_phone",
            "=",
            "'04177934231'"
        ],
        "query_toks_no_value": [
            "select",
            "party_id",
            "from",
            "parties",
            "where",
            "party_phone",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__parties__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__parties.party_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__parties.party_phone__",
                            false
                        ],
                        null
                    ],
                    "\"04177934231\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_government",
        "query": "SELECT form_type_code FROM Forms WHERE form_name = 'Account Application';",
        "question": "Select form type code from forms when form name equals Account Application",
        "tables": [
            "Individuals",
            "Organization_Contact_Individuals",
            "Addresses",
            "Organizations",
            "Services",
            "Party_Forms",
            "Party_Addresses",
            "Party_Services",
            "Parties",
            "Forms"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "form",
            "type",
            "code",
            "from",
            "forms",
            "when",
            "form",
            "name",
            "equals",
            "Account",
            "Application"
        ],
        "query_toks": [
            "SELECT",
            "form_type_code",
            "FROM",
            "Forms",
            "WHERE",
            "form_name",
            "=",
            "'Account",
            "Application'"
        ],
        "query_toks_no_value": [
            "select",
            "form_type_code",
            "from",
            "forms",
            "where",
            "form_name",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__forms__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__forms.form_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__forms.form_name__",
                            false
                        ],
                        null
                    ],
                    "\"Account Application\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_government",
        "query": "SELECT * FROM Forms WHERE form_id = 2;",
        "question": "Select all columns from forms when form id equals 2",
        "tables": [
            "Individuals",
            "Organization_Contact_Individuals",
            "Addresses",
            "Organizations",
            "Services",
            "Party_Forms",
            "Party_Addresses",
            "Party_Services",
            "Parties",
            "Forms"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "forms",
            "when",
            "form",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Forms",
            "WHERE",
            "form_id",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "forms",
            "where",
            "form_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__forms__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__forms.form_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "school_bus",
        "query": "SELECT If_full_time FROM school_bus WHERE Years_Working = '3';",
        "question": "Select if full time from school bus when years working equals 3",
        "tables": [
            "school_bus",
            "school",
            "driver"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "if",
            "full",
            "time",
            "from",
            "school",
            "bus",
            "when",
            "years",
            "working",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "If_full_time",
            "FROM",
            "school_bus",
            "WHERE",
            "Years_Working",
            "=",
            "'3'"
        ],
        "query_toks_no_value": [
            "select",
            "if_full_time",
            "from",
            "school_bus",
            "where",
            "years_working",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__school_bus__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__school_bus.if_full_time__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__school_bus.years_working__",
                            false
                        ],
                        null
                    ],
                    "\"3\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "school_bus",
        "query": "SELECT Years_Working FROM school_bus WHERE School_ID = 5;",
        "question": "Select years working from school bus when school id equals 5",
        "tables": [
            "school_bus",
            "school",
            "driver"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "years",
            "working",
            "from",
            "school",
            "bus",
            "when",
            "school",
            "id",
            "equals",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "Years_Working",
            "FROM",
            "school_bus",
            "WHERE",
            "School_ID",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "years_working",
            "from",
            "school_bus",
            "where",
            "school_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__school_bus__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__school_bus.years_working__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__school_bus.school_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "school_bus",
        "query": "SELECT Grade FROM school WHERE Type = 'Private Catholic';",
        "question": "Select grade from school when type equals Private Catholic",
        "tables": [
            "school_bus",
            "school",
            "driver"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "grade",
            "from",
            "school",
            "when",
            "type",
            "equals",
            "Private",
            "Catholic"
        ],
        "query_toks": [
            "SELECT",
            "Grade",
            "FROM",
            "school",
            "WHERE",
            "Type",
            "=",
            "'Private",
            "Catholic'"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "school",
            "where",
            "type",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__school__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__school.grade__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__school.type__",
                            false
                        ],
                        null
                    ],
                    "\"Private Catholic\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "school_bus",
        "query": "SELECT Name FROM driver WHERE Home_city = 'Hartford';",
        "question": "Select name from driver when home city equals Hartford",
        "tables": [
            "school_bus",
            "school",
            "driver"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "name",
            "from",
            "driver",
            "when",
            "home",
            "city",
            "equals",
            "Hartford"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "driver",
            "WHERE",
            "Home_city",
            "=",
            "'Hartford'"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "driver",
            "where",
            "home_city",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__driver__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__driver.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__driver.home_city__",
                            false
                        ],
                        null
                    ],
                    "\"Hartford\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "machine_repair",
        "query": "SELECT Starting_Year FROM technician WHERE Name = 'Joe Cochrane';",
        "question": "Select starting year from technician when name equals Joe Cochrane",
        "tables": [
            "technician",
            "repair",
            "machine",
            "repair_assignment"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "starting",
            "year",
            "from",
            "technician",
            "when",
            "name",
            "equals",
            "Joe",
            "Cochrane"
        ],
        "query_toks": [
            "SELECT",
            "Starting_Year",
            "FROM",
            "technician",
            "WHERE",
            "Name",
            "=",
            "'Joe",
            "Cochrane'"
        ],
        "query_toks_no_value": [
            "select",
            "starting_year",
            "from",
            "technician",
            "where",
            "name",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__technician__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__technician.starting_year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__technician.name__",
                            false
                        ],
                        null
                    ],
                    "\"Joe Cochrane\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "machine_repair",
        "query": "SELECT Launch_Date FROM repair WHERE repair_ID = '9';",
        "question": "Select launch date from repair when repair id equals 9",
        "tables": [
            "technician",
            "repair",
            "machine",
            "repair_assignment"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "launch",
            "date",
            "from",
            "repair",
            "when",
            "repair",
            "id",
            "equals",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "Launch_Date",
            "FROM",
            "repair",
            "WHERE",
            "repair_ID",
            "=",
            "'9'"
        ],
        "query_toks_no_value": [
            "select",
            "launch_date",
            "from",
            "repair",
            "where",
            "repair_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__repair__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__repair.launch_date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__repair.repair_id__",
                            false
                        ],
                        null
                    ],
                    "\"9\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "machine_repair",
        "query": "SELECT Machine_ID FROM machine WHERE Machine_series = 'RS125';",
        "question": "Select machine id from machine when machine series equals RS125",
        "tables": [
            "technician",
            "repair",
            "machine",
            "repair_assignment"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "machine",
            "id",
            "from",
            "machine",
            "when",
            "machine",
            "series",
            "equals",
            "RS125"
        ],
        "query_toks": [
            "SELECT",
            "Machine_ID",
            "FROM",
            "machine",
            "WHERE",
            "Machine_series",
            "=",
            "'RS125'"
        ],
        "query_toks_no_value": [
            "select",
            "machine_id",
            "from",
            "machine",
            "where",
            "machine_series",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__machine__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__machine.machine_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__machine.machine_series__",
                            false
                        ],
                        null
                    ],
                    "\"RS125\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "machine_repair",
        "query": "SELECT Machine_ID FROM repair_assignment WHERE technician_id = '3';",
        "question": "Select machine id from repair assignment when technician id equals 3",
        "tables": [
            "technician",
            "repair",
            "machine",
            "repair_assignment"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "machine",
            "id",
            "from",
            "repair",
            "assignment",
            "when",
            "technician",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Machine_ID",
            "FROM",
            "repair_assignment",
            "WHERE",
            "technician_id",
            "=",
            "'3'"
        ],
        "query_toks_no_value": [
            "select",
            "machine_id",
            "from",
            "repair_assignment",
            "where",
            "technician_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__repair_assignment__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__repair_assignment.machine_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__repair_assignment.technician_id__",
                            false
                        ],
                        null
                    ],
                    "\"3\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "machine_repair",
        "query": "SELECT * FROM repair_assignment WHERE repair_ID = 4;",
        "question": "Select all columns from repair assignment when repair id equals 4",
        "tables": [
            "technician",
            "repair",
            "machine",
            "repair_assignment"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "repair",
            "assignment",
            "when",
            "repair",
            "id",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "repair_assignment",
            "WHERE",
            "repair_ID",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "repair_assignment",
            "where",
            "repair_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__repair_assignment__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__repair_assignment.repair_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "theme_gallery",
        "query": "SELECT Name FROM artist WHERE Year_Join = '1994';",
        "question": "Select name from artist when year join equals 1994",
        "tables": [
            "artist",
            "exhibition_record",
            "exhibition"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "name",
            "from",
            "artist",
            "when",
            "year",
            "join",
            "equals",
            "1994"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "artist",
            "WHERE",
            "Year_Join",
            "=",
            "'1994'"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "artist",
            "where",
            "year_join",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__artist__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__artist.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__artist.year_join__",
                            false
                        ],
                        null
                    ],
                    "\"1994\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "theme_gallery",
        "query": "SELECT Country FROM artist WHERE Artist_ID = 3;",
        "question": "Select country from artist when artist id equals 3",
        "tables": [
            "artist",
            "exhibition_record",
            "exhibition"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "country",
            "from",
            "artist",
            "when",
            "artist",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Countr",
            "(",
            "Countr",
            ")",
            "FROM",
            "artist",
            "WHERE",
            "Artist_ID",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "countr",
            "(",
            "countr",
            ")",
            "from",
            "artist",
            "where",
            "artist_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__artist__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__artist.country__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__artist.artist_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "theme_gallery",
        "query": "SELECT Exhibition_ID FROM exhibition_record WHERE Date = 'December 7';",
        "question": "Select exhibition id from exhibition record when date equals December 7",
        "tables": [
            "artist",
            "exhibition_record",
            "exhibition"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "exhibition",
            "id",
            "from",
            "exhibition",
            "record",
            "when",
            "date",
            "equals",
            "December",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "Exhibition_ID",
            "FROM",
            "exhibition_record",
            "WHERE",
            "Date",
            "=",
            "'December",
            "7'"
        ],
        "query_toks_no_value": [
            "select",
            "exhibition_id",
            "from",
            "exhibition_record",
            "where",
            "date",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__exhibition_record__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__exhibition_record.exhibition_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__exhibition_record.date__",
                            false
                        ],
                        null
                    ],
                    "\"December 7\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "theme_gallery",
        "query": "SELECT Artist_ID FROM exhibition WHERE Theme = 'Spring';",
        "question": "Select artist id from exhibition when theme equals Spring",
        "tables": [
            "artist",
            "exhibition_record",
            "exhibition"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "artist",
            "id",
            "from",
            "exhibition",
            "when",
            "theme",
            "equals",
            "Spring"
        ],
        "query_toks": [
            "SELECT",
            "Artist_ID",
            "FROM",
            "exhibition",
            "WHERE",
            "Theme",
            "=",
            "'Spring'"
        ],
        "query_toks_no_value": [
            "select",
            "artist_id",
            "from",
            "exhibition",
            "where",
            "theme",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__exhibition__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__exhibition.artist_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__exhibition.theme__",
                            false
                        ],
                        null
                    ],
                    "\"Spring\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "theme_gallery",
        "query": "SELECT * FROM exhibition WHERE Year = 2005;",
        "question": "Select all columns from exhibition when year equals 2005",
        "tables": [
            "artist",
            "exhibition_record",
            "exhibition"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "exhibition",
            "when",
            "year",
            "equals",
            "2005"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "exhibition",
            "WHERE",
            "Year",
            "=",
            "2005"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "exhibition",
            "where",
            "year",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__exhibition__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__exhibition.year__",
                            false
                        ],
                        null
                    ],
                    2005.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "film_rank",
        "query": "SELECT Title FROM film WHERE Film_ID = '5';",
        "question": "Select title from film when film id equals 5",
        "tables": [
            "film",
            "market",
            "film_market_estimation"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "title",
            "from",
            "film",
            "when",
            "film",
            "id",
            "equals",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "Title",
            "FROM",
            "film",
            "WHERE",
            "Film_ID",
            "=",
            "'5'"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "film",
            "where",
            "film_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__film__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__film.title__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__film.film_id__",
                            false
                        ],
                        null
                    ],
                    "\"5\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "film_rank",
        "query": "SELECT * FROM film WHERE Film_ID = 10;",
        "question": "Select all columns from film when film id equals 10",
        "tables": [
            "film",
            "market",
            "film_market_estimation"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "film",
            "when",
            "film",
            "id",
            "equals",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "film",
            "WHERE",
            "Film_ID",
            "=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "film",
            "where",
            "film_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__film__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__film.film_id__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "film_rank",
        "query": "SELECT Country FROM market WHERE Number_cities = '453';",
        "question": "Select country from market when number cities equals 453",
        "tables": [
            "film",
            "market",
            "film_market_estimation"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "country",
            "from",
            "market",
            "when",
            "number",
            "cities",
            "equals",
            "453"
        ],
        "query_toks": [
            "SELECT",
            "Countr",
            "(",
            "Countr",
            ")",
            "FROM",
            "market",
            "WHERE",
            "Number_cities",
            "=",
            "'453'"
        ],
        "query_toks_no_value": [
            "select",
            "countr",
            "(",
            "countr",
            ")",
            "from",
            "market",
            "where",
            "number_cities",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__market__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__market.country__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__market.number_cities__",
                            false
                        ],
                        null
                    ],
                    "\"453\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "film_rank",
        "query": "SELECT Type FROM film_market_estimation WHERE Market_ID = '1';",
        "question": "Select type from film market estimation when market id equals 1",
        "tables": [
            "film",
            "market",
            "film_market_estimation"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "type",
            "from",
            "film",
            "market",
            "estimation",
            "when",
            "market",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Type",
            "FROM",
            "film_market_estimation",
            "WHERE",
            "Market_ID",
            "=",
            "'1'"
        ],
        "query_toks_no_value": [
            "select",
            "type",
            "from",
            "film_market_estimation",
            "where",
            "market_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__film_market_estimation__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__film_market_estimation.type__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__film_market_estimation.market_id__",
                            false
                        ],
                        null
                    ],
                    "\"1\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "film_rank",
        "query": "SELECT * FROM film_market_estimation WHERE Market_ID = 1;",
        "question": "Select all columns from film market estimation when market id equals 1",
        "tables": [
            "film",
            "market",
            "film_market_estimation"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "film",
            "market",
            "estimation",
            "when",
            "market",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "film_market_estimation",
            "WHERE",
            "Market_ID",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "film_market_estimation",
            "where",
            "market_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__film_market_estimation__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__film_market_estimation.market_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "party_people",
        "query": "SELECT Member_Name FROM member WHERE Party_ID = '3';",
        "question": "Select member name from member when party id equals 3",
        "tables": [
            "member",
            "party_events",
            "party",
            "region"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "member",
            "name",
            "from",
            "member",
            "when",
            "party",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Member_Name",
            "FROM",
            "member",
            "WHERE",
            "Party_ID",
            "=",
            "'3'"
        ],
        "query_toks_no_value": [
            "select",
            "member_name",
            "from",
            "member",
            "where",
            "party_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__member__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__member.member_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__member.party_id__",
                            false
                        ],
                        null
                    ],
                    "\"3\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "party_people",
        "query": "SELECT Event_ID FROM party_events WHERE Party_ID = '2';",
        "question": "Select event id from party events when party id equals 2",
        "tables": [
            "member",
            "party_events",
            "party",
            "region"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "event",
            "id",
            "from",
            "party",
            "events",
            "when",
            "party",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Event_ID",
            "FROM",
            "party_events",
            "WHERE",
            "Party_ID",
            "=",
            "'2'"
        ],
        "query_toks_no_value": [
            "select",
            "event_id",
            "from",
            "party_events",
            "where",
            "party_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__party_events__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__party_events.event_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__party_events.party_id__",
                            false
                        ],
                        null
                    ],
                    "\"2\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "party_people",
        "query": "SELECT * FROM party_events WHERE Party_ID = 3;",
        "question": "Select all columns from party events when party id equals 3",
        "tables": [
            "member",
            "party_events",
            "party",
            "region"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "party",
            "events",
            "when",
            "party",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "party_events",
            "WHERE",
            "Party_ID",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "party_events",
            "where",
            "party_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__party_events__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__party_events.party_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "party_people",
        "query": "SELECT Format FROM region WHERE Date = '16 July 2002';",
        "question": "Select format from region when date equals 16 July 2002",
        "tables": [
            "member",
            "party_events",
            "party",
            "region"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "format",
            "from",
            "region",
            "when",
            "date",
            "equals",
            "16",
            "July",
            "2002"
        ],
        "query_toks": [
            "SELECT",
            "Format",
            "FROM",
            "region",
            "WHERE",
            "Date",
            "=",
            "'16",
            "July",
            "2002'"
        ],
        "query_toks_no_value": [
            "select",
            "format",
            "from",
            "region",
            "where",
            "date",
            "=",
            "value",
            "july",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__region__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__region.format__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__region.date__",
                            false
                        ],
                        null
                    ],
                    "\"16 July 2002\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT Date FROM Prescribes WHERE Appointment = '13216584';",
        "question": "Select date from prescribes when appointment equals 13216584",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "date",
            "from",
            "prescribes",
            "when",
            "appointment",
            "equals",
            "13216584"
        ],
        "query_toks": [
            "SELECT",
            "Date",
            "FROM",
            "Prescribes",
            "WHERE",
            "Appointment",
            "=",
            "'13216584'"
        ],
        "query_toks_no_value": [
            "select",
            "date",
            "from",
            "prescribes",
            "where",
            "appointment",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__prescribes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__prescribes.date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__prescribes.appointment__",
                            false
                        ],
                        null
                    ],
                    "\"13216584\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT * FROM Prescribes WHERE Appointment = 86213939;",
        "question": "Select all columns from prescribes when appointment equals 86213939",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "prescribes",
            "when",
            "appointment",
            "equals",
            "86213939"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Prescribes",
            "WHERE",
            "Appointment",
            "=",
            "86213939"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "prescribes",
            "where",
            "appointment",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__prescribes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__prescribes.appointment__",
                            false
                        ],
                        null
                    ],
                    86213939.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT Room FROM Stay WHERE Patient = 100000003;",
        "question": "Select room from stay when patient equals 100000003",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "room",
            "from",
            "stay",
            "when",
            "patient",
            "equals",
            "100000003"
        ],
        "query_toks": [
            "SELECT",
            "Room",
            "FROM",
            "Stay",
            "WHERE",
            "Patient",
            "=",
            "100000003"
        ],
        "query_toks_no_value": [
            "select",
            "room",
            "from",
            "stay",
            "where",
            "patient",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__stay__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__stay.room__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__stay.patient__",
                            false
                        ],
                        null
                    ],
                    100000003.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT OnCallEnd FROM On_Call WHERE BlockFloor = '1';",
        "question": "Select oncall end from on call when block floor equals 1",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "oncall",
            "end",
            "from",
            "on",
            "call",
            "when",
            "block",
            "floor",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "OnCallEnd",
            "FROM",
            "On_Call",
            "WHERE",
            "BlockFloor",
            "=",
            "'1'"
        ],
        "query_toks_no_value": [
            "select",
            "oncallend",
            "from",
            "on_call",
            "where",
            "blockfloor",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__on_call__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__on_call.oncallend__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__on_call.blockfloor__",
                            false
                        ],
                        null
                    ],
                    "\"1\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT RoomNumber FROM Room WHERE BlockCode = '1';",
        "question": "Select roomnumber from room when block code equals 1",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "roomnumber",
            "from",
            "room",
            "when",
            "block",
            "code",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "RoomNumber",
            "FROM",
            "Room",
            "WHERE",
            "BlockCode",
            "=",
            "'1'"
        ],
        "query_toks_no_value": [
            "select",
            "roomnumber",
            "from",
            "room",
            "where",
            "blockcode",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__room__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__room.roomnumber__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__room.blockcode__",
                            false
                        ],
                        null
                    ],
                    "\"1\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT Unavailable FROM Room WHERE BlockCode = 1;",
        "question": "Select unavailable from room when block code equals 1",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "unavailable",
            "from",
            "room",
            "when",
            "block",
            "code",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Unavailable",
            "FROM",
            "Room",
            "WHERE",
            "BlockCode",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "unavailable",
            "from",
            "room",
            "where",
            "blockcode",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__room__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__room.unavailable__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__room.blockcode__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT Department FROM Affiliated_With WHERE PrimaryAffiliation = '0';",
        "question": "Select department from affiliated with when primary affiliation equals 0",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "department",
            "from",
            "affiliated",
            "with",
            "when",
            "primary",
            "affiliation",
            "equals",
            "0"
        ],
        "query_toks": [
            "SELECT",
            "Department",
            "FROM",
            "Affiliated_With",
            "WHERE",
            "PrimaryAffiliation",
            "=",
            "'0'"
        ],
        "query_toks_no_value": [
            "select",
            "department",
            "from",
            "affiliated_with",
            "where",
            "primaryaffiliation",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__affiliated_with__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__affiliated_with.department__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__affiliated_with.primaryaffiliation__",
                            false
                        ],
                        null
                    ],
                    "\"0\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT * FROM Affiliated_With WHERE Department = 1;",
        "question": "Select all columns from affiliated with when department equals 1",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "affiliated",
            "with",
            "when",
            "department",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Affiliated_With",
            "WHERE",
            "Department",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "affiliated_with",
            "where",
            "department",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__affiliated_with__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__affiliated_with.department__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT Cost FROM Procedures WHERE Name = 'Reverse Rhinopodoplasty';",
        "question": "Select cost from procedures when name equals Reverse Rhinopodoplasty",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "cost",
            "from",
            "procedures",
            "when",
            "name",
            "equals",
            "Reverse",
            "Rhinopodoplasty"
        ],
        "query_toks": [
            "SELECT",
            "Cost",
            "FROM",
            "Procedures",
            "WHERE",
            "Name",
            "=",
            "'Reverse",
            "Rhinopodoplasty'"
        ],
        "query_toks_no_value": [
            "select",
            "cost",
            "from",
            "procedures",
            "where",
            "name",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__procedures__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__procedures.cost__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__procedures.name__",
                            false
                        ],
                        null
                    ],
                    "\"Reverse Rhinopodoplasty\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT DepartmentID FROM Department WHERE Head = '4';",
        "question": "Select departmentid from department when head equals 4",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "departmentid",
            "from",
            "department",
            "when",
            "head",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "DepartmentID",
            "FROM",
            "Department",
            "WHERE",
            "Head",
            "=",
            "'4'"
        ],
        "query_toks_no_value": [
            "select",
            "departmentid",
            "from",
            "department",
            "where",
            "head",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__department__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__department.departmentid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__department.head__",
                            false
                        ],
                        null
                    ],
                    "\"4\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT * FROM Department WHERE Head = 4;",
        "question": "Select all columns from department when head equals 4",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "department",
            "when",
            "head",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Department",
            "WHERE",
            "Head",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "department",
            "where",
            "head",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__department__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__department.head__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT Name FROM Patient WHERE PCP = '2';",
        "question": "Select name from patient when pcp equals 2",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "name",
            "from",
            "patient",
            "when",
            "pcp",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "Patient",
            "WHERE",
            "PCP",
            "=",
            "'2'"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "patient",
            "where",
            "pcp",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__patient__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__patient.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__patient.pcp__",
                            false
                        ],
                        null
                    ],
                    "\"2\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT Address FROM Patient WHERE InsuranceID = 36546321;",
        "question": "Select address from patient when insurance id equals 36546321",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "address",
            "from",
            "patient",
            "when",
            "insurance",
            "id",
            "equals",
            "36546321"
        ],
        "query_toks": [
            "SELECT",
            "Address",
            "FROM",
            "Patient",
            "WHERE",
            "InsuranceID",
            "=",
            "36546321"
        ],
        "query_toks_no_value": [
            "select",
            "address",
            "from",
            "patient",
            "where",
            "insuranceid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__patient__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__patient.address__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__patient.insuranceid__",
                            false
                        ],
                        null
                    ],
                    36546321.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT Patient FROM Undergoes WHERE Stay = '3215';",
        "question": "Select patient from undergoes when stay equals 3215",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "patient",
            "from",
            "undergoes",
            "when",
            "stay",
            "equals",
            "3215"
        ],
        "query_toks": [
            "SELECT",
            "Patient",
            "FROM",
            "Undergoes",
            "WHERE",
            "Stay",
            "=",
            "'3215'"
        ],
        "query_toks_no_value": [
            "select",
            "patient",
            "from",
            "undergoes",
            "where",
            "stay",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__undergoes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__undergoes.patient__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__undergoes.stay__",
                            false
                        ],
                        null
                    ],
                    "\"3215\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT Patient FROM Undergoes WHERE Stay = 3215;",
        "question": "Select patient from undergoes when stay equals 3215",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "patient",
            "from",
            "undergoes",
            "when",
            "stay",
            "equals",
            "3215"
        ],
        "query_toks": [
            "SELECT",
            "Patient",
            "FROM",
            "Undergoes",
            "WHERE",
            "Stay",
            "=",
            "3215"
        ],
        "query_toks_no_value": [
            "select",
            "patient",
            "from",
            "undergoes",
            "where",
            "stay",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__undergoes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__undergoes.patient__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__undergoes.stay__",
                            false
                        ],
                        null
                    ],
                    3215.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT Name FROM Physician WHERE Position = 'Senior Attending Physician';",
        "question": "Select name from physician when position equals Senior Attending Physician",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "name",
            "from",
            "physician",
            "when",
            "position",
            "equals",
            "Senior",
            "Attending",
            "Physician"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "Physician",
            "WHERE",
            "Position",
            "=",
            "'Senior",
            "Attending",
            "Physician'"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "physician",
            "where",
            "position",
            "=",
            "value",
            "attending",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__physician__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__physician.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__physician.position__",
                            false
                        ],
                        null
                    ],
                    "\"Senior Attending Physician\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT Position FROM Physician WHERE SSN = 777777777;",
        "question": "Select position from physician when ssn equals 777777777",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "position",
            "from",
            "physician",
            "when",
            "ssn",
            "equals",
            "777777777"
        ],
        "query_toks": [
            "SELECT",
            "Position",
            "FROM",
            "Physician",
            "WHERE",
            "SSN",
            "=",
            "777777777"
        ],
        "query_toks_no_value": [
            "select",
            "position",
            "from",
            "physician",
            "where",
            "ssn",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__physician__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__physician.position__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__physician.ssn__",
                            false
                        ],
                        null
                    ],
                    777777777.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT EmployeeID FROM Nurse WHERE Position = 'Head Nurse';",
        "question": "Select employee id from nurse when position equals Head Nurse",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "employee",
            "id",
            "from",
            "nurse",
            "when",
            "position",
            "equals",
            "Head",
            "Nurse"
        ],
        "query_toks": [
            "SELECT",
            "EmployeeID",
            "FROM",
            "Nurse",
            "WHERE",
            "Position",
            "=",
            "'Head",
            "Nurse'"
        ],
        "query_toks_no_value": [
            "select",
            "employeeid",
            "from",
            "nurse",
            "where",
            "position",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__nurse__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__nurse.employeeid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__nurse.position__",
                            false
                        ],
                        null
                    ],
                    "\"Head Nurse\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT * FROM Trained_In WHERE Physician = 3;",
        "question": "Select all columns from trained in when physician equals 3",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "trained",
            "in",
            "when",
            "physician",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Trained_In",
            "WHERE",
            "Physician",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "trained_in",
            "where",
            "physician",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__trained_in__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__trained_in.physician__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT BlockCode FROM Block WHERE BlockFloor = '3';",
        "question": "Select block code from block when block floor equals 3",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "block",
            "code",
            "from",
            "block",
            "when",
            "block",
            "floor",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "BlockCode",
            "FROM",
            "Block",
            "WHERE",
            "BlockFloor",
            "=",
            "'3'"
        ],
        "query_toks_no_value": [
            "select",
            "blockcode",
            "from",
            "block",
            "where",
            "blockfloor",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__block__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__block.blockcode__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__block.blockfloor__",
                            false
                        ],
                        null
                    ],
                    "\"3\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT * FROM Block WHERE BlockCode = 1;",
        "question": "Select all columns from block when block code equals 1",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "block",
            "when",
            "block",
            "code",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Block",
            "WHERE",
            "BlockCode",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "block",
            "where",
            "blockcode",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__block__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__block.blockcode__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "query": "SELECT mailshot_name FROM Mailshot_Campaigns WHERE mailshot_id = '15';",
        "question": "Select mailshot name from mailshot campaigns when mailshot id equals 15",
        "tables": [
            "Mailshot_Campaigns",
            "Products",
            "Mailshot_Customers",
            "Order_Items",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers",
            "Premises"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "mailshot",
            "name",
            "from",
            "mailshot",
            "campaigns",
            "when",
            "mailshot",
            "id",
            "equals",
            "15"
        ],
        "query_toks": [
            "SELECT",
            "mailshot_name",
            "FROM",
            "Mailshot_Campaigns",
            "WHERE",
            "mailshot_id",
            "=",
            "'15'"
        ],
        "query_toks_no_value": [
            "select",
            "mailshot_name",
            "from",
            "mailshot_campaigns",
            "where",
            "mailshot_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__mailshot_campaigns__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__mailshot_campaigns.mailshot_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__mailshot_campaigns.mailshot_id__",
                            false
                        ],
                        null
                    ],
                    "\"15\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "query": "SELECT product_id FROM Products WHERE product_name = 'MP3';",
        "question": "Select product id from products when product name equals MP3",
        "tables": [
            "Mailshot_Campaigns",
            "Products",
            "Mailshot_Customers",
            "Order_Items",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers",
            "Premises"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "product",
            "id",
            "from",
            "products",
            "when",
            "product",
            "name",
            "equals",
            "MP3"
        ],
        "query_toks": [
            "SELECT",
            "product_id",
            "FROM",
            "Products",
            "WHERE",
            "product_name",
            "=",
            "'MP3'"
        ],
        "query_toks_no_value": [
            "select",
            "product_id",
            "from",
            "products",
            "where",
            "product_name",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products.product_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__products.product_name__",
                            false
                        ],
                        null
                    ],
                    "\"MP3\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "query": "SELECT * FROM Products WHERE product_id = 14;",
        "question": "Select all columns from products when product id equals 14",
        "tables": [
            "Mailshot_Campaigns",
            "Products",
            "Mailshot_Customers",
            "Order_Items",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers",
            "Premises"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "products",
            "when",
            "product",
            "id",
            "equals",
            "14"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Products",
            "WHERE",
            "product_id",
            "=",
            "14"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "products",
            "where",
            "product_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__products.product_id__",
                            false
                        ],
                        null
                    ],
                    14.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "query": "SELECT outcome_code FROM Mailshot_Customers WHERE mailshot_id = '17';",
        "question": "Select outcome code from mailshot customers when mailshot id equals 17",
        "tables": [
            "Mailshot_Campaigns",
            "Products",
            "Mailshot_Customers",
            "Order_Items",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers",
            "Premises"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "outcome",
            "code",
            "from",
            "mailshot",
            "customers",
            "when",
            "mailshot",
            "id",
            "equals",
            "17"
        ],
        "query_toks": [
            "SELECT",
            "outcome_code",
            "FROM",
            "Mailshot_Customers",
            "WHERE",
            "mailshot_id",
            "=",
            "'17'"
        ],
        "query_toks_no_value": [
            "select",
            "outcome_code",
            "from",
            "mailshot_customers",
            "where",
            "mailshot_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__mailshot_customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__mailshot_customers.outcome_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__mailshot_customers.mailshot_id__",
                            false
                        ],
                        null
                    ],
                    "\"17\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "query": "SELECT item_status_code FROM Order_Items WHERE product_id = '9';",
        "question": "Select item status code from order items when product id equals 9",
        "tables": [
            "Mailshot_Campaigns",
            "Products",
            "Mailshot_Customers",
            "Order_Items",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers",
            "Premises"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "item",
            "status",
            "code",
            "from",
            "order",
            "items",
            "when",
            "product",
            "id",
            "equals",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "item_status_code",
            "FROM",
            "Order_Items",
            "WHERE",
            "product_id",
            "=",
            "'9'"
        ],
        "query_toks_no_value": [
            "select",
            "item_status_code",
            "from",
            "order_items",
            "where",
            "product_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__order_items__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__order_items.item_status_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__order_items.product_id__",
                            false
                        ],
                        null
                    ],
                    "\"9\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "query": "SELECT item_id FROM Order_Items WHERE order_id = 15;",
        "question": "Select item id from order items when order id equals 15",
        "tables": [
            "Mailshot_Campaigns",
            "Products",
            "Mailshot_Customers",
            "Order_Items",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers",
            "Premises"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "item",
            "id",
            "from",
            "order",
            "items",
            "when",
            "order",
            "id",
            "equals",
            "15"
        ],
        "query_toks": [
            "SELECT",
            "item_id",
            "FROM",
            "Order_Items",
            "WHERE",
            "order_id",
            "=",
            "15"
        ],
        "query_toks_no_value": [
            "select",
            "item_id",
            "from",
            "order_items",
            "where",
            "order_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__order_items__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__order_items.item_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__order_items.order_id__",
                            false
                        ],
                        null
                    ],
                    15.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "query": "SELECT order_status_code FROM Customer_Orders WHERE shipping_method_code = 'UPS';",
        "question": "Select order status code from customer orders when shipping method code equals UPS",
        "tables": [
            "Mailshot_Campaigns",
            "Products",
            "Mailshot_Customers",
            "Order_Items",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers",
            "Premises"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "order",
            "status",
            "code",
            "from",
            "customer",
            "orders",
            "when",
            "shipping",
            "method",
            "code",
            "equals",
            "UPS"
        ],
        "query_toks": [
            "SELECT",
            "order_status_code",
            "FROM",
            "Customer_Orders",
            "WHERE",
            "shipping_method_code",
            "=",
            "'UPS'"
        ],
        "query_toks_no_value": [
            "select",
            "order_status_code",
            "from",
            "customer_orders",
            "where",
            "shipping_method_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_orders__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_orders.order_status_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customer_orders.shipping_method_code__",
                            false
                        ],
                        null
                    ],
                    "\"UPS\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "query": "SELECT premise_id FROM Customer_Addresses WHERE address_type_code = 'Billing';",
        "question": "Select premise id from customer addresses when address type code equals Billing",
        "tables": [
            "Mailshot_Campaigns",
            "Products",
            "Mailshot_Customers",
            "Order_Items",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers",
            "Premises"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "premise",
            "id",
            "from",
            "customer",
            "addresses",
            "when",
            "address",
            "type",
            "code",
            "equals",
            "Billing"
        ],
        "query_toks": [
            "SELECT",
            "premise_id",
            "FROM",
            "Customer_Addresses",
            "WHERE",
            "address_type_code",
            "=",
            "'Billing'"
        ],
        "query_toks_no_value": [
            "select",
            "premise_id",
            "from",
            "customer_addresses",
            "where",
            "address_type_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_addresses.premise_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customer_addresses.address_type_code__",
                            false
                        ],
                        null
                    ],
                    "\"Billing\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "query": "SELECT * FROM Customer_Addresses WHERE premise_id = 2;",
        "question": "Select all columns from customer addresses when premise id equals 2",
        "tables": [
            "Mailshot_Campaigns",
            "Products",
            "Mailshot_Customers",
            "Order_Items",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers",
            "Premises"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "customer",
            "addresses",
            "when",
            "premise",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Customer_Addresses",
            "WHERE",
            "premise_id",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "customer_addresses",
            "where",
            "premise_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customer_addresses.premise_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "query": "SELECT customer_email FROM Customers WHERE customer_name = 'Ruthie';",
        "question": "Select customer email from customers when customer name equals Ruthie",
        "tables": [
            "Mailshot_Campaigns",
            "Products",
            "Mailshot_Customers",
            "Order_Items",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers",
            "Premises"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "customer",
            "email",
            "from",
            "customers",
            "when",
            "customer",
            "name",
            "equals",
            "Ruthie"
        ],
        "query_toks": [
            "SELECT",
            "customer_email",
            "FROM",
            "Customers",
            "WHERE",
            "customer_name",
            "=",
            "'Ruthie'"
        ],
        "query_toks_no_value": [
            "select",
            "customer_email",
            "from",
            "customers",
            "where",
            "customer_name",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_email__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customers.customer_name__",
                            false
                        ],
                        null
                    ],
                    "\"Ruthie\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "query": "SELECT premise_id FROM Premises WHERE premises_type = 'Warehouse';",
        "question": "Select premise id from premises when premises type equals Warehouse",
        "tables": [
            "Mailshot_Campaigns",
            "Products",
            "Mailshot_Customers",
            "Order_Items",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers",
            "Premises"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "premise",
            "id",
            "from",
            "premises",
            "when",
            "premises",
            "type",
            "equals",
            "Warehouse"
        ],
        "query_toks": [
            "SELECT",
            "premise_id",
            "FROM",
            "Premises",
            "WHERE",
            "premises_type",
            "=",
            "'Warehouse'"
        ],
        "query_toks_no_value": [
            "select",
            "premise_id",
            "from",
            "premises",
            "where",
            "premises_type",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__premises__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__premises.premise_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__premises.premises_type__",
                            false
                        ],
                        null
                    ],
                    "\"Warehouse\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "gymnast",
        "query": "SELECT Floor_Exercise_Points FROM gymnast WHERE Gymnast_ID = '2';",
        "question": "Select floor exercise points from gymnast when gymnast id equals 2",
        "tables": [
            "gymnast",
            "people"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "floor",
            "exercise",
            "points",
            "from",
            "gymnast",
            "when",
            "gymnast",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Floor_Exercise_Points",
            "FROM",
            "gymnast",
            "WHERE",
            "Gymnast_ID",
            "=",
            "'2'"
        ],
        "query_toks_no_value": [
            "select",
            "floor_exercise_points",
            "from",
            "gymnast",
            "where",
            "gymnast_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__gymnast__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__gymnast.floor_exercise_points__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__gymnast.gymnast_id__",
                            false
                        ],
                        null
                    ],
                    "\"2\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "mountain_photos",
        "query": "SELECT id FROM mountain WHERE name = 'Ighil Mgoun';",
        "question": "Select id from mountain when name equals Ighil Mgoun",
        "tables": [
            "mountain",
            "camera_lens",
            "photos"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "id",
            "from",
            "mountain",
            "when",
            "name",
            "equals",
            "Ighil",
            "Mgoun"
        ],
        "query_toks": [
            "SELECT",
            "id",
            "FROM",
            "mountain",
            "WHERE",
            "name",
            "=",
            "'Ighil",
            "Mgoun'"
        ],
        "query_toks_no_value": [
            "select",
            "id",
            "from",
            "mountain",
            "where",
            "name",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__mountain__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__mountain.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__mountain.name__",
                            false
                        ],
                        null
                    ],
                    "\"Ighil Mgoun\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "mountain_photos",
        "query": "SELECT Prominence FROM mountain WHERE id = 14;",
        "question": "Select prominence from mountain when id equals 14",
        "tables": [
            "mountain",
            "camera_lens",
            "photos"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "prominence",
            "from",
            "mountain",
            "when",
            "id",
            "equals",
            "14"
        ],
        "query_toks": [
            "SELECT",
            "Prominence",
            "FROM",
            "mountain",
            "WHERE",
            "id",
            "=",
            "14"
        ],
        "query_toks_no_value": [
            "select",
            "prominence",
            "from",
            "mountain",
            "where",
            "id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__mountain__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__mountain.prominence__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__mountain.id__",
                            false
                        ],
                        null
                    ],
                    14.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "mountain_photos",
        "query": "SELECT focal_length_mm FROM camera_lens WHERE brand = 'Schneider Kreuznach';",
        "question": "Select focal length mm from camera lens when brand equals Schneider Kreuznach",
        "tables": [
            "mountain",
            "camera_lens",
            "photos"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "focal",
            "length",
            "mm",
            "from",
            "camera",
            "lens",
            "when",
            "brand",
            "equals",
            "Schneider",
            "Kreuznach"
        ],
        "query_toks": [
            "SELECT",
            "focal_length_mm",
            "FROM",
            "camera_lens",
            "WHERE",
            "brand",
            "=",
            "'Schneider",
            "Kreuznach'"
        ],
        "query_toks_no_value": [
            "select",
            "focal_length_mm",
            "from",
            "camera_lens",
            "where",
            "brand",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__camera_lens__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__camera_lens.focal_length_mm__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__camera_lens.brand__",
                            false
                        ],
                        null
                    ],
                    "\"Schneider Kreuznach\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "mountain_photos",
        "query": "SELECT mountain_id FROM photos WHERE camera_lens_id = '7';",
        "question": "Select mountain id from photos when camera lens id equals 7",
        "tables": [
            "mountain",
            "camera_lens",
            "photos"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "mountain",
            "id",
            "from",
            "photos",
            "when",
            "camera",
            "lens",
            "id",
            "equals",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "mountain_id",
            "FROM",
            "photos",
            "WHERE",
            "camera_lens_id",
            "=",
            "'7'"
        ],
        "query_toks_no_value": [
            "select",
            "mountain_id",
            "from",
            "photos",
            "where",
            "camera_lens_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__photos__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__photos.mountain_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__photos.camera_lens_id__",
                            false
                        ],
                        null
                    ],
                    "\"7\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "mountain_photos",
        "query": "SELECT id FROM photos WHERE camera_lens_id = 6;",
        "question": "Select id from photos when camera lens id equals 6",
        "tables": [
            "mountain",
            "camera_lens",
            "photos"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "id",
            "from",
            "photos",
            "when",
            "camera",
            "lens",
            "id",
            "equals",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "id",
            "FROM",
            "photos",
            "WHERE",
            "camera_lens_id",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "id",
            "from",
            "photos",
            "where",
            "camera_lens_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__photos__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__photos.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__photos.camera_lens_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "battle_death",
        "query": "SELECT location FROM ship WHERE name = 'HMS Avon';",
        "question": "Select location from ship when name equals HMS Avon",
        "tables": [
            "ship",
            "battle",
            "death"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "location",
            "from",
            "ship",
            "when",
            "name",
            "equals",
            "HMS",
            "Avon"
        ],
        "query_toks": [
            "SELECT",
            "location",
            "FROM",
            "ship",
            "WHERE",
            "name",
            "=",
            "'HMS",
            "Avon'"
        ],
        "query_toks_no_value": [
            "select",
            "location",
            "from",
            "ship",
            "where",
            "name",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__ship__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__ship.location__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__ship.name__",
                            false
                        ],
                        null
                    ],
                    "\"HMS Avon\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "battle_death",
        "query": "SELECT date FROM battle WHERE bulgarian_commander = 'Boril';",
        "question": "Select date from battle when bulgarian commander equals Boril",
        "tables": [
            "ship",
            "battle",
            "death"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "date",
            "from",
            "battle",
            "when",
            "bulgarian",
            "commander",
            "equals",
            "Boril"
        ],
        "query_toks": [
            "SELECT",
            "date",
            "FROM",
            "battle",
            "WHERE",
            "bulgarian_commander",
            "=",
            "'Boril'"
        ],
        "query_toks_no_value": [
            "select",
            "date",
            "from",
            "battle",
            "where",
            "bulgarian_commander",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__battle__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__battle.date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__battle.bulgarian_commander__",
                            false
                        ],
                        null
                    ],
                    "\"Boril\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "battle_death",
        "query": "SELECT note FROM death WHERE id = '2';",
        "question": "Select note from death when id equals 2",
        "tables": [
            "ship",
            "battle",
            "death"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "note",
            "from",
            "death",
            "when",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "note",
            "FROM",
            "death",
            "WHERE",
            "id",
            "=",
            "'2'"
        ],
        "query_toks_no_value": [
            "select",
            "note",
            "from",
            "death",
            "where",
            "id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__death__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__death.note__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__death.id__",
                            false
                        ],
                        null
                    ],
                    "\"2\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "battle_death",
        "query": "SELECT * FROM death WHERE injured = 9;",
        "question": "Select all columns from death when injured equals 9",
        "tables": [
            "ship",
            "battle",
            "death"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "death",
            "when",
            "injured",
            "equals",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "death",
            "WHERE",
            "injured",
            "=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "death",
            "where",
            "injured",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__death__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__death.injured__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "query": "SELECT document_type_code FROM Ref_Document_Types WHERE document_type_description = 'f';",
        "question": "Select document type code from reference document types when document type description equals f",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Document_Status",
            "Draft_Copies",
            "Documents",
            "Addresses",
            "Circulation_History",
            "Document_Drafts",
            "Documents_Mailed",
            "Ref_Shipping_Agents",
            "Employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "document",
            "type",
            "code",
            "from",
            "reference",
            "document",
            "types",
            "when",
            "document",
            "type",
            "description",
            "equals",
            "f"
        ],
        "query_toks": [
            "SELECT",
            "document_type_code",
            "FROM",
            "Ref_Document_Types",
            "WHERE",
            "document_type_description",
            "=",
            "'f'"
        ],
        "query_toks_no_value": [
            "select",
            "document_type_code",
            "from",
            "ref_document_types",
            "where",
            "document_type_description",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__ref_document_types__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__ref_document_types.document_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__ref_document_types.document_type_description__",
                            false
                        ],
                        null
                    ],
                    "\"f\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "query": "SELECT role_code FROM Roles WHERE role_description = 'Proof Manager';",
        "question": "Select role code from roles when role description equals Proof Manager",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Document_Status",
            "Draft_Copies",
            "Documents",
            "Addresses",
            "Circulation_History",
            "Document_Drafts",
            "Documents_Mailed",
            "Ref_Shipping_Agents",
            "Employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "role",
            "code",
            "from",
            "roles",
            "when",
            "role",
            "description",
            "equals",
            "Proof",
            "Manager"
        ],
        "query_toks": [
            "SELECT",
            "role_code",
            "FROM",
            "Roles",
            "WHERE",
            "role_description",
            "=",
            "'Proof",
            "Manager'"
        ],
        "query_toks_no_value": [
            "select",
            "role_code",
            "from",
            "roles",
            "where",
            "role_description",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__roles__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__roles.role_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__roles.role_description__",
                            false
                        ],
                        null
                    ],
                    "\"Proof Manager\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "query": "SELECT document_status_description FROM Ref_Document_Status WHERE document_status_code = 'done';",
        "question": "Select document status description from reference document status when document status code equals done",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Document_Status",
            "Draft_Copies",
            "Documents",
            "Addresses",
            "Circulation_History",
            "Document_Drafts",
            "Documents_Mailed",
            "Ref_Shipping_Agents",
            "Employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "document",
            "status",
            "description",
            "from",
            "reference",
            "document",
            "status",
            "when",
            "document",
            "status",
            "code",
            "equals",
            "done"
        ],
        "query_toks": [
            "SELECT",
            "document_status_description",
            "FROM",
            "Ref_Document_Status",
            "WHERE",
            "document_status_code",
            "=",
            "'done'"
        ],
        "query_toks_no_value": [
            "select",
            "document_status_description",
            "from",
            "ref_document_status",
            "where",
            "document_status_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__ref_document_status__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__ref_document_status.document_status_description__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__ref_document_status.document_status_code__",
                            false
                        ],
                        null
                    ],
                    "\"done\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "query": "SELECT draft_number FROM Draft_Copies WHERE document_id = '1';",
        "question": "Select draft number from draft copies when document id equals 1",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Document_Status",
            "Draft_Copies",
            "Documents",
            "Addresses",
            "Circulation_History",
            "Document_Drafts",
            "Documents_Mailed",
            "Ref_Shipping_Agents",
            "Employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "draft",
            "number",
            "from",
            "draft",
            "copies",
            "when",
            "document",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "draft_number",
            "FROM",
            "Draft_Copies",
            "WHERE",
            "document_id",
            "=",
            "'1'"
        ],
        "query_toks_no_value": [
            "select",
            "draft_number",
            "from",
            "draft_copies",
            "where",
            "document_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__draft_copies__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__draft_copies.draft_number__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__draft_copies.document_id__",
                            false
                        ],
                        null
                    ],
                    "\"1\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "query": "SELECT * FROM Draft_Copies WHERE draft_number = 20;",
        "question": "Select all columns from draft copies when draft number equals 20",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Document_Status",
            "Draft_Copies",
            "Documents",
            "Addresses",
            "Circulation_History",
            "Document_Drafts",
            "Documents_Mailed",
            "Ref_Shipping_Agents",
            "Employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "draft",
            "copies",
            "when",
            "draft",
            "number",
            "equals",
            "20"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Draft_Copies",
            "WHERE",
            "draft_number",
            "=",
            "20"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "draft_copies",
            "where",
            "draft_number",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__draft_copies__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__draft_copies.draft_number__",
                            false
                        ],
                        null
                    ],
                    20.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "query": "SELECT receipt_date FROM Documents WHERE document_type_code = 'Paper';",
        "question": "Select receipt date from documents when document type code equals Paper",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Document_Status",
            "Draft_Copies",
            "Documents",
            "Addresses",
            "Circulation_History",
            "Document_Drafts",
            "Documents_Mailed",
            "Ref_Shipping_Agents",
            "Employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "receipt",
            "date",
            "from",
            "documents",
            "when",
            "document",
            "type",
            "code",
            "equals",
            "Paper"
        ],
        "query_toks": [
            "SELECT",
            "receipt_date",
            "FROM",
            "Documents",
            "WHERE",
            "document_type_code",
            "=",
            "'Paper'"
        ],
        "query_toks_no_value": [
            "select",
            "receipt_date",
            "from",
            "documents",
            "where",
            "document_type_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__documents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__documents.receipt_date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__documents.document_type_code__",
                            false
                        ],
                        null
                    ],
                    "\"Paper\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "query": "SELECT address_id FROM Addresses WHERE address_details = 'IE';",
        "question": "Select address id from addresses when address details equals IE",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Document_Status",
            "Draft_Copies",
            "Documents",
            "Addresses",
            "Circulation_History",
            "Document_Drafts",
            "Documents_Mailed",
            "Ref_Shipping_Agents",
            "Employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "address",
            "id",
            "from",
            "addresses",
            "when",
            "address",
            "details",
            "equals",
            "IE"
        ],
        "query_toks": [
            "SELECT",
            "address_id",
            "FROM",
            "Addresses",
            "WHERE",
            "address_details",
            "=",
            "'IE'"
        ],
        "query_toks_no_value": [
            "select",
            "address_id",
            "from",
            "addresses",
            "where",
            "address_details",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__addresses.address_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__addresses.address_details__",
                            false
                        ],
                        null
                    ],
                    "\"IE\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "query": "SELECT document_id FROM Circulation_History WHERE draft_number = '17';",
        "question": "Select document id from circulation history when draft number equals 17",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Document_Status",
            "Draft_Copies",
            "Documents",
            "Addresses",
            "Circulation_History",
            "Document_Drafts",
            "Documents_Mailed",
            "Ref_Shipping_Agents",
            "Employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "document",
            "id",
            "from",
            "circulation",
            "history",
            "when",
            "draft",
            "number",
            "equals",
            "17"
        ],
        "query_toks": [
            "SELECT",
            "document_id",
            "FROM",
            "Circulation_History",
            "WHERE",
            "draft_number",
            "=",
            "'17'"
        ],
        "query_toks_no_value": [
            "select",
            "document_id",
            "from",
            "circulation_history",
            "where",
            "draft_number",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__circulation_history__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__circulation_history.document_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__circulation_history.draft_number__",
                            false
                        ],
                        null
                    ],
                    "\"17\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "query": "SELECT document_id FROM Circulation_History WHERE employee_id = 8;",
        "question": "Select document id from circulation history when employee id equals 8",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Document_Status",
            "Draft_Copies",
            "Documents",
            "Addresses",
            "Circulation_History",
            "Document_Drafts",
            "Documents_Mailed",
            "Ref_Shipping_Agents",
            "Employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "document",
            "id",
            "from",
            "circulation",
            "history",
            "when",
            "employee",
            "id",
            "equals",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "document_id",
            "FROM",
            "Circulation_History",
            "WHERE",
            "employee_id",
            "=",
            "8"
        ],
        "query_toks_no_value": [
            "select",
            "document_id",
            "from",
            "circulation_history",
            "where",
            "employee_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__circulation_history__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__circulation_history.document_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__circulation_history.employee_id__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "query": "SELECT draft_details FROM Document_Drafts WHERE draft_number = '4';",
        "question": "Select draft details from document drafts when draft number equals 4",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Document_Status",
            "Draft_Copies",
            "Documents",
            "Addresses",
            "Circulation_History",
            "Document_Drafts",
            "Documents_Mailed",
            "Ref_Shipping_Agents",
            "Employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "draft",
            "details",
            "from",
            "document",
            "drafts",
            "when",
            "draft",
            "number",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "draft_details",
            "FROM",
            "Document_Drafts",
            "WHERE",
            "draft_number",
            "=",
            "'4'"
        ],
        "query_toks_no_value": [
            "select",
            "draft_details",
            "from",
            "document_drafts",
            "where",
            "draft_number",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__document_drafts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__document_drafts.draft_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__document_drafts.draft_number__",
                            false
                        ],
                        null
                    ],
                    "\"4\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "query": "SELECT document_id FROM Document_Drafts WHERE draft_number = 17;",
        "question": "Select document id from document drafts when draft number equals 17",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Document_Status",
            "Draft_Copies",
            "Documents",
            "Addresses",
            "Circulation_History",
            "Document_Drafts",
            "Documents_Mailed",
            "Ref_Shipping_Agents",
            "Employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "document",
            "id",
            "from",
            "document",
            "drafts",
            "when",
            "draft",
            "number",
            "equals",
            "17"
        ],
        "query_toks": [
            "SELECT",
            "document_id",
            "FROM",
            "Document_Drafts",
            "WHERE",
            "draft_number",
            "=",
            "17"
        ],
        "query_toks_no_value": [
            "select",
            "document_id",
            "from",
            "document_drafts",
            "where",
            "draft_number",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__document_drafts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__document_drafts.document_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__document_drafts.draft_number__",
                            false
                        ],
                        null
                    ],
                    17.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "query": "SELECT mailed_to_address_id FROM Documents_Mailed WHERE document_id = '13';",
        "question": "Select mailed to address id from documents mailed when document id equals 13",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Document_Status",
            "Draft_Copies",
            "Documents",
            "Addresses",
            "Circulation_History",
            "Document_Drafts",
            "Documents_Mailed",
            "Ref_Shipping_Agents",
            "Employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "mailed",
            "to",
            "address",
            "id",
            "from",
            "documents",
            "mailed",
            "when",
            "document",
            "id",
            "equals",
            "13"
        ],
        "query_toks": [
            "SELECT",
            "mailed_to_address_id",
            "FROM",
            "Documents_Mailed",
            "WHERE",
            "document_id",
            "=",
            "'13'"
        ],
        "query_toks_no_value": [
            "select",
            "mailed_to_address_id",
            "from",
            "documents_mailed",
            "where",
            "document_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__documents_mailed__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__documents_mailed.mailed_to_address_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__documents_mailed.document_id__",
                            false
                        ],
                        null
                    ],
                    "\"13\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "query": "SELECT mailing_date FROM Documents_Mailed WHERE document_id = 12;",
        "question": "Select mailing date from documents mailed when document id equals 12",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Document_Status",
            "Draft_Copies",
            "Documents",
            "Addresses",
            "Circulation_History",
            "Document_Drafts",
            "Documents_Mailed",
            "Ref_Shipping_Agents",
            "Employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "mailing",
            "date",
            "from",
            "documents",
            "mailed",
            "when",
            "document",
            "id",
            "equals",
            "12"
        ],
        "query_toks": [
            "SELECT",
            "mailing_date",
            "FROM",
            "Documents_Mailed",
            "WHERE",
            "document_id",
            "=",
            "12"
        ],
        "query_toks_no_value": [
            "select",
            "mailing_date",
            "from",
            "documents_mailed",
            "where",
            "document_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__documents_mailed__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__documents_mailed.mailing_date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__documents_mailed.document_id__",
                            false
                        ],
                        null
                    ],
                    12.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "query": "SELECT shipping_agent_code FROM Ref_Shipping_Agents WHERE shipping_agent_name = 'UPS';",
        "question": "Select shipping agent code from reference shipping agents when shipping agent name equals UPS",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Document_Status",
            "Draft_Copies",
            "Documents",
            "Addresses",
            "Circulation_History",
            "Document_Drafts",
            "Documents_Mailed",
            "Ref_Shipping_Agents",
            "Employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "shipping",
            "agent",
            "code",
            "from",
            "reference",
            "shipping",
            "agents",
            "when",
            "shipping",
            "agent",
            "name",
            "equals",
            "UPS"
        ],
        "query_toks": [
            "SELECT",
            "shipping_agent_code",
            "FROM",
            "Ref_Shipping_Agents",
            "WHERE",
            "shipping_agent_name",
            "=",
            "'UPS'"
        ],
        "query_toks_no_value": [
            "select",
            "shipping_agent_code",
            "from",
            "ref_shipping_agents",
            "where",
            "shipping_agent_name",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__ref_shipping_agents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__ref_shipping_agents.shipping_agent_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__ref_shipping_agents.shipping_agent_name__",
                            false
                        ],
                        null
                    ],
                    "\"UPS\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "query": "SELECT employee_id FROM Employees WHERE role_code = 'PT';",
        "question": "Select employee id from employees when role code equals PT",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Document_Status",
            "Draft_Copies",
            "Documents",
            "Addresses",
            "Circulation_History",
            "Document_Drafts",
            "Documents_Mailed",
            "Ref_Shipping_Agents",
            "Employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "employee",
            "id",
            "from",
            "employees",
            "when",
            "role",
            "code",
            "equals",
            "PT"
        ],
        "query_toks": [
            "SELECT",
            "employee_id",
            "FROM",
            "Employees",
            "WHERE",
            "role_code",
            "=",
            "'PT'"
        ],
        "query_toks_no_value": [
            "select",
            "employee_id",
            "from",
            "employees",
            "where",
            "role_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__employees__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__employees.employee_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__employees.role_code__",
                            false
                        ],
                        null
                    ],
                    "\"PT\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_share_transactions",
        "query": "SELECT transaction_type_code FROM Ref_Transaction_Types WHERE transaction_type_description = 'Sale';",
        "question": "Select transaction type code from reference transaction types when transaction type description equals Sale",
        "tables": [
            "Transactions",
            "Ref_Transaction_Types",
            "Purchases",
            "Investors",
            "Sales",
            "Lots",
            "Transactions_Lots"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "transaction",
            "type",
            "code",
            "from",
            "reference",
            "transaction",
            "types",
            "when",
            "transaction",
            "type",
            "description",
            "equals",
            "Sale"
        ],
        "query_toks": [
            "SELECT",
            "transaction_type_code",
            "FROM",
            "Ref_Transaction_Types",
            "WHERE",
            "transaction_type_description",
            "=",
            "'Sale'"
        ],
        "query_toks_no_value": [
            "select",
            "transaction_type_code",
            "from",
            "ref_transaction_types",
            "where",
            "transaction_type_description",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__ref_transaction_types__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__ref_transaction_types.transaction_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__ref_transaction_types.transaction_type_description__",
                            false
                        ],
                        null
                    ],
                    "\"Sale\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_share_transactions",
        "query": "SELECT purchase_details FROM Purchases WHERE purchase_transaction_id = '1';",
        "question": "Select purchase details from purchases when purchase transaction id equals 1",
        "tables": [
            "Transactions",
            "Ref_Transaction_Types",
            "Purchases",
            "Investors",
            "Sales",
            "Lots",
            "Transactions_Lots"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "purchase",
            "details",
            "from",
            "purchases",
            "when",
            "purchase",
            "transaction",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "purchase_details",
            "FROM",
            "Purchases",
            "WHERE",
            "purchase_transaction_id",
            "=",
            "'1'"
        ],
        "query_toks_no_value": [
            "select",
            "purchase_details",
            "from",
            "purchases",
            "where",
            "purchase_transaction_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__purchases__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__purchases.purchase_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__purchases.purchase_transaction_id__",
                            false
                        ],
                        null
                    ],
                    "\"1\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_share_transactions",
        "query": "SELECT * FROM Purchases WHERE purchase_transaction_id = 6;",
        "question": "Select all columns from purchases when purchase transaction id equals 6",
        "tables": [
            "Transactions",
            "Ref_Transaction_Types",
            "Purchases",
            "Investors",
            "Sales",
            "Lots",
            "Transactions_Lots"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "purchases",
            "when",
            "purchase",
            "transaction",
            "id",
            "equals",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Purchases",
            "WHERE",
            "purchase_transaction_id",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "purchases",
            "where",
            "purchase_transaction_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__purchases__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__purchases.purchase_transaction_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_share_transactions",
        "query": "SELECT investor_id FROM Investors WHERE Investor_details = 'o';",
        "question": "Select investor id from investors when investor details equals o",
        "tables": [
            "Transactions",
            "Ref_Transaction_Types",
            "Purchases",
            "Investors",
            "Sales",
            "Lots",
            "Transactions_Lots"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "investor",
            "id",
            "from",
            "investors",
            "when",
            "investor",
            "details",
            "equals",
            "o"
        ],
        "query_toks": [
            "SELECT",
            "investor_id",
            "FROM",
            "Investors",
            "WHERE",
            "Investor_details",
            "=",
            "'o'"
        ],
        "query_toks_no_value": [
            "select",
            "investor_id",
            "from",
            "investors",
            "where",
            "investor_details",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__investors__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__investors.investor_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__investors.investor_details__",
                            false
                        ],
                        null
                    ],
                    "\"o\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_share_transactions",
        "query": "SELECT sales_transaction_id FROM Sales WHERE sales_details = 't';",
        "question": "Select sales transaction id from sales when sales details equals t",
        "tables": [
            "Transactions",
            "Ref_Transaction_Types",
            "Purchases",
            "Investors",
            "Sales",
            "Lots",
            "Transactions_Lots"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "sales",
            "transaction",
            "id",
            "from",
            "sales",
            "when",
            "sales",
            "details",
            "equals",
            "t"
        ],
        "query_toks": [
            "SELECT",
            "sales_transaction_id",
            "FROM",
            "Sales",
            "WHERE",
            "sales_details",
            "=",
            "'t'"
        ],
        "query_toks_no_value": [
            "select",
            "sales_transaction_id",
            "from",
            "sales",
            "where",
            "sales_details",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__sales__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__sales.sales_transaction_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__sales.sales_details__",
                            false
                        ],
                        null
                    ],
                    "\"t\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_share_transactions",
        "query": "SELECT sales_details FROM Sales WHERE sales_transaction_id = 9;",
        "question": "Select sales details from sales when sales transaction id equals 9",
        "tables": [
            "Transactions",
            "Ref_Transaction_Types",
            "Purchases",
            "Investors",
            "Sales",
            "Lots",
            "Transactions_Lots"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "sales",
            "details",
            "from",
            "sales",
            "when",
            "sales",
            "transaction",
            "id",
            "equals",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "sales_details",
            "FROM",
            "Sales",
            "WHERE",
            "sales_transaction_id",
            "=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "sales_details",
            "from",
            "sales",
            "where",
            "sales_transaction_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__sales__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__sales.sales_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__sales.sales_transaction_id__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_share_transactions",
        "query": "SELECT lot_id FROM Lots WHERE lot_details = 'z';",
        "question": "Select lot id from lots when lot details equals z",
        "tables": [
            "Transactions",
            "Ref_Transaction_Types",
            "Purchases",
            "Investors",
            "Sales",
            "Lots",
            "Transactions_Lots"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "lot",
            "id",
            "from",
            "lots",
            "when",
            "lot",
            "details",
            "equals",
            "z"
        ],
        "query_toks": [
            "SELECT",
            "lot_id",
            "FROM",
            "Lots",
            "WHERE",
            "lot_details",
            "=",
            "'z'"
        ],
        "query_toks_no_value": [
            "select",
            "lot_id",
            "from",
            "lots",
            "where",
            "lot_details",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__lots__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__lots.lot_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__lots.lot_details__",
                            false
                        ],
                        null
                    ],
                    "\"z\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_share_transactions",
        "query": "SELECT transaction_id FROM Transactions_Lots WHERE lot_id = '15';",
        "question": "Select transaction id from transactions lots when lot id equals 15",
        "tables": [
            "Transactions",
            "Ref_Transaction_Types",
            "Purchases",
            "Investors",
            "Sales",
            "Lots",
            "Transactions_Lots"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "transaction",
            "id",
            "from",
            "transactions",
            "lots",
            "when",
            "lot",
            "id",
            "equals",
            "15"
        ],
        "query_toks": [
            "SELECT",
            "transaction_id",
            "FROM",
            "Transactions_Lots",
            "WHERE",
            "lot_id",
            "=",
            "'15'"
        ],
        "query_toks_no_value": [
            "select",
            "transaction_id",
            "from",
            "transactions_lots",
            "where",
            "lot_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__transactions_lots__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__transactions_lots.transaction_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__transactions_lots.lot_id__",
                            false
                        ],
                        null
                    ],
                    "\"15\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_share_transactions",
        "query": "SELECT * FROM Transactions_Lots WHERE transaction_id = 14;",
        "question": "Select all columns from transactions lots when transaction id equals 14",
        "tables": [
            "Transactions",
            "Ref_Transaction_Types",
            "Purchases",
            "Investors",
            "Sales",
            "Lots",
            "Transactions_Lots"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "transactions",
            "lots",
            "when",
            "transaction",
            "id",
            "equals",
            "14"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Transactions_Lots",
            "WHERE",
            "transaction_id",
            "=",
            "14"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "transactions_lots",
            "where",
            "transaction_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__transactions_lots__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__transactions_lots.transaction_id__",
                            false
                        ],
                        null
                    ],
                    14.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "apartment_rentals",
        "query": "SELECT apt_type_code FROM Apartments WHERE bedroom_count = '3';",
        "question": "Select apartment type code from apartments when bedroom count equals 3",
        "tables": [
            "Apartments",
            "Apartment_Bookings",
            "View_Unit_Status",
            "Guests",
            "Apartment_Facilities",
            "Apartment_Buildings"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "apartment",
            "type",
            "code",
            "from",
            "apartments",
            "when",
            "bedroom",
            "count",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "apt_type_code",
            "FROM",
            "Apartments",
            "WHERE",
            "bedroom_count",
            "=",
            "'3'"
        ],
        "query_toks_no_value": [
            "select",
            "apt_type_code",
            "from",
            "apartments",
            "where",
            "bedroom_count",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__apartments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__apartments.apt_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__apartments.bedroom_count__",
                            false
                        ],
                        null
                    ],
                    "\"3\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "apartment_rentals",
        "query": "SELECT * FROM Apartments WHERE building_id = 624;",
        "question": "Select all columns from apartments when building id equals 624",
        "tables": [
            "Apartments",
            "Apartment_Bookings",
            "View_Unit_Status",
            "Guests",
            "Apartment_Facilities",
            "Apartment_Buildings"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "apartments",
            "when",
            "building",
            "id",
            "equals",
            "624"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Apartments",
            "WHERE",
            "building_id",
            "=",
            "624"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "apartments",
            "where",
            "building_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__apartments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__apartments.building_id__",
                            false
                        ],
                        null
                    ],
                    624.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "apartment_rentals",
        "query": "SELECT available_yn FROM View_Unit_Status WHERE apt_booking_id = '337';",
        "question": "Select available yes or no from view unit status when apartment booking id equals 337",
        "tables": [
            "Apartments",
            "Apartment_Bookings",
            "View_Unit_Status",
            "Guests",
            "Apartment_Facilities",
            "Apartment_Buildings"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "available",
            "yes",
            "or",
            "no",
            "from",
            "view",
            "unit",
            "status",
            "when",
            "apartment",
            "booking",
            "id",
            "equals",
            "337"
        ],
        "query_toks": [
            "SELECT",
            "available_yn",
            "FROM",
            "View_Unit_Status",
            "WHERE",
            "apt_booking_id",
            "=",
            "'337'"
        ],
        "query_toks_no_value": [
            "select",
            "available_yn",
            "from",
            "view_unit_status",
            "where",
            "apt_booking_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__view_unit_status__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__view_unit_status.available_yn__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__view_unit_status.apt_booking_id__",
                            false
                        ],
                        null
                    ],
                    "\"337\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "apartment_rentals",
        "query": "SELECT * FROM View_Unit_Status WHERE available_yn = 1;",
        "question": "Select all columns from view unit status when available yes or no equals 1",
        "tables": [
            "Apartments",
            "Apartment_Bookings",
            "View_Unit_Status",
            "Guests",
            "Apartment_Facilities",
            "Apartment_Buildings"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "view",
            "unit",
            "status",
            "when",
            "available",
            "yes",
            "or",
            "no",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "View_Unit_Status",
            "WHERE",
            "available_yn",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "view_unit_status",
            "where",
            "available_yn",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__view_unit_status__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__view_unit_status.available_yn__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "apartment_rentals",
        "query": "SELECT date_of_birth FROM Guests WHERE guest_id = '12';",
        "question": "Select date of birth from guests when guest id equals 12",
        "tables": [
            "Apartments",
            "Apartment_Bookings",
            "View_Unit_Status",
            "Guests",
            "Apartment_Facilities",
            "Apartment_Buildings"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "date",
            "of",
            "birth",
            "from",
            "guests",
            "when",
            "guest",
            "id",
            "equals",
            "12"
        ],
        "query_toks": [
            "SELECT",
            "date_of_birth",
            "FROM",
            "Guests",
            "WHERE",
            "guest_id",
            "=",
            "'12'"
        ],
        "query_toks_no_value": [
            "select",
            "date_of_birth",
            "from",
            "guests",
            "where",
            "guest_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__guests__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__guests.date_of_birth__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__guests.guest_id__",
                            false
                        ],
                        null
                    ],
                    "\"12\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "apartment_rentals",
        "query": "SELECT facility_code FROM Apartment_Facilities WHERE apt_id = '3';",
        "question": "Select facility code from apartment facilities when apartment id equals 3",
        "tables": [
            "Apartments",
            "Apartment_Bookings",
            "View_Unit_Status",
            "Guests",
            "Apartment_Facilities",
            "Apartment_Buildings"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "facility",
            "code",
            "from",
            "apartment",
            "facilities",
            "when",
            "apartment",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "facility_code",
            "FROM",
            "Apartment_Facilities",
            "WHERE",
            "apt_id",
            "=",
            "'3'"
        ],
        "query_toks_no_value": [
            "select",
            "facility_code",
            "from",
            "apartment_facilities",
            "where",
            "apt_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__apartment_facilities__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__apartment_facilities.facility_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__apartment_facilities.apt_id__",
                            false
                        ],
                        null
                    ],
                    "\"3\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "apartment_rentals",
        "query": "SELECT facility_code FROM Apartment_Facilities WHERE apt_id = 9;",
        "question": "Select facility code from apartment facilities when apartment id equals 9",
        "tables": [
            "Apartments",
            "Apartment_Bookings",
            "View_Unit_Status",
            "Guests",
            "Apartment_Facilities",
            "Apartment_Buildings"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "facility",
            "code",
            "from",
            "apartment",
            "facilities",
            "when",
            "apartment",
            "id",
            "equals",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "facility_code",
            "FROM",
            "Apartment_Facilities",
            "WHERE",
            "apt_id",
            "=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "facility_code",
            "from",
            "apartment_facilities",
            "where",
            "apt_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__apartment_facilities__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__apartment_facilities.facility_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__apartment_facilities.apt_id__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "apartment_rentals",
        "query": "SELECT building_phone FROM Apartment_Buildings WHERE building_id = '133';",
        "question": "Select building phone from apartment buildings when building id equals 133",
        "tables": [
            "Apartments",
            "Apartment_Bookings",
            "View_Unit_Status",
            "Guests",
            "Apartment_Facilities",
            "Apartment_Buildings"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "building",
            "phone",
            "from",
            "apartment",
            "buildings",
            "when",
            "building",
            "id",
            "equals",
            "133"
        ],
        "query_toks": [
            "SELECT",
            "building_phone",
            "FROM",
            "Apartment_Buildings",
            "WHERE",
            "building_id",
            "=",
            "'133'"
        ],
        "query_toks_no_value": [
            "select",
            "building_phone",
            "from",
            "apartment_buildings",
            "where",
            "building_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__apartment_buildings__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__apartment_buildings.building_phone__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__apartment_buildings.building_id__",
                            false
                        ],
                        null
                    ],
                    "\"133\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT student_course_id FROM Transcript_Contents WHERE transcript_id = '15';",
        "question": "Select student course id from transcript contents when transcript id equals 15",
        "tables": [
            "Transcript_Contents",
            "Student_Enrolment",
            "Courses",
            "Students",
            "Student_Enrolment_Courses",
            "Addresses",
            "Transcripts",
            "Sections",
            "Degree_Programs",
            "Semesters",
            "Departments"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "student",
            "course",
            "id",
            "from",
            "transcript",
            "contents",
            "when",
            "transcript",
            "id",
            "equals",
            "15"
        ],
        "query_toks": [
            "SELECT",
            "student_course_id",
            "FROM",
            "Transcript_Contents",
            "WHERE",
            "transcript_id",
            "=",
            "'15'"
        ],
        "query_toks_no_value": [
            "select",
            "student_course_id",
            "from",
            "transcript_contents",
            "where",
            "transcript_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__transcript_contents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__transcript_contents.student_course_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__transcript_contents.transcript_id__",
                            false
                        ],
                        null
                    ],
                    "\"15\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT * FROM Transcript_Contents WHERE student_course_id = 70882679;",
        "question": "Select all columns from transcript contents when student course id equals 70882679",
        "tables": [
            "Transcript_Contents",
            "Student_Enrolment",
            "Courses",
            "Students",
            "Student_Enrolment_Courses",
            "Addresses",
            "Transcripts",
            "Sections",
            "Degree_Programs",
            "Semesters",
            "Departments"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "transcript",
            "contents",
            "when",
            "student",
            "course",
            "id",
            "equals",
            "70882679"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Transcript_Contents",
            "WHERE",
            "student_course_id",
            "=",
            "70882679"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "transcript_contents",
            "where",
            "student_course_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__transcript_contents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__transcript_contents.student_course_id__",
                            false
                        ],
                        null
                    ],
                    70882679.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT student_id FROM Student_Enrolment WHERE student_enrolment_id = '7';",
        "question": "Select student id from student enrolment when student enrolment id equals 7",
        "tables": [
            "Transcript_Contents",
            "Student_Enrolment",
            "Courses",
            "Students",
            "Student_Enrolment_Courses",
            "Addresses",
            "Transcripts",
            "Sections",
            "Degree_Programs",
            "Semesters",
            "Departments"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "student",
            "id",
            "from",
            "student",
            "enrolment",
            "when",
            "student",
            "enrolment",
            "id",
            "equals",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "student_id",
            "FROM",
            "Student_Enrolment",
            "WHERE",
            "student_enrolment_id",
            "=",
            "'7'"
        ],
        "query_toks_no_value": [
            "select",
            "student_id",
            "from",
            "student_enrolment",
            "where",
            "student_enrolment_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student_enrolment__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student_enrolment.student_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__student_enrolment.student_enrolment_id__",
                            false
                        ],
                        null
                    ],
                    "\"7\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT course_id FROM Courses WHERE course_description = 'w';",
        "question": "Select course id from courses when course description equals w",
        "tables": [
            "Transcript_Contents",
            "Student_Enrolment",
            "Courses",
            "Students",
            "Student_Enrolment_Courses",
            "Addresses",
            "Transcripts",
            "Sections",
            "Degree_Programs",
            "Semesters",
            "Departments"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "course",
            "id",
            "from",
            "courses",
            "when",
            "course",
            "description",
            "equals",
            "w"
        ],
        "query_toks": [
            "SELECT",
            "course_id",
            "FROM",
            "Courses",
            "WHERE",
            "course_description",
            "=",
            "'w'"
        ],
        "query_toks_no_value": [
            "select",
            "course_id",
            "from",
            "courses",
            "where",
            "course_description",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__courses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__courses.course_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__courses.course_description__",
                            false
                        ],
                        null
                    ],
                    "\"w\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT email_address FROM Students WHERE other_student_details = 'rerum';",
        "question": "Select email address from students when other student details equals rerum",
        "tables": [
            "Transcript_Contents",
            "Student_Enrolment",
            "Courses",
            "Students",
            "Student_Enrolment_Courses",
            "Addresses",
            "Transcripts",
            "Sections",
            "Degree_Programs",
            "Semesters",
            "Departments"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "email",
            "address",
            "from",
            "students",
            "when",
            "other",
            "student",
            "details",
            "equals",
            "rerum"
        ],
        "query_toks": [
            "SELECT",
            "email_address",
            "FROM",
            "Students",
            "WHERE",
            "other_student_details",
            "=",
            "'rerum'"
        ],
        "query_toks_no_value": [
            "select",
            "email_address",
            "from",
            "students",
            "where",
            "other_student_details",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__students__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__students.email_address__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__students.other_student_details__",
                            false
                        ],
                        null
                    ],
                    "\"rerum\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT student_course_id FROM Student_Enrolment_Courses WHERE student_enrolment_id = '5';",
        "question": "Select student course id from student enrolment courses when student enrolment id equals 5",
        "tables": [
            "Transcript_Contents",
            "Student_Enrolment",
            "Courses",
            "Students",
            "Student_Enrolment_Courses",
            "Addresses",
            "Transcripts",
            "Sections",
            "Degree_Programs",
            "Semesters",
            "Departments"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "student",
            "course",
            "id",
            "from",
            "student",
            "enrolment",
            "courses",
            "when",
            "student",
            "enrolment",
            "id",
            "equals",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "student_course_id",
            "FROM",
            "Student_Enrolment_Courses",
            "WHERE",
            "student_enrolment_id",
            "=",
            "'5'"
        ],
        "query_toks_no_value": [
            "select",
            "student_course_id",
            "from",
            "student_enrolment_courses",
            "where",
            "student_enrolment_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student_enrolment_courses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student_enrolment_courses.student_course_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__student_enrolment_courses.student_enrolment_id__",
                            false
                        ],
                        null
                    ],
                    "\"5\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT student_course_id FROM Student_Enrolment_Courses WHERE course_id = 2;",
        "question": "Select student course id from student enrolment courses when course id equals 2",
        "tables": [
            "Transcript_Contents",
            "Student_Enrolment",
            "Courses",
            "Students",
            "Student_Enrolment_Courses",
            "Addresses",
            "Transcripts",
            "Sections",
            "Degree_Programs",
            "Semesters",
            "Departments"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "student",
            "course",
            "id",
            "from",
            "student",
            "enrolment",
            "courses",
            "when",
            "course",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "student_course_id",
            "FROM",
            "Student_Enrolment_Courses",
            "WHERE",
            "course_id",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "student_course_id",
            "from",
            "student_enrolment_courses",
            "where",
            "course_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student_enrolment_courses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student_enrolment_courses.student_course_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__student_enrolment_courses.course_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT state_province_county FROM Addresses WHERE country = 'Saudi Arabia';",
        "question": "Select state province county from addresses when country equals Saudi Arabia",
        "tables": [
            "Transcript_Contents",
            "Student_Enrolment",
            "Courses",
            "Students",
            "Student_Enrolment_Courses",
            "Addresses",
            "Transcripts",
            "Sections",
            "Degree_Programs",
            "Semesters",
            "Departments"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "state",
            "province",
            "county",
            "from",
            "addresses",
            "when",
            "country",
            "equals",
            "Saudi",
            "Arabia"
        ],
        "query_toks": [
            "SELECT",
            "state_province_county",
            "FROM",
            "Addresses",
            "WHERE",
            "countr",
            "(",
            "countr",
            ")",
            "=",
            "'Saudi",
            "Arabia'"
        ],
        "query_toks_no_value": [
            "select",
            "state_province_county",
            "from",
            "addresses",
            "where",
            "countr",
            "(",
            "countr",
            ")",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__addresses.state_province_county__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__addresses.country__",
                            false
                        ],
                        null
                    ],
                    "\"Saudi Arabia\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT other_details FROM Sections WHERE section_name = 'h';",
        "question": "Select other details from sections when section name equals h",
        "tables": [
            "Transcript_Contents",
            "Student_Enrolment",
            "Courses",
            "Students",
            "Student_Enrolment_Courses",
            "Addresses",
            "Transcripts",
            "Sections",
            "Degree_Programs",
            "Semesters",
            "Departments"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "other",
            "details",
            "from",
            "sections",
            "when",
            "section",
            "name",
            "equals",
            "h"
        ],
        "query_toks": [
            "SELECT",
            "other_details",
            "FROM",
            "Sections",
            "WHERE",
            "section_name",
            "=",
            "'h'"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            "from",
            "sections",
            "where",
            "section_name",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__sections__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__sections.other_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__sections.section_name__",
                            false
                        ],
                        null
                    ],
                    "\"h\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT other_details FROM Degree_Programs WHERE degree_summary_name = 'Bachelor';",
        "question": "Select other details from degree programs when degree summary name equals Bachelor",
        "tables": [
            "Transcript_Contents",
            "Student_Enrolment",
            "Courses",
            "Students",
            "Student_Enrolment_Courses",
            "Addresses",
            "Transcripts",
            "Sections",
            "Degree_Programs",
            "Semesters",
            "Departments"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "other",
            "details",
            "from",
            "degree",
            "programs",
            "when",
            "degree",
            "summary",
            "name",
            "equals",
            "Bachelor"
        ],
        "query_toks": [
            "SELECT",
            "other_details",
            "FROM",
            "Degree_Programs",
            "WHERE",
            "degree_summary_name",
            "=",
            "'Bachelor'"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            "from",
            "degree_programs",
            "where",
            "degree_summary_name",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__degree_programs__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__degree_programs.other_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__degree_programs.degree_summary_name__",
                            false
                        ],
                        null
                    ],
                    "\"Bachelor\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT * FROM Departments WHERE department_id = 9;",
        "question": "Select all columns from departments when department id equals 9",
        "tables": [
            "Transcript_Contents",
            "Student_Enrolment",
            "Courses",
            "Students",
            "Student_Enrolment_Courses",
            "Addresses",
            "Transcripts",
            "Sections",
            "Degree_Programs",
            "Semesters",
            "Departments"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "departments",
            "when",
            "department",
            "id",
            "equals",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Departments",
            "WHERE",
            "department_id",
            "=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "departments",
            "where",
            "department_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__departments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__departments.department_id__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "query": "SELECT Document_Type_Code FROM Ref_Document_Types WHERE Document_Type_Name = 'Paper';",
        "question": "Select document type code from reference document types when document type name equals Paper",
        "tables": [
            "Ref_Document_Types",
            "Projects",
            "Documents",
            "Ref_Budget_Codes",
            "Accounts",
            "Statements",
            "Documents_with_Expenses"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "document",
            "type",
            "code",
            "from",
            "reference",
            "document",
            "types",
            "when",
            "document",
            "type",
            "name",
            "equals",
            "Paper"
        ],
        "query_toks": [
            "SELECT",
            "Document_Type_Code",
            "FROM",
            "Ref_Document_Types",
            "WHERE",
            "Document_Type_Name",
            "=",
            "'Paper'"
        ],
        "query_toks_no_value": [
            "select",
            "document_type_code",
            "from",
            "ref_document_types",
            "where",
            "document_type_name",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__ref_document_types__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__ref_document_types.document_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__ref_document_types.document_type_name__",
                            false
                        ],
                        null
                    ],
                    "\"Paper\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "query": "SELECT Project_ID FROM Projects WHERE Project_Details = 'Human Resource project';",
        "question": "Select project id from projects when project details equals Human Resource project",
        "tables": [
            "Ref_Document_Types",
            "Projects",
            "Documents",
            "Ref_Budget_Codes",
            "Accounts",
            "Statements",
            "Documents_with_Expenses"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "project",
            "id",
            "from",
            "projects",
            "when",
            "project",
            "details",
            "equals",
            "Human",
            "Resource",
            "project"
        ],
        "query_toks": [
            "SELECT",
            "Project_ID",
            "FROM",
            "Projects",
            "WHERE",
            "Project_Details",
            "=",
            "'Human",
            "Resource",
            "project'"
        ],
        "query_toks_no_value": [
            "select",
            "project_id",
            "from",
            "projects",
            "where",
            "project_details",
            "=",
            "value",
            "resource",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__projects__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__projects.project_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__projects.project_details__",
                            false
                        ],
                        null
                    ],
                    "\"Human Resource project\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "query": "SELECT Project_Details FROM Projects WHERE Project_ID = 195;",
        "question": "Select project details from projects when project id equals 195",
        "tables": [
            "Ref_Document_Types",
            "Projects",
            "Documents",
            "Ref_Budget_Codes",
            "Accounts",
            "Statements",
            "Documents_with_Expenses"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "project",
            "details",
            "from",
            "projects",
            "when",
            "project",
            "id",
            "equals",
            "195"
        ],
        "query_toks": [
            "SELECT",
            "Project_Details",
            "FROM",
            "Projects",
            "WHERE",
            "Project_ID",
            "=",
            "195"
        ],
        "query_toks_no_value": [
            "select",
            "project_details",
            "from",
            "projects",
            "where",
            "project_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__projects__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__projects.project_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__projects.project_id__",
                            false
                        ],
                        null
                    ],
                    195.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "query": "SELECT Budget_Type_Code FROM Ref_Budget_Codes WHERE Budget_Type_Description = 'Self founded';",
        "question": "Select budget type code from reference budget codes when budget type description equals Self founded",
        "tables": [
            "Ref_Document_Types",
            "Projects",
            "Documents",
            "Ref_Budget_Codes",
            "Accounts",
            "Statements",
            "Documents_with_Expenses"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "budget",
            "type",
            "code",
            "from",
            "reference",
            "budget",
            "codes",
            "when",
            "budget",
            "type",
            "description",
            "equals",
            "Self",
            "founded"
        ],
        "query_toks": [
            "SELECT",
            "Budget_Type_Code",
            "FROM",
            "Ref_Budget_Codes",
            "WHERE",
            "Budget_Type_Description",
            "=",
            "'Self",
            "founded'"
        ],
        "query_toks_no_value": [
            "select",
            "budget_type_code",
            "from",
            "ref_budget_codes",
            "where",
            "budget_type_description",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__ref_budget_codes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__ref_budget_codes.budget_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__ref_budget_codes.budget_type_description__",
                            false
                        ],
                        null
                    ],
                    "\"Self founded\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "query": "SELECT Statement_ID FROM Accounts WHERE Account_ID = '240';",
        "question": "Select statement id from accounts when account id equals 240",
        "tables": [
            "Ref_Document_Types",
            "Projects",
            "Documents",
            "Ref_Budget_Codes",
            "Accounts",
            "Statements",
            "Documents_with_Expenses"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "statement",
            "id",
            "from",
            "accounts",
            "when",
            "account",
            "id",
            "equals",
            "240"
        ],
        "query_toks": [
            "SELECT",
            "Statement_ID",
            "FROM",
            "Accounts",
            "WHERE",
            "Account_ID",
            "=",
            "'240'"
        ],
        "query_toks_no_value": [
            "select",
            "statement_id",
            "from",
            "accounts",
            "where",
            "account_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__accounts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__accounts.statement_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__accounts.account_id__",
                            false
                        ],
                        null
                    ],
                    "\"240\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "query": "SELECT Statement_Details FROM Statements WHERE Statement_ID = '192';",
        "question": "Select statement details from statements when statement id equals 192",
        "tables": [
            "Ref_Document_Types",
            "Projects",
            "Documents",
            "Ref_Budget_Codes",
            "Accounts",
            "Statements",
            "Documents_with_Expenses"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "statement",
            "details",
            "from",
            "statements",
            "when",
            "statement",
            "id",
            "equals",
            "192"
        ],
        "query_toks": [
            "SELECT",
            "Statement_Details",
            "FROM",
            "Statements",
            "WHERE",
            "Statement_ID",
            "=",
            "'192'"
        ],
        "query_toks_no_value": [
            "select",
            "statement_details",
            "from",
            "statements",
            "where",
            "statement_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__statements__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__statements.statement_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__statements.statement_id__",
                            false
                        ],
                        null
                    ],
                    "\"192\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "query": "SELECT Statement_Details FROM Statements WHERE Statement_ID = 192;",
        "question": "Select statement details from statements when statement id equals 192",
        "tables": [
            "Ref_Document_Types",
            "Projects",
            "Documents",
            "Ref_Budget_Codes",
            "Accounts",
            "Statements",
            "Documents_with_Expenses"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "statement",
            "details",
            "from",
            "statements",
            "when",
            "statement",
            "id",
            "equals",
            "192"
        ],
        "query_toks": [
            "SELECT",
            "Statement_Details",
            "FROM",
            "Statements",
            "WHERE",
            "Statement_ID",
            "=",
            "192"
        ],
        "query_toks_no_value": [
            "select",
            "statement_details",
            "from",
            "statements",
            "where",
            "statement_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__statements__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__statements.statement_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__statements.statement_id__",
                            false
                        ],
                        null
                    ],
                    192.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "query": "SELECT Budget_Type_Code FROM Documents_with_Expenses WHERE Document_ID = '240';",
        "question": "Select budget type code from documents with expenses when document id equals 240",
        "tables": [
            "Ref_Document_Types",
            "Projects",
            "Documents",
            "Ref_Budget_Codes",
            "Accounts",
            "Statements",
            "Documents_with_Expenses"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "budget",
            "type",
            "code",
            "from",
            "documents",
            "with",
            "expenses",
            "when",
            "document",
            "id",
            "equals",
            "240"
        ],
        "query_toks": [
            "SELECT",
            "Budget_Type_Code",
            "FROM",
            "Documents_with_Expenses",
            "WHERE",
            "Document_ID",
            "=",
            "'240'"
        ],
        "query_toks_no_value": [
            "select",
            "budget_type_code",
            "from",
            "documents_with_expenses",
            "where",
            "document_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__documents_with_expenses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__documents_with_expenses.budget_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__documents_with_expenses.document_id__",
                            false
                        ],
                        null
                    ],
                    "\"240\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "ship_mission",
        "query": "SELECT Ship_ID FROM ship WHERE Name = 'Corbridge';",
        "question": "Select ship id from ship when name equals Corbridge",
        "tables": [
            "ship",
            "mission"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "ship",
            "id",
            "from",
            "ship",
            "when",
            "name",
            "equals",
            "Corbridge"
        ],
        "query_toks": [
            "SELECT",
            "Ship_ID",
            "FROM",
            "ship",
            "WHERE",
            "Name",
            "=",
            "'Corbridge'"
        ],
        "query_toks_no_value": [
            "select",
            "ship_id",
            "from",
            "ship",
            "where",
            "name",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__ship__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__ship.ship_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__ship.name__",
                            false
                        ],
                        null
                    ],
                    "\"Corbridge\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "ship_mission",
        "query": "SELECT * FROM ship WHERE Tonnage = 5816;",
        "question": "Select all columns from ship when tonnage equals 5816",
        "tables": [
            "ship",
            "mission"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "ship",
            "when",
            "tonnage",
            "equals",
            "5816"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "ship",
            "WHERE",
            "Tonnage",
            "=",
            "5816"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "ship",
            "where",
            "tonnage",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__ship__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__ship.tonnage__",
                            false
                        ],
                        null
                    ],
                    5816.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "ship_mission",
        "query": "SELECT Launched_Year FROM mission WHERE Ship_ID = '8';",
        "question": "Select launched year from mission when ship id equals 8",
        "tables": [
            "ship",
            "mission"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "launched",
            "year",
            "from",
            "mission",
            "when",
            "ship",
            "id",
            "equals",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "Launched_Year",
            "FROM",
            "mission",
            "WHERE",
            "Ship_ID",
            "=",
            "'8'"
        ],
        "query_toks_no_value": [
            "select",
            "launched_year",
            "from",
            "mission",
            "where",
            "ship_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__mission__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__mission.launched_year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__mission.ship_id__",
                            false
                        ],
                        null
                    ],
                    "\"8\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_office",
        "query": "SELECT move_in_year FROM Office_locations WHERE company_id = '4';",
        "question": "Select move in year from office locations when company id equals 4",
        "tables": [
            "Office_locations",
            "Companies",
            "buildings"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "move",
            "in",
            "year",
            "from",
            "office",
            "locations",
            "when",
            "company",
            "id",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "move_in_year",
            "FROM",
            "Office_locations",
            "WHERE",
            "company_id",
            "=",
            "'4'"
        ],
        "query_toks_no_value": [
            "select",
            "move_in_year",
            "from",
            "office_locations",
            "where",
            "company_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__office_locations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__office_locations.move_in_year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__office_locations.company_id__",
                            false
                        ],
                        null
                    ],
                    "\"4\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_office",
        "query": "SELECT * FROM Office_locations WHERE move_in_year = 2021;",
        "question": "Select all columns from office locations when move in year equals 2021",
        "tables": [
            "Office_locations",
            "Companies",
            "buildings"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "office",
            "locations",
            "when",
            "move",
            "in",
            "year",
            "equals",
            "2021"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Office_locations",
            "WHERE",
            "move_in_year",
            "=",
            "2021"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "office_locations",
            "where",
            "move_in_year",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__office_locations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__office_locations.move_in_year__",
                            false
                        ],
                        null
                    ],
                    2021.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_office",
        "query": "SELECT Assets_billion FROM Companies WHERE id = '15';",
        "question": "Select assets billion from companies when id equals 15",
        "tables": [
            "Office_locations",
            "Companies",
            "buildings"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "assets",
            "billion",
            "from",
            "companies",
            "when",
            "id",
            "equals",
            "15"
        ],
        "query_toks": [
            "SELECT",
            "Assets_billion",
            "FROM",
            "Companies",
            "WHERE",
            "id",
            "=",
            "'15'"
        ],
        "query_toks_no_value": [
            "select",
            "assets_billion",
            "from",
            "companies",
            "where",
            "id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__companies__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__companies.assets_billion__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__companies.id__",
                            false
                        ],
                        null
                    ],
                    "\"15\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_office",
        "query": "SELECT Stories FROM buildings WHERE Height = '73';",
        "question": "Select stories from buildings when height equals 73",
        "tables": [
            "Office_locations",
            "Companies",
            "buildings"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "stories",
            "from",
            "buildings",
            "when",
            "height",
            "equals",
            "73"
        ],
        "query_toks": [
            "SELECT",
            "Stories",
            "FROM",
            "buildings",
            "WHERE",
            "Height",
            "=",
            "'73'"
        ],
        "query_toks_no_value": [
            "select",
            "stories",
            "from",
            "buildings",
            "where",
            "height",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__buildings__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__buildings.stories__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__buildings.height__",
                            false
                        ],
                        null
                    ],
                    "\"73\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_software_problems",
        "query": "SELECT staff_id FROM Staff WHERE staff_first_name = 'Christop';",
        "question": "Select staff id from staff when staff first name equals Christop",
        "tables": [
            "Staff",
            "Product",
            "Problem_Log",
            "Problems",
            "Problem_Category_Codes",
            "Problem_Status_Codes"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "staff",
            "id",
            "from",
            "staff",
            "when",
            "staff",
            "first",
            "name",
            "equals",
            "Christop"
        ],
        "query_toks": [
            "SELECT",
            "staff_id",
            "FROM",
            "Staff",
            "WHERE",
            "staff_first_name",
            "=",
            "'Christop'"
        ],
        "query_toks_no_value": [
            "select",
            "staff_id",
            "from",
            "staff",
            "where",
            "staff_first_name",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__staff__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__staff.staff_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__staff.staff_first_name__",
                            false
                        ],
                        null
                    ],
                    "\"Christop\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_software_problems",
        "query": "SELECT product_details FROM Product WHERE product_id = '1';",
        "question": "Select product details from product when product id equals 1",
        "tables": [
            "Staff",
            "Product",
            "Problem_Log",
            "Problems",
            "Problem_Category_Codes",
            "Problem_Status_Codes"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "product",
            "details",
            "from",
            "product",
            "when",
            "product",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "product_details",
            "FROM",
            "Product",
            "WHERE",
            "product_id",
            "=",
            "'1'"
        ],
        "query_toks_no_value": [
            "select",
            "product_details",
            "from",
            "product",
            "where",
            "product_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__product__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__product.product_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__product.product_id__",
                            false
                        ],
                        null
                    ],
                    "\"1\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_software_problems",
        "query": "SELECT product_name FROM Product WHERE product_id = 13;",
        "question": "Select product name from product when product id equals 13",
        "tables": [
            "Staff",
            "Product",
            "Problem_Log",
            "Problems",
            "Problem_Category_Codes",
            "Problem_Status_Codes"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "product",
            "name",
            "from",
            "product",
            "when",
            "product",
            "id",
            "equals",
            "13"
        ],
        "query_toks": [
            "SELECT",
            "product_name",
            "FROM",
            "Product",
            "WHERE",
            "product_id",
            "=",
            "13"
        ],
        "query_toks_no_value": [
            "select",
            "product_name",
            "from",
            "product",
            "where",
            "product_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__product__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__product.product_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__product.product_id__",
                            false
                        ],
                        null
                    ],
                    13.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_software_problems",
        "query": "SELECT other_log_details FROM Problem_Log WHERE assigned_to_staff_id = '12';",
        "question": "Select other log details from problem log when assigned to staff id equals 12",
        "tables": [
            "Staff",
            "Product",
            "Problem_Log",
            "Problems",
            "Problem_Category_Codes",
            "Problem_Status_Codes"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "other",
            "log",
            "details",
            "from",
            "problem",
            "log",
            "when",
            "assigned",
            "to",
            "staff",
            "id",
            "equals",
            "12"
        ],
        "query_toks": [
            "SELECT",
            "other_log_details",
            "FROM",
            "Problem_Log",
            "WHERE",
            "assigned_to_staff_id",
            "=",
            "'12'"
        ],
        "query_toks_no_value": [
            "select",
            "other_log_details",
            "from",
            "problem_log",
            "where",
            "assigned_to_staff_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__problem_log__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__problem_log.other_log_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__problem_log.assigned_to_staff_id__",
                            false
                        ],
                        null
                    ],
                    "\"12\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_software_problems",
        "query": "SELECT * FROM Problem_Log WHERE assigned_to_staff_id = 6;",
        "question": "Select all columns from problem log when assigned to staff id equals 6",
        "tables": [
            "Staff",
            "Product",
            "Problem_Log",
            "Problems",
            "Problem_Category_Codes",
            "Problem_Status_Codes"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "problem",
            "log",
            "when",
            "assigned",
            "to",
            "staff",
            "id",
            "equals",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Problem_Log",
            "WHERE",
            "assigned_to_staff_id",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "problem_log",
            "where",
            "assigned_to_staff_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__problem_log__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__problem_log.assigned_to_staff_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_software_problems",
        "query": "SELECT * FROM Problems WHERE closure_authorised_by_staff_id = 4;",
        "question": "Select all columns from problems when closure authorised by staff id equals 4",
        "tables": [
            "Staff",
            "Product",
            "Problem_Log",
            "Problems",
            "Problem_Category_Codes",
            "Problem_Status_Codes"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "problems",
            "when",
            "closure",
            "authorised",
            "by",
            "staff",
            "id",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Problems",
            "WHERE",
            "closure_authorised_by_staff_id",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "problems",
            "where",
            "closure_authorised_by_staff_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__problems__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__problems.closure_authorised_by_staff_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_software_problems",
        "query": "SELECT problem_category_description FROM Problem_Category_Codes WHERE problem_category_code = 'Datatabase';",
        "question": "Select problem category description from problem category codes when problem category code equals Datatabase",
        "tables": [
            "Staff",
            "Product",
            "Problem_Log",
            "Problems",
            "Problem_Category_Codes",
            "Problem_Status_Codes"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "problem",
            "category",
            "description",
            "from",
            "problem",
            "category",
            "codes",
            "when",
            "problem",
            "category",
            "code",
            "equals",
            "Datatabase"
        ],
        "query_toks": [
            "SELECT",
            "problem_category_description",
            "FROM",
            "Problem_Category_Codes",
            "WHERE",
            "problem_category_code",
            "=",
            "'Datatabase'"
        ],
        "query_toks_no_value": [
            "select",
            "problem_category_description",
            "from",
            "problem_category_codes",
            "where",
            "problem_category_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__problem_category_codes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__problem_category_codes.problem_category_description__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__problem_category_codes.problem_category_code__",
                            false
                        ],
                        null
                    ],
                    "\"Datatabase\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_software_problems",
        "query": "SELECT problem_status_description FROM Problem_Status_Codes WHERE problem_status_code = 'Reported';",
        "question": "Select problem status description from problem status codes when problem status code equals Reported",
        "tables": [
            "Staff",
            "Product",
            "Problem_Log",
            "Problems",
            "Problem_Category_Codes",
            "Problem_Status_Codes"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "problem",
            "status",
            "description",
            "from",
            "problem",
            "status",
            "codes",
            "when",
            "problem",
            "status",
            "code",
            "equals",
            "Reported"
        ],
        "query_toks": [
            "SELECT",
            "problem_status_description",
            "FROM",
            "Problem_Status_Codes",
            "WHERE",
            "problem_status_code",
            "=",
            "'Reported'"
        ],
        "query_toks_no_value": [
            "select",
            "problem_status_description",
            "from",
            "problem_status_codes",
            "where",
            "problem_status_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__problem_status_codes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__problem_status_codes.problem_status_description__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__problem_status_codes.problem_status_code__",
                            false
                        ],
                        null
                    ],
                    "\"Reported\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_gen_characteristics",
        "query": "SELECT color_code FROM Ref_Colors WHERE color_description = 'purple';",
        "question": "Select color code from reference colors when color description equals purple",
        "tables": [
            "Ref_Colors",
            "Characteristics",
            "Products",
            "Ref_Characteristic_Types",
            "Product_Characteristics",
            "Ref_Product_Categories"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "color",
            "code",
            "from",
            "reference",
            "colors",
            "when",
            "color",
            "description",
            "equals",
            "purple"
        ],
        "query_toks": [
            "SELECT",
            "color_code",
            "FROM",
            "Ref_Colors",
            "WHERE",
            "color_description",
            "=",
            "'purple'"
        ],
        "query_toks_no_value": [
            "select",
            "color_code",
            "from",
            "ref_colors",
            "where",
            "color_description",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__ref_colors__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__ref_colors.color_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__ref_colors.color_description__",
                            false
                        ],
                        null
                    ],
                    "\"purple\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_gen_characteristics",
        "query": "SELECT color_description FROM Ref_Colors WHERE color_code = 9;",
        "question": "Select color description from reference colors when color code equals 9",
        "tables": [
            "Ref_Colors",
            "Characteristics",
            "Products",
            "Ref_Characteristic_Types",
            "Product_Characteristics",
            "Ref_Product_Categories"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "color",
            "description",
            "from",
            "reference",
            "colors",
            "when",
            "color",
            "code",
            "equals",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "color_description",
            "FROM",
            "Ref_Colors",
            "WHERE",
            "color_code",
            "=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "color_description",
            "from",
            "ref_colors",
            "where",
            "color_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__ref_colors__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__ref_colors.color_description__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__ref_colors.color_code__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_gen_characteristics",
        "query": "SELECT typical_buying_price FROM Products WHERE product_category_code = 'Herbs';",
        "question": "Select typical buying price from products when product category code equals Herbs",
        "tables": [
            "Ref_Colors",
            "Characteristics",
            "Products",
            "Ref_Characteristic_Types",
            "Product_Characteristics",
            "Ref_Product_Categories"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "typical",
            "buying",
            "price",
            "from",
            "products",
            "when",
            "product",
            "category",
            "code",
            "equals",
            "Herbs"
        ],
        "query_toks": [
            "SELECT",
            "typical_buying_price",
            "FROM",
            "Products",
            "WHERE",
            "product_category_code",
            "=",
            "'Herbs'"
        ],
        "query_toks_no_value": [
            "select",
            "typical_buying_price",
            "from",
            "products",
            "where",
            "product_category_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products.typical_buying_price__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__products.product_category_code__",
                            false
                        ],
                        null
                    ],
                    "\"Herbs\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_gen_characteristics",
        "query": "SELECT characteristic_type_code FROM Ref_Characteristic_Types WHERE characteristic_type_description = 'Purity';",
        "question": "Select characteristic type code from reference characteristic types when characteristic type description equals Purity",
        "tables": [
            "Ref_Colors",
            "Characteristics",
            "Products",
            "Ref_Characteristic_Types",
            "Product_Characteristics",
            "Ref_Product_Categories"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "characteristic",
            "type",
            "code",
            "from",
            "reference",
            "characteristic",
            "types",
            "when",
            "characteristic",
            "type",
            "description",
            "equals",
            "Purity"
        ],
        "query_toks": [
            "SELECT",
            "characteristic_type_code",
            "FROM",
            "Ref_Characteristic_Types",
            "WHERE",
            "characteristic_type_description",
            "=",
            "'Purity'"
        ],
        "query_toks_no_value": [
            "select",
            "characteristic_type_code",
            "from",
            "ref_characteristic_types",
            "where",
            "characteristic_type_description",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__ref_characteristic_types__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__ref_characteristic_types.characteristic_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__ref_characteristic_types.characteristic_type_description__",
                            false
                        ],
                        null
                    ],
                    "\"Purity\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_gen_characteristics",
        "query": "SELECT product_characteristic_value FROM Product_Characteristics WHERE product_id = '12';",
        "question": "Select product characteristic value from product characteristics when product id equals 12",
        "tables": [
            "Ref_Colors",
            "Characteristics",
            "Products",
            "Ref_Characteristic_Types",
            "Product_Characteristics",
            "Ref_Product_Categories"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "product",
            "characteristic",
            "value",
            "from",
            "product",
            "characteristics",
            "when",
            "product",
            "id",
            "equals",
            "12"
        ],
        "query_toks": [
            "SELECT",
            "product_characteristic_value",
            "FROM",
            "Product_Characteristics",
            "WHERE",
            "product_id",
            "=",
            "'12'"
        ],
        "query_toks_no_value": [
            "select",
            "product_characteristic_value",
            "from",
            "product_characteristics",
            "where",
            "product_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__product_characteristics__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__product_characteristics.product_characteristic_value__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__product_characteristics.product_id__",
                            false
                        ],
                        null
                    ],
                    "\"12\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_gen_characteristics",
        "query": "SELECT characteristic_id FROM Product_Characteristics WHERE product_id = 12;",
        "question": "Select characteristic id from product characteristics when product id equals 12",
        "tables": [
            "Ref_Colors",
            "Characteristics",
            "Products",
            "Ref_Characteristic_Types",
            "Product_Characteristics",
            "Ref_Product_Categories"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "characteristic",
            "id",
            "from",
            "product",
            "characteristics",
            "when",
            "product",
            "id",
            "equals",
            "12"
        ],
        "query_toks": [
            "SELECT",
            "characteristic_id",
            "FROM",
            "Product_Characteristics",
            "WHERE",
            "product_id",
            "=",
            "12"
        ],
        "query_toks_no_value": [
            "select",
            "characteristic_id",
            "from",
            "product_characteristics",
            "where",
            "product_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__product_characteristics__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__product_characteristics.characteristic_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__product_characteristics.product_id__",
                            false
                        ],
                        null
                    ],
                    12.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_gen_characteristics",
        "query": "SELECT unit_of_measure FROM Ref_Product_Categories WHERE product_category_code = 'Seeds';",
        "question": "Select unit of measure from reference product categories when product category code equals Seeds",
        "tables": [
            "Ref_Colors",
            "Characteristics",
            "Products",
            "Ref_Characteristic_Types",
            "Product_Characteristics",
            "Ref_Product_Categories"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "unit",
            "of",
            "measure",
            "from",
            "reference",
            "product",
            "categories",
            "when",
            "product",
            "category",
            "code",
            "equals",
            "Seeds"
        ],
        "query_toks": [
            "SELECT",
            "unit_of_measure",
            "FROM",
            "Ref_Product_Categories",
            "WHERE",
            "product_category_code",
            "=",
            "'Seeds'"
        ],
        "query_toks_no_value": [
            "select",
            "unit_of_measure",
            "from",
            "ref_product_categories",
            "where",
            "product_category_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__ref_product_categories__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__ref_product_categories.unit_of_measure__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__ref_product_categories.product_category_code__",
                            false
                        ],
                        null
                    ],
                    "\"Seeds\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "coffee_shop",
        "query": "SELECT * FROM happy_hour_member WHERE HH_ID = 5;",
        "question": "Select all columns from happy hour member when hh id equals 5",
        "tables": [
            "happy_hour_member",
            "member",
            "shop",
            "happy_hour"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "happy",
            "hour",
            "member",
            "when",
            "hh",
            "id",
            "equals",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "happy_hour_member",
            "WHERE",
            "HH_ID",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "happy_hour_member",
            "where",
            "hh_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__happy_hour_member__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__happy_hour_member.hh_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "coffee_shop",
        "query": "SELECT Level_of_membership FROM member WHERE Name = 'Breton, Robert';",
        "question": "Select level of membership from member when name equals Breton, Robert",
        "tables": [
            "happy_hour_member",
            "member",
            "shop",
            "happy_hour"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "level",
            "of",
            "membership",
            "from",
            "member",
            "when",
            "name",
            "equals",
            "Breton",
            ",",
            "Robert"
        ],
        "query_toks": [
            "SELECT",
            "Level_of_membership",
            "FROM",
            "member",
            "WHERE",
            "Name",
            "=",
            "'Breton",
            ",",
            "Robert'"
        ],
        "query_toks_no_value": [
            "select",
            "level_of_membership",
            "from",
            "member",
            "where",
            "name",
            "=",
            "value",
            ",",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__member__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__member.level_of_membership__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__member.name__",
                            false
                        ],
                        null
                    ],
                    "\"Breton, Robert\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "coffee_shop",
        "query": "SELECT Score FROM shop WHERE Open_Year = '2008';",
        "question": "Select score from shop when open year equals 2008",
        "tables": [
            "happy_hour_member",
            "member",
            "shop",
            "happy_hour"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "score",
            "from",
            "shop",
            "when",
            "open",
            "year",
            "equals",
            "2008"
        ],
        "query_toks": [
            "SELECT",
            "Score",
            "FROM",
            "shop",
            "WHERE",
            "Open_Year",
            "=",
            "'2008'"
        ],
        "query_toks_no_value": [
            "select",
            "score",
            "from",
            "shop",
            "where",
            "open_year",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__shop__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__shop.score__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__shop.open_year__",
                            false
                        ],
                        null
                    ],
                    "\"2008\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "coffee_shop",
        "query": "SELECT * FROM shop WHERE Num_of_staff = 24;",
        "question": "Select all columns from shop when num of staff equals 24",
        "tables": [
            "happy_hour_member",
            "member",
            "shop",
            "happy_hour"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "shop",
            "when",
            "num",
            "of",
            "staff",
            "equals",
            "24"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "shop",
            "WHERE",
            "Num_of_staff",
            "=",
            "24"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "shop",
            "where",
            "num_of_staff",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__shop__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__shop.num_of_staff__",
                            false
                        ],
                        null
                    ],
                    24.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "coffee_shop",
        "query": "SELECT Month FROM happy_hour WHERE Num_of_shaff_in_charge = '4';",
        "question": "Select month from happy hour when num of shaff in charge equals 4",
        "tables": [
            "happy_hour_member",
            "member",
            "shop",
            "happy_hour"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "month",
            "from",
            "happy",
            "hour",
            "when",
            "num",
            "of",
            "shaff",
            "in",
            "charge",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Month",
            "FROM",
            "happy_hour",
            "WHERE",
            "Num_of_shaff_in_charge",
            "=",
            "'4'"
        ],
        "query_toks_no_value": [
            "select",
            "month",
            "from",
            "happy_hour",
            "where",
            "num_of_shaff_in_charge",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__happy_hour__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__happy_hour.month__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__happy_hour.num_of_shaff_in_charge__",
                            false
                        ],
                        null
                    ],
                    "\"4\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "riding_club",
        "query": "SELECT Club_ID FROM club WHERE Club_name = 'Helsingborgs IF';",
        "question": "Select club id from club when club name equals Helsingborgs IF",
        "tables": [
            "club",
            "player",
            "coach",
            "match_result",
            "player_coach"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "club",
            "id",
            "from",
            "club",
            "when",
            "club",
            "name",
            "equals",
            "Helsingborgs",
            "IF"
        ],
        "query_toks": [
            "SELECT",
            "Club_ID",
            "FROM",
            "club",
            "WHERE",
            "Club_name",
            "=",
            "'Helsingborgs",
            "IF'"
        ],
        "query_toks_no_value": [
            "select",
            "club_id",
            "from",
            "club",
            "where",
            "club_name",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__club__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__club.club_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__club.club_name__",
                            false
                        ],
                        null
                    ],
                    "\"Helsingborgs IF\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "riding_club",
        "query": "SELECT Player_ID FROM player WHERE Sponsor_name = 'Winnipeg South Centre';",
        "question": "Select player id from player when sponsor name equals Winnipeg South Centre",
        "tables": [
            "club",
            "player",
            "coach",
            "match_result",
            "player_coach"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "player",
            "id",
            "from",
            "player",
            "when",
            "sponsor",
            "name",
            "equals",
            "Winnipeg",
            "South",
            "Centre"
        ],
        "query_toks": [
            "SELECT",
            "Player_ID",
            "FROM",
            "player",
            "WHERE",
            "Sponsor_name",
            "=",
            "'Winnipeg",
            "South",
            "Centre'"
        ],
        "query_toks_no_value": [
            "select",
            "player_id",
            "from",
            "player",
            "where",
            "sponsor_name",
            "=",
            "value",
            "south",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__player__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__player.player_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__player.sponsor_name__",
                            false
                        ],
                        null
                    ],
                    "\"Winnipeg South Centre\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "riding_club",
        "query": "SELECT Gender FROM coach WHERE Coach_ID = '2';",
        "question": "Select gender from coach when coach id equals 2",
        "tables": [
            "club",
            "player",
            "coach",
            "match_result",
            "player_coach"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "gender",
            "from",
            "coach",
            "when",
            "coach",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Gender",
            "FROM",
            "coach",
            "WHERE",
            "Coach_ID",
            "=",
            "'2'"
        ],
        "query_toks_no_value": [
            "select",
            "gender",
            "from",
            "coach",
            "where",
            "coach_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__coach__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__coach.gender__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__coach.coach_id__",
                            false
                        ],
                        null
                    ],
                    "\"2\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "riding_club",
        "query": "SELECT Rank FROM match_result WHERE Big_Silver = '14';",
        "question": "Select rank from match result when big silver equals 14",
        "tables": [
            "club",
            "player",
            "coach",
            "match_result",
            "player_coach"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "rank",
            "from",
            "match",
            "result",
            "when",
            "big",
            "silver",
            "equals",
            "14"
        ],
        "query_toks": [
            "SELECT",
            "Rank",
            "FROM",
            "match_result",
            "WHERE",
            "Big_Silver",
            "=",
            "'14'"
        ],
        "query_toks_no_value": [
            "select",
            "rank",
            "from",
            "match_result",
            "where",
            "big_silver",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__match_result__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__match_result.rank__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__match_result.big_silver__",
                            false
                        ],
                        null
                    ],
                    "\"14\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "riding_club",
        "query": "SELECT Rank FROM match_result WHERE Points = 89;",
        "question": "Select rank from match result when points equals 89",
        "tables": [
            "club",
            "player",
            "coach",
            "match_result",
            "player_coach"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "rank",
            "from",
            "match",
            "result",
            "when",
            "points",
            "equals",
            "89"
        ],
        "query_toks": [
            "SELECT",
            "Rank",
            "FROM",
            "match_result",
            "WHERE",
            "Points",
            "=",
            "89"
        ],
        "query_toks_no_value": [
            "select",
            "rank",
            "from",
            "match_result",
            "where",
            "points",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__match_result__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__match_result.rank__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__match_result.points__",
                            false
                        ],
                        null
                    ],
                    89.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "riding_club",
        "query": "SELECT Coach_ID FROM player_coach WHERE Player_ID = '14';",
        "question": "Select coach id from player coach when player id equals 14",
        "tables": [
            "club",
            "player",
            "coach",
            "match_result",
            "player_coach"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "coach",
            "id",
            "from",
            "player",
            "coach",
            "when",
            "player",
            "id",
            "equals",
            "14"
        ],
        "query_toks": [
            "SELECT",
            "Coach_ID",
            "FROM",
            "player_coach",
            "WHERE",
            "Player_ID",
            "=",
            "'14'"
        ],
        "query_toks_no_value": [
            "select",
            "coach_id",
            "from",
            "player_coach",
            "where",
            "player_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__player_coach__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__player_coach.coach_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__player_coach.player_id__",
                            false
                        ],
                        null
                    ],
                    "\"14\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "riding_club",
        "query": "SELECT Coach_ID FROM player_coach WHERE Starting_year = 2010;",
        "question": "Select coach id from player coach when starting year equals 2010",
        "tables": [
            "club",
            "player",
            "coach",
            "match_result",
            "player_coach"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "coach",
            "id",
            "from",
            "player",
            "coach",
            "when",
            "starting",
            "year",
            "equals",
            "2010"
        ],
        "query_toks": [
            "SELECT",
            "Coach_ID",
            "FROM",
            "player_coach",
            "WHERE",
            "Starting_year",
            "=",
            "2010"
        ],
        "query_toks_no_value": [
            "select",
            "coach_id",
            "from",
            "player_coach",
            "where",
            "starting_year",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__player_coach__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__player_coach.coach_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__player_coach.starting_year__",
                            false
                        ],
                        null
                    ],
                    2010.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_card_transactions",
        "query": "SELECT other_card_details FROM Customers_Cards WHERE card_type_code = 'Credit';",
        "question": "Select other card details from customers cards when card type code equals Credit",
        "tables": [
            "Customers_Cards",
            "Customers",
            "Financial_Transactions",
            "Accounts"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "other",
            "card",
            "details",
            "from",
            "customers",
            "cards",
            "when",
            "card",
            "type",
            "code",
            "equals",
            "Credit"
        ],
        "query_toks": [
            "SELECT",
            "other_card_details",
            "FROM",
            "Customers_Cards",
            "WHERE",
            "card_type_code",
            "=",
            "'Credit'"
        ],
        "query_toks_no_value": [
            "select",
            "other_card_details",
            "from",
            "customers_cards",
            "where",
            "card_type_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers_cards__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers_cards.other_card_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customers_cards.card_type_code__",
                            false
                        ],
                        null
                    ],
                    "\"Credit\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_card_transactions",
        "query": "SELECT card_type_code FROM Customers_Cards WHERE customer_id = 3;",
        "question": "Select card type code from customers cards when customer id equals 3",
        "tables": [
            "Customers_Cards",
            "Customers",
            "Financial_Transactions",
            "Accounts"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "card",
            "type",
            "code",
            "from",
            "customers",
            "cards",
            "when",
            "customer",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "card_type_code",
            "FROM",
            "Customers_Cards",
            "WHERE",
            "customer_id",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "card_type_code",
            "from",
            "customers_cards",
            "where",
            "customer_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers_cards__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers_cards.card_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customers_cards.customer_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_card_transactions",
        "query": "SELECT customer_email FROM Customers WHERE customer_id = '7';",
        "question": "Select customer email from customers when customer id equals 7",
        "tables": [
            "Customers_Cards",
            "Customers",
            "Financial_Transactions",
            "Accounts"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "customer",
            "email",
            "from",
            "customers",
            "when",
            "customer",
            "id",
            "equals",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "customer_email",
            "FROM",
            "Customers",
            "WHERE",
            "customer_id",
            "=",
            "'7'"
        ],
        "query_toks_no_value": [
            "select",
            "customer_email",
            "from",
            "customers",
            "where",
            "customer_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_email__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customers.customer_id__",
                            false
                        ],
                        null
                    ],
                    "\"7\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_card_transactions",
        "query": "SELECT other_transaction_details FROM Financial_Transactions WHERE account_id = '9';",
        "question": "Select other transaction details from financial transactions when account id equals 9",
        "tables": [
            "Customers_Cards",
            "Customers",
            "Financial_Transactions",
            "Accounts"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "other",
            "transaction",
            "details",
            "from",
            "financial",
            "transactions",
            "when",
            "account",
            "id",
            "equals",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "other_transaction_details",
            "FROM",
            "Financial_Transactions",
            "WHERE",
            "account_id",
            "=",
            "'9'"
        ],
        "query_toks_no_value": [
            "select",
            "other_transaction_details",
            "from",
            "financial_transactions",
            "where",
            "account_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__financial_transactions__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__financial_transactions.other_transaction_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__financial_transactions.account_id__",
                            false
                        ],
                        null
                    ],
                    "\"9\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_card_transactions",
        "query": "SELECT account_name FROM Accounts WHERE account_id = '7';",
        "question": "Select account name from accounts when account id equals 7",
        "tables": [
            "Customers_Cards",
            "Customers",
            "Financial_Transactions",
            "Accounts"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "account",
            "name",
            "from",
            "accounts",
            "when",
            "account",
            "id",
            "equals",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "account_name",
            "FROM",
            "Accounts",
            "WHERE",
            "account_id",
            "=",
            "'7'"
        ],
        "query_toks_no_value": [
            "select",
            "account_name",
            "from",
            "accounts",
            "where",
            "account_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__accounts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__accounts.account_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__accounts.account_id__",
                            false
                        ],
                        null
                    ],
                    "\"7\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_card_transactions",
        "query": "SELECT * FROM Accounts WHERE account_id = 15;",
        "question": "Select all columns from accounts when account id equals 15",
        "tables": [
            "Customers_Cards",
            "Customers",
            "Financial_Transactions",
            "Accounts"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "accounts",
            "when",
            "account",
            "id",
            "equals",
            "15"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Accounts",
            "WHERE",
            "account_id",
            "=",
            "15"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "accounts",
            "where",
            "account_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__accounts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__accounts.account_id__",
                            false
                        ],
                        null
                    ],
                    15.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "county_public_safety",
        "query": "SELECT Residents_per_officer FROM county_public_safety WHERE Location = 'West';",
        "question": "Select residents per officer from county public safety when location equals West",
        "tables": [
            "county_public_safety",
            "city"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "residents",
            "per",
            "officer",
            "from",
            "county",
            "public",
            "safety",
            "when",
            "location",
            "equals",
            "West"
        ],
        "query_toks": [
            "SELECT",
            "Residents_per_officer",
            "FROM",
            "county_public_safet",
            "(",
            "county_public_safet",
            ")",
            "WHERE",
            "Location",
            "=",
            "'West'"
        ],
        "query_toks_no_value": [
            "select",
            "residents_per_officer",
            "from",
            "county_public_safet",
            "(",
            "county_public_safet",
            ")",
            "where",
            "location",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__county_public_safety__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__county_public_safety.residents_per_officer__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__county_public_safety.location__",
                            false
                        ],
                        null
                    ],
                    "\"West\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "county_public_safety",
        "query": "SELECT Population FROM county_public_safety WHERE County_ID = 6;",
        "question": "Select population from county public safety when county id equals 6",
        "tables": [
            "county_public_safety",
            "city"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "population",
            "from",
            "county",
            "public",
            "safety",
            "when",
            "county",
            "id",
            "equals",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "Population",
            "FROM",
            "county_public_safet",
            "(",
            "county_public_safet",
            ")",
            "WHERE",
            "County_I",
            "(",
            "County_I",
            ")",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "population",
            "from",
            "county_public_safet",
            "(",
            "county_public_safet",
            ")",
            "where",
            "county_i",
            "(",
            "county_i",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__county_public_safety__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__county_public_safety.population__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__county_public_safety.county_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "performance_attendance",
        "query": "SELECT Member_ID FROM member WHERE Name = 'Andrew Moten';",
        "question": "Select member id from member when name equals Andrew Moten",
        "tables": [
            "member",
            "member_attendance",
            "performance"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "member",
            "id",
            "from",
            "member",
            "when",
            "name",
            "equals",
            "Andrew",
            "Moten"
        ],
        "query_toks": [
            "SELECT",
            "Member_ID",
            "FROM",
            "member",
            "WHERE",
            "Name",
            "=",
            "'Andrew",
            "Moten'"
        ],
        "query_toks_no_value": [
            "select",
            "member_id",
            "from",
            "member",
            "where",
            "name",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__member__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__member.member_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__member.name__",
                            false
                        ],
                        null
                    ],
                    "\"Andrew Moten\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "performance_attendance",
        "query": "SELECT Num_of_Pieces FROM member_attendance WHERE Performance_ID = '1';",
        "question": "Select num of pieces from member attendance when performance id equals 1",
        "tables": [
            "member",
            "member_attendance",
            "performance"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "num",
            "of",
            "pieces",
            "from",
            "member",
            "attendance",
            "when",
            "performance",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Num_of_Pieces",
            "FROM",
            "member_attendance",
            "WHERE",
            "Performance_ID",
            "=",
            "'1'"
        ],
        "query_toks_no_value": [
            "select",
            "num_of_pieces",
            "from",
            "member_attendance",
            "where",
            "performance_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__member_attendance__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__member_attendance.num_of_pieces__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__member_attendance.performance_id__",
                            false
                        ],
                        null
                    ],
                    "\"1\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "performance_attendance",
        "query": "SELECT * FROM member_attendance WHERE Member_ID = 4;",
        "question": "Select all columns from member attendance when member id equals 4",
        "tables": [
            "member",
            "member_attendance",
            "performance"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "member",
            "attendance",
            "when",
            "member",
            "id",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "member_attendance",
            "WHERE",
            "Member_ID",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "member_attendance",
            "where",
            "member_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__member_attendance__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__member_attendance.member_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "performance_attendance",
        "query": "SELECT Host FROM performance WHERE Date = 'February 11';",
        "question": "Select host from performance when date equals February 11",
        "tables": [
            "member",
            "member_attendance",
            "performance"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "host",
            "from",
            "performance",
            "when",
            "date",
            "equals",
            "February",
            "11"
        ],
        "query_toks": [
            "SELECT",
            "Host",
            "FROM",
            "performance",
            "WHERE",
            "Date",
            "=",
            "'February",
            "11'"
        ],
        "query_toks_no_value": [
            "select",
            "host",
            "from",
            "performance",
            "where",
            "date",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__performance__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__performance.host__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__performance.date__",
                            false
                        ],
                        null
                    ],
                    "\"February 11\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "club_1",
        "query": "SELECT Advisor FROM Student WHERE Sex = 'M';",
        "question": "Select advisor from student when sex equals M",
        "tables": [
            "Student",
            "Member_of_club",
            "Club"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "advisor",
            "from",
            "student",
            "when",
            "sex",
            "equals",
            "M"
        ],
        "query_toks": [
            "SELECT",
            "Advisor",
            "FROM",
            "Student",
            "WHERE",
            "Sex",
            "=",
            "'M'"
        ],
        "query_toks_no_value": [
            "select",
            "advisor",
            "from",
            "student",
            "where",
            "sex",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.advisor__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__student.sex__",
                            false
                        ],
                        null
                    ],
                    "\"M\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "club_1",
        "query": "SELECT ClubID FROM Member_of_club WHERE StuID = '1007';",
        "question": "Select club id from member of club when student id equals 1007",
        "tables": [
            "Student",
            "Member_of_club",
            "Club"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "club",
            "id",
            "from",
            "member",
            "of",
            "club",
            "when",
            "student",
            "id",
            "equals",
            "1007"
        ],
        "query_toks": [
            "SELECT",
            "ClubID",
            "FROM",
            "Member_of_club",
            "WHERE",
            "StuID",
            "=",
            "'1007'"
        ],
        "query_toks_no_value": [
            "select",
            "clubid",
            "from",
            "member_of_club",
            "where",
            "stuid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__member_of_club__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__member_of_club.clubid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__member_of_club.stuid__",
                            false
                        ],
                        null
                    ],
                    "\"1007\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "club_1",
        "query": "SELECT * FROM Member_of_club WHERE StuID = 1008;",
        "question": "Select all columns from member of club when student id equals 1008",
        "tables": [
            "Student",
            "Member_of_club",
            "Club"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "member",
            "of",
            "club",
            "when",
            "student",
            "id",
            "equals",
            "1008"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Member_of_club",
            "WHERE",
            "StuID",
            "=",
            "1008"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "member_of_club",
            "where",
            "stuid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__member_of_club__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__member_of_club.stuid__",
                            false
                        ],
                        null
                    ],
                    1008.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "club_1",
        "query": "SELECT ClubName FROM Club WHERE ClubID = '2';",
        "question": "Select club name from club when club id equals 2",
        "tables": [
            "Student",
            "Member_of_club",
            "Club"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "club",
            "name",
            "from",
            "club",
            "when",
            "club",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "ClubName",
            "FROM",
            "Club",
            "WHERE",
            "ClubID",
            "=",
            "'2'"
        ],
        "query_toks_no_value": [
            "select",
            "clubname",
            "from",
            "club",
            "where",
            "clubid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__club__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__club.clubname__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__club.clubid__",
                            false
                        ],
                        null
                    ],
                    "\"2\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "query": "SELECT Net_Worth_Millions FROM singer WHERE Name = 'Iris Fontbona';",
        "question": "Select net worth millions from singer when name equals Iris Fontbona",
        "tables": [
            "singer",
            "song"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "net",
            "worth",
            "millions",
            "from",
            "singer",
            "when",
            "name",
            "equals",
            "Iris",
            "Fontbona"
        ],
        "query_toks": [
            "SELECT",
            "Net_Worth_Millions",
            "FROM",
            "singer",
            "WHERE",
            "Name",
            "=",
            "'Iris",
            "Fontbona'"
        ],
        "query_toks_no_value": [
            "select",
            "net_worth_millions",
            "from",
            "singer",
            "where",
            "name",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__singer__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__singer.net_worth_millions__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__singer.name__",
                            false
                        ],
                        null
                    ],
                    "\"Iris Fontbona\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "query": "SELECT Sales FROM song WHERE Title = 'Mysterious Girl';",
        "question": "Select sales from song when title equals Mysterious Girl",
        "tables": [
            "singer",
            "song"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "sales",
            "from",
            "song",
            "when",
            "title",
            "equals",
            "Mysterious",
            "Girl"
        ],
        "query_toks": [
            "SELECT",
            "Sales",
            "FROM",
            "song",
            "WHERE",
            "Title",
            "=",
            "'Mysterious",
            "Girl'"
        ],
        "query_toks_no_value": [
            "select",
            "sales",
            "from",
            "song",
            "where",
            "title",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__song__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__song.sales__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__song.title__",
                            false
                        ],
                        null
                    ],
                    "\"Mysterious Girl\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "query": "SELECT Song_ID FROM song WHERE Singer_ID = 1;",
        "question": "Select song id from song when singer id equals 1",
        "tables": [
            "singer",
            "song"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "song",
            "id",
            "from",
            "song",
            "when",
            "singer",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Song_ID",
            "FROM",
            "song",
            "WHERE",
            "Singer_ID",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "song_id",
            "from",
            "song",
            "where",
            "singer_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__song__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__song.song_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__song.singer_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "culture_company",
        "query": "SELECT Budget_million FROM movie WHERE Year = '2001';",
        "question": "Select budget million from movie when year equals 2001",
        "tables": [
            "movie",
            "book_club",
            "culture_company"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "budget",
            "million",
            "from",
            "movie",
            "when",
            "year",
            "equals",
            "2001"
        ],
        "query_toks": [
            "SELECT",
            "Budget_million",
            "FROM",
            "movie",
            "WHERE",
            "Year",
            "=",
            "'2001'"
        ],
        "query_toks_no_value": [
            "select",
            "budget_million",
            "from",
            "movie",
            "where",
            "year",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__movie__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__movie.budget_million__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__movie.year__",
                            false
                        ],
                        null
                    ],
                    "\"2001\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "culture_company",
        "query": "SELECT * FROM movie WHERE Year = 2001;",
        "question": "Select all columns from movie when year equals 2001",
        "tables": [
            "movie",
            "book_club",
            "culture_company"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "movie",
            "when",
            "year",
            "equals",
            "2001"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "movie",
            "WHERE",
            "Year",
            "=",
            "2001"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "movie",
            "where",
            "year",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__movie__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__movie.year__",
                            false
                        ],
                        null
                    ],
                    2001.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "culture_company",
        "query": "SELECT Book_Title FROM book_club WHERE Year = '1990';",
        "question": "Select book title from book club when year equals 1990",
        "tables": [
            "movie",
            "book_club",
            "culture_company"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "book",
            "title",
            "from",
            "book",
            "club",
            "when",
            "year",
            "equals",
            "1990"
        ],
        "query_toks": [
            "SELECT",
            "Book_Title",
            "FROM",
            "book_club",
            "WHERE",
            "Year",
            "=",
            "'1990'"
        ],
        "query_toks_no_value": [
            "select",
            "book_title",
            "from",
            "book_club",
            "where",
            "year",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__book_club__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__book_club.book_title__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__book_club.year__",
                            false
                        ],
                        null
                    ],
                    "\"1990\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "culture_company",
        "query": "SELECT Company_name FROM culture_company WHERE Type = 'Corporate';",
        "question": "Select company name from culture company when type equals Corporate",
        "tables": [
            "movie",
            "book_club",
            "culture_company"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "company",
            "name",
            "from",
            "culture",
            "company",
            "when",
            "type",
            "equals",
            "Corporate"
        ],
        "query_toks": [
            "SELECT",
            "Company_name",
            "FROM",
            "culture_company",
            "WHERE",
            "Type",
            "=",
            "'Corporate'"
        ],
        "query_toks_no_value": [
            "select",
            "company_name",
            "from",
            "culture_company",
            "where",
            "type",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__culture_company__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__culture_company.company_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__culture_company.type__",
                            false
                        ],
                        null
                    ],
                    "\"Corporate\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT Document_ID FROM Paragraphs WHERE Paragraph_ID = '280120913';",
        "question": "Select document id from paragraphs when paragraph id equals 280120913",
        "tables": [
            "Paragraphs",
            "Templates",
            "Ref_Template_Types",
            "Documents"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "document",
            "id",
            "from",
            "paragraphs",
            "when",
            "paragraph",
            "id",
            "equals",
            "280120913"
        ],
        "query_toks": [
            "SELECT",
            "Document_ID",
            "FROM",
            "Paragraphs",
            "WHERE",
            "Paragraph_ID",
            "=",
            "'280120913'"
        ],
        "query_toks_no_value": [
            "select",
            "document_id",
            "from",
            "paragraphs",
            "where",
            "paragraph_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__paragraphs__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__paragraphs.document_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__paragraphs.paragraph_id__",
                            false
                        ],
                        null
                    ],
                    "\"280120913\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT Template_ID FROM Templates WHERE Template_Type_Code = 'PPT';",
        "question": "Select template id from templates when template type code equals PPT",
        "tables": [
            "Paragraphs",
            "Templates",
            "Ref_Template_Types",
            "Documents"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "template",
            "id",
            "from",
            "templates",
            "when",
            "template",
            "type",
            "code",
            "equals",
            "PPT"
        ],
        "query_toks": [
            "SELECT",
            "Template_ID",
            "FROM",
            "Templates",
            "WHERE",
            "Template_Type_Code",
            "=",
            "'PPT'"
        ],
        "query_toks_no_value": [
            "select",
            "template_id",
            "from",
            "templates",
            "where",
            "template_type_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__templates__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__templates.template_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__templates.template_type_code__",
                            false
                        ],
                        null
                    ],
                    "\"PPT\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'PPT';",
        "question": "Select template type description from reference template types when template type code equals PPT",
        "tables": [
            "Paragraphs",
            "Templates",
            "Ref_Template_Types",
            "Documents"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "template",
            "type",
            "description",
            "from",
            "reference",
            "template",
            "types",
            "when",
            "template",
            "type",
            "code",
            "equals",
            "PPT"
        ],
        "query_toks": [
            "SELECT",
            "Template_Type_Description",
            "FROM",
            "Ref_Template_Types",
            "WHERE",
            "Template_Type_Code",
            "=",
            "'PPT'"
        ],
        "query_toks_no_value": [
            "select",
            "template_type_description",
            "from",
            "ref_template_types",
            "where",
            "template_type_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__ref_template_types__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__ref_template_types.template_type_description__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__ref_template_types.template_type_code__",
                            false
                        ],
                        null
                    ],
                    "\"PPT\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT Document_ID FROM Documents WHERE Document_Description = 'w';",
        "question": "Select document id from documents when document description equals w",
        "tables": [
            "Paragraphs",
            "Templates",
            "Ref_Template_Types",
            "Documents"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "document",
            "id",
            "from",
            "documents",
            "when",
            "document",
            "description",
            "equals",
            "w"
        ],
        "query_toks": [
            "SELECT",
            "Document_ID",
            "FROM",
            "Documents",
            "WHERE",
            "Document_Description",
            "=",
            "'w'"
        ],
        "query_toks_no_value": [
            "select",
            "document_id",
            "from",
            "documents",
            "where",
            "document_description",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__documents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__documents.document_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__documents.document_description__",
                            false
                        ],
                        null
                    ],
                    "\"w\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT Other_Details FROM Documents WHERE Template_ID = 6;",
        "question": "Select other details from documents when template id equals 6",
        "tables": [
            "Paragraphs",
            "Templates",
            "Ref_Template_Types",
            "Documents"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "other",
            "details",
            "from",
            "documents",
            "when",
            "template",
            "id",
            "equals",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "Other_Details",
            "FROM",
            "Documents",
            "WHERE",
            "Template_ID",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            "from",
            "documents",
            "where",
            "template_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__documents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__documents.other_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__documents.template_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "musical",
        "query": "SELECT Name FROM actor WHERE Actor_ID = '3';",
        "question": "Select name from actor when actor id equals 3",
        "tables": [
            "actor",
            "musical"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "name",
            "from",
            "actor",
            "when",
            "actor",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "actor",
            "WHERE",
            "Actor_ID",
            "=",
            "'3'"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "actor",
            "where",
            "actor_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__actor__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__actor.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__actor.actor_id__",
                            false
                        ],
                        null
                    ],
                    "\"3\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "musical",
        "query": "SELECT * FROM actor WHERE age = 26;",
        "question": "Select all columns from actor when age equals 26",
        "tables": [
            "actor",
            "musical"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "actor",
            "when",
            "age",
            "equals",
            "26"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "actor",
            "WHERE",
            "age",
            "=",
            "26"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "actor",
            "where",
            "age",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__actor__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__actor.age__",
                            false
                        ],
                        null
                    ],
                    26.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "musical",
        "query": "SELECT Year FROM musical WHERE Result = 'Nominated';",
        "question": "Select year from musical when result equals Nominated",
        "tables": [
            "actor",
            "musical"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "year",
            "from",
            "musical",
            "when",
            "result",
            "equals",
            "Nominated"
        ],
        "query_toks": [
            "SELECT",
            "Year",
            "FROM",
            "musical",
            "WHERE",
            "Result",
            "=",
            "'Nominated'"
        ],
        "query_toks_no_value": [
            "select",
            "year",
            "from",
            "musical",
            "where",
            "result",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__musical__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__musical.year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__musical.result__",
                            false
                        ],
                        null
                    ],
                    "\"Nominated\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "query": "SELECT seq FROM sqlite_sequence WHERE name = 'city';",
        "question": "Select seq from sqlite sequence when name equals city",
        "tables": [
            "sqlite_sequence",
            "countrylanguage",
            "city",
            "country"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "seq",
            "from",
            "sqlite",
            "sequence",
            "when",
            "name",
            "equals",
            "city"
        ],
        "query_toks": [
            "SELECT",
            "seq",
            "FROM",
            "sqlite_sequence",
            "WHERE",
            "name",
            "=",
            "'city'"
        ],
        "query_toks_no_value": [
            "select",
            "seq",
            "from",
            "sqlite_sequence",
            "where",
            "name",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__sqlite_sequence__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__sqlite_sequence.seq__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__sqlite_sequence.name__",
                            false
                        ],
                        null
                    ],
                    "\"city\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "query": "SELECT name FROM sqlite_sequence WHERE seq = 4079;",
        "question": "Select name from sqlite sequence when seq equals 4079",
        "tables": [
            "sqlite_sequence",
            "countrylanguage",
            "city",
            "country"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "name",
            "from",
            "sqlite",
            "sequence",
            "when",
            "seq",
            "equals",
            "4079"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "sqlite_sequence",
            "WHERE",
            "seq",
            "=",
            "4079"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "sqlite_sequence",
            "where",
            "seq",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__sqlite_sequence__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__sqlite_sequence.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__sqlite_sequence.seq__",
                            false
                        ],
                        null
                    ],
                    4079.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "query": "SELECT ID FROM city WHERE Population = '126055';",
        "question": "Select id from city when population equals 126055",
        "tables": [
            "sqlite_sequence",
            "countrylanguage",
            "city",
            "country"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "id",
            "from",
            "city",
            "when",
            "population",
            "equals",
            "126055"
        ],
        "query_toks": [
            "SELECT",
            "ID",
            "FROM",
            "city",
            "WHERE",
            "Population",
            "=",
            "'126055'"
        ],
        "query_toks_no_value": [
            "select",
            "id",
            "from",
            "city",
            "where",
            "population",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__city__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__city.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__city.population__",
                            false
                        ],
                        null
                    ],
                    "\"126055\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "query": "SELECT ID FROM city WHERE Population = 104571;",
        "question": "Select id from city when population equals 104571",
        "tables": [
            "sqlite_sequence",
            "countrylanguage",
            "city",
            "country"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "id",
            "from",
            "city",
            "when",
            "population",
            "equals",
            "104571"
        ],
        "query_toks": [
            "SELECT",
            "ID",
            "FROM",
            "city",
            "WHERE",
            "Population",
            "=",
            "104571"
        ],
        "query_toks_no_value": [
            "select",
            "id",
            "from",
            "city",
            "where",
            "population",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__city__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__city.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__city.population__",
                            false
                        ],
                        null
                    ],
                    104571.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "query": "SELECT Region FROM country WHERE Continent = 'Oceania';",
        "question": "Select region from country when continent equals Oceania",
        "tables": [
            "sqlite_sequence",
            "countrylanguage",
            "city",
            "country"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "region",
            "from",
            "country",
            "when",
            "continent",
            "equals",
            "Oceania"
        ],
        "query_toks": [
            "SELECT",
            "Region",
            "FROM",
            "countr",
            "(",
            "countr",
            ")",
            "WHERE",
            "Continent",
            "=",
            "'Oceania'"
        ],
        "query_toks_no_value": [
            "select",
            "region",
            "from",
            "countr",
            "(",
            "countr",
            ")",
            "where",
            "continent",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__country__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__country.region__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__country.continent__",
                            false
                        ],
                        null
                    ],
                    "\"Oceania\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "device",
        "query": "SELECT Open_Date FROM shop WHERE Shop_ID = '3';",
        "question": "Select open date from shop when shop id equals 3",
        "tables": [
            "shop",
            "device",
            "stock"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "open",
            "date",
            "from",
            "shop",
            "when",
            "shop",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Open_Date",
            "FROM",
            "shop",
            "WHERE",
            "Shop_ID",
            "=",
            "'3'"
        ],
        "query_toks_no_value": [
            "select",
            "open_date",
            "from",
            "shop",
            "where",
            "shop_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__shop__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__shop.open_date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__shop.shop_id__",
                            false
                        ],
                        null
                    ],
                    "\"3\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "device",
        "query": "SELECT Device FROM device WHERE Device_ID = '2';",
        "question": "Select device from device when device id equals 2",
        "tables": [
            "shop",
            "device",
            "stock"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "device",
            "from",
            "device",
            "when",
            "device",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Device",
            "FROM",
            "device",
            "WHERE",
            "Device_ID",
            "=",
            "'2'"
        ],
        "query_toks_no_value": [
            "select",
            "device",
            "from",
            "device",
            "where",
            "device_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__device__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__device.device__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__device.device_id__",
                            false
                        ],
                        null
                    ],
                    "\"2\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "device",
        "query": "SELECT Software_Platform FROM device WHERE Device_ID = 4;",
        "question": "Select software platform from device when device id equals 4",
        "tables": [
            "shop",
            "device",
            "stock"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "software",
            "platform",
            "from",
            "device",
            "when",
            "device",
            "id",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Software_Platform",
            "FROM",
            "device",
            "WHERE",
            "Device_ID",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "software_platform",
            "from",
            "device",
            "where",
            "device_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__device__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__device.software_platform__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__device.device_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "device",
        "query": "SELECT Quantity FROM stock WHERE Device_ID = '4';",
        "question": "Select quantity from stock when device id equals 4",
        "tables": [
            "shop",
            "device",
            "stock"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "quantity",
            "from",
            "stock",
            "when",
            "device",
            "id",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Quantity",
            "FROM",
            "stock",
            "WHERE",
            "Device_ID",
            "=",
            "'4'"
        ],
        "query_toks_no_value": [
            "select",
            "quantity",
            "from",
            "stock",
            "where",
            "device_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__stock__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__stock.quantity__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__stock.device_id__",
                            false
                        ],
                        null
                    ],
                    "\"4\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "device",
        "query": "SELECT Shop_ID FROM stock WHERE Quantity = 51;",
        "question": "Select shop id from stock when quantity equals 51",
        "tables": [
            "shop",
            "device",
            "stock"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "shop",
            "id",
            "from",
            "stock",
            "when",
            "quantity",
            "equals",
            "51"
        ],
        "query_toks": [
            "SELECT",
            "Shop_ID",
            "FROM",
            "stock",
            "WHERE",
            "Quantity",
            "=",
            "51"
        ],
        "query_toks_no_value": [
            "select",
            "shop_id",
            "from",
            "stock",
            "where",
            "quantity",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__stock__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__stock.shop_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__stock.quantity__",
                            false
                        ],
                        null
                    ],
                    51.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_grants_for_research",
        "query": "SELECT project_details FROM Projects WHERE organisation_id = '15';",
        "question": "Select project details from projects when organisation id equals 15",
        "tables": [
            "Projects",
            "Research_Outcomes",
            "Documents",
            "Document_Types",
            "Organisations",
            "Project_Outcomes",
            "Organisation_Types",
            "Project_Staff",
            "Grants",
            "Tasks",
            "Staff_Roles",
            "Research_Staff"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "project",
            "details",
            "from",
            "projects",
            "when",
            "organisation",
            "id",
            "equals",
            "15"
        ],
        "query_toks": [
            "SELECT",
            "project_details",
            "FROM",
            "Projects",
            "WHERE",
            "organisation_id",
            "=",
            "'15'"
        ],
        "query_toks_no_value": [
            "select",
            "project_details",
            "from",
            "projects",
            "where",
            "organisation_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__projects__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__projects.project_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__projects.organisation_id__",
                            false
                        ],
                        null
                    ],
                    "\"15\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_grants_for_research",
        "query": "SELECT outcome_description FROM Research_Outcomes WHERE outcome_code = 'Paper';",
        "question": "Select outcome description from research outcomes when outcome code equals Paper",
        "tables": [
            "Projects",
            "Research_Outcomes",
            "Documents",
            "Document_Types",
            "Organisations",
            "Project_Outcomes",
            "Organisation_Types",
            "Project_Staff",
            "Grants",
            "Tasks",
            "Staff_Roles",
            "Research_Staff"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "outcome",
            "description",
            "from",
            "research",
            "outcomes",
            "when",
            "outcome",
            "code",
            "equals",
            "Paper"
        ],
        "query_toks": [
            "SELECT",
            "outcome_description",
            "FROM",
            "Research_Outcomes",
            "WHERE",
            "outcome_code",
            "=",
            "'Paper'"
        ],
        "query_toks_no_value": [
            "select",
            "outcome_description",
            "from",
            "research_outcomes",
            "where",
            "outcome_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__research_outcomes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__research_outcomes.outcome_description__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__research_outcomes.outcome_code__",
                            false
                        ],
                        null
                    ],
                    "\"Paper\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_grants_for_research",
        "query": "SELECT document_type_code FROM Documents WHERE grant_id = '15';",
        "question": "Select document type code from documents when grant id equals 15",
        "tables": [
            "Projects",
            "Research_Outcomes",
            "Documents",
            "Document_Types",
            "Organisations",
            "Project_Outcomes",
            "Organisation_Types",
            "Project_Staff",
            "Grants",
            "Tasks",
            "Staff_Roles",
            "Research_Staff"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "document",
            "type",
            "code",
            "from",
            "documents",
            "when",
            "grant",
            "id",
            "equals",
            "15"
        ],
        "query_toks": [
            "SELECT",
            "document_type_code",
            "FROM",
            "Documents",
            "WHERE",
            "grant_id",
            "=",
            "'15'"
        ],
        "query_toks_no_value": [
            "select",
            "document_type_code",
            "from",
            "documents",
            "where",
            "grant_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__documents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__documents.document_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__documents.grant_id__",
                            false
                        ],
                        null
                    ],
                    "\"15\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_grants_for_research",
        "query": "SELECT document_description FROM Document_Types WHERE document_type_code = 'REG';",
        "question": "Select document description from document types when document type code equals REG",
        "tables": [
            "Projects",
            "Research_Outcomes",
            "Documents",
            "Document_Types",
            "Organisations",
            "Project_Outcomes",
            "Organisation_Types",
            "Project_Staff",
            "Grants",
            "Tasks",
            "Staff_Roles",
            "Research_Staff"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "document",
            "description",
            "from",
            "document",
            "types",
            "when",
            "document",
            "type",
            "code",
            "equals",
            "REG"
        ],
        "query_toks": [
            "SELECT",
            "document_description",
            "FROM",
            "Document_Types",
            "WHERE",
            "document_type_code",
            "=",
            "'REG'"
        ],
        "query_toks_no_value": [
            "select",
            "document_description",
            "from",
            "document_types",
            "where",
            "document_type_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__document_types__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__document_types.document_description__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__document_types.document_type_code__",
                            false
                        ],
                        null
                    ],
                    "\"REG\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_grants_for_research",
        "query": "SELECT organisation_details FROM Organisations WHERE organisation_type = 'SPON';",
        "question": "Select organisation details from organisations when organisation type equals SPON",
        "tables": [
            "Projects",
            "Research_Outcomes",
            "Documents",
            "Document_Types",
            "Organisations",
            "Project_Outcomes",
            "Organisation_Types",
            "Project_Staff",
            "Grants",
            "Tasks",
            "Staff_Roles",
            "Research_Staff"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "organisation",
            "details",
            "from",
            "organisations",
            "when",
            "organisation",
            "type",
            "equals",
            "SPON"
        ],
        "query_toks": [
            "SELECT",
            "organisation_details",
            "FROM",
            "Organisations",
            "WHERE",
            "organisation_type",
            "=",
            "'SPON'"
        ],
        "query_toks_no_value": [
            "select",
            "organisation_details",
            "from",
            "organisations",
            "where",
            "organisation_type",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__organisations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__organisations.organisation_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__organisations.organisation_type__",
                            false
                        ],
                        null
                    ],
                    "\"SPON\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_grants_for_research",
        "query": "SELECT * FROM Organisations WHERE organisation_id = 13;",
        "question": "Select all columns from organisations when organisation id equals 13",
        "tables": [
            "Projects",
            "Research_Outcomes",
            "Documents",
            "Document_Types",
            "Organisations",
            "Project_Outcomes",
            "Organisation_Types",
            "Project_Staff",
            "Grants",
            "Tasks",
            "Staff_Roles",
            "Research_Staff"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "organisations",
            "when",
            "organisation",
            "id",
            "equals",
            "13"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Organisations",
            "WHERE",
            "organisation_id",
            "=",
            "13"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "organisations",
            "where",
            "organisation_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__organisations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__organisations.organisation_id__",
                            false
                        ],
                        null
                    ],
                    13.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_grants_for_research",
        "query": "SELECT outcome_details FROM Project_Outcomes WHERE outcome_code = 'Paper';",
        "question": "Select outcome details from project outcomes when outcome code equals Paper",
        "tables": [
            "Projects",
            "Research_Outcomes",
            "Documents",
            "Document_Types",
            "Organisations",
            "Project_Outcomes",
            "Organisation_Types",
            "Project_Staff",
            "Grants",
            "Tasks",
            "Staff_Roles",
            "Research_Staff"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "outcome",
            "details",
            "from",
            "project",
            "outcomes",
            "when",
            "outcome",
            "code",
            "equals",
            "Paper"
        ],
        "query_toks": [
            "SELECT",
            "outcome_details",
            "FROM",
            "Project_Outcomes",
            "WHERE",
            "outcome_code",
            "=",
            "'Paper'"
        ],
        "query_toks_no_value": [
            "select",
            "outcome_details",
            "from",
            "project_outcomes",
            "where",
            "outcome_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__project_outcomes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__project_outcomes.outcome_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__project_outcomes.outcome_code__",
                            false
                        ],
                        null
                    ],
                    "\"Paper\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_grants_for_research",
        "query": "SELECT outcome_code FROM Project_Outcomes WHERE project_id = 9;",
        "question": "Select outcome code from project outcomes when project id equals 9",
        "tables": [
            "Projects",
            "Research_Outcomes",
            "Documents",
            "Document_Types",
            "Organisations",
            "Project_Outcomes",
            "Organisation_Types",
            "Project_Staff",
            "Grants",
            "Tasks",
            "Staff_Roles",
            "Research_Staff"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "outcome",
            "code",
            "from",
            "project",
            "outcomes",
            "when",
            "project",
            "id",
            "equals",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "outcome_code",
            "FROM",
            "Project_Outcomes",
            "WHERE",
            "project_id",
            "=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "outcome_code",
            "from",
            "project_outcomes",
            "where",
            "project_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__project_outcomes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__project_outcomes.outcome_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__project_outcomes.project_id__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_grants_for_research",
        "query": "SELECT organisation_type_description FROM Organisation_Types WHERE organisation_type = 'RES';",
        "question": "Select organisation type description from organisation types when organisation type equals RES",
        "tables": [
            "Projects",
            "Research_Outcomes",
            "Documents",
            "Document_Types",
            "Organisations",
            "Project_Outcomes",
            "Organisation_Types",
            "Project_Staff",
            "Grants",
            "Tasks",
            "Staff_Roles",
            "Research_Staff"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "organisation",
            "type",
            "description",
            "from",
            "organisation",
            "types",
            "when",
            "organisation",
            "type",
            "equals",
            "RES"
        ],
        "query_toks": [
            "SELECT",
            "organisation_type_description",
            "FROM",
            "Organisation_Types",
            "WHERE",
            "organisation_type",
            "=",
            "'RES'"
        ],
        "query_toks_no_value": [
            "select",
            "organisation_type_description",
            "from",
            "organisation_types",
            "where",
            "organisation_type",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__organisation_types__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__organisation_types.organisation_type_description__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__organisation_types.organisation_type__",
                            false
                        ],
                        null
                    ],
                    "\"RES\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_grants_for_research",
        "query": "SELECT other_details FROM Project_Staff WHERE project_id = '1';",
        "question": "Select other details from project staff when project id equals 1",
        "tables": [
            "Projects",
            "Research_Outcomes",
            "Documents",
            "Document_Types",
            "Organisations",
            "Project_Outcomes",
            "Organisation_Types",
            "Project_Staff",
            "Grants",
            "Tasks",
            "Staff_Roles",
            "Research_Staff"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "other",
            "details",
            "from",
            "project",
            "staff",
            "when",
            "project",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "other_details",
            "FROM",
            "Project_Staff",
            "WHERE",
            "project_id",
            "=",
            "'1'"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            "from",
            "project_staff",
            "where",
            "project_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__project_staff__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__project_staff.other_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__project_staff.project_id__",
                            false
                        ],
                        null
                    ],
                    "\"1\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_grants_for_research",
        "query": "SELECT organisation_id FROM Grants WHERE grant_id = '6';",
        "question": "Select organisation id from grants when grant id equals 6",
        "tables": [
            "Projects",
            "Research_Outcomes",
            "Documents",
            "Document_Types",
            "Organisations",
            "Project_Outcomes",
            "Organisation_Types",
            "Project_Staff",
            "Grants",
            "Tasks",
            "Staff_Roles",
            "Research_Staff"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "organisation",
            "id",
            "from",
            "grants",
            "when",
            "grant",
            "id",
            "equals",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "organisation_id",
            "FROM",
            "Grants",
            "WHERE",
            "grant_id",
            "=",
            "'6'"
        ],
        "query_toks_no_value": [
            "select",
            "organisation_id",
            "from",
            "grants",
            "where",
            "grant_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__grants__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__grants.organisation_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__grants.grant_id__",
                            false
                        ],
                        null
                    ],
                    "\"6\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_grants_for_research",
        "query": "SELECT task_details FROM Tasks WHERE project_id = '7';",
        "question": "Select task details from tasks when project id equals 7",
        "tables": [
            "Projects",
            "Research_Outcomes",
            "Documents",
            "Document_Types",
            "Organisations",
            "Project_Outcomes",
            "Organisation_Types",
            "Project_Staff",
            "Grants",
            "Tasks",
            "Staff_Roles",
            "Research_Staff"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "task",
            "details",
            "from",
            "tasks",
            "when",
            "project",
            "id",
            "equals",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "task_details",
            "FROM",
            "Tasks",
            "WHERE",
            "project_id",
            "=",
            "'7'"
        ],
        "query_toks_no_value": [
            "select",
            "task_details",
            "from",
            "tasks",
            "where",
            "project_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__tasks__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__tasks.task_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__tasks.project_id__",
                            false
                        ],
                        null
                    ],
                    "\"7\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_grants_for_research",
        "query": "SELECT task_details FROM Tasks WHERE task_id = 5;",
        "question": "Select task details from tasks when task id equals 5",
        "tables": [
            "Projects",
            "Research_Outcomes",
            "Documents",
            "Document_Types",
            "Organisations",
            "Project_Outcomes",
            "Organisation_Types",
            "Project_Staff",
            "Grants",
            "Tasks",
            "Staff_Roles",
            "Research_Staff"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "task",
            "details",
            "from",
            "tasks",
            "when",
            "task",
            "id",
            "equals",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "task_details",
            "FROM",
            "Tasks",
            "WHERE",
            "task_id",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "task_details",
            "from",
            "tasks",
            "where",
            "task_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__tasks__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__tasks.task_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__tasks.task_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_grants_for_research",
        "query": "SELECT role_description FROM Staff_Roles WHERE role_code = 'researcher';",
        "question": "Select role description from staff roles when role code equals researcher",
        "tables": [
            "Projects",
            "Research_Outcomes",
            "Documents",
            "Document_Types",
            "Organisations",
            "Project_Outcomes",
            "Organisation_Types",
            "Project_Staff",
            "Grants",
            "Tasks",
            "Staff_Roles",
            "Research_Staff"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "role",
            "description",
            "from",
            "staff",
            "roles",
            "when",
            "role",
            "code",
            "equals",
            "researcher"
        ],
        "query_toks": [
            "SELECT",
            "role_description",
            "FROM",
            "Staff_Roles",
            "WHERE",
            "role_code",
            "=",
            "'researcher'"
        ],
        "query_toks_no_value": [
            "select",
            "role_description",
            "from",
            "staff_roles",
            "where",
            "role_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__staff_roles__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__staff_roles.role_description__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__staff_roles.role_code__",
                            false
                        ],
                        null
                    ],
                    "\"researcher\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_grants_for_research",
        "query": "SELECT staff_id FROM Research_Staff WHERE employer_organisation_id = '6';",
        "question": "Select staff id from research staff when employer organisation id equals 6",
        "tables": [
            "Projects",
            "Research_Outcomes",
            "Documents",
            "Document_Types",
            "Organisations",
            "Project_Outcomes",
            "Organisation_Types",
            "Project_Staff",
            "Grants",
            "Tasks",
            "Staff_Roles",
            "Research_Staff"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "staff",
            "id",
            "from",
            "research",
            "staff",
            "when",
            "employer",
            "organisation",
            "id",
            "equals",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "staff_id",
            "FROM",
            "Research_Staff",
            "WHERE",
            "employer_organisation_id",
            "=",
            "'6'"
        ],
        "query_toks_no_value": [
            "select",
            "staff_id",
            "from",
            "research_staff",
            "where",
            "employer_organisation_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__research_staff__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__research_staff.staff_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__research_staff.employer_organisation_id__",
                            false
                        ],
                        null
                    ],
                    "\"6\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT Shop_ID FROM hiring WHERE Is_full_time = 'F';",
        "question": "Select shop id from hiring when is full time equals F",
        "tables": [
            "hiring",
            "shop",
            "evaluation",
            "employee"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "shop",
            "id",
            "from",
            "hiring",
            "when",
            "is",
            "full",
            "time",
            "equals",
            "F"
        ],
        "query_toks": [
            "SELECT",
            "Shop_ID",
            "FROM",
            "hiring",
            "WHERE",
            "Is_full_time",
            "=",
            "'F'"
        ],
        "query_toks_no_value": [
            "select",
            "shop_id",
            "from",
            "hiring",
            "where",
            "is_full_time",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__hiring__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__hiring.shop_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__hiring.is_full_time__",
                            false
                        ],
                        null
                    ],
                    "\"F\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT Start_from FROM hiring WHERE Shop_ID = 4;",
        "question": "Select start from from hiring when shop id equals 4",
        "tables": [
            "hiring",
            "shop",
            "evaluation",
            "employee"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "start",
            "from",
            "from",
            "hiring",
            "when",
            "shop",
            "id",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Start_from",
            "FROM",
            "hiring",
            "WHERE",
            "Shop_ID",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "start_from",
            "from",
            "hiring",
            "where",
            "shop_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__hiring__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__hiring.start_from__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__hiring.shop_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT Manager_name FROM shop WHERE Number_products = '5000';",
        "question": "Select manager name from shop when number products equals 5000",
        "tables": [
            "hiring",
            "shop",
            "evaluation",
            "employee"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "manager",
            "name",
            "from",
            "shop",
            "when",
            "number",
            "products",
            "equals",
            "5000"
        ],
        "query_toks": [
            "SELECT",
            "Manager_name",
            "FROM",
            "shop",
            "WHERE",
            "Number_products",
            "=",
            "'5000'"
        ],
        "query_toks_no_value": [
            "select",
            "manager_name",
            "from",
            "shop",
            "where",
            "number_products",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__shop__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__shop.manager_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__shop.number_products__",
                            false
                        ],
                        null
                    ],
                    "\"5000\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT * FROM shop WHERE Number_products = 5000;",
        "question": "Select all columns from shop when number products equals 5000",
        "tables": [
            "hiring",
            "shop",
            "evaluation",
            "employee"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "shop",
            "when",
            "number",
            "products",
            "equals",
            "5000"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "shop",
            "WHERE",
            "Number_products",
            "=",
            "5000"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "shop",
            "where",
            "number_products",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__shop__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__shop.number_products__",
                            false
                        ],
                        null
                    ],
                    5000.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT * FROM evaluation WHERE Employee_ID = 4;",
        "question": "Select all columns from evaluation when employee id equals 4",
        "tables": [
            "hiring",
            "shop",
            "evaluation",
            "employee"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "evaluation",
            "when",
            "employee",
            "id",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "evaluation",
            "WHERE",
            "Employee_ID",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "evaluation",
            "where",
            "employee_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__evaluation__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__evaluation.employee_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT Age FROM employee WHERE Name = 'Jason Hobson';",
        "question": "Select age from employee when name equals Jason Hobson",
        "tables": [
            "hiring",
            "shop",
            "evaluation",
            "employee"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "age",
            "from",
            "employee",
            "when",
            "name",
            "equals",
            "Jason",
            "Hobson"
        ],
        "query_toks": [
            "SELECT",
            "Age",
            "FROM",
            "employee",
            "WHERE",
            "Name",
            "=",
            "'Jason",
            "Hobson'"
        ],
        "query_toks_no_value": [
            "select",
            "age",
            "from",
            "employee",
            "where",
            "name",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__employee__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__employee.age__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__employee.name__",
                            false
                        ],
                        null
                    ],
                    "\"Jason Hobson\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "movie_1",
        "query": "SELECT ratingDate FROM Rating WHERE rID = '202';",
        "question": "Select rating date from rating when reviewer id equals 202",
        "tables": [
            "Rating",
            "Movie",
            "Reviewer"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "rating",
            "date",
            "from",
            "rating",
            "when",
            "reviewer",
            "id",
            "equals",
            "202"
        ],
        "query_toks": [
            "SELECT",
            "ratingDate",
            "FROM",
            "Rating",
            "WHERE",
            "rID",
            "=",
            "'202'"
        ],
        "query_toks_no_value": [
            "select",
            "ratingdate",
            "from",
            "rating",
            "where",
            "rid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__rating__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__rating.ratingdate__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__rating.rid__",
                            false
                        ],
                        null
                    ],
                    "\"202\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "movie_1",
        "query": "SELECT director FROM Movie WHERE mID = '103';",
        "question": "Select director from movie when movie id equals 103",
        "tables": [
            "Rating",
            "Movie",
            "Reviewer"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "director",
            "from",
            "movie",
            "when",
            "movie",
            "id",
            "equals",
            "103"
        ],
        "query_toks": [
            "SELECT",
            "director",
            "FROM",
            "Movie",
            "WHERE",
            "mID",
            "=",
            "'103'"
        ],
        "query_toks_no_value": [
            "select",
            "director",
            "from",
            "movie",
            "where",
            "mid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__movie__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__movie.director__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__movie.mid__",
                            false
                        ],
                        null
                    ],
                    "\"103\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "movie_1",
        "query": "SELECT name FROM Reviewer WHERE rID = '204';",
        "question": "Select name from reviewer when reviewer id equals 204",
        "tables": [
            "Rating",
            "Movie",
            "Reviewer"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "name",
            "from",
            "reviewer",
            "when",
            "reviewer",
            "id",
            "equals",
            "204"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "Reviewer",
            "WHERE",
            "rID",
            "=",
            "'204'"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "reviewer",
            "where",
            "rid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__reviewer__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__reviewer.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__reviewer.rid__",
                            false
                        ],
                        null
                    ],
                    "\"204\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "query": "SELECT ID FROM Highschooler WHERE grade = '11';",
        "question": "Select id from high schooler when grade equals 11",
        "tables": [
            "Highschooler",
            "Likes",
            "Friend"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "id",
            "from",
            "high",
            "schooler",
            "when",
            "grade",
            "equals",
            "11"
        ],
        "query_toks": [
            "SELECT",
            "ID",
            "FROM",
            "Highschooler",
            "WHERE",
            "grade",
            "=",
            "'11'"
        ],
        "query_toks_no_value": [
            "select",
            "id",
            "from",
            "highschooler",
            "where",
            "grade",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__highschooler__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__highschooler.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__highschooler.grade__",
                            false
                        ],
                        null
                    ],
                    "\"11\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "query": "SELECT * FROM Highschooler WHERE grade = 10;",
        "question": "Select all columns from high schooler when grade equals 10",
        "tables": [
            "Highschooler",
            "Likes",
            "Friend"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "high",
            "schooler",
            "when",
            "grade",
            "equals",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Highschooler",
            "WHERE",
            "grade",
            "=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "highschooler",
            "where",
            "grade",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__highschooler__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__highschooler.grade__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "query": "SELECT student_id FROM Likes WHERE liked_id = '1247';",
        "question": "Select student id from likes when liked id equals 1247",
        "tables": [
            "Highschooler",
            "Likes",
            "Friend"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "student",
            "id",
            "from",
            "likes",
            "when",
            "liked",
            "id",
            "equals",
            "1247"
        ],
        "query_toks": [
            "SELECT",
            "student_id",
            "FROM",
            "Likes",
            "WHERE",
            "liked_id",
            "=",
            "'1247'"
        ],
        "query_toks_no_value": [
            "select",
            "student_id",
            "from",
            "likes",
            "where",
            "liked_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__likes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__likes.student_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__likes.liked_id__",
                            false
                        ],
                        null
                    ],
                    "\"1247\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "query": "SELECT student_id FROM Likes WHERE liked_id = 1934;",
        "question": "Select student id from likes when liked id equals 1934",
        "tables": [
            "Highschooler",
            "Likes",
            "Friend"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "student",
            "id",
            "from",
            "likes",
            "when",
            "liked",
            "id",
            "equals",
            "1934"
        ],
        "query_toks": [
            "SELECT",
            "student_id",
            "FROM",
            "Likes",
            "WHERE",
            "liked_id",
            "=",
            "1934"
        ],
        "query_toks_no_value": [
            "select",
            "student_id",
            "from",
            "likes",
            "where",
            "liked_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__likes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__likes.student_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__likes.liked_id__",
                            false
                        ],
                        null
                    ],
                    1934.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "query": "SELECT friend_id FROM Friend WHERE student_id = '1101';",
        "question": "Select friend id from friend when student id equals 1101",
        "tables": [
            "Highschooler",
            "Likes",
            "Friend"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "friend",
            "id",
            "from",
            "friend",
            "when",
            "student",
            "id",
            "equals",
            "1101"
        ],
        "query_toks": [
            "SELECT",
            "friend_id",
            "FROM",
            "Friend",
            "WHERE",
            "student_id",
            "=",
            "'1101'"
        ],
        "query_toks_no_value": [
            "select",
            "friend_id",
            "from",
            "friend",
            "where",
            "student_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__friend__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__friend.friend_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__friend.student_id__",
                            false
                        ],
                        null
                    ],
                    "\"1101\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "query": "SELECT * FROM Friend WHERE friend_id = 1101;",
        "question": "Select all columns from friend when friend id equals 1101",
        "tables": [
            "Highschooler",
            "Likes",
            "Friend"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "friend",
            "when",
            "friend",
            "id",
            "equals",
            "1101"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Friend",
            "WHERE",
            "friend_id",
            "=",
            "1101"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "friend",
            "where",
            "friend_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__friend__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__friend.friend_id__",
                            false
                        ],
                        null
                    ],
                    1101.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "query": "SELECT Final_Table_Made FROM poker_player WHERE Poker_Player_ID = '1';",
        "question": "Select final table made from poker player when poker player id equals 1",
        "tables": [
            "poker_player",
            "people"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "final",
            "table",
            "made",
            "from",
            "poker",
            "player",
            "when",
            "poker",
            "player",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Final_Table_Made",
            "FROM",
            "poker_player",
            "WHERE",
            "Poker_Player_ID",
            "=",
            "'1'"
        ],
        "query_toks_no_value": [
            "select",
            "final_table_made",
            "from",
            "poker_player",
            "where",
            "poker_player_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__poker_player__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__poker_player.final_table_made__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__poker_player.poker_player_id__",
                            false
                        ],
                        null
                    ],
                    "\"1\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "query": "SELECT Final_Table_Made FROM poker_player WHERE Poker_Player_ID = 3;",
        "question": "Select final table made from poker player when poker player id equals 3",
        "tables": [
            "poker_player",
            "people"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "final",
            "table",
            "made",
            "from",
            "poker",
            "player",
            "when",
            "poker",
            "player",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Final_Table_Made",
            "FROM",
            "poker_player",
            "WHERE",
            "Poker_Player_ID",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "final_table_made",
            "from",
            "poker_player",
            "where",
            "poker_player_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__poker_player__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__poker_player.final_table_made__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__poker_player.poker_player_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "query": "SELECT Height FROM people WHERE Name = 'Semen Poltavskiy';",
        "question": "Select height from people when name equals Semen Poltavskiy",
        "tables": [
            "poker_player",
            "people"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "height",
            "from",
            "people",
            "when",
            "name",
            "equals",
            "Semen",
            "Poltavskiy"
        ],
        "query_toks": [
            "SELECT",
            "Height",
            "FROM",
            "people",
            "WHERE",
            "Name",
            "=",
            "'Semen",
            "Poltavskiy'"
        ],
        "query_toks_no_value": [
            "select",
            "height",
            "from",
            "people",
            "where",
            "name",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__people__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__people.height__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__people.name__",
                            false
                        ],
                        null
                    ],
                    "\"Semen Poltavskiy\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "program_share",
        "query": "SELECT Launch FROM program WHERE Program_ID = '5';",
        "question": "Select launch from program when program id equals 5",
        "tables": [
            "program",
            "broadcast",
            "channel",
            "broadcast_share"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "launch",
            "from",
            "program",
            "when",
            "program",
            "id",
            "equals",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "Launch",
            "FROM",
            "program",
            "WHERE",
            "Program_ID",
            "=",
            "'5'"
        ],
        "query_toks_no_value": [
            "select",
            "launch",
            "from",
            "program",
            "where",
            "program_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__program__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__program.launch__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__program.program_id__",
                            false
                        ],
                        null
                    ],
                    "\"5\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "program_share",
        "query": "SELECT Channel_ID FROM broadcast WHERE Time_of_day = 'Morning';",
        "question": "Select channel id from broadcast when time of day equals Morning",
        "tables": [
            "program",
            "broadcast",
            "channel",
            "broadcast_share"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "channel",
            "id",
            "from",
            "broadcast",
            "when",
            "time",
            "of",
            "day",
            "equals",
            "Morning"
        ],
        "query_toks": [
            "SELECT",
            "Channel_ID",
            "FROM",
            "broadcast",
            "WHERE",
            "Time_of_day",
            "=",
            "'Morning'"
        ],
        "query_toks_no_value": [
            "select",
            "channel_id",
            "from",
            "broadcast",
            "where",
            "time_of_day",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__broadcast__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__broadcast.channel_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__broadcast.time_of_day__",
                            false
                        ],
                        null
                    ],
                    "\"Morning\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "program_share",
        "query": "SELECT * FROM broadcast WHERE Channel_ID = 5;",
        "question": "Select all columns from broadcast when channel id equals 5",
        "tables": [
            "program",
            "broadcast",
            "channel",
            "broadcast_share"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "broadcast",
            "when",
            "channel",
            "id",
            "equals",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "broadcast",
            "WHERE",
            "Channel_ID",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "broadcast",
            "where",
            "channel_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__broadcast__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__broadcast.channel_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "program_share",
        "query": "SELECT * FROM channel WHERE Channel_ID = 10;",
        "question": "Select all columns from channel when channel id equals 10",
        "tables": [
            "program",
            "broadcast",
            "channel",
            "broadcast_share"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "channel",
            "when",
            "channel",
            "id",
            "equals",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "channel",
            "WHERE",
            "Channel_ID",
            "=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "channel",
            "where",
            "channel_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__channel__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__channel.channel_id__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "program_share",
        "query": "SELECT Share_in_percent FROM broadcast_share WHERE Date = '10,Jun';",
        "question": "Select share in percent from broadcast share when date equals 10,Jun",
        "tables": [
            "program",
            "broadcast",
            "channel",
            "broadcast_share"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "share",
            "in",
            "percent",
            "from",
            "broadcast",
            "share",
            "when",
            "date",
            "equals",
            "10",
            ",",
            "Jun"
        ],
        "query_toks": [
            "SELECT",
            "Share_in_percent",
            "FROM",
            "broadcast_share",
            "WHERE",
            "Date",
            "=",
            "'10,Jun'"
        ],
        "query_toks_no_value": [
            "select",
            "share_in_percent",
            "from",
            "broadcast_share",
            "where",
            "date",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__broadcast_share__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__broadcast_share.share_in_percent__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__broadcast_share.date__",
                            false
                        ],
                        null
                    ],
                    "\"10,Jun\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "aircraft",
        "query": "SELECT * FROM airport WHERE Airport_ID = 6;",
        "question": "Select all columns from airport when airport id equals 6",
        "tables": [
            "airport",
            "match",
            "pilot",
            "airport_aircraft",
            "aircraft"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "airport",
            "when",
            "airport",
            "id",
            "equals",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "airport",
            "WHERE",
            "Airport_ID",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "airport",
            "where",
            "airport_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__airport__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__airport.airport_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "aircraft",
        "query": "SELECT Round FROM match WHERE Country = 'United Arab Emirates';",
        "question": "Select round from match when country equals United Arab Emirates",
        "tables": [
            "airport",
            "match",
            "pilot",
            "airport_aircraft",
            "aircraft"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "round",
            "from",
            "match",
            "when",
            "country",
            "equals",
            "United",
            "Arab",
            "Emirates"
        ],
        "query_toks": [
            "SELECT",
            "Round",
            "FROM",
            "match",
            "WHERE",
            "Countr",
            "(",
            "Countr",
            ")",
            "=",
            "'United",
            "Arab",
            "Emirates'"
        ],
        "query_toks_no_value": [
            "select",
            "round",
            "from",
            "match",
            "where",
            "countr",
            "(",
            "countr",
            ")",
            "=",
            "value",
            "arab",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__match__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__match.round__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__match.country__",
                            false
                        ],
                        null
                    ],
                    "\"United Arab Emirates\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "aircraft",
        "query": "SELECT * FROM pilot WHERE Pilot_Id = 11;",
        "question": "Select all columns from pilot when pilot id equals 11",
        "tables": [
            "airport",
            "match",
            "pilot",
            "airport_aircraft",
            "aircraft"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "pilot",
            "when",
            "pilot",
            "id",
            "equals",
            "11"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "pilot",
            "WHERE",
            "Pilot_Id",
            "=",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "pilot",
            "where",
            "pilot_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__pilot__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__pilot.pilot_id__",
                            false
                        ],
                        null
                    ],
                    11.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "aircraft",
        "query": "SELECT ID FROM airport_aircraft WHERE Aircraft_ID = '2';",
        "question": "Select id from airport aircraft when aircraft id equals 2",
        "tables": [
            "airport",
            "match",
            "pilot",
            "airport_aircraft",
            "aircraft"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "id",
            "from",
            "airport",
            "aircraft",
            "when",
            "aircraft",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "ID",
            "FROM",
            "airport_aircraft",
            "WHERE",
            "Aircraft_ID",
            "=",
            "'2'"
        ],
        "query_toks_no_value": [
            "select",
            "id",
            "from",
            "airport_aircraft",
            "where",
            "aircraft_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__airport_aircraft__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__airport_aircraft.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__airport_aircraft.aircraft_id__",
                            false
                        ],
                        null
                    ],
                    "\"2\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "aircraft",
        "query": "SELECT * FROM airport_aircraft WHERE Airport_ID = 6;",
        "question": "Select all columns from airport aircraft when airport id equals 6",
        "tables": [
            "airport",
            "match",
            "pilot",
            "airport_aircraft",
            "aircraft"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "airport",
            "aircraft",
            "when",
            "airport",
            "id",
            "equals",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "airport_aircraft",
            "WHERE",
            "Airport_ID",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "airport_aircraft",
            "where",
            "airport_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__airport_aircraft__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__airport_aircraft.airport_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "aircraft",
        "query": "SELECT * FROM aircraft WHERE Aircraft_ID = 4;",
        "question": "Select all columns from aircraft when aircraft id equals 4",
        "tables": [
            "airport",
            "match",
            "pilot",
            "airport_aircraft",
            "aircraft"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "aircraft",
            "when",
            "aircraft",
            "id",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "aircraft",
            "WHERE",
            "Aircraft_ID",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "aircraft",
            "where",
            "aircraft_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__aircraft__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__aircraft.aircraft_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "restaurant_1",
        "query": "SELECT Sex FROM Student WHERE LName = 'Leighton';",
        "question": "Select sex from student when last name equals Leighton",
        "tables": [
            "Restaurant_Type",
            "Student",
            "Type_Of_Restaurant",
            "Visits_Restaurant",
            "Restaurant"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "sex",
            "from",
            "student",
            "when",
            "last",
            "name",
            "equals",
            "Leighton"
        ],
        "query_toks": [
            "SELECT",
            "Sex",
            "FROM",
            "Student",
            "WHERE",
            "LName",
            "=",
            "'Leighton'"
        ],
        "query_toks_no_value": [
            "select",
            "sex",
            "from",
            "student",
            "where",
            "lname",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.sex__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__student.lname__",
                            false
                        ],
                        null
                    ],
                    "\"Leighton\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "restaurant_1",
        "query": "SELECT Fname FROM Student WHERE Advisor = 1148;",
        "question": "Select first name from student when advisor equals 1148",
        "tables": [
            "Restaurant_Type",
            "Student",
            "Type_Of_Restaurant",
            "Visits_Restaurant",
            "Restaurant"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "first",
            "name",
            "from",
            "student",
            "when",
            "advisor",
            "equals",
            "1148"
        ],
        "query_toks": [
            "SELECT",
            "Fname",
            "FROM",
            "Student",
            "WHERE",
            "Advisor",
            "=",
            "1148"
        ],
        "query_toks_no_value": [
            "select",
            "fname",
            "from",
            "student",
            "where",
            "advisor",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.fname__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__student.advisor__",
                            false
                        ],
                        null
                    ],
                    1148.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "restaurant_1",
        "query": "SELECT ResID FROM Type_Of_Restaurant WHERE ResTypeID = '1';",
        "question": "Select restaurant id from type of restaurant when restaurant type id equals 1",
        "tables": [
            "Restaurant_Type",
            "Student",
            "Type_Of_Restaurant",
            "Visits_Restaurant",
            "Restaurant"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "restaurant",
            "id",
            "from",
            "type",
            "of",
            "restaurant",
            "when",
            "restaurant",
            "type",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "ResID",
            "FROM",
            "Type_Of_Restaurant",
            "WHERE",
            "ResTypeID",
            "=",
            "'1'"
        ],
        "query_toks_no_value": [
            "select",
            "resid",
            "from",
            "type_of_restaurant",
            "where",
            "restypeid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__type_of_restaurant__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__type_of_restaurant.resid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__type_of_restaurant.restypeid__",
                            false
                        ],
                        null
                    ],
                    "\"1\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "restaurant_1",
        "query": "SELECT * FROM Type_Of_Restaurant WHERE ResTypeID = 2;",
        "question": "Select all columns from type of restaurant when restaurant type id equals 2",
        "tables": [
            "Restaurant_Type",
            "Student",
            "Type_Of_Restaurant",
            "Visits_Restaurant",
            "Restaurant"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "type",
            "of",
            "restaurant",
            "when",
            "restaurant",
            "type",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Type_Of_Restaurant",
            "WHERE",
            "ResTypeID",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "type_of_restaurant",
            "where",
            "restypeid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__type_of_restaurant__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__type_of_restaurant.restypeid__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "restaurant_1",
        "query": "SELECT Address FROM Restaurant WHERE ResID = '1';",
        "question": "Select address from restaurant when restaurant id equals 1",
        "tables": [
            "Restaurant_Type",
            "Student",
            "Type_Of_Restaurant",
            "Visits_Restaurant",
            "Restaurant"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "address",
            "from",
            "restaurant",
            "when",
            "restaurant",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Address",
            "FROM",
            "Restaurant",
            "WHERE",
            "ResID",
            "=",
            "'1'"
        ],
        "query_toks_no_value": [
            "select",
            "address",
            "from",
            "restaurant",
            "where",
            "resid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__restaurant__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__restaurant.address__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__restaurant.resid__",
                            false
                        ],
                        null
                    ],
                    "\"1\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_invoices",
        "query": "SELECT product_name FROM Products WHERE product_size = 'Medium';",
        "question": "Select product name from products when product size equals Medium",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Accounts",
            "Customers",
            "Product_Categories",
            "Invoice_Line_Items",
            "Financial_Transactions",
            "Orders"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "product",
            "name",
            "from",
            "products",
            "when",
            "product",
            "size",
            "equals",
            "Medium"
        ],
        "query_toks": [
            "SELECT",
            "product_name",
            "FROM",
            "Products",
            "WHERE",
            "product_size",
            "=",
            "'Medium'"
        ],
        "query_toks_no_value": [
            "select",
            "product_name",
            "from",
            "products",
            "where",
            "product_size",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products.product_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__products.product_size__",
                            false
                        ],
                        null
                    ],
                    "\"Medium\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_invoices",
        "query": "SELECT product_id FROM Order_Items WHERE order_item_id = '5';",
        "question": "Select product id from order items when order item id equals 5",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Accounts",
            "Customers",
            "Product_Categories",
            "Invoice_Line_Items",
            "Financial_Transactions",
            "Orders"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "product",
            "id",
            "from",
            "order",
            "items",
            "when",
            "order",
            "item",
            "id",
            "equals",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "product_id",
            "FROM",
            "Order_Items",
            "WHERE",
            "order_item_id",
            "=",
            "'5'"
        ],
        "query_toks_no_value": [
            "select",
            "product_id",
            "from",
            "order_items",
            "where",
            "order_item_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__order_items__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__order_items.product_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__order_items.order_item_id__",
                            false
                        ],
                        null
                    ],
                    "\"5\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_invoices",
        "query": "SELECT invoice_date FROM Invoices WHERE order_id = '5';",
        "question": "Select invoice date from invoices when order id equals 5",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Accounts",
            "Customers",
            "Product_Categories",
            "Invoice_Line_Items",
            "Financial_Transactions",
            "Orders"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "invoice",
            "date",
            "from",
            "invoices",
            "when",
            "order",
            "id",
            "equals",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "invoice_date",
            "FROM",
            "Invoices",
            "WHERE",
            "order_id",
            "=",
            "'5'"
        ],
        "query_toks_no_value": [
            "select",
            "invoice_date",
            "from",
            "invoices",
            "where",
            "order_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__invoices__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__invoices.invoice_date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__invoices.order_id__",
                            false
                        ],
                        null
                    ],
                    "\"5\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_invoices",
        "query": "SELECT * FROM Invoices WHERE order_id = 11;",
        "question": "Select all columns from invoices when order id equals 11",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Accounts",
            "Customers",
            "Product_Categories",
            "Invoice_Line_Items",
            "Financial_Transactions",
            "Orders"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "invoices",
            "when",
            "order",
            "id",
            "equals",
            "11"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Invoices",
            "WHERE",
            "order_id",
            "=",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "invoices",
            "where",
            "order_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__invoices__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__invoices.order_id__",
                            false
                        ],
                        null
                    ],
                    11.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_invoices",
        "query": "SELECT other_account_details FROM Accounts WHERE account_id = '14';",
        "question": "Select other account details from accounts when account id equals 14",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Accounts",
            "Customers",
            "Product_Categories",
            "Invoice_Line_Items",
            "Financial_Transactions",
            "Orders"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "other",
            "account",
            "details",
            "from",
            "accounts",
            "when",
            "account",
            "id",
            "equals",
            "14"
        ],
        "query_toks": [
            "SELECT",
            "other_account_details",
            "FROM",
            "Accounts",
            "WHERE",
            "account_id",
            "=",
            "'14'"
        ],
        "query_toks_no_value": [
            "select",
            "other_account_details",
            "from",
            "accounts",
            "where",
            "account_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__accounts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__accounts.other_account_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__accounts.account_id__",
                            false
                        ],
                        null
                    ],
                    "\"14\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_invoices",
        "query": "SELECT account_name FROM Accounts WHERE account_id = 8;",
        "question": "Select account name from accounts when account id equals 8",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Accounts",
            "Customers",
            "Product_Categories",
            "Invoice_Line_Items",
            "Financial_Transactions",
            "Orders"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "account",
            "name",
            "from",
            "accounts",
            "when",
            "account",
            "id",
            "equals",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "account_name",
            "FROM",
            "Accounts",
            "WHERE",
            "account_id",
            "=",
            "8"
        ],
        "query_toks_no_value": [
            "select",
            "account_name",
            "from",
            "accounts",
            "where",
            "account_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__accounts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__accounts.account_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__accounts.account_id__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_invoices",
        "query": "SELECT town_city FROM Customers WHERE customer_middle_initial = 'H';",
        "question": "Select town city from customers when customer middle initial equals H",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Accounts",
            "Customers",
            "Product_Categories",
            "Invoice_Line_Items",
            "Financial_Transactions",
            "Orders"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "town",
            "city",
            "from",
            "customers",
            "when",
            "customer",
            "middle",
            "initial",
            "equals",
            "H"
        ],
        "query_toks": [
            "SELECT",
            "town_city",
            "FROM",
            "Customers",
            "WHERE",
            "customer_middle_initial",
            "=",
            "'H'"
        ],
        "query_toks_no_value": [
            "select",
            "town_city",
            "from",
            "customers",
            "where",
            "customer_middle_initial",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.town_city__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customers.customer_middle_initial__",
                            false
                        ],
                        null
                    ],
                    "\"H\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_and_eClaims",
        "query": "SELECT Staff_Details FROM Staff WHERE Staff_ID = '771';",
        "question": "Select staff details from staff when staff id equals 771",
        "tables": [
            "Staff",
            "Claim_Headers",
            "Claims_Processing",
            "Policies",
            "Customers",
            "Claims_Documents",
            "Claims_Processing_Stages"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "staff",
            "details",
            "from",
            "staff",
            "when",
            "staff",
            "id",
            "equals",
            "771"
        ],
        "query_toks": [
            "SELECT",
            "Staff_Details",
            "FROM",
            "Staff",
            "WHERE",
            "Staff_ID",
            "=",
            "'771'"
        ],
        "query_toks_no_value": [
            "select",
            "staff_details",
            "from",
            "staff",
            "where",
            "staff_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__staff__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__staff.staff_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__staff.staff_id__",
                            false
                        ],
                        null
                    ],
                    "\"771\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_and_eClaims",
        "query": "SELECT Amount_Piad FROM Claim_Headers WHERE Claim_Type_Code = 'Handphone Subsidy';",
        "question": "Select amount piad from claim headers when claim type code equals Handphone Subsidy",
        "tables": [
            "Staff",
            "Claim_Headers",
            "Claims_Processing",
            "Policies",
            "Customers",
            "Claims_Documents",
            "Claims_Processing_Stages"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "amount",
            "piad",
            "from",
            "claim",
            "headers",
            "when",
            "claim",
            "type",
            "code",
            "equals",
            "Handphone",
            "Subsidy"
        ],
        "query_toks": [
            "SELECT",
            "Amount_Piad",
            "FROM",
            "Claim_Headers",
            "WHERE",
            "Claim_Type_Code",
            "=",
            "'Handphone",
            "Subsidy'"
        ],
        "query_toks_no_value": [
            "select",
            "amount_piad",
            "from",
            "claim_headers",
            "where",
            "claim_type_code",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__claim_headers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__claim_headers.amount_piad__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__claim_headers.claim_type_code__",
                            false
                        ],
                        null
                    ],
                    "\"Handphone Subsidy\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_and_eClaims",
        "query": "SELECT Claim_Outcome_Code FROM Claims_Processing WHERE Claim_Processing_ID = '342';",
        "question": "Select claim outcome code from claims processing when claim processing id equals 342",
        "tables": [
            "Staff",
            "Claim_Headers",
            "Claims_Processing",
            "Policies",
            "Customers",
            "Claims_Documents",
            "Claims_Processing_Stages"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "claim",
            "outcome",
            "code",
            "from",
            "claims",
            "processing",
            "when",
            "claim",
            "processing",
            "id",
            "equals",
            "342"
        ],
        "query_toks": [
            "SELECT",
            "Claim_Outcome_Code",
            "FROM",
            "Claims_Processing",
            "WHERE",
            "Claim_Processing_ID",
            "=",
            "'342'"
        ],
        "query_toks_no_value": [
            "select",
            "claim_outcome_code",
            "from",
            "claims_processing",
            "where",
            "claim_processing_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__claims_processing__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__claims_processing.claim_outcome_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__claims_processing.claim_processing_id__",
                            false
                        ],
                        null
                    ],
                    "\"342\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_and_eClaims",
        "query": "SELECT * FROM Claims_Processing WHERE Staff_ID = 427;",
        "question": "Select all columns from claims processing when staff id equals 427",
        "tables": [
            "Staff",
            "Claim_Headers",
            "Claims_Processing",
            "Policies",
            "Customers",
            "Claims_Documents",
            "Claims_Processing_Stages"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "claims",
            "processing",
            "when",
            "staff",
            "id",
            "equals",
            "427"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Claims_Processing",
            "WHERE",
            "Staff_ID",
            "=",
            "427"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "claims_processing",
            "where",
            "staff_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__claims_processing__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__claims_processing.staff_id__",
                            false
                        ],
                        null
                    ],
                    427.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_and_eClaims",
        "query": "SELECT Start_Date FROM Policies WHERE Policy_ID = 773;",
        "question": "Select start date from policies when policy id equals 773",
        "tables": [
            "Staff",
            "Claim_Headers",
            "Claims_Processing",
            "Policies",
            "Customers",
            "Claims_Documents",
            "Claims_Processing_Stages"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "start",
            "date",
            "from",
            "policies",
            "when",
            "policy",
            "id",
            "equals",
            "773"
        ],
        "query_toks": [
            "SELECT",
            "Start_Date",
            "FROM",
            "Policies",
            "WHERE",
            "Policy_ID",
            "=",
            "773"
        ],
        "query_toks_no_value": [
            "select",
            "start_date",
            "from",
            "policies",
            "where",
            "policy_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__policies__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__policies.start_date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__policies.policy_id__",
                            false
                        ],
                        null
                    ],
                    773.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_and_eClaims",
        "query": "SELECT Customer_Details FROM Customers WHERE Customer_ID = '799';",
        "question": "Select customer details from customers when customer id equals 799",
        "tables": [
            "Staff",
            "Claim_Headers",
            "Claims_Processing",
            "Policies",
            "Customers",
            "Claims_Documents",
            "Claims_Processing_Stages"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "customer",
            "details",
            "from",
            "customers",
            "when",
            "customer",
            "id",
            "equals",
            "799"
        ],
        "query_toks": [
            "SELECT",
            "Customer_Details",
            "FROM",
            "Customers",
            "WHERE",
            "Customer_ID",
            "=",
            "'799'"
        ],
        "query_toks_no_value": [
            "select",
            "customer_details",
            "from",
            "customers",
            "where",
            "customer_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customers.customer_id__",
                            false
                        ],
                        null
                    ],
                    "\"799\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_and_eClaims",
        "query": "SELECT * FROM Customers WHERE Customer_ID = 252;",
        "question": "Select all columns from customers when customer id equals 252",
        "tables": [
            "Staff",
            "Claim_Headers",
            "Claims_Processing",
            "Policies",
            "Customers",
            "Claims_Documents",
            "Claims_Processing_Stages"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "customers",
            "when",
            "customer",
            "id",
            "equals",
            "252"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Customers",
            "WHERE",
            "Customer_ID",
            "=",
            "252"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "customers",
            "where",
            "customer_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customers.customer_id__",
                            false
                        ],
                        null
                    ],
                    252.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_and_eClaims",
        "query": "SELECT Document_Type_Code FROM Claims_Documents WHERE Created_Date = '7';",
        "question": "Select document type code from claims documents when created date equals 7",
        "tables": [
            "Staff",
            "Claim_Headers",
            "Claims_Processing",
            "Policies",
            "Customers",
            "Claims_Documents",
            "Claims_Processing_Stages"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "document",
            "type",
            "code",
            "from",
            "claims",
            "documents",
            "when",
            "created",
            "date",
            "equals",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "Document_Type_Code",
            "FROM",
            "Claims_Documents",
            "WHERE",
            "Created_Date",
            "=",
            "'7'"
        ],
        "query_toks_no_value": [
            "select",
            "document_type_code",
            "from",
            "claims_documents",
            "where",
            "created_date",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__claims_documents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__claims_documents.document_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__claims_documents.created_date__",
                            false
                        ],
                        null
                    ],
                    "\"7\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_and_eClaims",
        "query": "SELECT Created_Date FROM Claims_Documents WHERE Claim_ID = 45;",
        "question": "Select created date from claims documents when claim id equals 45",
        "tables": [
            "Staff",
            "Claim_Headers",
            "Claims_Processing",
            "Policies",
            "Customers",
            "Claims_Documents",
            "Claims_Processing_Stages"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "created",
            "date",
            "from",
            "claims",
            "documents",
            "when",
            "claim",
            "id",
            "equals",
            "45"
        ],
        "query_toks": [
            "SELECT",
            "Created_Date",
            "FROM",
            "Claims_Documents",
            "WHERE",
            "Claim_ID",
            "=",
            "45"
        ],
        "query_toks_no_value": [
            "select",
            "created_date",
            "from",
            "claims_documents",
            "where",
            "claim_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__claims_documents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__claims_documents.created_date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__claims_documents.claim_id__",
                            false
                        ],
                        null
                    ],
                    45.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_and_eClaims",
        "query": "SELECT Claim_Status_Description FROM Claims_Processing_Stages WHERE Next_Claim_Stage_ID = '1';",
        "question": "Select claim status description from claims processing stages when next claim stage id equals 1",
        "tables": [
            "Staff",
            "Claim_Headers",
            "Claims_Processing",
            "Policies",
            "Customers",
            "Claims_Documents",
            "Claims_Processing_Stages"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "claim",
            "status",
            "description",
            "from",
            "claims",
            "processing",
            "stages",
            "when",
            "next",
            "claim",
            "stage",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Claim_Status_Description",
            "FROM",
            "Claims_Processing_Stages",
            "WHERE",
            "Next_Claim_Stage_ID",
            "=",
            "'1'"
        ],
        "query_toks_no_value": [
            "select",
            "claim_status_description",
            "from",
            "claims_processing_stages",
            "where",
            "next_claim_stage_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__claims_processing_stages__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__claims_processing_stages.claim_status_description__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__claims_processing_stages.next_claim_stage_id__",
                            false
                        ],
                        null
                    ],
                    "\"1\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_and_eClaims",
        "query": "SELECT * FROM Claims_Processing_Stages WHERE Next_Claim_Stage_ID = 1;",
        "question": "Select all columns from claims processing stages when next claim stage id equals 1",
        "tables": [
            "Staff",
            "Claim_Headers",
            "Claims_Processing",
            "Policies",
            "Customers",
            "Claims_Documents",
            "Claims_Processing_Stages"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "claims",
            "processing",
            "stages",
            "when",
            "next",
            "claim",
            "stage",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Claims_Processing_Stages",
            "WHERE",
            "Next_Claim_Stage_ID",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "claims_processing_stages",
            "where",
            "next_claim_stage_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__claims_processing_stages__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__claims_processing_stages.next_claim_stage_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_1",
        "query": "SELECT SCHOOL_CODE FROM DEPARTMENT WHERE DEPT_NAME = 'English';",
        "question": "Select school code from department when department name equals English",
        "tables": [
            "DEPARTMENT",
            "STUDENT",
            "PROFESSOR",
            "CLASS",
            "EMPLOYEE",
            "ENROLL",
            "COURSE"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "school",
            "code",
            "from",
            "department",
            "when",
            "department",
            "name",
            "equals",
            "English"
        ],
        "query_toks": [
            "SELECT",
            "SCHOOL_CODE",
            "FROM",
            "DEPARTMENT",
            "WHERE",
            "DEPT_NAME",
            "=",
            "'English'"
        ],
        "query_toks_no_value": [
            "select",
            "school_code",
            "from",
            "department",
            "where",
            "dept_name",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__department__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__department.school_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__department.dept_name__",
                            false
                        ],
                        null
                    ],
                    "\"English\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_1",
        "query": "SELECT STU_PHONE FROM STUDENT WHERE STU_CLASS = 'Fr';",
        "question": "Select student phone from student when student class equals Fr",
        "tables": [
            "DEPARTMENT",
            "STUDENT",
            "PROFESSOR",
            "CLASS",
            "EMPLOYEE",
            "ENROLL",
            "COURSE"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "student",
            "phone",
            "from",
            "student",
            "when",
            "student",
            "class",
            "equals",
            "Fr"
        ],
        "query_toks": [
            "SELECT",
            "STU_PHONE",
            "FROM",
            "STUDENT",
            "WHERE",
            "STU_CLASS",
            "=",
            "'Fr'"
        ],
        "query_toks_no_value": [
            "select",
            "stu_phone",
            "from",
            "student",
            "where",
            "stu_class",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.stu_phone__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__student.stu_class__",
                            false
                        ],
                        null
                    ],
                    "\"Fr\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_1",
        "query": "SELECT CLASS_ROOM FROM CLASS WHERE CLASS_CODE = '10021';",
        "question": "Select class room from class when class code equals 10021",
        "tables": [
            "DEPARTMENT",
            "STUDENT",
            "PROFESSOR",
            "CLASS",
            "EMPLOYEE",
            "ENROLL",
            "COURSE"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "class",
            "room",
            "from",
            "class",
            "when",
            "class",
            "code",
            "equals",
            "10021"
        ],
        "query_toks": [
            "SELECT",
            "CLASS_ROOM",
            "FROM",
            "CLASS",
            "WHERE",
            "CLASS_CODE",
            "=",
            "'10021'"
        ],
        "query_toks_no_value": [
            "select",
            "class_room",
            "from",
            "class",
            "where",
            "class_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__class__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__class.class_room__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__class.class_code__",
                            false
                        ],
                        null
                    ],
                    "\"10021\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_1",
        "query": "SELECT CLASS_CODE FROM ENROLL WHERE STU_NUM = '321452';",
        "question": "Select class code from enroll when student number equals 321452",
        "tables": [
            "DEPARTMENT",
            "STUDENT",
            "PROFESSOR",
            "CLASS",
            "EMPLOYEE",
            "ENROLL",
            "COURSE"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "class",
            "code",
            "from",
            "enroll",
            "when",
            "student",
            "number",
            "equals",
            "321452"
        ],
        "query_toks": [
            "SELECT",
            "CLASS_CODE",
            "FROM",
            "ENROLL",
            "WHERE",
            "STU_NUM",
            "=",
            "'321452'"
        ],
        "query_toks_no_value": [
            "select",
            "class_code",
            "from",
            "enroll",
            "where",
            "stu_num",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__enroll__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__enroll.class_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__enroll.stu_num__",
                            false
                        ],
                        null
                    ],
                    "\"321452\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_mdm",
        "query": "SELECT cmi_details FROM Customer_Master_Index WHERE master_customer_id = '7';",
        "question": "Select cmi details from customer master index when master customer id equals 7",
        "tables": [
            "Customer_Master_Index",
            "Parking_Fines",
            "Benefits_Overpayments",
            "CMI_Cross_References",
            "Council_Tax",
            "Rent_Arrears",
            "Electoral_Register",
            "Business_Rates"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "cmi",
            "details",
            "from",
            "customer",
            "master",
            "index",
            "when",
            "master",
            "customer",
            "id",
            "equals",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "cmi_details",
            "FROM",
            "Customer_Master_Index",
            "WHERE",
            "master_customer_id",
            "=",
            "'7'"
        ],
        "query_toks_no_value": [
            "select",
            "cmi_details",
            "from",
            "customer_master_index",
            "where",
            "master_customer_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_master_index__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_master_index.cmi_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customer_master_index.master_customer_id__",
                            false
                        ],
                        null
                    ],
                    "\"7\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_mdm",
        "query": "SELECT cmi_details FROM Customer_Master_Index WHERE master_customer_id = 1;",
        "question": "Select cmi details from customer master index when master customer id equals 1",
        "tables": [
            "Customer_Master_Index",
            "Parking_Fines",
            "Benefits_Overpayments",
            "CMI_Cross_References",
            "Council_Tax",
            "Rent_Arrears",
            "Electoral_Register",
            "Business_Rates"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "cmi",
            "details",
            "from",
            "customer",
            "master",
            "index",
            "when",
            "master",
            "customer",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "cmi_details",
            "FROM",
            "Customer_Master_Index",
            "WHERE",
            "master_customer_id",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "cmi_details",
            "from",
            "customer_master_index",
            "where",
            "master_customer_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_master_index__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_master_index.cmi_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customer_master_index.master_customer_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_mdm",
        "query": "SELECT council_tax_id FROM Parking_Fines WHERE cmi_cross_ref_id = '81';",
        "question": "Select council tax id from parking fines when cmi cross reference id equals 81",
        "tables": [
            "Customer_Master_Index",
            "Parking_Fines",
            "Benefits_Overpayments",
            "CMI_Cross_References",
            "Council_Tax",
            "Rent_Arrears",
            "Electoral_Register",
            "Business_Rates"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "council",
            "tax",
            "id",
            "from",
            "parking",
            "fines",
            "when",
            "cmi",
            "cross",
            "reference",
            "id",
            "equals",
            "81"
        ],
        "query_toks": [
            "SELECT",
            "council_tax_id",
            "FROM",
            "Parking_Fines",
            "WHERE",
            "cmi_cross_ref_id",
            "=",
            "'81'"
        ],
        "query_toks_no_value": [
            "select",
            "council_tax_id",
            "from",
            "parking_fines",
            "where",
            "cmi_cross_ref_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__parking_fines__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__parking_fines.council_tax_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__parking_fines.cmi_cross_ref_id__",
                            false
                        ],
                        null
                    ],
                    "\"81\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_mdm",
        "query": "SELECT * FROM Parking_Fines WHERE council_tax_id = 10;",
        "question": "Select all columns from parking fines when council tax id equals 10",
        "tables": [
            "Customer_Master_Index",
            "Parking_Fines",
            "Benefits_Overpayments",
            "CMI_Cross_References",
            "Council_Tax",
            "Rent_Arrears",
            "Electoral_Register",
            "Business_Rates"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "parking",
            "fines",
            "when",
            "council",
            "tax",
            "id",
            "equals",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Parking_Fines",
            "WHERE",
            "council_tax_id",
            "=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "parking_fines",
            "where",
            "council_tax_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__parking_fines__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__parking_fines.council_tax_id__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_mdm",
        "query": "SELECT cmi_cross_ref_id FROM Benefits_Overpayments WHERE council_tax_id = '7';",
        "question": "Select cmi cross ref id from benefits overpayments when council tax id equals 7",
        "tables": [
            "Customer_Master_Index",
            "Parking_Fines",
            "Benefits_Overpayments",
            "CMI_Cross_References",
            "Council_Tax",
            "Rent_Arrears",
            "Electoral_Register",
            "Business_Rates"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "cmi",
            "cross",
            "ref",
            "id",
            "from",
            "benefits",
            "overpayments",
            "when",
            "council",
            "tax",
            "id",
            "equals",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "cmi_cross_ref_id",
            "FROM",
            "Benefits_Overpayments",
            "WHERE",
            "council_tax_id",
            "=",
            "'7'"
        ],
        "query_toks_no_value": [
            "select",
            "cmi_cross_ref_id",
            "from",
            "benefits_overpayments",
            "where",
            "council_tax_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__benefits_overpayments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__benefits_overpayments.cmi_cross_ref_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__benefits_overpayments.council_tax_id__",
                            false
                        ],
                        null
                    ],
                    "\"7\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_mdm",
        "query": "SELECT council_tax_id FROM Benefits_Overpayments WHERE cmi_cross_ref_id = 65;",
        "question": "Select council tax id from benefits overpayments when cmi cross ref id equals 65",
        "tables": [
            "Customer_Master_Index",
            "Parking_Fines",
            "Benefits_Overpayments",
            "CMI_Cross_References",
            "Council_Tax",
            "Rent_Arrears",
            "Electoral_Register",
            "Business_Rates"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "council",
            "tax",
            "id",
            "from",
            "benefits",
            "overpayments",
            "when",
            "cmi",
            "cross",
            "ref",
            "id",
            "equals",
            "65"
        ],
        "query_toks": [
            "SELECT",
            "council_tax_id",
            "FROM",
            "Benefits_Overpayments",
            "WHERE",
            "cmi_cross_ref_id",
            "=",
            "65"
        ],
        "query_toks_no_value": [
            "select",
            "council_tax_id",
            "from",
            "benefits_overpayments",
            "where",
            "cmi_cross_ref_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__benefits_overpayments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__benefits_overpayments.council_tax_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__benefits_overpayments.cmi_cross_ref_id__",
                            false
                        ],
                        null
                    ],
                    65.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_mdm",
        "query": "SELECT cmi_cross_ref_id FROM CMI_Cross_References WHERE source_system_code = 'Business';",
        "question": "Select cmi cross reference id from cmi cross references when source system code equals Business",
        "tables": [
            "Customer_Master_Index",
            "Parking_Fines",
            "Benefits_Overpayments",
            "CMI_Cross_References",
            "Council_Tax",
            "Rent_Arrears",
            "Electoral_Register",
            "Business_Rates"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "cmi",
            "cross",
            "reference",
            "id",
            "from",
            "cmi",
            "cross",
            "references",
            "when",
            "source",
            "system",
            "code",
            "equals",
            "Business"
        ],
        "query_toks": [
            "SELECT",
            "cmi_cross_ref_id",
            "FROM",
            "CMI_Cross_References",
            "WHERE",
            "source_system_code",
            "=",
            "'Business'"
        ],
        "query_toks_no_value": [
            "select",
            "cmi_cross_ref_id",
            "from",
            "cmi_cross_references",
            "where",
            "source_system_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__cmi_cross_references__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__cmi_cross_references.cmi_cross_ref_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__cmi_cross_references.source_system_code__",
                            false
                        ],
                        null
                    ],
                    "\"Business\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_mdm",
        "query": "SELECT * FROM CMI_Cross_References WHERE cmi_cross_ref_id = 102;",
        "question": "Select all columns from cmi cross references when cmi cross reference id equals 102",
        "tables": [
            "Customer_Master_Index",
            "Parking_Fines",
            "Benefits_Overpayments",
            "CMI_Cross_References",
            "Council_Tax",
            "Rent_Arrears",
            "Electoral_Register",
            "Business_Rates"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "cmi",
            "cross",
            "references",
            "when",
            "cmi",
            "cross",
            "reference",
            "id",
            "equals",
            "102"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "CMI_Cross_References",
            "WHERE",
            "cmi_cross_ref_id",
            "=",
            "102"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "cmi_cross_references",
            "where",
            "cmi_cross_ref_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__cmi_cross_references__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__cmi_cross_references.cmi_cross_ref_id__",
                            false
                        ],
                        null
                    ],
                    102.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_mdm",
        "query": "SELECT cmi_cross_ref_id FROM Council_Tax WHERE council_tax_id = '8';",
        "question": "Select cmi cross reference id from council tax when council tax id equals 8",
        "tables": [
            "Customer_Master_Index",
            "Parking_Fines",
            "Benefits_Overpayments",
            "CMI_Cross_References",
            "Council_Tax",
            "Rent_Arrears",
            "Electoral_Register",
            "Business_Rates"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "cmi",
            "cross",
            "reference",
            "id",
            "from",
            "council",
            "tax",
            "when",
            "council",
            "tax",
            "id",
            "equals",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "cmi_cross_ref_id",
            "FROM",
            "Council_Tax",
            "WHERE",
            "council_tax_id",
            "=",
            "'8'"
        ],
        "query_toks_no_value": [
            "select",
            "cmi_cross_ref_id",
            "from",
            "council_tax",
            "where",
            "council_tax_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__council_tax__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__council_tax.cmi_cross_ref_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__council_tax.council_tax_id__",
                            false
                        ],
                        null
                    ],
                    "\"8\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_mdm",
        "query": "SELECT cmi_cross_ref_id FROM Council_Tax WHERE council_tax_id = 9;",
        "question": "Select cmi cross reference id from council tax when council tax id equals 9",
        "tables": [
            "Customer_Master_Index",
            "Parking_Fines",
            "Benefits_Overpayments",
            "CMI_Cross_References",
            "Council_Tax",
            "Rent_Arrears",
            "Electoral_Register",
            "Business_Rates"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "cmi",
            "cross",
            "reference",
            "id",
            "from",
            "council",
            "tax",
            "when",
            "council",
            "tax",
            "id",
            "equals",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "cmi_cross_ref_id",
            "FROM",
            "Council_Tax",
            "WHERE",
            "council_tax_id",
            "=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "cmi_cross_ref_id",
            "from",
            "council_tax",
            "where",
            "council_tax_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__council_tax__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__council_tax.cmi_cross_ref_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__council_tax.council_tax_id__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_mdm",
        "query": "SELECT council_tax_id FROM Rent_Arrears WHERE cmi_cross_ref_id = '59';",
        "question": "Select council tax id from rent arrears when cmi cross reference id equals 59",
        "tables": [
            "Customer_Master_Index",
            "Parking_Fines",
            "Benefits_Overpayments",
            "CMI_Cross_References",
            "Council_Tax",
            "Rent_Arrears",
            "Electoral_Register",
            "Business_Rates"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "council",
            "tax",
            "id",
            "from",
            "rent",
            "arrears",
            "when",
            "cmi",
            "cross",
            "reference",
            "id",
            "equals",
            "59"
        ],
        "query_toks": [
            "SELECT",
            "council_tax_id",
            "FROM",
            "Rent_Arrears",
            "WHERE",
            "cmi_cross_ref_id",
            "=",
            "'59'"
        ],
        "query_toks_no_value": [
            "select",
            "council_tax_id",
            "from",
            "rent_arrears",
            "where",
            "cmi_cross_ref_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__rent_arrears__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__rent_arrears.council_tax_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__rent_arrears.cmi_cross_ref_id__",
                            false
                        ],
                        null
                    ],
                    "\"59\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_mdm",
        "query": "SELECT * FROM Rent_Arrears WHERE council_tax_id = 2;",
        "question": "Select all columns from rent arrears when council tax id equals 2",
        "tables": [
            "Customer_Master_Index",
            "Parking_Fines",
            "Benefits_Overpayments",
            "CMI_Cross_References",
            "Council_Tax",
            "Rent_Arrears",
            "Electoral_Register",
            "Business_Rates"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "rent",
            "arrears",
            "when",
            "council",
            "tax",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Rent_Arrears",
            "WHERE",
            "council_tax_id",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "rent_arrears",
            "where",
            "council_tax_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__rent_arrears__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__rent_arrears.council_tax_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_mdm",
        "query": "SELECT electoral_register_id FROM Electoral_Register WHERE cmi_cross_ref_id = '83';",
        "question": "Select electoral register id from electoral register when cmi cross reference id equals 83",
        "tables": [
            "Customer_Master_Index",
            "Parking_Fines",
            "Benefits_Overpayments",
            "CMI_Cross_References",
            "Council_Tax",
            "Rent_Arrears",
            "Electoral_Register",
            "Business_Rates"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "electoral",
            "register",
            "id",
            "from",
            "electoral",
            "register",
            "when",
            "cmi",
            "cross",
            "reference",
            "id",
            "equals",
            "83"
        ],
        "query_toks": [
            "SELECT",
            "electoral_register_id",
            "FROM",
            "Electoral_Register",
            "WHERE",
            "cmi_cross_ref_id",
            "=",
            "'83'"
        ],
        "query_toks_no_value": [
            "select",
            "electoral_register_id",
            "from",
            "electoral_register",
            "where",
            "cmi_cross_ref_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__electoral_register__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__electoral_register.electoral_register_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__electoral_register.cmi_cross_ref_id__",
                            false
                        ],
                        null
                    ],
                    "\"83\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_mdm",
        "query": "SELECT electoral_register_id FROM Electoral_Register WHERE cmi_cross_ref_id = 83;",
        "question": "Select electoral register id from electoral register when cmi cross reference id equals 83",
        "tables": [
            "Customer_Master_Index",
            "Parking_Fines",
            "Benefits_Overpayments",
            "CMI_Cross_References",
            "Council_Tax",
            "Rent_Arrears",
            "Electoral_Register",
            "Business_Rates"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "electoral",
            "register",
            "id",
            "from",
            "electoral",
            "register",
            "when",
            "cmi",
            "cross",
            "reference",
            "id",
            "equals",
            "83"
        ],
        "query_toks": [
            "SELECT",
            "electoral_register_id",
            "FROM",
            "Electoral_Register",
            "WHERE",
            "cmi_cross_ref_id",
            "=",
            "83"
        ],
        "query_toks_no_value": [
            "select",
            "electoral_register_id",
            "from",
            "electoral_register",
            "where",
            "cmi_cross_ref_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__electoral_register__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__electoral_register.electoral_register_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__electoral_register.cmi_cross_ref_id__",
                            false
                        ],
                        null
                    ],
                    83.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_mdm",
        "query": "SELECT cmi_cross_ref_id FROM Business_Rates WHERE business_rates_id = '8';",
        "question": "Select cmi cross reference id from business rates when business rates id equals 8",
        "tables": [
            "Customer_Master_Index",
            "Parking_Fines",
            "Benefits_Overpayments",
            "CMI_Cross_References",
            "Council_Tax",
            "Rent_Arrears",
            "Electoral_Register",
            "Business_Rates"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "cmi",
            "cross",
            "reference",
            "id",
            "from",
            "business",
            "rates",
            "when",
            "business",
            "rates",
            "id",
            "equals",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "cmi_cross_ref_id",
            "FROM",
            "Business_Rates",
            "WHERE",
            "business_rates_id",
            "=",
            "'8'"
        ],
        "query_toks_no_value": [
            "select",
            "cmi_cross_ref_id",
            "from",
            "business_rates",
            "where",
            "business_rates_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__business_rates__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__business_rates.cmi_cross_ref_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__business_rates.business_rates_id__",
                            false
                        ],
                        null
                    ],
                    "\"8\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_mdm",
        "query": "SELECT * FROM Business_Rates WHERE business_rates_id = 2;",
        "question": "Select all columns from business rates when business rates id equals 2",
        "tables": [
            "Customer_Master_Index",
            "Parking_Fines",
            "Benefits_Overpayments",
            "CMI_Cross_References",
            "Council_Tax",
            "Rent_Arrears",
            "Electoral_Register",
            "Business_Rates"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "business",
            "rates",
            "when",
            "business",
            "rates",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Business_Rates",
            "WHERE",
            "business_rates_id",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "business_rates",
            "where",
            "business_rates_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__business_rates__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__business_rates.business_rates_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "book_2",
        "query": "SELECT Writer FROM book WHERE Book_ID = '3';",
        "question": "Select writer from book when book id equals 3",
        "tables": [
            "book",
            "publication"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "writer",
            "from",
            "book",
            "when",
            "book",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Writer",
            "FROM",
            "book",
            "WHERE",
            "Book_ID",
            "=",
            "'3'"
        ],
        "query_toks_no_value": [
            "select",
            "writer",
            "from",
            "book",
            "where",
            "book_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__book__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__book.writer__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__book.book_id__",
                            false
                        ],
                        null
                    ],
                    "\"3\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "book_2",
        "query": "SELECT Publication_ID FROM publication WHERE Book_ID = '1';",
        "question": "Select publication id from publication when book id equals 1",
        "tables": [
            "book",
            "publication"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "publication",
            "id",
            "from",
            "publication",
            "when",
            "book",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Publication_ID",
            "FROM",
            "publication",
            "WHERE",
            "Book_ID",
            "=",
            "'1'"
        ],
        "query_toks_no_value": [
            "select",
            "publication_id",
            "from",
            "publication",
            "where",
            "book_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__publication__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__publication.publication_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__publication.book_id__",
                            false
                        ],
                        null
                    ],
                    "\"1\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "book_2",
        "query": "SELECT Book_ID FROM publication WHERE Publication_ID = 7;",
        "question": "Select book id from publication when publication id equals 7",
        "tables": [
            "book",
            "publication"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "book",
            "id",
            "from",
            "publication",
            "when",
            "publication",
            "id",
            "equals",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "Book_ID",
            "FROM",
            "publication",
            "WHERE",
            "Publication_ID",
            "=",
            "7"
        ],
        "query_toks_no_value": [
            "select",
            "book_id",
            "from",
            "publication",
            "where",
            "publication_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__publication__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__publication.book_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__publication.publication_id__",
                            false
                        ],
                        null
                    ],
                    7.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hr_1",
        "query": "SELECT COUNTRY_NAME FROM countries WHERE REGION_ID = '4';",
        "question": "Select country name from countries when region id equals 4",
        "tables": [
            "countries",
            "regions",
            "locations",
            "jobs",
            "job_history",
            "departments",
            "employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "country",
            "name",
            "from",
            "countries",
            "when",
            "region",
            "id",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "COUNTRY_NAM",
            "(",
            "COUNTRY_NAM",
            ")",
            "FROM",
            "countrie",
            "(",
            "countrie",
            ")",
            "WHERE",
            "REGION_ID",
            "=",
            "'4'"
        ],
        "query_toks_no_value": [
            "select",
            "country_nam",
            "(",
            "country_nam",
            ")",
            "from",
            "countrie",
            "(",
            "countrie",
            ")",
            "where",
            "region_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__countries__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__countries.country_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__countries.region_id__",
                            false
                        ],
                        null
                    ],
                    "\"4\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hr_1",
        "query": "SELECT LOCATION_ID FROM locations WHERE CITY = 'Southlake';",
        "question": "Select location id from locations when city equals Southlake",
        "tables": [
            "countries",
            "regions",
            "locations",
            "jobs",
            "job_history",
            "departments",
            "employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "location",
            "id",
            "from",
            "locations",
            "when",
            "city",
            "equals",
            "Southlake"
        ],
        "query_toks": [
            "SELECT",
            "LOCATION_ID",
            "FROM",
            "locations",
            "WHERE",
            "CITY",
            "=",
            "'Southlake'"
        ],
        "query_toks_no_value": [
            "select",
            "location_id",
            "from",
            "locations",
            "where",
            "city",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__locations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__locations.location_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__locations.city__",
                            false
                        ],
                        null
                    ],
                    "\"Southlake\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hr_1",
        "query": "SELECT JOB_ID FROM jobs WHERE MAX_SALARY = '10500';",
        "question": "Select job id from jobs when max salary equals 10500",
        "tables": [
            "countries",
            "regions",
            "locations",
            "jobs",
            "job_history",
            "departments",
            "employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "job",
            "id",
            "from",
            "jobs",
            "when",
            "max",
            "salary",
            "equals",
            "10500"
        ],
        "query_toks": [
            "SELECT",
            "JOB_ID",
            "FROM",
            "jobs",
            "WHERE",
            "MAX_SALAR",
            "(",
            "MAX_SALAR",
            ")",
            "=",
            "'10500'"
        ],
        "query_toks_no_value": [
            "select",
            "job_id",
            "from",
            "jobs",
            "where",
            "max_salar",
            "(",
            "max_salar",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__jobs__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__jobs.job_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__jobs.max_salary__",
                            false
                        ],
                        null
                    ],
                    "\"10500\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hr_1",
        "query": "SELECT MIN_SALARY FROM jobs WHERE MAX_SALARY = 10500;",
        "question": "Select min salary from jobs when max salary equals 10500",
        "tables": [
            "countries",
            "regions",
            "locations",
            "jobs",
            "job_history",
            "departments",
            "employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "min",
            "salary",
            "from",
            "jobs",
            "when",
            "max",
            "salary",
            "equals",
            "10500"
        ],
        "query_toks": [
            "SELECT",
            "MIN_SALAR",
            "(",
            "MIN_SALAR",
            ")",
            "FROM",
            "jobs",
            "WHERE",
            "MAX_SALAR",
            "(",
            "MAX_SALAR",
            ")",
            "=",
            "10500"
        ],
        "query_toks_no_value": [
            "select",
            "min_salar",
            "(",
            "min_salar",
            ")",
            "from",
            "jobs",
            "where",
            "max_salar",
            "(",
            "max_salar",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__jobs__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__jobs.min_salary__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__jobs.max_salary__",
                            false
                        ],
                        null
                    ],
                    10500.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hr_1",
        "query": "SELECT * FROM job_history WHERE DEPARTMENT_ID = 50;",
        "question": "Select all columns from job history when department id equals 50",
        "tables": [
            "countries",
            "regions",
            "locations",
            "jobs",
            "job_history",
            "departments",
            "employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "job",
            "history",
            "when",
            "department",
            "id",
            "equals",
            "50"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "job_history",
            "WHERE",
            "DEPARTMENT_ID",
            "=",
            "50"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "job_history",
            "where",
            "department_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__job_history__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__job_history.department_id__",
                            false
                        ],
                        null
                    ],
                    50.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hr_1",
        "query": "SELECT MANAGER_ID FROM departments WHERE LOCATION_ID = '1800';",
        "question": "Select manager id from departments when location id equals 1800",
        "tables": [
            "countries",
            "regions",
            "locations",
            "jobs",
            "job_history",
            "departments",
            "employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "manager",
            "id",
            "from",
            "departments",
            "when",
            "location",
            "id",
            "equals",
            "1800"
        ],
        "query_toks": [
            "SELECT",
            "MANAGER_ID",
            "FROM",
            "departments",
            "WHERE",
            "LOCATION_ID",
            "=",
            "'1800'"
        ],
        "query_toks_no_value": [
            "select",
            "manager_id",
            "from",
            "departments",
            "where",
            "location_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__departments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__departments.manager_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__departments.location_id__",
                            false
                        ],
                        null
                    ],
                    "\"1800\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hr_1",
        "query": "SELECT MANAGER_ID FROM employees WHERE EMPLOYEE_ID = '154';",
        "question": "Select manager id from employees when employee id equals 154",
        "tables": [
            "countries",
            "regions",
            "locations",
            "jobs",
            "job_history",
            "departments",
            "employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "manager",
            "id",
            "from",
            "employees",
            "when",
            "employee",
            "id",
            "equals",
            "154"
        ],
        "query_toks": [
            "SELECT",
            "MANAGER_ID",
            "FROM",
            "employees",
            "WHERE",
            "EMPLOYEE_ID",
            "=",
            "'154'"
        ],
        "query_toks_no_value": [
            "select",
            "manager_id",
            "from",
            "employees",
            "where",
            "employee_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__employees__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__employees.manager_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__employees.employee_id__",
                            false
                        ],
                        null
                    ],
                    "\"154\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_1",
        "query": "SELECT seq FROM sqlite_sequence WHERE name = 'Country';",
        "question": "Select seq from sqlite sequence when name equals Country",
        "tables": [
            "sqlite_sequence",
            "Player_Attributes",
            "League",
            "Team_Attributes",
            "Player",
            "Team",
            "Country"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "seq",
            "from",
            "sqlite",
            "sequence",
            "when",
            "name",
            "equals",
            "Country"
        ],
        "query_toks": [
            "SELECT",
            "seq",
            "FROM",
            "sqlite_sequence",
            "WHERE",
            "name",
            "=",
            "'Country'"
        ],
        "query_toks_no_value": [
            "select",
            "seq",
            "from",
            "sqlite_sequence",
            "where",
            "name",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__sqlite_sequence__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__sqlite_sequence.seq__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__sqlite_sequence.name__",
                            false
                        ],
                        null
                    ],
                    "\"Country\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_1",
        "query": "SELECT attacking_work_rate FROM Player_Attributes WHERE volleys = '73';",
        "question": "Select attacking work rate from player attributes when volleys equals 73",
        "tables": [
            "sqlite_sequence",
            "Player_Attributes",
            "League",
            "Team_Attributes",
            "Player",
            "Team",
            "Country"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "attacking",
            "work",
            "rate",
            "from",
            "player",
            "attributes",
            "when",
            "volleys",
            "equals",
            "73"
        ],
        "query_toks": [
            "SELECT",
            "attacking_work_rate",
            "FROM",
            "Player_Attributes",
            "WHERE",
            "volleys",
            "=",
            "'73'"
        ],
        "query_toks_no_value": [
            "select",
            "attacking_work_rate",
            "from",
            "player_attributes",
            "where",
            "volleys",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__player_attributes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__player_attributes.attacking_work_rate__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__player_attributes.volleys__",
                            false
                        ],
                        null
                    ],
                    "\"73\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_1",
        "query": "SELECT * FROM Player_Attributes WHERE gk_reflexes = 37;",
        "question": "Select all columns from player attributes when gk reflexes equals 37",
        "tables": [
            "sqlite_sequence",
            "Player_Attributes",
            "League",
            "Team_Attributes",
            "Player",
            "Team",
            "Country"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "player",
            "attributes",
            "when",
            "gk",
            "reflexes",
            "equals",
            "37"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Player_Attributes",
            "WHERE",
            "gk_reflexes",
            "=",
            "37"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "player_attributes",
            "where",
            "gk_reflexes",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__player_attributes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__player_attributes.gk_reflexes__",
                            false
                        ],
                        null
                    ],
                    37.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_1",
        "query": "SELECT name FROM League WHERE country_id = '15722';",
        "question": "Select name from league when country id equals 15722",
        "tables": [
            "sqlite_sequence",
            "Player_Attributes",
            "League",
            "Team_Attributes",
            "Player",
            "Team",
            "Country"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "name",
            "from",
            "league",
            "when",
            "country",
            "id",
            "equals",
            "15722"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "League",
            "WHERE",
            "country_i",
            "(",
            "country_i",
            ")",
            "=",
            "'15722'"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "league",
            "where",
            "country_i",
            "(",
            "country_i",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__league__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__league.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__league.country_id__",
                            false
                        ],
                        null
                    ],
                    "\"15722\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_1",
        "query": "SELECT name FROM League WHERE id = 7809;",
        "question": "Select name from league when id equals 7809",
        "tables": [
            "sqlite_sequence",
            "Player_Attributes",
            "League",
            "Team_Attributes",
            "Player",
            "Team",
            "Country"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "name",
            "from",
            "league",
            "when",
            "id",
            "equals",
            "7809"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "League",
            "WHERE",
            "id",
            "=",
            "7809"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "league",
            "where",
            "id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__league__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__league.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__league.id__",
                            false
                        ],
                        null
                    ],
                    7809.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_1",
        "query": "SELECT buildUpPlayPassing FROM Team_Attributes WHERE defenceTeamWidthClass = 'Narrow';",
        "question": "Select buildup play passing from team attributes when defence team width class equals Narrow",
        "tables": [
            "sqlite_sequence",
            "Player_Attributes",
            "League",
            "Team_Attributes",
            "Player",
            "Team",
            "Country"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "buildup",
            "play",
            "passing",
            "from",
            "team",
            "attributes",
            "when",
            "defence",
            "team",
            "width",
            "class",
            "equals",
            "Narrow"
        ],
        "query_toks": [
            "SELECT",
            "buildUpPlayPassing",
            "FROM",
            "Team_Attributes",
            "WHERE",
            "defenceTeamWidthClass",
            "=",
            "'Narrow'"
        ],
        "query_toks_no_value": [
            "select",
            "buildupplaypassing",
            "from",
            "team_attributes",
            "where",
            "defenceteamwidthclass",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__team_attributes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__team_attributes.buildupplaypassing__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__team_attributes.defenceteamwidthclass__",
                            false
                        ],
                        null
                    ],
                    "\"Narrow\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_1",
        "query": "SELECT id FROM Player WHERE weight = '126';",
        "question": "Select id from player when weight equals 126",
        "tables": [
            "sqlite_sequence",
            "Player_Attributes",
            "League",
            "Team_Attributes",
            "Player",
            "Team",
            "Country"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "id",
            "from",
            "player",
            "when",
            "weight",
            "equals",
            "126"
        ],
        "query_toks": [
            "SELECT",
            "id",
            "FROM",
            "Player",
            "WHERE",
            "weight",
            "=",
            "'126'"
        ],
        "query_toks_no_value": [
            "select",
            "id",
            "from",
            "player",
            "where",
            "weight",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__player__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__player.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__player.weight__",
                            false
                        ],
                        null
                    ],
                    "\"126\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_1",
        "query": "SELECT id FROM Team WHERE team_short_name = 'ETG';",
        "question": "Select id from team when team short name equals ETG",
        "tables": [
            "sqlite_sequence",
            "Player_Attributes",
            "League",
            "Team_Attributes",
            "Player",
            "Team",
            "Country"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "id",
            "from",
            "team",
            "when",
            "team",
            "short",
            "name",
            "equals",
            "ETG"
        ],
        "query_toks": [
            "SELECT",
            "id",
            "FROM",
            "Team",
            "WHERE",
            "team_short_name",
            "=",
            "'ETG'"
        ],
        "query_toks_no_value": [
            "select",
            "id",
            "from",
            "team",
            "where",
            "team_short_name",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__team__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__team.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__team.team_short_name__",
                            false
                        ],
                        null
                    ],
                    "\"ETG\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_1",
        "query": "SELECT * FROM Team WHERE team_api_id = 10218;",
        "question": "Select all columns from team when team api id equals 10218",
        "tables": [
            "sqlite_sequence",
            "Player_Attributes",
            "League",
            "Team_Attributes",
            "Player",
            "Team",
            "Country"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "team",
            "when",
            "team",
            "api",
            "id",
            "equals",
            "10218"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Team",
            "WHERE",
            "team_api_id",
            "=",
            "10218"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "team",
            "where",
            "team_api_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__team__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__team.team_api_id__",
                            false
                        ],
                        null
                    ],
                    10218.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_1",
        "query": "SELECT id FROM Country WHERE name = 'Poland';",
        "question": "Select id from country when name equals Poland",
        "tables": [
            "sqlite_sequence",
            "Player_Attributes",
            "League",
            "Team_Attributes",
            "Player",
            "Team",
            "Country"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "id",
            "from",
            "country",
            "when",
            "name",
            "equals",
            "Poland"
        ],
        "query_toks": [
            "SELECT",
            "id",
            "FROM",
            "Countr",
            "(",
            "Countr",
            ")",
            "WHERE",
            "name",
            "=",
            "'Poland'"
        ],
        "query_toks_no_value": [
            "select",
            "id",
            "from",
            "countr",
            "(",
            "countr",
            ")",
            "where",
            "name",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__country__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__country.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__country.name__",
                            false
                        ],
                        null
                    ],
                    "\"Poland\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT last_update FROM city WHERE country_id = '101';",
        "question": "Select last update from city when country id equals 101",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "last",
            "update",
            "from",
            "city",
            "when",
            "country",
            "id",
            "equals",
            "101"
        ],
        "query_toks": [
            "SELECT",
            "last_update",
            "FROM",
            "city",
            "WHERE",
            "country_i",
            "(",
            "country_i",
            ")",
            "=",
            "'101'"
        ],
        "query_toks_no_value": [
            "select",
            "last_update",
            "from",
            "city",
            "where",
            "country_i",
            "(",
            "country_i",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__city__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__city.last_update__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__city.country_id__",
                            false
                        ],
                        null
                    ],
                    "\"101\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT last_update FROM inventory WHERE store_id = '2';",
        "question": "Select last update from inventory when store id equals 2",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "last",
            "update",
            "from",
            "inventory",
            "when",
            "store",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "last_update",
            "FROM",
            "inventory",
            "WHERE",
            "store_id",
            "=",
            "'2'"
        ],
        "query_toks_no_value": [
            "select",
            "last_update",
            "from",
            "inventory",
            "where",
            "store_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__inventory__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__inventory.last_update__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__inventory.store_id__",
                            false
                        ],
                        null
                    ],
                    "\"2\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT film_id FROM inventory WHERE store_id = 2;",
        "question": "Select film id from inventory when store id equals 2",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "film",
            "id",
            "from",
            "inventory",
            "when",
            "store",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "film_id",
            "FROM",
            "inventory",
            "WHERE",
            "store_id",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "film_id",
            "from",
            "inventory",
            "where",
            "store_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__inventory__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__inventory.film_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__inventory.store_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT description FROM film WHERE film_id = '821';",
        "question": "Select description from film when film id equals 821",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "description",
            "from",
            "film",
            "when",
            "film",
            "id",
            "equals",
            "821"
        ],
        "query_toks": [
            "SELECT",
            "description",
            "FROM",
            "film",
            "WHERE",
            "film_id",
            "=",
            "'821'"
        ],
        "query_toks_no_value": [
            "select",
            "description",
            "from",
            "film",
            "where",
            "film_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__film__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__film.description__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__film.film_id__",
                            false
                        ],
                        null
                    ],
                    "\"821\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT last_update FROM film_category WHERE film_id = '227';",
        "question": "Select last update from film category when film id equals 227",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "last",
            "update",
            "from",
            "film",
            "category",
            "when",
            "film",
            "id",
            "equals",
            "227"
        ],
        "query_toks": [
            "SELECT",
            "last_update",
            "FROM",
            "film_category",
            "WHERE",
            "film_id",
            "=",
            "'227'"
        ],
        "query_toks_no_value": [
            "select",
            "last_update",
            "from",
            "film_category",
            "where",
            "film_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__film_category__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__film_category.last_update__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__film_category.film_id__",
                            false
                        ],
                        null
                    ],
                    "\"227\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT last_update FROM address WHERE city_id = '552';",
        "question": "Select last update from address when city id equals 552",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "last",
            "update",
            "from",
            "address",
            "when",
            "city",
            "id",
            "equals",
            "552"
        ],
        "query_toks": [
            "SELECT",
            "last_update",
            "FROM",
            "address",
            "WHERE",
            "city_id",
            "=",
            "'552'"
        ],
        "query_toks_no_value": [
            "select",
            "last_update",
            "from",
            "address",
            "where",
            "city_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__address__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__address.last_update__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__address.city_id__",
                            false
                        ],
                        null
                    ],
                    "\"552\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT * FROM address WHERE phone = 924663855568;",
        "question": "Select all columns from address when phone equals 924663855568",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "address",
            "when",
            "phone",
            "equals",
            "924663855568"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "address",
            "WHERE",
            "phone",
            "=",
            "924663855568"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "address",
            "where",
            "phone",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__address__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__address.phone__",
                            false
                        ],
                        null
                    ],
                    924663855568.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT film_id FROM film_actor WHERE actor_id = '71';",
        "question": "Select film id from film actor when actor id equals 71",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "film",
            "id",
            "from",
            "film",
            "actor",
            "when",
            "actor",
            "id",
            "equals",
            "71"
        ],
        "query_toks": [
            "SELECT",
            "film_id",
            "FROM",
            "film_actor",
            "WHERE",
            "actor_id",
            "=",
            "'71'"
        ],
        "query_toks_no_value": [
            "select",
            "film_id",
            "from",
            "film_actor",
            "where",
            "actor_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__film_actor__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__film_actor.film_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__film_actor.actor_id__",
                            false
                        ],
                        null
                    ],
                    "\"71\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT * FROM film_actor WHERE film_id = 239;",
        "question": "Select all columns from film actor when film id equals 239",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "film",
            "actor",
            "when",
            "film",
            "id",
            "equals",
            "239"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "film_actor",
            "WHERE",
            "film_id",
            "=",
            "239"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "film_actor",
            "where",
            "film_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__film_actor__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__film_actor.film_id__",
                            false
                        ],
                        null
                    ],
                    239.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT payment_id FROM payment WHERE rental_id = '15281';",
        "question": "Select payment id from payment when rental id equals 15281",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "payment",
            "id",
            "from",
            "payment",
            "when",
            "rental",
            "id",
            "equals",
            "15281"
        ],
        "query_toks": [
            "SELECT",
            "payment_id",
            "FROM",
            "payment",
            "WHERE",
            "rental_id",
            "=",
            "'15281'"
        ],
        "query_toks_no_value": [
            "select",
            "payment_id",
            "from",
            "payment",
            "where",
            "rental_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__payment__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__payment.payment_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__payment.rental_id__",
                            false
                        ],
                        null
                    ],
                    "\"15281\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT category_id FROM category WHERE name = 'Animation';",
        "question": "Select category id from category when name equals Animation",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "category",
            "id",
            "from",
            "category",
            "when",
            "name",
            "equals",
            "Animation"
        ],
        "query_toks": [
            "SELECT",
            "category_id",
            "FROM",
            "category",
            "WHERE",
            "name",
            "=",
            "'Animation'"
        ],
        "query_toks_no_value": [
            "select",
            "category_id",
            "from",
            "category",
            "where",
            "name",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__category__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__category.category_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__category.name__",
                            false
                        ],
                        null
                    ],
                    "\"Animation\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT rental_date FROM rental WHERE rental_id = '7000';",
        "question": "Select rental date from rental when rental id equals 7000",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "rental",
            "date",
            "from",
            "rental",
            "when",
            "rental",
            "id",
            "equals",
            "7000"
        ],
        "query_toks": [
            "SELECT",
            "rental_date",
            "FROM",
            "rental",
            "WHERE",
            "rental_id",
            "=",
            "'7000'"
        ],
        "query_toks_no_value": [
            "select",
            "rental_date",
            "from",
            "rental",
            "where",
            "rental_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__rental__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__rental.rental_date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__rental.rental_id__",
                            false
                        ],
                        null
                    ],
                    "\"7000\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT * FROM rental WHERE staff_id = 2;",
        "question": "Select all columns from rental when staff id equals 2",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "rental",
            "when",
            "staff",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "rental",
            "WHERE",
            "staff_id",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "rental",
            "where",
            "staff_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__rental__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__rental.staff_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT last_update FROM country WHERE country_id = '107';",
        "question": "Select last update from country when country id equals 107",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "last",
            "update",
            "from",
            "country",
            "when",
            "country",
            "id",
            "equals",
            "107"
        ],
        "query_toks": [
            "SELECT",
            "last_update",
            "FROM",
            "countr",
            "(",
            "countr",
            ")",
            "WHERE",
            "country_i",
            "(",
            "country_i",
            ")",
            "=",
            "'107'"
        ],
        "query_toks_no_value": [
            "select",
            "last_update",
            "from",
            "countr",
            "(",
            "countr",
            ")",
            "where",
            "country_i",
            "(",
            "country_i",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__country__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__country.last_update__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__country.country_id__",
                            false
                        ],
                        null
                    ],
                    "\"107\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "real_estate_properties",
        "query": "SELECT feature_type_name FROM Ref_Feature_Types WHERE feature_type_code = 'Security';",
        "question": "Select feature type name from reference feature types when feature type code equals Security",
        "tables": [
            "Ref_Feature_Types",
            "Ref_Property_Types",
            "Other_Property_Features",
            "Properties",
            "Other_Available_Features"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "feature",
            "type",
            "name",
            "from",
            "reference",
            "feature",
            "types",
            "when",
            "feature",
            "type",
            "code",
            "equals",
            "Security"
        ],
        "query_toks": [
            "SELECT",
            "feature_type_name",
            "FROM",
            "Ref_Feature_Types",
            "WHERE",
            "feature_type_code",
            "=",
            "'Security'"
        ],
        "query_toks_no_value": [
            "select",
            "feature_type_name",
            "from",
            "ref_feature_types",
            "where",
            "feature_type_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__ref_feature_types__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__ref_feature_types.feature_type_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__ref_feature_types.feature_type_code__",
                            false
                        ],
                        null
                    ],
                    "\"Security\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "real_estate_properties",
        "query": "SELECT property_type_description FROM Ref_Property_Types WHERE property_type_code = 'House';",
        "question": "Select property type description from reference property types when property type code equals House",
        "tables": [
            "Ref_Feature_Types",
            "Ref_Property_Types",
            "Other_Property_Features",
            "Properties",
            "Other_Available_Features"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "property",
            "type",
            "description",
            "from",
            "reference",
            "property",
            "types",
            "when",
            "property",
            "type",
            "code",
            "equals",
            "House"
        ],
        "query_toks": [
            "SELECT",
            "property_type_description",
            "FROM",
            "Ref_Property_Types",
            "WHERE",
            "property_type_code",
            "=",
            "'House'"
        ],
        "query_toks_no_value": [
            "select",
            "property_type_description",
            "from",
            "ref_property_types",
            "where",
            "property_type_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__ref_property_types__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__ref_property_types.property_type_description__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__ref_property_types.property_type_code__",
                            false
                        ],
                        null
                    ],
                    "\"House\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "real_estate_properties",
        "query": "SELECT property_feature_description FROM Other_Property_Features WHERE property_id = '12';",
        "question": "Select property feature description from other property features when property id equals 12",
        "tables": [
            "Ref_Feature_Types",
            "Ref_Property_Types",
            "Other_Property_Features",
            "Properties",
            "Other_Available_Features"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "property",
            "feature",
            "description",
            "from",
            "other",
            "property",
            "features",
            "when",
            "property",
            "id",
            "equals",
            "12"
        ],
        "query_toks": [
            "SELECT",
            "property_feature_description",
            "FROM",
            "Other_Property_Features",
            "WHERE",
            "property_id",
            "=",
            "'12'"
        ],
        "query_toks_no_value": [
            "select",
            "property_feature_description",
            "from",
            "other_property_features",
            "where",
            "property_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__other_property_features__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__other_property_features.property_feature_description__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__other_property_features.property_id__",
                            false
                        ],
                        null
                    ],
                    "\"12\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "real_estate_properties",
        "query": "SELECT * FROM Other_Property_Features WHERE property_id = 9;",
        "question": "Select all columns from other property features when property id equals 9",
        "tables": [
            "Ref_Feature_Types",
            "Ref_Property_Types",
            "Other_Property_Features",
            "Properties",
            "Other_Available_Features"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "other",
            "property",
            "features",
            "when",
            "property",
            "id",
            "equals",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Other_Property_Features",
            "WHERE",
            "property_id",
            "=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "other_property_features",
            "where",
            "property_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__other_property_features__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__other_property_features.property_id__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "real_estate_properties",
        "query": "SELECT property_type_code FROM Properties WHERE room_count = '8';",
        "question": "Select property type code from properties when room count equals 8",
        "tables": [
            "Ref_Feature_Types",
            "Ref_Property_Types",
            "Other_Property_Features",
            "Properties",
            "Other_Available_Features"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "property",
            "type",
            "code",
            "from",
            "properties",
            "when",
            "room",
            "count",
            "equals",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "property_type_code",
            "FROM",
            "Properties",
            "WHERE",
            "room_count",
            "=",
            "'8'"
        ],
        "query_toks_no_value": [
            "select",
            "property_type_code",
            "from",
            "properties",
            "where",
            "room_count",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__properties__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__properties.property_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__properties.room_count__",
                            false
                        ],
                        null
                    ],
                    "\"8\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "real_estate_properties",
        "query": "SELECT feature_description FROM Other_Available_Features WHERE feature_type_code = 'Amenity';",
        "question": "Select feature description from other available features when feature type code equals Amenity",
        "tables": [
            "Ref_Feature_Types",
            "Ref_Property_Types",
            "Other_Property_Features",
            "Properties",
            "Other_Available_Features"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "feature",
            "description",
            "from",
            "other",
            "available",
            "features",
            "when",
            "feature",
            "type",
            "code",
            "equals",
            "Amenity"
        ],
        "query_toks": [
            "SELECT",
            "feature_description",
            "FROM",
            "Other_Available_Features",
            "WHERE",
            "feature_type_code",
            "=",
            "'Amenity'"
        ],
        "query_toks_no_value": [
            "select",
            "feature_description",
            "from",
            "other_available_features",
            "where",
            "feature_type_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__other_available_features__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__other_available_features.feature_description__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__other_available_features.feature_type_code__",
                            false
                        ],
                        null
                    ],
                    "\"Amenity\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_3",
        "query": "SELECT DNO FROM Minor_in WHERE StuID = '1004';",
        "question": "Select department number from minor in when student id equals 1004",
        "tables": [
            "Minor_in",
            "Department",
            "Student",
            "Enrolled_in",
            "Gradeconversion",
            "Member_of",
            "Faculty",
            "Course"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "department",
            "number",
            "from",
            "minor",
            "in",
            "when",
            "student",
            "id",
            "equals",
            "1004"
        ],
        "query_toks": [
            "SELECT",
            "DNO",
            "FROM",
            "Minor_i",
            "(",
            "Minor_i",
            ")",
            "WHERE",
            "StuID",
            "=",
            "'1004'"
        ],
        "query_toks_no_value": [
            "select",
            "dno",
            "from",
            "minor_i",
            "(",
            "minor_i",
            ")",
            "where",
            "stuid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__minor_in__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__minor_in.dno__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__minor_in.stuid__",
                            false
                        ],
                        null
                    ],
                    "\"1004\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_3",
        "query": "SELECT DNO FROM Minor_in WHERE StuID = 1027;",
        "question": "Select department number from minor in when student id equals 1027",
        "tables": [
            "Minor_in",
            "Department",
            "Student",
            "Enrolled_in",
            "Gradeconversion",
            "Member_of",
            "Faculty",
            "Course"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "department",
            "number",
            "from",
            "minor",
            "in",
            "when",
            "student",
            "id",
            "equals",
            "1027"
        ],
        "query_toks": [
            "SELECT",
            "DNO",
            "FROM",
            "Minor_i",
            "(",
            "Minor_i",
            ")",
            "WHERE",
            "StuID",
            "=",
            "1027"
        ],
        "query_toks_no_value": [
            "select",
            "dno",
            "from",
            "minor_i",
            "(",
            "minor_i",
            ")",
            "where",
            "stuid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__minor_in__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__minor_in.dno__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__minor_in.stuid__",
                            false
                        ],
                        null
                    ],
                    1027.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_3",
        "query": "SELECT Division FROM Department WHERE DName = 'Biomedical Engineering';",
        "question": "Select division from department when department name equals Biomedical Engineering",
        "tables": [
            "Minor_in",
            "Department",
            "Student",
            "Enrolled_in",
            "Gradeconversion",
            "Member_of",
            "Faculty",
            "Course"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "division",
            "from",
            "department",
            "when",
            "department",
            "name",
            "equals",
            "Biomedical",
            "Engineering"
        ],
        "query_toks": [
            "SELECT",
            "Division",
            "FROM",
            "Department",
            "WHERE",
            "DName",
            "=",
            "'Biomedical",
            "Engineering'"
        ],
        "query_toks_no_value": [
            "select",
            "division",
            "from",
            "department",
            "where",
            "dname",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__department__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__department.division__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__department.dname__",
                            false
                        ],
                        null
                    ],
                    "\"Biomedical Engineering\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_3",
        "query": "SELECT Advisor FROM Student WHERE LName = 'Norris';",
        "question": "Select advisor from student when last name equals Norris",
        "tables": [
            "Minor_in",
            "Department",
            "Student",
            "Enrolled_in",
            "Gradeconversion",
            "Member_of",
            "Faculty",
            "Course"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "advisor",
            "from",
            "student",
            "when",
            "last",
            "name",
            "equals",
            "Norris"
        ],
        "query_toks": [
            "SELECT",
            "Advisor",
            "FROM",
            "Student",
            "WHERE",
            "LName",
            "=",
            "'Norris'"
        ],
        "query_toks_no_value": [
            "select",
            "advisor",
            "from",
            "student",
            "where",
            "lname",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.advisor__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__student.lname__",
                            false
                        ],
                        null
                    ],
                    "\"Norris\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_3",
        "query": "SELECT Appt_Type FROM Member_of WHERE FacID = '6910';",
        "question": "Select appt type from member of when faculty id equals 6910",
        "tables": [
            "Minor_in",
            "Department",
            "Student",
            "Enrolled_in",
            "Gradeconversion",
            "Member_of",
            "Faculty",
            "Course"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "appt",
            "type",
            "from",
            "member",
            "of",
            "when",
            "faculty",
            "id",
            "equals",
            "6910"
        ],
        "query_toks": [
            "SELECT",
            "Appt_Type",
            "FROM",
            "Member_of",
            "WHERE",
            "FacID",
            "=",
            "'6910'"
        ],
        "query_toks_no_value": [
            "select",
            "appt_type",
            "from",
            "member_of",
            "where",
            "facid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__member_of__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__member_of.appt_type__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__member_of.facid__",
                            false
                        ],
                        null
                    ],
                    "\"6910\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_3",
        "query": "SELECT * FROM Member_of WHERE FacID = 2119;",
        "question": "Select all columns from member of when faculty id equals 2119",
        "tables": [
            "Minor_in",
            "Department",
            "Student",
            "Enrolled_in",
            "Gradeconversion",
            "Member_of",
            "Faculty",
            "Course"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "member",
            "of",
            "when",
            "faculty",
            "id",
            "equals",
            "2119"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Member_of",
            "WHERE",
            "FacID",
            "=",
            "2119"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "member_of",
            "where",
            "facid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__member_of__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__member_of.facid__",
                            false
                        ],
                        null
                    ],
                    2119.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_3",
        "query": "SELECT FacID FROM Faculty WHERE Rank = 'Professor';",
        "question": "Select faculty id from faculty when rank equals Professor",
        "tables": [
            "Minor_in",
            "Department",
            "Student",
            "Enrolled_in",
            "Gradeconversion",
            "Member_of",
            "Faculty",
            "Course"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "faculty",
            "id",
            "from",
            "faculty",
            "when",
            "rank",
            "equals",
            "Professor"
        ],
        "query_toks": [
            "SELECT",
            "FacID",
            "FROM",
            "Faculty",
            "WHERE",
            "Rank",
            "=",
            "'Professor'"
        ],
        "query_toks_no_value": [
            "select",
            "facid",
            "from",
            "faculty",
            "where",
            "rank",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__faculty__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__faculty.facid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__faculty.rank__",
                            false
                        ],
                        null
                    ],
                    "\"Professor\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_3",
        "query": "SELECT FacID FROM Faculty WHERE Room = 319;",
        "question": "Select faculty id from faculty when room equals 319",
        "tables": [
            "Minor_in",
            "Department",
            "Student",
            "Enrolled_in",
            "Gradeconversion",
            "Member_of",
            "Faculty",
            "Course"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "faculty",
            "id",
            "from",
            "faculty",
            "when",
            "room",
            "equals",
            "319"
        ],
        "query_toks": [
            "SELECT",
            "FacID",
            "FROM",
            "Faculty",
            "WHERE",
            "Room",
            "=",
            "319"
        ],
        "query_toks_no_value": [
            "select",
            "facid",
            "from",
            "faculty",
            "where",
            "room",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__faculty__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__faculty.facid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__faculty.room__",
                            false
                        ],
                        null
                    ],
                    319.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_3",
        "query": "SELECT Instructor FROM Course WHERE DNO = '520';",
        "question": "Select instructor from course when department number equals 520",
        "tables": [
            "Minor_in",
            "Department",
            "Student",
            "Enrolled_in",
            "Gradeconversion",
            "Member_of",
            "Faculty",
            "Course"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "instructor",
            "from",
            "course",
            "when",
            "department",
            "number",
            "equals",
            "520"
        ],
        "query_toks": [
            "SELECT",
            "Instructor",
            "FROM",
            "Course",
            "WHERE",
            "DNO",
            "=",
            "'520'"
        ],
        "query_toks_no_value": [
            "select",
            "instructor",
            "from",
            "course",
            "where",
            "dno",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__course__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__course.instructor__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__course.dno__",
                            false
                        ],
                        null
                    ],
                    "\"520\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_3",
        "query": "SELECT * FROM Course WHERE Instructor = 6910;",
        "question": "Select all columns from course when instructor equals 6910",
        "tables": [
            "Minor_in",
            "Department",
            "Student",
            "Enrolled_in",
            "Gradeconversion",
            "Member_of",
            "Faculty",
            "Course"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "course",
            "when",
            "instructor",
            "equals",
            "6910"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Course",
            "WHERE",
            "Instructor",
            "=",
            "6910"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "course",
            "where",
            "instructor",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__course__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__course.instructor__",
                            false
                        ],
                        null
                    ],
                    6910.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Course_ID FROM course_arrange WHERE Teacher_ID = '7';",
        "question": "Select course id from course arrange when teacher id equals 7",
        "tables": [
            "course_arrange",
            "teacher",
            "course"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "course",
            "id",
            "from",
            "course",
            "arrange",
            "when",
            "teacher",
            "id",
            "equals",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "Course_ID",
            "FROM",
            "course_arrange",
            "WHERE",
            "Teacher_ID",
            "=",
            "'7'"
        ],
        "query_toks_no_value": [
            "select",
            "course_id",
            "from",
            "course_arrange",
            "where",
            "teacher_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__course_arrange__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__course_arrange.course_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__course_arrange.teacher_id__",
                            false
                        ],
                        null
                    ],
                    "\"7\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "query": "SELECT * FROM course_arrange WHERE Grade = 4;",
        "question": "Select all columns from course arrange when grade equals 4",
        "tables": [
            "course_arrange",
            "teacher",
            "course"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "course",
            "arrange",
            "when",
            "grade",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "course_arrange",
            "WHERE",
            "Grade",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "course_arrange",
            "where",
            "grade",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__course_arrange__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__course_arrange.grade__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Hometown FROM teacher WHERE Age = '26';",
        "question": "Select hometown from teacher when age equals 26",
        "tables": [
            "course_arrange",
            "teacher",
            "course"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "hometown",
            "from",
            "teacher",
            "when",
            "age",
            "equals",
            "26"
        ],
        "query_toks": [
            "SELECT",
            "Hometown",
            "FROM",
            "teacher",
            "WHERE",
            "Age",
            "=",
            "'26'"
        ],
        "query_toks_no_value": [
            "select",
            "hometown",
            "from",
            "teacher",
            "where",
            "age",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__teacher__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__teacher.hometown__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__teacher.age__",
                            false
                        ],
                        null
                    ],
                    "\"26\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Name FROM teacher WHERE Age = 39;",
        "question": "Select name from teacher when age equals 39",
        "tables": [
            "course_arrange",
            "teacher",
            "course"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "name",
            "from",
            "teacher",
            "when",
            "age",
            "equals",
            "39"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "teacher",
            "WHERE",
            "Age",
            "=",
            "39"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "teacher",
            "where",
            "age",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__teacher__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__teacher.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__teacher.age__",
                            false
                        ],
                        null
                    ],
                    39.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Course FROM course WHERE Staring_Date = '15 May';",
        "question": "Select course from course when staring date equals 15 May",
        "tables": [
            "course_arrange",
            "teacher",
            "course"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "course",
            "from",
            "course",
            "when",
            "staring",
            "date",
            "equals",
            "15",
            "May"
        ],
        "query_toks": [
            "SELECT",
            "Course",
            "FROM",
            "course",
            "WHERE",
            "Staring_Date",
            "=",
            "'15",
            "May'"
        ],
        "query_toks_no_value": [
            "select",
            "course",
            "from",
            "course",
            "where",
            "staring_date",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__course__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__course.course__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__course.staring_date__",
                            false
                        ],
                        null
                    ],
                    "\"15 May\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "roller_coaster",
        "query": "SELECT Height FROM roller_coaster WHERE Opened = 'May 6, 2006';",
        "question": "Select height from roller coaster when opened equals May 6, 2006",
        "tables": [
            "roller_coaster",
            "country"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "height",
            "from",
            "roller",
            "coaster",
            "when",
            "opened",
            "equals",
            "May",
            "6",
            ",",
            "2006"
        ],
        "query_toks": [
            "SELECT",
            "Height",
            "FROM",
            "roller_coaster",
            "WHERE",
            "Opened",
            "=",
            "'May",
            "6",
            ",",
            "2006'"
        ],
        "query_toks_no_value": [
            "select",
            "height",
            "from",
            "roller_coaster",
            "where",
            "opened",
            "=",
            "value",
            "value",
            ",",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__roller_coaster__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__roller_coaster.height__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__roller_coaster.opened__",
                            false
                        ],
                        null
                    ],
                    "\"May 6, 2006\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "roller_coaster",
        "query": "SELECT Country_ID FROM country WHERE Area = '338145';",
        "question": "Select country id from country when area equals 338145",
        "tables": [
            "roller_coaster",
            "country"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "country",
            "id",
            "from",
            "country",
            "when",
            "area",
            "equals",
            "338145"
        ],
        "query_toks": [
            "SELECT",
            "Country_I",
            "(",
            "Country_I",
            ")",
            "FROM",
            "countr",
            "(",
            "countr",
            ")",
            "WHERE",
            "Area",
            "=",
            "'338145'"
        ],
        "query_toks_no_value": [
            "select",
            "country_i",
            "(",
            "country_i",
            ")",
            "from",
            "countr",
            "(",
            "countr",
            ")",
            "where",
            "area",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__country__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__country.country_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__country.area__",
                            false
                        ],
                        null
                    ],
                    "\"338145\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "roller_coaster",
        "query": "SELECT Languages FROM country WHERE Country_ID = 3;",
        "question": "Select languages from country when country id equals 3",
        "tables": [
            "roller_coaster",
            "country"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "languages",
            "from",
            "country",
            "when",
            "country",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Languages",
            "FROM",
            "countr",
            "(",
            "countr",
            ")",
            "WHERE",
            "Country_I",
            "(",
            "Country_I",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "languages",
            "from",
            "countr",
            "(",
            "countr",
            ")",
            "where",
            "country_i",
            "(",
            "country_i",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__country__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__country.languages__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__country.country_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT product_price FROM Products WHERE product_id = '3';",
        "question": "Select product price from products when product id equals 3",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "product",
            "price",
            "from",
            "products",
            "when",
            "product",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "product_price",
            "FROM",
            "Products",
            "WHERE",
            "product_id",
            "=",
            "'3'"
        ],
        "query_toks_no_value": [
            "select",
            "product_price",
            "from",
            "products",
            "where",
            "product_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products.product_price__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__products.product_id__",
                            false
                        ],
                        null
                    ],
                    "\"3\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT other_route_details FROM Delivery_Routes WHERE route_id = '2';",
        "question": "Select other route details from delivery routes when route id equals 2",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "other",
            "route",
            "details",
            "from",
            "delivery",
            "routes",
            "when",
            "route",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "other_route_details",
            "FROM",
            "Delivery_Routes",
            "WHERE",
            "route_id",
            "=",
            "'2'"
        ],
        "query_toks_no_value": [
            "select",
            "other_route_details",
            "from",
            "delivery_routes",
            "where",
            "route_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__delivery_routes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__delivery_routes.other_route_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__delivery_routes.route_id__",
                            false
                        ],
                        null
                    ],
                    "\"2\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT zip_postcode FROM Addresses WHERE state_province_county = 'Kentucky';",
        "question": "Select zip postcode from addresses when state province county equals Kentucky",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "zip",
            "postcode",
            "from",
            "addresses",
            "when",
            "state",
            "province",
            "county",
            "equals",
            "Kentucky"
        ],
        "query_toks": [
            "SELECT",
            "zip_postcode",
            "FROM",
            "Addresses",
            "WHERE",
            "state_province_county",
            "=",
            "'Kentucky'"
        ],
        "query_toks_no_value": [
            "select",
            "zip_postcode",
            "from",
            "addresses",
            "where",
            "state_province_county",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__addresses.zip_postcode__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__addresses.state_province_county__",
                            false
                        ],
                        null
                    ],
                    "\"Kentucky\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT country FROM Addresses WHERE address_id = 2;",
        "question": "Select country from addresses when address id equals 2",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "country",
            "from",
            "addresses",
            "when",
            "address",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "countr",
            "(",
            "countr",
            ")",
            "FROM",
            "Addresses",
            "WHERE",
            "address_id",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "countr",
            "(",
            "countr",
            ")",
            "from",
            "addresses",
            "where",
            "address_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__addresses.country__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__addresses.address_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT location_address_id FROM Delivery_Route_Locations WHERE route_id = '13';",
        "question": "Select location address id from delivery route locations when route id equals 13",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "location",
            "address",
            "id",
            "from",
            "delivery",
            "route",
            "locations",
            "when",
            "route",
            "id",
            "equals",
            "13"
        ],
        "query_toks": [
            "SELECT",
            "location_address_id",
            "FROM",
            "Delivery_Route_Locations",
            "WHERE",
            "route_id",
            "=",
            "'13'"
        ],
        "query_toks_no_value": [
            "select",
            "location_address_id",
            "from",
            "delivery_route_locations",
            "where",
            "route_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__delivery_route_locations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__delivery_route_locations.location_address_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__delivery_route_locations.route_id__",
                            false
                        ],
                        null
                    ],
                    "\"13\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT route_id FROM Delivery_Route_Locations WHERE location_address_id = 5;",
        "question": "Select route id from delivery route locations when location address id equals 5",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "route",
            "id",
            "from",
            "delivery",
            "route",
            "locations",
            "when",
            "location",
            "address",
            "id",
            "equals",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "route_id",
            "FROM",
            "Delivery_Route_Locations",
            "WHERE",
            "location_address_id",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "route_id",
            "from",
            "delivery_route_locations",
            "where",
            "location_address_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__delivery_route_locations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__delivery_route_locations.route_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__delivery_route_locations.location_address_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT product_id FROM Actual_Order_Products WHERE actual_order_id = '6';",
        "question": "Select product id from actual order products when actual order id equals 6",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "product",
            "id",
            "from",
            "actual",
            "order",
            "products",
            "when",
            "actual",
            "order",
            "id",
            "equals",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "product_id",
            "FROM",
            "Actual_Order_Products",
            "WHERE",
            "actual_order_id",
            "=",
            "'6'"
        ],
        "query_toks_no_value": [
            "select",
            "product_id",
            "from",
            "actual_order_products",
            "where",
            "actual_order_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__actual_order_products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__actual_order_products.product_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__actual_order_products.actual_order_id__",
                            false
                        ],
                        null
                    ],
                    "\"6\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT actual_order_id FROM Actual_Order_Products WHERE product_id = 6;",
        "question": "Select actual order id from actual order products when product id equals 6",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "actual",
            "order",
            "id",
            "from",
            "actual",
            "order",
            "products",
            "when",
            "product",
            "id",
            "equals",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "actual_order_id",
            "FROM",
            "Actual_Order_Products",
            "WHERE",
            "product_id",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "actual_order_id",
            "from",
            "actual_order_products",
            "where",
            "product_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__actual_order_products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__actual_order_products.actual_order_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__actual_order_products.product_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT customer_id FROM Customer_Addresses WHERE address_id = '11';",
        "question": "Select customer id from customer addresses when address id equals 11",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "customer",
            "id",
            "from",
            "customer",
            "addresses",
            "when",
            "address",
            "id",
            "equals",
            "11"
        ],
        "query_toks": [
            "SELECT",
            "customer_id",
            "FROM",
            "Customer_Addresses",
            "WHERE",
            "address_id",
            "=",
            "'11'"
        ],
        "query_toks_no_value": [
            "select",
            "customer_id",
            "from",
            "customer_addresses",
            "where",
            "address_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_addresses.customer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customer_addresses.address_id__",
                            false
                        ],
                        null
                    ],
                    "\"11\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT regular_order_id FROM Regular_Order_Products WHERE product_id = '2';",
        "question": "Select regular order id from regular order products when product id equals 2",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "regular",
            "order",
            "id",
            "from",
            "regular",
            "order",
            "products",
            "when",
            "product",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "regular_order_id",
            "FROM",
            "Regular_Order_Products",
            "WHERE",
            "product_id",
            "=",
            "'2'"
        ],
        "query_toks_no_value": [
            "select",
            "regular_order_id",
            "from",
            "regular_order_products",
            "where",
            "product_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__regular_order_products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__regular_order_products.regular_order_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__regular_order_products.product_id__",
                            false
                        ],
                        null
                    ],
                    "\"2\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT product_id FROM Regular_Order_Products WHERE regular_order_id = 3;",
        "question": "Select product id from regular order products when regular order id equals 3",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "product",
            "id",
            "from",
            "regular",
            "order",
            "products",
            "when",
            "regular",
            "order",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "product_id",
            "FROM",
            "Regular_Order_Products",
            "WHERE",
            "regular_order_id",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "product_id",
            "from",
            "regular_order_products",
            "where",
            "regular_order_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__regular_order_products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__regular_order_products.product_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__regular_order_products.regular_order_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT * FROM Customers WHERE customer_id = 9;",
        "question": "Select all columns from customers when customer id equals 9",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "customers",
            "when",
            "customer",
            "id",
            "equals",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Customers",
            "WHERE",
            "customer_id",
            "=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "customers",
            "where",
            "customer_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customers.customer_id__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT distributer_id FROM Regular_Orders WHERE regular_order_id = '5';",
        "question": "Select distributer id from regular orders when regular order id equals 5",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "distributer",
            "id",
            "from",
            "regular",
            "orders",
            "when",
            "regular",
            "order",
            "id",
            "equals",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "distributer_id",
            "FROM",
            "Regular_Orders",
            "WHERE",
            "regular_order_id",
            "=",
            "'5'"
        ],
        "query_toks_no_value": [
            "select",
            "distributer_id",
            "from",
            "regular_orders",
            "where",
            "regular_order_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__regular_orders__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__regular_orders.distributer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__regular_orders.regular_order_id__",
                            false
                        ],
                        null
                    ],
                    "\"5\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT regular_order_id FROM Regular_Orders WHERE distributer_id = 8;",
        "question": "Select regular order id from regular orders when distributer id equals 8",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "regular",
            "order",
            "id",
            "from",
            "regular",
            "orders",
            "when",
            "distributer",
            "id",
            "equals",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "regular_order_id",
            "FROM",
            "Regular_Orders",
            "WHERE",
            "distributer_id",
            "=",
            "8"
        ],
        "query_toks_no_value": [
            "select",
            "regular_order_id",
            "from",
            "regular_orders",
            "where",
            "distributer_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__regular_orders__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__regular_orders.regular_order_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__regular_orders.distributer_id__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT location_code FROM Order_Deliveries WHERE delivery_status_code = 'Delivered';",
        "question": "Select location code from order deliveries when delivery status code equals Delivered",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "location",
            "code",
            "from",
            "order",
            "deliveries",
            "when",
            "delivery",
            "status",
            "code",
            "equals",
            "Delivered"
        ],
        "query_toks": [
            "SELECT",
            "location_code",
            "FROM",
            "Order_Deliveries",
            "WHERE",
            "delivery_status_code",
            "=",
            "'Delivered'"
        ],
        "query_toks_no_value": [
            "select",
            "location_code",
            "from",
            "order_deliveries",
            "where",
            "delivery_status_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__order_deliveries__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__order_deliveries.location_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__order_deliveries.delivery_status_code__",
                            false
                        ],
                        null
                    ],
                    "\"Delivered\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT truck_details FROM Trucks WHERE truck_id = '10';",
        "question": "Select truck details from trucks when truck id equals 10",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "truck",
            "details",
            "from",
            "trucks",
            "when",
            "truck",
            "id",
            "equals",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "truck_details",
            "FROM",
            "Trucks",
            "WHERE",
            "truck_id",
            "=",
            "'10'"
        ],
        "query_toks_no_value": [
            "select",
            "truck_details",
            "from",
            "trucks",
            "where",
            "truck_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__trucks__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__trucks.truck_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__trucks.truck_id__",
                            false
                        ],
                        null
                    ],
                    "\"10\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT truck_details FROM Trucks WHERE truck_id = 8;",
        "question": "Select truck details from trucks when truck id equals 8",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "truck",
            "details",
            "from",
            "trucks",
            "when",
            "truck",
            "id",
            "equals",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "truck_details",
            "FROM",
            "Trucks",
            "WHERE",
            "truck_id",
            "=",
            "8"
        ],
        "query_toks_no_value": [
            "select",
            "truck_details",
            "from",
            "trucks",
            "where",
            "truck_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__trucks__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__trucks.truck_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__trucks.truck_id__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "game_injury",
        "query": "SELECT Season FROM game WHERE stadium_id = '6';",
        "question": "Select season from game when stadium id equals 6",
        "tables": [
            "injury_accident",
            "stadium",
            "game"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "season",
            "from",
            "game",
            "when",
            "stadium",
            "id",
            "equals",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "Season",
            "FROM",
            "game",
            "WHERE",
            "stadium_id",
            "=",
            "'6'"
        ],
        "query_toks_no_value": [
            "select",
            "season",
            "from",
            "game",
            "where",
            "stadium_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__game__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__game.season__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__game.stadium_id__",
                            false
                        ],
                        null
                    ],
                    "\"6\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "game_injury",
        "query": "SELECT * FROM game WHERE Season = 2010;",
        "question": "Select all columns from game when season equals 2010",
        "tables": [
            "injury_accident",
            "stadium",
            "game"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "game",
            "when",
            "season",
            "equals",
            "2010"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "game",
            "WHERE",
            "Season",
            "=",
            "2010"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "game",
            "where",
            "season",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__game__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__game.season__",
                            false
                        ],
                        null
                    ],
                    2010.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "school_finance",
        "query": "SELECT Mascot FROM School WHERE Enrollment = '620';",
        "question": "Select mascot from school when enrollment equals 620",
        "tables": [
            "budget",
            "School",
            "endowment"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "mascot",
            "from",
            "school",
            "when",
            "enrollment",
            "equals",
            "620"
        ],
        "query_toks": [
            "SELECT",
            "Mascot",
            "FROM",
            "School",
            "WHERE",
            "Enrollment",
            "=",
            "'620'"
        ],
        "query_toks_no_value": [
            "select",
            "mascot",
            "from",
            "school",
            "where",
            "enrollment",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__school__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__school.mascot__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__school.enrollment__",
                            false
                        ],
                        null
                    ],
                    "\"620\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "school_finance",
        "query": "SELECT School_id FROM School WHERE Enrollment = 852;",
        "question": "Select school id from school when enrollment equals 852",
        "tables": [
            "budget",
            "School",
            "endowment"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "school",
            "id",
            "from",
            "school",
            "when",
            "enrollment",
            "equals",
            "852"
        ],
        "query_toks": [
            "SELECT",
            "School_id",
            "FROM",
            "School",
            "WHERE",
            "Enrollment",
            "=",
            "852"
        ],
        "query_toks_no_value": [
            "select",
            "school_id",
            "from",
            "school",
            "where",
            "enrollment",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__school__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__school.school_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__school.enrollment__",
                            false
                        ],
                        null
                    ],
                    852.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "school_finance",
        "query": "SELECT amount FROM endowment WHERE School_id = '2';",
        "question": "Select amount from endowment when school id equals 2",
        "tables": [
            "budget",
            "School",
            "endowment"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "amount",
            "from",
            "endowment",
            "when",
            "school",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "amount",
            "FROM",
            "endowment",
            "WHERE",
            "School_id",
            "=",
            "'2'"
        ],
        "query_toks_no_value": [
            "select",
            "amount",
            "from",
            "endowment",
            "where",
            "school_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__endowment__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__endowment.amount__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__endowment.school_id__",
                            false
                        ],
                        null
                    ],
                    "\"2\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_1",
        "query": "SELECT contestant_name FROM CONTESTANTS WHERE contestant_number = '8';",
        "question": "Select contestant name from contestants when contestant number equals 8",
        "tables": [
            "CONTESTANTS",
            "VOTES",
            "AREA_CODE_STATE"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "contestant",
            "name",
            "from",
            "contestants",
            "when",
            "contestant",
            "number",
            "equals",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "contestant_name",
            "FROM",
            "CONTESTANTS",
            "WHERE",
            "contestant_number",
            "=",
            "'8'"
        ],
        "query_toks_no_value": [
            "select",
            "contestant_name",
            "from",
            "contestants",
            "where",
            "contestant_number",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__contestants__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__contestants.contestant_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__contestants.contestant_number__",
                            false
                        ],
                        null
                    ],
                    "\"8\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_1",
        "query": "SELECT phone_number FROM VOTES WHERE vote_id = '1';",
        "question": "Select phone number from votes when vote id equals 1",
        "tables": [
            "CONTESTANTS",
            "VOTES",
            "AREA_CODE_STATE"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "phone",
            "number",
            "from",
            "votes",
            "when",
            "vote",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "phone_number",
            "FROM",
            "VOTES",
            "WHERE",
            "vote_id",
            "=",
            "'1'"
        ],
        "query_toks_no_value": [
            "select",
            "phone_number",
            "from",
            "votes",
            "where",
            "vote_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__votes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__votes.phone_number__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__votes.vote_id__",
                            false
                        ],
                        null
                    ],
                    "\"1\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_1",
        "query": "SELECT state FROM AREA_CODE_STATE WHERE area_code = '712';",
        "question": "Select state from area code state when area code equals 712",
        "tables": [
            "CONTESTANTS",
            "VOTES",
            "AREA_CODE_STATE"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "state",
            "from",
            "area",
            "code",
            "state",
            "when",
            "area",
            "code",
            "equals",
            "712"
        ],
        "query_toks": [
            "SELECT",
            "state",
            "FROM",
            "AREA_CODE_STATE",
            "WHERE",
            "area_code",
            "=",
            "'712'"
        ],
        "query_toks_no_value": [
            "select",
            "state",
            "from",
            "area_code_state",
            "where",
            "area_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__area_code_state__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__area_code_state.state__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__area_code_state.area_code__",
                            false
                        ],
                        null
                    ],
                    "\"712\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "match_season",
        "query": "SELECT Total_WL FROM player WHERE Player_ID = '3';",
        "question": "Select total wl from player when player id equals 3",
        "tables": [
            "player",
            "match_season",
            "team",
            "country"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "total",
            "wl",
            "from",
            "player",
            "when",
            "player",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Total_WL",
            "FROM",
            "player",
            "WHERE",
            "Player_ID",
            "=",
            "'3'"
        ],
        "query_toks_no_value": [
            "select",
            "total_wl",
            "from",
            "player",
            "where",
            "player_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__player__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__player.total_wl__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__player.player_id__",
                            false
                        ],
                        null
                    ],
                    "\"3\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "match_season",
        "query": "SELECT Doubles_WL FROM player WHERE Player_ID = 10;",
        "question": "Select doubles wl from player when player id equals 10",
        "tables": [
            "player",
            "match_season",
            "team",
            "country"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "doubles",
            "wl",
            "from",
            "player",
            "when",
            "player",
            "id",
            "equals",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "Doubles_WL",
            "FROM",
            "player",
            "WHERE",
            "Player_ID",
            "=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "doubles_wl",
            "from",
            "player",
            "where",
            "player_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__player__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__player.doubles_wl__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__player.player_id__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "match_season",
        "query": "SELECT Player FROM match_season WHERE Team = '1';",
        "question": "Select player from match season when team equals 1",
        "tables": [
            "player",
            "match_season",
            "team",
            "country"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "player",
            "from",
            "match",
            "season",
            "when",
            "team",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Player",
            "FROM",
            "match_season",
            "WHERE",
            "Team",
            "=",
            "'1'"
        ],
        "query_toks_no_value": [
            "select",
            "player",
            "from",
            "match_season",
            "where",
            "team",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__match_season__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__match_season.player__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__match_season.team__",
                            false
                        ],
                        null
                    ],
                    "\"1\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "match_season",
        "query": "SELECT Name FROM team WHERE Team_id = '6';",
        "question": "Select name from team when team id equals 6",
        "tables": [
            "player",
            "match_season",
            "team",
            "country"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "name",
            "from",
            "team",
            "when",
            "team",
            "id",
            "equals",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "team",
            "WHERE",
            "Team_id",
            "=",
            "'6'"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "team",
            "where",
            "team_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__team__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__team.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__team.team_id__",
                            false
                        ],
                        null
                    ],
                    "\"6\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "match_season",
        "query": "SELECT Country_id FROM country WHERE Official_native_language = 'Bahasa Indonesia';",
        "question": "Select country id from country when official native language equals Bahasa Indonesia",
        "tables": [
            "player",
            "match_season",
            "team",
            "country"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "country",
            "id",
            "from",
            "country",
            "when",
            "official",
            "native",
            "language",
            "equals",
            "Bahasa",
            "Indonesia"
        ],
        "query_toks": [
            "SELECT",
            "Country_i",
            "(",
            "Country_i",
            ")",
            "FROM",
            "countr",
            "(",
            "countr",
            ")",
            "WHERE",
            "Official_native_language",
            "=",
            "'Bahasa",
            "Indonesia'"
        ],
        "query_toks_no_value": [
            "select",
            "country_i",
            "(",
            "country_i",
            ")",
            "from",
            "countr",
            "(",
            "countr",
            ")",
            "where",
            "official_native_language",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__country__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__country.country_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__country.official_native_language__",
                            false
                        ],
                        null
                    ],
                    "\"Bahasa Indonesia\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "small_bank_1",
        "query": "SELECT * FROM SAVINGS WHERE custid = 6;",
        "question": "Select all columns from savings when customer id equals 6",
        "tables": [
            "SAVINGS",
            "CHECKING",
            "ACCOUNTS"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "savings",
            "when",
            "customer",
            "id",
            "equals",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "SAVINGS",
            "WHERE",
            "custid",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "savings",
            "where",
            "custid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__savings__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__savings.custid__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "small_bank_1",
        "query": "SELECT balance FROM CHECKING WHERE custid = '4';",
        "question": "Select balance from checking when customer id equals 4",
        "tables": [
            "SAVINGS",
            "CHECKING",
            "ACCOUNTS"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "balance",
            "from",
            "checking",
            "when",
            "customer",
            "id",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "balance",
            "FROM",
            "CHECKING",
            "WHERE",
            "custid",
            "=",
            "'4'"
        ],
        "query_toks_no_value": [
            "select",
            "balance",
            "from",
            "checking",
            "where",
            "custid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__checking__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__checking.balance__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__checking.custid__",
                            false
                        ],
                        null
                    ],
                    "\"4\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "small_bank_1",
        "query": "SELECT name FROM ACCOUNTS WHERE custid = '4';",
        "question": "Select name from accounts when customer id equals 4",
        "tables": [
            "SAVINGS",
            "CHECKING",
            "ACCOUNTS"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "name",
            "from",
            "accounts",
            "when",
            "customer",
            "id",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "ACCOUNTS",
            "WHERE",
            "custid",
            "=",
            "'4'"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "accounts",
            "where",
            "custid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__accounts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__accounts.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__accounts.custid__",
                            false
                        ],
                        null
                    ],
                    "\"4\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "small_bank_1",
        "query": "SELECT name FROM ACCOUNTS WHERE custid = 6;",
        "question": "Select name from accounts when customer id equals 6",
        "tables": [
            "SAVINGS",
            "CHECKING",
            "ACCOUNTS"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "name",
            "from",
            "accounts",
            "when",
            "customer",
            "id",
            "equals",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "ACCOUNTS",
            "WHERE",
            "custid",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "accounts",
            "where",
            "custid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__accounts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__accounts.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__accounts.custid__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "query": "SELECT score FROM matches WHERE tourney_name = 'Strasbourg';",
        "question": "Select score from matches when tourney name equals Strasbourg",
        "tables": [
            "matches",
            "players",
            "rankings"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "score",
            "from",
            "matches",
            "when",
            "tourney",
            "name",
            "equals",
            "Strasbourg"
        ],
        "query_toks": [
            "SELECT",
            "score",
            "FROM",
            "matches",
            "WHERE",
            "tourney_name",
            "=",
            "'Strasbourg'"
        ],
        "query_toks_no_value": [
            "select",
            "score",
            "from",
            "matches",
            "where",
            "tourney_name",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__matches__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__matches.score__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__matches.tourney_name__",
                            false
                        ],
                        null
                    ],
                    "\"Strasbourg\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "query": "SELECT winner_id FROM matches WHERE loser_id = 201465;",
        "question": "Select winner id from matches when loser id equals 201465",
        "tables": [
            "matches",
            "players",
            "rankings"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "winner",
            "id",
            "from",
            "matches",
            "when",
            "loser",
            "id",
            "equals",
            "201465"
        ],
        "query_toks": [
            "SELECT",
            "winner_id",
            "FROM",
            "matches",
            "WHERE",
            "loser_id",
            "=",
            "201465"
        ],
        "query_toks_no_value": [
            "select",
            "winner_id",
            "from",
            "matches",
            "where",
            "loser_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__matches__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__matches.winner_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__matches.loser_id__",
                            false
                        ],
                        null
                    ],
                    201465.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "query": "SELECT last_name FROM players WHERE player_id = '206026';",
        "question": "Select last name from players when player id equals 206026",
        "tables": [
            "matches",
            "players",
            "rankings"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "last",
            "name",
            "from",
            "players",
            "when",
            "player",
            "id",
            "equals",
            "206026"
        ],
        "query_toks": [
            "SELECT",
            "last_name",
            "FROM",
            "players",
            "WHERE",
            "player_id",
            "=",
            "'206026'"
        ],
        "query_toks_no_value": [
            "select",
            "last_name",
            "from",
            "players",
            "where",
            "player_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__players__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__players.last_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__players.player_id__",
                            false
                        ],
                        null
                    ],
                    "\"206026\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "query": "SELECT player_id FROM rankings WHERE ranking_points = '1597';",
        "question": "Select player id from rankings when ranking points equals 1597",
        "tables": [
            "matches",
            "players",
            "rankings"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "player",
            "id",
            "from",
            "rankings",
            "when",
            "ranking",
            "points",
            "equals",
            "1597"
        ],
        "query_toks": [
            "SELECT",
            "player_id",
            "FROM",
            "rankings",
            "WHERE",
            "ranking_points",
            "=",
            "'1597'"
        ],
        "query_toks_no_value": [
            "select",
            "player_id",
            "from",
            "rankings",
            "where",
            "ranking_points",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__rankings__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__rankings.player_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__rankings.ranking_points__",
                            false
                        ],
                        null
                    ],
                    "\"1597\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "query": "SELECT * FROM rankings WHERE tours = 13;",
        "question": "Select all columns from rankings when tours equals 13",
        "tables": [
            "matches",
            "players",
            "rankings"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "rankings",
            "when",
            "tours",
            "equals",
            "13"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "rankings",
            "WHERE",
            "tours",
            "=",
            "13"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "rankings",
            "where",
            "tours",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__rankings__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__rankings.tours__",
                            false
                        ],
                        null
                    ],
                    13.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_1",
        "query": "SELECT LastName FROM list WHERE Classroom = '103';",
        "question": "Select last name from list when class room equals 103",
        "tables": [
            "list",
            "teachers"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "last",
            "name",
            "from",
            "list",
            "when",
            "class",
            "room",
            "equals",
            "103"
        ],
        "query_toks": [
            "SELECT",
            "LastName",
            "FROM",
            "list",
            "WHERE",
            "Classroom",
            "=",
            "'103'"
        ],
        "query_toks_no_value": [
            "select",
            "lastname",
            "from",
            "list",
            "where",
            "classroom",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__list__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__list.lastname__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__list.classroom__",
                            false
                        ],
                        null
                    ],
                    "\"103\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_1",
        "query": "SELECT FirstName FROM teachers WHERE Classroom = '101';",
        "question": "Select first name from teachers when class room equals 101",
        "tables": [
            "list",
            "teachers"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "first",
            "name",
            "from",
            "teachers",
            "when",
            "class",
            "room",
            "equals",
            "101"
        ],
        "query_toks": [
            "SELECT",
            "FirstName",
            "FROM",
            "teachers",
            "WHERE",
            "Classroom",
            "=",
            "'101'"
        ],
        "query_toks_no_value": [
            "select",
            "firstname",
            "from",
            "teachers",
            "where",
            "classroom",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__teachers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__teachers.firstname__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__teachers.classroom__",
                            false
                        ],
                        null
                    ],
                    "\"101\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "manufacturer",
        "query": "SELECT Manufacturer_ID FROM manufacturer WHERE Num_of_Factories = '38';",
        "question": "Select manufacturer id from manufacturer when num of factories equals 38",
        "tables": [
            "manufacturer",
            "furniture",
            "furniture_manufacte"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "manufacturer",
            "id",
            "from",
            "manufacturer",
            "when",
            "num",
            "of",
            "factories",
            "equals",
            "38"
        ],
        "query_toks": [
            "SELECT",
            "Manufacturer_ID",
            "FROM",
            "manufacturer",
            "WHERE",
            "Num_of_Factories",
            "=",
            "'38'"
        ],
        "query_toks_no_value": [
            "select",
            "manufacturer_id",
            "from",
            "manufacturer",
            "where",
            "num_of_factories",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__manufacturer__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__manufacturer.manufacturer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__manufacturer.num_of_factories__",
                            false
                        ],
                        null
                    ],
                    "\"38\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "manufacturer",
        "query": "SELECT Name FROM manufacturer WHERE Num_of_Factories = 36;",
        "question": "Select name from manufacturer when num of factories equals 36",
        "tables": [
            "manufacturer",
            "furniture",
            "furniture_manufacte"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "name",
            "from",
            "manufacturer",
            "when",
            "num",
            "of",
            "factories",
            "equals",
            "36"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "manufacturer",
            "WHERE",
            "Num_of_Factories",
            "=",
            "36"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "manufacturer",
            "where",
            "num_of_factories",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__manufacturer__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__manufacturer.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__manufacturer.num_of_factories__",
                            false
                        ],
                        null
                    ],
                    36.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "manufacturer",
        "query": "SELECT Market_Rate FROM furniture WHERE Name = 'Bench';",
        "question": "Select market rate from furniture when name equals Bench",
        "tables": [
            "manufacturer",
            "furniture",
            "furniture_manufacte"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "market",
            "rate",
            "from",
            "furniture",
            "when",
            "name",
            "equals",
            "Bench"
        ],
        "query_toks": [
            "SELECT",
            "Market_Rate",
            "FROM",
            "furniture",
            "WHERE",
            "Name",
            "=",
            "'Bench'"
        ],
        "query_toks_no_value": [
            "select",
            "market_rate",
            "from",
            "furniture",
            "where",
            "name",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__furniture__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__furniture.market_rate__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__furniture.name__",
                            false
                        ],
                        null
                    ],
                    "\"Bench\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "manufacturer",
        "query": "SELECT Furniture_ID FROM furniture_manufacte WHERE Manufacturer_ID = '1';",
        "question": "Select furniture id from furniture manufacte when manufacturer id equals 1",
        "tables": [
            "manufacturer",
            "furniture",
            "furniture_manufacte"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "furniture",
            "id",
            "from",
            "furniture",
            "manufacte",
            "when",
            "manufacturer",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Furniture_ID",
            "FROM",
            "furniture_manufacte",
            "WHERE",
            "Manufacturer_ID",
            "=",
            "'1'"
        ],
        "query_toks_no_value": [
            "select",
            "furniture_id",
            "from",
            "furniture_manufacte",
            "where",
            "manufacturer_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__furniture_manufacte__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__furniture_manufacte.furniture_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__furniture_manufacte.manufacturer_id__",
                            false
                        ],
                        null
                    ],
                    "\"1\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "manufacturer",
        "query": "SELECT * FROM furniture_manufacte WHERE Furniture_ID = 2;",
        "question": "Select all columns from furniture manufacte when furniture id equals 2",
        "tables": [
            "manufacturer",
            "furniture",
            "furniture_manufacte"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "furniture",
            "manufacte",
            "when",
            "furniture",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "furniture_manufacte",
            "WHERE",
            "Furniture_ID",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "furniture_manufacte",
            "where",
            "furniture_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__furniture_manufacte__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__furniture_manufacte.furniture_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT seq FROM sqlite_sequence WHERE name = 'employees';",
        "question": "Select name from artists when id equals employees",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "name",
            "from",
            "artists",
            "when",
            "id",
            "equals",
            "employees"
        ],
        "query_toks": [
            "SELECT",
            "seq",
            "FROM",
            "sqlite_sequence",
            "WHERE",
            "name",
            "=",
            "'employees'"
        ],
        "query_toks_no_value": [
            "select",
            "seq",
            "from",
            "sqlite_sequence",
            "where",
            "name",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__sqlite_sequence__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__sqlite_sequence.seq__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__sqlite_sequence.name__",
                            false
                        ],
                        null
                    ],
                    "\"employees\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT name FROM artists WHERE id = '183';",
        "question": "Select seq from sqlite sequence when name equals 183",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "seq",
            "from",
            "sqlite",
            "sequence",
            "when",
            "name",
            "equals",
            "183"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "artists",
            "WHERE",
            "id",
            "=",
            "'183'"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "artists",
            "where",
            "id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__artists__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__artists.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__artists.id__",
                            false
                        ],
                        null
                    ],
                    "\"183\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT name FROM genres WHERE id = '11';",
        "question": "Select name from genres when id equals 11",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "name",
            "from",
            "genres",
            "when",
            "id",
            "equals",
            "11"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "genres",
            "WHERE",
            "id",
            "=",
            "'11'"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "genres",
            "where",
            "id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__genres__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__genres.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__genres.id__",
                            false
                        ],
                        null
                    ],
                    "\"11\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT name FROM genres WHERE id = 9;",
        "question": "Select name from genres when id equals 9",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "name",
            "from",
            "genres",
            "when",
            "id",
            "equals",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "genres",
            "WHERE",
            "id",
            "=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "genres",
            "where",
            "id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__genres__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__genres.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__genres.id__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT name FROM media_types WHERE id = '4';",
        "question": "Select name from media types when id equals 4",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "name",
            "from",
            "media",
            "types",
            "when",
            "id",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "media_types",
            "WHERE",
            "id",
            "=",
            "'4'"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "media_types",
            "where",
            "id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__media_types__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__media_types.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__media_types.id__",
                            false
                        ],
                        null
                    ],
                    "\"4\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT * FROM media_types WHERE id = 4;",
        "question": "Select all columns from media types when id equals 4",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "media",
            "types",
            "when",
            "id",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "media_types",
            "WHERE",
            "id",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "media_types",
            "where",
            "id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__media_types__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__media_types.id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT billing_country FROM invoices WHERE billing_state = 'AB';",
        "question": "Select billing country from invoices when billing state equals AB",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "billing",
            "country",
            "from",
            "invoices",
            "when",
            "billing",
            "state",
            "equals",
            "AB"
        ],
        "query_toks": [
            "SELECT",
            "billing_country",
            "FROM",
            "invoices",
            "WHERE",
            "billing_state",
            "=",
            "'AB'"
        ],
        "query_toks_no_value": [
            "select",
            "billing_country",
            "from",
            "invoices",
            "where",
            "billing_state",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__invoices__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__invoices.billing_country__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__invoices.billing_state__",
                            false
                        ],
                        null
                    ],
                    "\"AB\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT name FROM playlists WHERE id = '1';",
        "question": "Select name from playlists when id equals 1",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "name",
            "from",
            "playlists",
            "when",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "playlists",
            "WHERE",
            "id",
            "=",
            "'1'"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "playlists",
            "where",
            "id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__playlists__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__playlists.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__playlists.id__",
                            false
                        ],
                        null
                    ],
                    "\"1\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT track_id FROM playlist_tracks WHERE playlist_id = '3';",
        "question": "Select track id from playlist tracks when playlist id equals 3",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "track",
            "id",
            "from",
            "playlist",
            "tracks",
            "when",
            "playlist",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "track_id",
            "FROM",
            "playlist_tracks",
            "WHERE",
            "playlist_id",
            "=",
            "'3'"
        ],
        "query_toks_no_value": [
            "select",
            "track_id",
            "from",
            "playlist_tracks",
            "where",
            "playlist_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__playlist_tracks__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__playlist_tracks.track_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__playlist_tracks.playlist_id__",
                            false
                        ],
                        null
                    ],
                    "\"3\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT * FROM playlist_tracks WHERE playlist_id = 14;",
        "question": "Select all columns from playlist tracks when playlist id equals 14",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "playlist",
            "tracks",
            "when",
            "playlist",
            "id",
            "equals",
            "14"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "playlist_tracks",
            "WHERE",
            "playlist_id",
            "=",
            "14"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "playlist_tracks",
            "where",
            "playlist_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__playlist_tracks__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__playlist_tracks.playlist_id__",
                            false
                        ],
                        null
                    ],
                    14.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT company FROM customers WHERE country = 'India';",
        "question": "Select company from customers when country equals India",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "company",
            "from",
            "customers",
            "when",
            "country",
            "equals",
            "India"
        ],
        "query_toks": [
            "SELECT",
            "company",
            "FROM",
            "customers",
            "WHERE",
            "countr",
            "(",
            "countr",
            ")",
            "=",
            "'India'"
        ],
        "query_toks_no_value": [
            "select",
            "company",
            "from",
            "customers",
            "where",
            "countr",
            "(",
            "countr",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.company__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customers.country__",
                            false
                        ],
                        null
                    ],
                    "\"India\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT quantity FROM invoice_lines WHERE track_id = '2765';",
        "question": "Select quantity from invoice lines when track id equals 2765",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "quantity",
            "from",
            "invoice",
            "lines",
            "when",
            "track",
            "id",
            "equals",
            "2765"
        ],
        "query_toks": [
            "SELECT",
            "quantity",
            "FROM",
            "invoice_lines",
            "WHERE",
            "track_id",
            "=",
            "'2765'"
        ],
        "query_toks_no_value": [
            "select",
            "quantity",
            "from",
            "invoice_lines",
            "where",
            "track_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__invoice_lines__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__invoice_lines.quantity__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__invoice_lines.track_id__",
                            false
                        ],
                        null
                    ],
                    "\"2765\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT title FROM albums WHERE artist_id = '21';",
        "question": "Select title from albums when artist id equals 21",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "title",
            "from",
            "albums",
            "when",
            "artist",
            "id",
            "equals",
            "21"
        ],
        "query_toks": [
            "SELECT",
            "title",
            "FROM",
            "albums",
            "WHERE",
            "artist_id",
            "=",
            "'21'"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "albums",
            "where",
            "artist_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__albums__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__albums.title__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__albums.artist_id__",
                            false
                        ],
                        null
                    ],
                    "\"21\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT album_id FROM tracks WHERE id = '3215';",
        "question": "Select album id from tracks when id equals 3215",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "album",
            "id",
            "from",
            "tracks",
            "when",
            "id",
            "equals",
            "3215"
        ],
        "query_toks": [
            "SELECT",
            "album_id",
            "FROM",
            "tracks",
            "WHERE",
            "id",
            "=",
            "'3215'"
        ],
        "query_toks_no_value": [
            "select",
            "album_id",
            "from",
            "tracks",
            "where",
            "id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__tracks__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__tracks.album_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__tracks.id__",
                            false
                        ],
                        null
                    ],
                    "\"3215\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT * FROM tracks WHERE id = 1918;",
        "question": "Select all columns from tracks when id equals 1918",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "tracks",
            "when",
            "id",
            "equals",
            "1918"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "tracks",
            "WHERE",
            "id",
            "=",
            "1918"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "tracks",
            "where",
            "id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__tracks__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__tracks.id__",
                            false
                        ],
                        null
                    ],
                    1918.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT phone FROM employees WHERE state = 'AB';",
        "question": "Select phone from employees when state equals AB",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "phone",
            "from",
            "employees",
            "when",
            "state",
            "equals",
            "AB"
        ],
        "query_toks": [
            "SELECT",
            "phone",
            "FROM",
            "employees",
            "WHERE",
            "state",
            "=",
            "'AB'"
        ],
        "query_toks_no_value": [
            "select",
            "phone",
            "from",
            "employees",
            "where",
            "state",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__employees__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__employees.phone__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__employees.state__",
                            false
                        ],
                        null
                    ],
                    "\"AB\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "train_station",
        "query": "SELECT Train_ID FROM train_station WHERE Station_ID = '8';",
        "question": "Select train id from train station when station id equals 8",
        "tables": [
            "train_station",
            "train",
            "station"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "train",
            "id",
            "from",
            "train",
            "station",
            "when",
            "station",
            "id",
            "equals",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "Train_ID",
            "FROM",
            "train_station",
            "WHERE",
            "Station_ID",
            "=",
            "'8'"
        ],
        "query_toks_no_value": [
            "select",
            "train_id",
            "from",
            "train_station",
            "where",
            "station_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__train_station__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__train_station.train_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__train_station.station_id__",
                            false
                        ],
                        null
                    ],
                    "\"8\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "train_station",
        "query": "SELECT Station_ID FROM train_station WHERE Train_ID = 9;",
        "question": "Select station id from train station when train id equals 9",
        "tables": [
            "train_station",
            "train",
            "station"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "station",
            "id",
            "from",
            "train",
            "station",
            "when",
            "train",
            "id",
            "equals",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "Station_ID",
            "FROM",
            "train_station",
            "WHERE",
            "Train_ID",
            "=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "station_id",
            "from",
            "train_station",
            "where",
            "train_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__train_station__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__train_station.station_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__train_station.train_id__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "train_station",
        "query": "SELECT * FROM train WHERE Train_ID = 6;",
        "question": "Select all columns from train when train id equals 6",
        "tables": [
            "train_station",
            "train",
            "station"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "train",
            "when",
            "train",
            "id",
            "equals",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "train",
            "WHERE",
            "Train_ID",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "train",
            "where",
            "train_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__train__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__train.train_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "train_station",
        "query": "SELECT * FROM station WHERE Number_of_Platforms = 15;",
        "question": "Select all columns from station when number of platforms equals 15",
        "tables": [
            "train_station",
            "train",
            "station"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "station",
            "when",
            "number",
            "of",
            "platforms",
            "equals",
            "15"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "station",
            "WHERE",
            "Number_of_Platforms",
            "=",
            "15"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "station",
            "where",
            "number_of_platforms",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__station__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__station.number_of_platforms__",
                            false
                        ],
                        null
                    ],
                    15.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "document_management",
        "query": "SELECT role_description FROM Roles WHERE role_code = 'DBA';",
        "question": "Select role description from roles when role code equals DBA",
        "tables": [
            "Roles",
            "Functional_Areas",
            "Documents",
            "Document_Sections",
            "Document_Sections_Images",
            "Images",
            "Users",
            "Document_Functional_Areas",
            "Document_Structures"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "role",
            "description",
            "from",
            "roles",
            "when",
            "role",
            "code",
            "equals",
            "DBA"
        ],
        "query_toks": [
            "SELECT",
            "role_description",
            "FROM",
            "Roles",
            "WHERE",
            "role_code",
            "=",
            "'DBA'"
        ],
        "query_toks_no_value": [
            "select",
            "role_description",
            "from",
            "roles",
            "where",
            "role_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__roles__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__roles.role_description__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__roles.role_code__",
                            false
                        ],
                        null
                    ],
                    "\"DBA\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "document_management",
        "query": "SELECT functional_area_code FROM Functional_Areas WHERE functional_area_description = 'Signature';",
        "question": "Select functional area code from functional areas when functional area description equals Signature",
        "tables": [
            "Roles",
            "Functional_Areas",
            "Documents",
            "Document_Sections",
            "Document_Sections_Images",
            "Images",
            "Users",
            "Document_Functional_Areas",
            "Document_Structures"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "functional",
            "area",
            "code",
            "from",
            "functional",
            "areas",
            "when",
            "functional",
            "area",
            "description",
            "equals",
            "Signature"
        ],
        "query_toks": [
            "SELECT",
            "functional_area_code",
            "FROM",
            "Functional_Areas",
            "WHERE",
            "functional_area_description",
            "=",
            "'Signature'"
        ],
        "query_toks_no_value": [
            "select",
            "functional_area_code",
            "from",
            "functional_areas",
            "where",
            "functional_area_description",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__functional_areas__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__functional_areas.functional_area_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__functional_areas.functional_area_description__",
                            false
                        ],
                        null
                    ],
                    "\"Signature\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "document_management",
        "query": "SELECT document_type_code FROM Documents WHERE access_count = '9948';",
        "question": "Select document type code from documents when access count equals 9948",
        "tables": [
            "Roles",
            "Functional_Areas",
            "Documents",
            "Document_Sections",
            "Document_Sections_Images",
            "Images",
            "Users",
            "Document_Functional_Areas",
            "Document_Structures"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "document",
            "type",
            "code",
            "from",
            "documents",
            "when",
            "access",
            "count",
            "equals",
            "9948"
        ],
        "query_toks": [
            "SELECT",
            "document_type_code",
            "FROM",
            "Documents",
            "WHERE",
            "access_count",
            "=",
            "'9948'"
        ],
        "query_toks_no_value": [
            "select",
            "document_type_code",
            "from",
            "documents",
            "where",
            "access_count",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__documents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__documents.document_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__documents.access_count__",
                            false
                        ],
                        null
                    ],
                    "\"9948\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "document_management",
        "query": "SELECT section_id FROM Document_Sections WHERE document_code = '465';",
        "question": "Select section id from document sections when document code equals 465",
        "tables": [
            "Roles",
            "Functional_Areas",
            "Documents",
            "Document_Sections",
            "Document_Sections_Images",
            "Images",
            "Users",
            "Document_Functional_Areas",
            "Document_Structures"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "section",
            "id",
            "from",
            "document",
            "sections",
            "when",
            "document",
            "code",
            "equals",
            "465"
        ],
        "query_toks": [
            "SELECT",
            "section_id",
            "FROM",
            "Document_Sections",
            "WHERE",
            "document_code",
            "=",
            "'465'"
        ],
        "query_toks_no_value": [
            "select",
            "section_id",
            "from",
            "document_sections",
            "where",
            "document_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__document_sections__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__document_sections.section_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__document_sections.document_code__",
                            false
                        ],
                        null
                    ],
                    "\"465\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "document_management",
        "query": "SELECT * FROM Document_Sections WHERE document_code = 465;",
        "question": "Select all columns from document sections when document code equals 465",
        "tables": [
            "Roles",
            "Functional_Areas",
            "Documents",
            "Document_Sections",
            "Document_Sections_Images",
            "Images",
            "Users",
            "Document_Functional_Areas",
            "Document_Structures"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "document",
            "sections",
            "when",
            "document",
            "code",
            "equals",
            "465"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Document_Sections",
            "WHERE",
            "document_code",
            "=",
            "465"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "document_sections",
            "where",
            "document_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__document_sections__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__document_sections.document_code__",
                            false
                        ],
                        null
                    ],
                    465.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "document_management",
        "query": "SELECT section_id FROM Document_Sections_Images WHERE image_id = '5';",
        "question": "Select section id from document sections images when image id equals 5",
        "tables": [
            "Roles",
            "Functional_Areas",
            "Documents",
            "Document_Sections",
            "Document_Sections_Images",
            "Images",
            "Users",
            "Document_Functional_Areas",
            "Document_Structures"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "section",
            "id",
            "from",
            "document",
            "sections",
            "images",
            "when",
            "image",
            "id",
            "equals",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "section_id",
            "FROM",
            "Document_Sections_Images",
            "WHERE",
            "image_id",
            "=",
            "'5'"
        ],
        "query_toks_no_value": [
            "select",
            "section_id",
            "from",
            "document_sections_images",
            "where",
            "image_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__document_sections_images__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__document_sections_images.section_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__document_sections_images.image_id__",
                            false
                        ],
                        null
                    ],
                    "\"5\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "document_management",
        "query": "SELECT * FROM Document_Sections_Images WHERE image_id = 3;",
        "question": "Select all columns from document sections images when image id equals 3",
        "tables": [
            "Roles",
            "Functional_Areas",
            "Documents",
            "Document_Sections",
            "Document_Sections_Images",
            "Images",
            "Users",
            "Document_Functional_Areas",
            "Document_Structures"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "document",
            "sections",
            "images",
            "when",
            "image",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Document_Sections_Images",
            "WHERE",
            "image_id",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "document_sections_images",
            "where",
            "image_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__document_sections_images__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__document_sections_images.image_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "document_management",
        "query": "SELECT user_name FROM Users WHERE user_login = '0';",
        "question": "Select user name from users when user login equals 0",
        "tables": [
            "Roles",
            "Functional_Areas",
            "Documents",
            "Document_Sections",
            "Document_Sections_Images",
            "Images",
            "Users",
            "Document_Functional_Areas",
            "Document_Structures"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "user",
            "name",
            "from",
            "users",
            "when",
            "user",
            "login",
            "equals",
            "0"
        ],
        "query_toks": [
            "SELECT",
            "user_name",
            "FROM",
            "Users",
            "WHERE",
            "user_login",
            "=",
            "'0'"
        ],
        "query_toks_no_value": [
            "select",
            "user_name",
            "from",
            "users",
            "where",
            "user_login",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__users__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__users.user_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__users.user_login__",
                            false
                        ],
                        null
                    ],
                    "\"0\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "document_management",
        "query": "SELECT document_code FROM Document_Functional_Areas WHERE functional_area_code = '1';",
        "question": "Select document code from document functional areas when functional area code equals 1",
        "tables": [
            "Roles",
            "Functional_Areas",
            "Documents",
            "Document_Sections",
            "Document_Sections_Images",
            "Images",
            "Users",
            "Document_Functional_Areas",
            "Document_Structures"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "document",
            "code",
            "from",
            "document",
            "functional",
            "areas",
            "when",
            "functional",
            "area",
            "code",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "document_code",
            "FROM",
            "Document_Functional_Areas",
            "WHERE",
            "functional_area_code",
            "=",
            "'1'"
        ],
        "query_toks_no_value": [
            "select",
            "document_code",
            "from",
            "document_functional_areas",
            "where",
            "functional_area_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__document_functional_areas__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__document_functional_areas.document_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__document_functional_areas.functional_area_code__",
                            false
                        ],
                        null
                    ],
                    "\"1\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "document_management",
        "query": "SELECT document_code FROM Document_Functional_Areas WHERE functional_area_code = 1;",
        "question": "Select document code from document functional areas when functional area code equals 1",
        "tables": [
            "Roles",
            "Functional_Areas",
            "Documents",
            "Document_Sections",
            "Document_Sections_Images",
            "Images",
            "Users",
            "Document_Functional_Areas",
            "Document_Structures"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "document",
            "code",
            "from",
            "document",
            "functional",
            "areas",
            "when",
            "functional",
            "area",
            "code",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "document_code",
            "FROM",
            "Document_Functional_Areas",
            "WHERE",
            "functional_area_code",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "document_code",
            "from",
            "document_functional_areas",
            "where",
            "functional_area_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__document_functional_areas__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__document_functional_areas.document_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__document_functional_areas.functional_area_code__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "document_management",
        "query": "SELECT parent_document_structure_code FROM Document_Structures WHERE document_structure_code = '9';",
        "question": "Select parent document structure code from document structures when document structure code equals 9",
        "tables": [
            "Roles",
            "Functional_Areas",
            "Documents",
            "Document_Sections",
            "Document_Sections_Images",
            "Images",
            "Users",
            "Document_Functional_Areas",
            "Document_Structures"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "parent",
            "document",
            "structure",
            "code",
            "from",
            "document",
            "structures",
            "when",
            "document",
            "structure",
            "code",
            "equals",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "parent_document_structure_code",
            "FROM",
            "Document_Structures",
            "WHERE",
            "document_structure_code",
            "=",
            "'9'"
        ],
        "query_toks_no_value": [
            "select",
            "parent_document_structure_code",
            "from",
            "document_structures",
            "where",
            "document_structure_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__document_structures__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__document_structures.parent_document_structure_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__document_structures.document_structure_code__",
                            false
                        ],
                        null
                    ],
                    "\"9\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "document_management",
        "query": "SELECT * FROM Document_Structures WHERE document_structure_code = 6;",
        "question": "Select all columns from document structures when document structure code equals 6",
        "tables": [
            "Roles",
            "Functional_Areas",
            "Documents",
            "Document_Sections",
            "Document_Sections_Images",
            "Images",
            "Users",
            "Document_Functional_Areas",
            "Document_Structures"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "document",
            "structures",
            "when",
            "document",
            "structure",
            "code",
            "equals",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Document_Structures",
            "WHERE",
            "document_structure_code",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "document_structures",
            "where",
            "document_structure_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__document_structures__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__document_structures.document_structure_code__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT points FROM constructorResults WHERE constructorResultsId = '517';",
        "question": "Select points from constructor results when constructor results id equals 517",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "points",
            "from",
            "constructor",
            "results",
            "when",
            "constructor",
            "results",
            "id",
            "equals",
            "517"
        ],
        "query_toks": [
            "SELECT",
            "points",
            "FROM",
            "constructorResults",
            "WHERE",
            "constructorResultsId",
            "=",
            "'517'"
        ],
        "query_toks_no_value": [
            "select",
            "points",
            "from",
            "constructorresults",
            "where",
            "constructorresultsid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__constructorresults__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__constructorresults.points__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__constructorresults.constructorresultsid__",
                            false
                        ],
                        null
                    ],
                    "\"517\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT constructorResultsId FROM constructorResults WHERE constructorId = 81;",
        "question": "Select constructor results id from constructor results when constructor id equals 81",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "constructor",
            "results",
            "id",
            "from",
            "constructor",
            "results",
            "when",
            "constructor",
            "id",
            "equals",
            "81"
        ],
        "query_toks": [
            "SELECT",
            "constructorResultsId",
            "FROM",
            "constructorResults",
            "WHERE",
            "constructorId",
            "=",
            "81"
        ],
        "query_toks_no_value": [
            "select",
            "constructorresultsid",
            "from",
            "constructorresults",
            "where",
            "constructorid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__constructorresults__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__constructorresults.constructorresultsid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__constructorresults.constructorid__",
                            false
                        ],
                        null
                    ],
                    81.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT * FROM constructors WHERE constructorId = 16;",
        "question": "Select all columns from constructors when constructor id equals 16",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "constructors",
            "when",
            "constructor",
            "id",
            "equals",
            "16"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "constructors",
            "WHERE",
            "constructorId",
            "=",
            "16"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "constructors",
            "where",
            "constructorid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__constructors__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__constructors.constructorid__",
                            false
                        ],
                        null
                    ],
                    16.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT url FROM seasons WHERE year = 1990;",
        "question": "Select url from seasons when year equals 1990",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "url",
            "from",
            "seasons",
            "when",
            "year",
            "equals",
            "1990"
        ],
        "query_toks": [
            "SELECT",
            "url",
            "FROM",
            "seasons",
            "WHERE",
            "year",
            "=",
            "1990"
        ],
        "query_toks_no_value": [
            "select",
            "url",
            "from",
            "seasons",
            "where",
            "year",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__seasons__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__seasons.url__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__seasons.year__",
                            false
                        ],
                        null
                    ],
                    1990.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT raceId FROM qualifying WHERE qualifyId = '5265';",
        "question": "Select race id from qualifying when qualify id equals 5265",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "race",
            "id",
            "from",
            "qualifying",
            "when",
            "qualify",
            "id",
            "equals",
            "5265"
        ],
        "query_toks": [
            "SELECT",
            "raceId",
            "FROM",
            "qualifying",
            "WHERE",
            "qualifyId",
            "=",
            "'5265'"
        ],
        "query_toks_no_value": [
            "select",
            "raceid",
            "from",
            "qualifying",
            "where",
            "qualifyid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__qualifying__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__qualifying.raceid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__qualifying.qualifyid__",
                            false
                        ],
                        null
                    ],
                    "\"5265\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT position FROM qualifying WHERE qualifyId = 1698;",
        "question": "Select position from qualifying when qualify id equals 1698",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "position",
            "from",
            "qualifying",
            "when",
            "qualify",
            "id",
            "equals",
            "1698"
        ],
        "query_toks": [
            "SELECT",
            "position",
            "FROM",
            "qualifying",
            "WHERE",
            "qualifyId",
            "=",
            "1698"
        ],
        "query_toks_no_value": [
            "select",
            "position",
            "from",
            "qualifying",
            "where",
            "qualifyid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__qualifying__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__qualifying.position__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__qualifying.qualifyid__",
                            false
                        ],
                        null
                    ],
                    1698.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT wins FROM driverStandings WHERE driverId = '274';",
        "question": "Select wins from driver standings when driver id equals 274",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "wins",
            "from",
            "driver",
            "standings",
            "when",
            "driver",
            "id",
            "equals",
            "274"
        ],
        "query_toks": [
            "SELECT",
            "wins",
            "FROM",
            "driverStandings",
            "WHERE",
            "driverId",
            "=",
            "'274'"
        ],
        "query_toks_no_value": [
            "select",
            "wins",
            "from",
            "driverstandings",
            "where",
            "driverid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__driverstandings__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__driverstandings.wins__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__driverstandings.driverid__",
                            false
                        ],
                        null
                    ],
                    "\"274\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT * FROM driverStandings WHERE wins = 10;",
        "question": "Select all columns from driver standings when wins equals 10",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "driver",
            "standings",
            "when",
            "wins",
            "equals",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "driverStandings",
            "WHERE",
            "wins",
            "=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "driverstandings",
            "where",
            "wins",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__driverstandings__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__driverstandings.wins__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT wins FROM constructorStandings WHERE raceId = 114;",
        "question": "Select wins from constructor standings when race id equals 114",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "wins",
            "from",
            "constructor",
            "standings",
            "when",
            "race",
            "id",
            "equals",
            "114"
        ],
        "query_toks": [
            "SELECT",
            "wins",
            "FROM",
            "constructorStandings",
            "WHERE",
            "raceId",
            "=",
            "114"
        ],
        "query_toks_no_value": [
            "select",
            "wins",
            "from",
            "constructorstandings",
            "where",
            "raceid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__constructorstandings__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__constructorstandings.wins__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__constructorstandings.raceid__",
                            false
                        ],
                        null
                    ],
                    114.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT forename FROM drivers WHERE surname = 'de Angelis';",
        "question": "Select forename from drivers when surname equals de Angelis",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "forename",
            "from",
            "drivers",
            "when",
            "surname",
            "equals",
            "de",
            "Angelis"
        ],
        "query_toks": [
            "SELECT",
            "forename",
            "FROM",
            "drivers",
            "WHERE",
            "surname",
            "=",
            "'de",
            "Angelis'"
        ],
        "query_toks_no_value": [
            "select",
            "forename",
            "from",
            "drivers",
            "where",
            "surname",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__drivers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__drivers.forename__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__drivers.surname__",
                            false
                        ],
                        null
                    ],
                    "\"de Angelis\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT fastestLapTime FROM results WHERE constructorId = '191';",
        "question": "Select fastest lap time from results when constructor id equals 191",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "fastest",
            "lap",
            "time",
            "from",
            "results",
            "when",
            "constructor",
            "id",
            "equals",
            "191"
        ],
        "query_toks": [
            "SELECT",
            "fastestLapTime",
            "FROM",
            "results",
            "WHERE",
            "constructorId",
            "=",
            "'191'"
        ],
        "query_toks_no_value": [
            "select",
            "fastestlaptime",
            "from",
            "results",
            "where",
            "constructorid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__results__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__results.fastestlaptime__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__results.constructorid__",
                            false
                        ],
                        null
                    ],
                    "\"191\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT * FROM results WHERE laps = 189;",
        "question": "Select all columns from results when laps equals 189",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "results",
            "when",
            "laps",
            "equals",
            "189"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "results",
            "WHERE",
            "laps",
            "=",
            "189"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "results",
            "where",
            "laps",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__results__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__results.laps__",
                            false
                        ],
                        null
                    ],
                    189.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT lat FROM circuits WHERE circuitId = '31';",
        "question": "Select latitude from circuits when circuit id equals 31",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "latitude",
            "from",
            "circuits",
            "when",
            "circuit",
            "id",
            "equals",
            "31"
        ],
        "query_toks": [
            "SELECT",
            "lat",
            "FROM",
            "circuits",
            "WHERE",
            "circuitId",
            "=",
            "'31'"
        ],
        "query_toks_no_value": [
            "select",
            "lat",
            "from",
            "circuits",
            "where",
            "circuitid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__circuits__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__circuits.lat__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__circuits.circuitid__",
                            false
                        ],
                        null
                    ],
                    "\"31\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT statusId FROM status WHERE status = 'Injection';",
        "question": "Select status id from status when status equals Injection",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "status",
            "id",
            "from",
            "status",
            "when",
            "status",
            "equals",
            "Injection"
        ],
        "query_toks": [
            "SELECT",
            "statusId",
            "FROM",
            "status",
            "WHERE",
            "status",
            "=",
            "'Injection'"
        ],
        "query_toks_no_value": [
            "select",
            "statusid",
            "from",
            "status",
            "where",
            "status",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__status__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__status.statusid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__status.status__",
                            false
                        ],
                        null
                    ],
                    "\"Injection\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "game_1",
        "query": "SELECT SportName FROM SportsInfo WHERE GamesPlayed = '5';",
        "question": "Select sport name from sports info when games played equals 5",
        "tables": [
            "SportsInfo",
            "Student",
            "Video_Games",
            "Plays_Games"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "sport",
            "name",
            "from",
            "sports",
            "info",
            "when",
            "games",
            "played",
            "equals",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "SportName",
            "FROM",
            "SportsInfo",
            "WHERE",
            "GamesPlayed",
            "=",
            "'5'"
        ],
        "query_toks_no_value": [
            "select",
            "sportname",
            "from",
            "sportsinfo",
            "where",
            "gamesplayed",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__sportsinfo__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__sportsinfo.sportname__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__sportsinfo.gamesplayed__",
                            false
                        ],
                        null
                    ],
                    "\"5\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "game_1",
        "query": "SELECT LName FROM Student WHERE city_code = 'DET';",
        "question": "Select last name from student when city code equals DET",
        "tables": [
            "SportsInfo",
            "Student",
            "Video_Games",
            "Plays_Games"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "last",
            "name",
            "from",
            "student",
            "when",
            "city",
            "code",
            "equals",
            "DET"
        ],
        "query_toks": [
            "SELECT",
            "LName",
            "FROM",
            "Student",
            "WHERE",
            "city_code",
            "=",
            "'DET'"
        ],
        "query_toks_no_value": [
            "select",
            "lname",
            "from",
            "student",
            "where",
            "city_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.lname__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__student.city_code__",
                            false
                        ],
                        null
                    ],
                    "\"DET\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "game_1",
        "query": "SELECT city_code FROM Student WHERE Advisor = 2311;",
        "question": "Select city code from student when advisor equals 2311",
        "tables": [
            "SportsInfo",
            "Student",
            "Video_Games",
            "Plays_Games"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "city",
            "code",
            "from",
            "student",
            "when",
            "advisor",
            "equals",
            "2311"
        ],
        "query_toks": [
            "SELECT",
            "city_code",
            "FROM",
            "Student",
            "WHERE",
            "Advisor",
            "=",
            "2311"
        ],
        "query_toks_no_value": [
            "select",
            "city_code",
            "from",
            "student",
            "where",
            "advisor",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.city_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__student.advisor__",
                            false
                        ],
                        null
                    ],
                    2311.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "game_1",
        "query": "SELECT GName FROM Video_Games WHERE GType = 'Grand strategy';",
        "question": "Select game name from video games when game type equals Grand strategy",
        "tables": [
            "SportsInfo",
            "Student",
            "Video_Games",
            "Plays_Games"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "game",
            "name",
            "from",
            "video",
            "games",
            "when",
            "game",
            "type",
            "equals",
            "Grand",
            "strategy"
        ],
        "query_toks": [
            "SELECT",
            "GName",
            "FROM",
            "Video_Games",
            "WHERE",
            "GType",
            "=",
            "'Grand",
            "strategy'"
        ],
        "query_toks_no_value": [
            "select",
            "gname",
            "from",
            "video_games",
            "where",
            "gtype",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__video_games__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__video_games.gname__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__video_games.gtype__",
                            false
                        ],
                        null
                    ],
                    "\"Grand strategy\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "game_1",
        "query": "SELECT Hours_Played FROM Plays_Games WHERE StuID = '1008';",
        "question": "Select hours played from plays games when student id equals 1008",
        "tables": [
            "SportsInfo",
            "Student",
            "Video_Games",
            "Plays_Games"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "hours",
            "played",
            "from",
            "plays",
            "games",
            "when",
            "student",
            "id",
            "equals",
            "1008"
        ],
        "query_toks": [
            "SELECT",
            "Hours_Played",
            "FROM",
            "Plays_Games",
            "WHERE",
            "StuID",
            "=",
            "'1008'"
        ],
        "query_toks_no_value": [
            "select",
            "hours_played",
            "from",
            "plays_games",
            "where",
            "stuid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__plays_games__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__plays_games.hours_played__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__plays_games.stuid__",
                            false
                        ],
                        null
                    ],
                    "\"1008\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "game_1",
        "query": "SELECT GameID FROM Plays_Games WHERE StuID = 1032;",
        "question": "Select game id from plays games when student id equals 1032",
        "tables": [
            "SportsInfo",
            "Student",
            "Video_Games",
            "Plays_Games"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "game",
            "id",
            "from",
            "plays",
            "games",
            "when",
            "student",
            "id",
            "equals",
            "1032"
        ],
        "query_toks": [
            "SELECT",
            "GameID",
            "FROM",
            "Plays_Games",
            "WHERE",
            "StuID",
            "=",
            "1032"
        ],
        "query_toks_no_value": [
            "select",
            "gameid",
            "from",
            "plays_games",
            "where",
            "stuid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__plays_games__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__plays_games.gameid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__plays_games.stuid__",
                            false
                        ],
                        null
                    ],
                    1032.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "loan_1",
        "query": "SELECT credit_score FROM customer WHERE cust_ID = '3';",
        "question": "Select credit score from customer when customer id equals 3",
        "tables": [
            "customer",
            "loan",
            "bank"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "credit",
            "score",
            "from",
            "customer",
            "when",
            "customer",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "credit_score",
            "FROM",
            "customer",
            "WHERE",
            "cust_ID",
            "=",
            "'3'"
        ],
        "query_toks_no_value": [
            "select",
            "credit_score",
            "from",
            "customer",
            "where",
            "cust_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer.credit_score__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customer.cust_id__",
                            false
                        ],
                        null
                    ],
                    "\"3\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "loan_1",
        "query": "SELECT acc_bal FROM customer WHERE branch_ID = 2;",
        "question": "Select account balance from customer when branch id equals 2",
        "tables": [
            "customer",
            "loan",
            "bank"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "account",
            "balance",
            "from",
            "customer",
            "when",
            "branch",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "acc_bal",
            "FROM",
            "customer",
            "WHERE",
            "branch_ID",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "acc_bal",
            "from",
            "customer",
            "where",
            "branch_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer.acc_bal__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customer.branch_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "loan_1",
        "query": "SELECT loan_ID FROM loan WHERE loan_type = 'Mortgages';",
        "question": "Select loan id from loan when loan type equals Mortgages",
        "tables": [
            "customer",
            "loan",
            "bank"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "loan",
            "id",
            "from",
            "loan",
            "when",
            "loan",
            "type",
            "equals",
            "Mortgages"
        ],
        "query_toks": [
            "SELECT",
            "loan_ID",
            "FROM",
            "loan",
            "WHERE",
            "loan_type",
            "=",
            "'Mortgages'"
        ],
        "query_toks_no_value": [
            "select",
            "loan_id",
            "from",
            "loan",
            "where",
            "loan_type",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__loan__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__loan.loan_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__loan.loan_type__",
                            false
                        ],
                        null
                    ],
                    "\"Mortgages\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "loan_1",
        "query": "SELECT no_of_customers FROM bank WHERE state = 'Utah';",
        "question": "Select no of customers from bank when state equals Utah",
        "tables": [
            "customer",
            "loan",
            "bank"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "no",
            "of",
            "customers",
            "from",
            "bank",
            "when",
            "state",
            "equals",
            "Utah"
        ],
        "query_toks": [
            "SELECT",
            "no_of_customers",
            "FROM",
            "bank",
            "WHERE",
            "state",
            "=",
            "'Utah'"
        ],
        "query_toks_no_value": [
            "select",
            "no_of_customers",
            "from",
            "bank",
            "where",
            "state",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__bank__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__bank.no_of_customers__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__bank.state__",
                            false
                        ],
                        null
                    ],
                    "\"Utah\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "bike_1",
        "query": "SELECT * FROM weather WHERE max_gust_speed_mph = 17;",
        "question": "Select all columns from weather when max gust speed mph equals 17",
        "tables": [
            "status",
            "weather",
            "trip",
            "station"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "weather",
            "when",
            "max",
            "gust",
            "speed",
            "mph",
            "equals",
            "17"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "weather",
            "WHERE",
            "max_gust_speed_mp",
            "(",
            "max_gust_speed_mp",
            ")",
            "=",
            "17"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "weather",
            "where",
            "max_gust_speed_mp",
            "(",
            "max_gust_speed_mp",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__weather__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__weather.max_gust_speed_mph__",
                            false
                        ],
                        null
                    ],
                    17.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "bike_1",
        "query": "SELECT zip_code FROM trip WHERE start_station_name = 'Powell Street BART';",
        "question": "Select zip code from trip when start station name equals Powell Street BART",
        "tables": [
            "status",
            "weather",
            "trip",
            "station"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "zip",
            "code",
            "from",
            "trip",
            "when",
            "start",
            "station",
            "name",
            "equals",
            "Powell",
            "Street",
            "BART"
        ],
        "query_toks": [
            "SELECT",
            "zip_code",
            "FROM",
            "trip",
            "WHERE",
            "start_station_name",
            "=",
            "'Powell",
            "Street",
            "BART'"
        ],
        "query_toks_no_value": [
            "select",
            "zip_code",
            "from",
            "trip",
            "where",
            "start_station_name",
            "=",
            "value",
            "street",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__trip__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__trip.zip_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__trip.start_station_name__",
                            false
                        ],
                        null
                    ],
                    "\"Powell Street BART\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "entrepreneur",
        "query": "SELECT Investor FROM entrepreneur WHERE Entrepreneur_ID = '6';",
        "question": "Select investor from entrepreneur when entrepreneur id equals 6",
        "tables": [
            "entrepreneur",
            "people"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "investor",
            "from",
            "entrepreneur",
            "when",
            "entrepreneur",
            "id",
            "equals",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "Investor",
            "FROM",
            "entrepreneur",
            "WHERE",
            "Entrepreneur_ID",
            "=",
            "'6'"
        ],
        "query_toks_no_value": [
            "select",
            "investor",
            "from",
            "entrepreneur",
            "where",
            "entrepreneur_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__entrepreneur__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__entrepreneur.investor__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__entrepreneur.entrepreneur_id__",
                            false
                        ],
                        null
                    ],
                    "\"6\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Conductor_ID FROM orchestra WHERE Orchestra_ID = 3;",
        "question": "Select conductor id from orchestra when orchestra id equals 3",
        "tables": [
            "orchestra",
            "show",
            "conductor",
            "performance"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "conductor",
            "id",
            "from",
            "orchestra",
            "when",
            "orchestra",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Conductor_ID",
            "FROM",
            "orchestra",
            "WHERE",
            "Orchestra_ID",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "conductor_id",
            "from",
            "orchestra",
            "where",
            "orchestra_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__orchestra__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__orchestra.conductor_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__orchestra.orchestra_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Performance_ID FROM show WHERE If_first_show = 'Glebe Park';",
        "question": "Select performance id from show when if first show equals Glebe Park",
        "tables": [
            "orchestra",
            "show",
            "conductor",
            "performance"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "performance",
            "id",
            "from",
            "show",
            "when",
            "if",
            "first",
            "show",
            "equals",
            "Glebe",
            "Park"
        ],
        "query_toks": [
            "SELECT",
            "Performance_ID",
            "FROM",
            "show",
            "WHERE",
            "If_first_show",
            "=",
            "'Glebe",
            "Park'"
        ],
        "query_toks_no_value": [
            "select",
            "performance_id",
            "from",
            "show",
            "where",
            "if_first_show",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__show__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__show.performance_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__show.if_first_show__",
                            false
                        ],
                        null
                    ],
                    "\"Glebe Park\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Year_of_Work FROM conductor WHERE Age = '50';",
        "question": "Select year of work from conductor when age equals 50",
        "tables": [
            "orchestra",
            "show",
            "conductor",
            "performance"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "year",
            "of",
            "work",
            "from",
            "conductor",
            "when",
            "age",
            "equals",
            "50"
        ],
        "query_toks": [
            "SELECT",
            "Year_of_Work",
            "FROM",
            "conductor",
            "WHERE",
            "Age",
            "=",
            "'50'"
        ],
        "query_toks_no_value": [
            "select",
            "year_of_work",
            "from",
            "conductor",
            "where",
            "age",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__conductor__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__conductor.year_of_work__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__conductor.age__",
                            false
                        ],
                        null
                    ],
                    "\"50\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Performance_ID FROM performance WHERE Date = '10 June';",
        "question": "Select performance id from performance when date equals 10 June",
        "tables": [
            "orchestra",
            "show",
            "conductor",
            "performance"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "performance",
            "id",
            "from",
            "performance",
            "when",
            "date",
            "equals",
            "10",
            "June"
        ],
        "query_toks": [
            "SELECT",
            "Performance_ID",
            "FROM",
            "performance",
            "WHERE",
            "Date",
            "=",
            "'10",
            "June'"
        ],
        "query_toks_no_value": [
            "select",
            "performance_id",
            "from",
            "performance",
            "where",
            "date",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__performance__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__performance.performance_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__performance.date__",
                            false
                        ],
                        null
                    ],
                    "\"10 June\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "query": "SELECT * FROM performance WHERE Performance_ID = 11;",
        "question": "Select all columns from performance when performance id equals 11",
        "tables": [
            "orchestra",
            "show",
            "conductor",
            "performance"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "performance",
            "when",
            "performance",
            "id",
            "equals",
            "11"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "performance",
            "WHERE",
            "Performance_ID",
            "=",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "performance",
            "where",
            "performance_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__performance__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__performance.performance_id__",
                            false
                        ],
                        null
                    ],
                    11.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Customer_Phone FROM Performers WHERE Address_ID = '110';",
        "question": "Select customer phone from performers when address id equals 110",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "customer",
            "phone",
            "from",
            "performers",
            "when",
            "address",
            "id",
            "equals",
            "110"
        ],
        "query_toks": [
            "SELECT",
            "Customer_Phone",
            "FROM",
            "Performers",
            "WHERE",
            "Address_ID",
            "=",
            "'110'"
        ],
        "query_toks_no_value": [
            "select",
            "customer_phone",
            "from",
            "performers",
            "where",
            "address_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__performers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__performers.customer_phone__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__performers.address_id__",
                            false
                        ],
                        null
                    ],
                    "\"110\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Product_Name FROM Products WHERE Product_ID = '83';",
        "question": "Select product name from products when product id equals 83",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "product",
            "name",
            "from",
            "products",
            "when",
            "product",
            "id",
            "equals",
            "83"
        ],
        "query_toks": [
            "SELECT",
            "Product_Name",
            "FROM",
            "Products",
            "WHERE",
            "Product_ID",
            "=",
            "'83'"
        ],
        "query_toks_no_value": [
            "select",
            "product_name",
            "from",
            "products",
            "where",
            "product_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products.product_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__products.product_id__",
                            false
                        ],
                        null
                    ],
                    "\"83\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Store_Phone FROM Drama_Workshop_Groups WHERE Address_ID = '124';",
        "question": "Select store phone from drama workshop groups when address id equals 124",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "store",
            "phone",
            "from",
            "drama",
            "workshop",
            "groups",
            "when",
            "address",
            "id",
            "equals",
            "124"
        ],
        "query_toks": [
            "SELECT",
            "Store_Phone",
            "FROM",
            "Drama_Workshop_Groups",
            "WHERE",
            "Address_ID",
            "=",
            "'124'"
        ],
        "query_toks_no_value": [
            "select",
            "store_phone",
            "from",
            "drama_workshop_groups",
            "where",
            "address_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__drama_workshop_groups__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__drama_workshop_groups.store_phone__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__drama_workshop_groups.address_id__",
                            false
                        ],
                        null
                    ],
                    "\"124\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Order_ID FROM Order_Items WHERE Order_Item_ID = '15';",
        "question": "Select order id from order items when order item id equals 15",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "order",
            "id",
            "from",
            "order",
            "items",
            "when",
            "order",
            "item",
            "id",
            "equals",
            "15"
        ],
        "query_toks": [
            "SELECT",
            "Order_ID",
            "FROM",
            "Order_Items",
            "WHERE",
            "Order_Item_ID",
            "=",
            "'15'"
        ],
        "query_toks_no_value": [
            "select",
            "order_id",
            "from",
            "order_items",
            "where",
            "order_item_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__order_items__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__order_items.order_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__order_items.order_item_id__",
                            false
                        ],
                        null
                    ],
                    "\"15\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Order_ID FROM Order_Items WHERE Order_Item_ID = 12;",
        "question": "Select order id from order items when order item id equals 12",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "order",
            "id",
            "from",
            "order",
            "items",
            "when",
            "order",
            "item",
            "id",
            "equals",
            "12"
        ],
        "query_toks": [
            "SELECT",
            "Order_ID",
            "FROM",
            "Order_Items",
            "WHERE",
            "Order_Item_ID",
            "=",
            "12"
        ],
        "query_toks_no_value": [
            "select",
            "order_id",
            "from",
            "order_items",
            "where",
            "order_item_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__order_items__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__order_items.order_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__order_items.order_item_id__",
                            false
                        ],
                        null
                    ],
                    12.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Order_Quantity FROM Invoices WHERE Product_ID = '8';",
        "question": "Select order quantity from invoices when product id equals 8",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "order",
            "quantity",
            "from",
            "invoices",
            "when",
            "product",
            "id",
            "equals",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "Order_Quantity",
            "FROM",
            "Invoices",
            "WHERE",
            "Product_ID",
            "=",
            "'8'"
        ],
        "query_toks_no_value": [
            "select",
            "order_quantity",
            "from",
            "invoices",
            "where",
            "product_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__invoices__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__invoices.order_quantity__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__invoices.product_id__",
                            false
                        ],
                        null
                    ],
                    "\"8\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Order_ID FROM Invoices WHERE Product_ID = 2;",
        "question": "Select order id from invoices when product id equals 2",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "order",
            "id",
            "from",
            "invoices",
            "when",
            "product",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Order_ID",
            "FROM",
            "Invoices",
            "WHERE",
            "Product_ID",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "order_id",
            "from",
            "invoices",
            "where",
            "product_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__invoices__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__invoices.order_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__invoices.product_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Line_1 FROM Addresses WHERE State_County = 'Washington';",
        "question": "Select line 1 from addresses when state county equals Washington",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "line",
            "1",
            "from",
            "addresses",
            "when",
            "state",
            "county",
            "equals",
            "Washington"
        ],
        "query_toks": [
            "SELECT",
            "Line_1",
            "FROM",
            "Addresses",
            "WHERE",
            "State_County",
            "=",
            "'Washington'"
        ],
        "query_toks_no_value": [
            "select",
            "line_1",
            "from",
            "addresses",
            "where",
            "state_county",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__addresses.line_1__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__addresses.state_county__",
                            false
                        ],
                        null
                    ],
                    "\"Washington\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Planned_Delivery_Date FROM Customer_Orders WHERE Store_ID = '291';",
        "question": "Select planned delivery date from customer orders when store id equals 291",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "planned",
            "delivery",
            "date",
            "from",
            "customer",
            "orders",
            "when",
            "store",
            "id",
            "equals",
            "291"
        ],
        "query_toks": [
            "SELECT",
            "Planned_Delivery_Date",
            "FROM",
            "Customer_Orders",
            "WHERE",
            "Store_ID",
            "=",
            "'291'"
        ],
        "query_toks_no_value": [
            "select",
            "planned_delivery_date",
            "from",
            "customer_orders",
            "where",
            "store_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_orders__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_orders.planned_delivery_date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customer_orders.store_id__",
                            false
                        ],
                        null
                    ],
                    "\"291\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT * FROM Customer_Orders WHERE Order_ID = 4;",
        "question": "Select all columns from customer orders when order id equals 4",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "customer",
            "orders",
            "when",
            "order",
            "id",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Customer_Orders",
            "WHERE",
            "Order_ID",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "customer_orders",
            "where",
            "order_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_orders__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customer_orders.order_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Product_Description FROM Services WHERE Service_Type_Code = '3';",
        "question": "Select product description from services when service type code equals 3",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "product",
            "description",
            "from",
            "services",
            "when",
            "service",
            "type",
            "code",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Product_Description",
            "FROM",
            "Services",
            "WHERE",
            "Service_Type_Code",
            "=",
            "'3'"
        ],
        "query_toks_no_value": [
            "select",
            "product_description",
            "from",
            "services",
            "where",
            "service_type_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__services__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__services.product_description__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__services.service_type_code__",
                            false
                        ],
                        null
                    ],
                    "\"3\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT * FROM Services WHERE Workshop_Group_ID = 470;",
        "question": "Select all columns from services when workshop group id equals 470",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "services",
            "when",
            "workshop",
            "group",
            "id",
            "equals",
            "470"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Services",
            "WHERE",
            "Workshop_Group_ID",
            "=",
            "470"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "services",
            "where",
            "workshop_group_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__services__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__services.workshop_group_id__",
                            false
                        ],
                        null
                    ],
                    470.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Product_ID FROM Bookings_Services WHERE Order_ID = '4';",
        "question": "Select product id from bookings services when order id equals 4",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "product",
            "id",
            "from",
            "bookings",
            "services",
            "when",
            "order",
            "id",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Product_ID",
            "FROM",
            "Bookings_Services",
            "WHERE",
            "Order_ID",
            "=",
            "'4'"
        ],
        "query_toks_no_value": [
            "select",
            "product_id",
            "from",
            "bookings_services",
            "where",
            "order_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__bookings_services__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__bookings_services.product_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__bookings_services.order_id__",
                            false
                        ],
                        null
                    ],
                    "\"4\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT * FROM Bookings_Services WHERE Product_ID = 525;",
        "question": "Select all columns from bookings services when product id equals 525",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "bookings",
            "services",
            "when",
            "product",
            "id",
            "equals",
            "525"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Bookings_Services",
            "WHERE",
            "Product_ID",
            "=",
            "525"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "bookings_services",
            "where",
            "product_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__bookings_services__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__bookings_services.product_id__",
                            false
                        ],
                        null
                    ],
                    525.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Other_Item_Details FROM Invoice_Items WHERE Order_Quantity = '6';",
        "question": "Select other item details from invoice items when order quantity equals 6",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "other",
            "item",
            "details",
            "from",
            "invoice",
            "items",
            "when",
            "order",
            "quantity",
            "equals",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "Other_Item_Details",
            "FROM",
            "Invoice_Items",
            "WHERE",
            "Order_Quantity",
            "=",
            "'6'"
        ],
        "query_toks_no_value": [
            "select",
            "other_item_details",
            "from",
            "invoice_items",
            "where",
            "order_quantity",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__invoice_items__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__invoice_items.other_item_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__invoice_items.order_quantity__",
                            false
                        ],
                        null
                    ],
                    "\"6\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT * FROM Invoice_Items WHERE Invoice_ID = 162;",
        "question": "Select all columns from invoice items when invoice id equals 162",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "invoice",
            "items",
            "when",
            "invoice",
            "id",
            "equals",
            "162"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Invoice_Items",
            "WHERE",
            "Invoice_ID",
            "=",
            "162"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "invoice_items",
            "where",
            "invoice_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__invoice_items__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__invoice_items.invoice_id__",
                            false
                        ],
                        null
                    ],
                    162.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Code = 'CA';",
        "question": "Select marketing region descriptrion from marketing regions when marketing region code equals CA",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "marketing",
            "region",
            "descriptrion",
            "from",
            "marketing",
            "regions",
            "when",
            "marketing",
            "region",
            "code",
            "equals",
            "CA"
        ],
        "query_toks": [
            "SELECT",
            "Marketing_Region_Descriptrion",
            "FROM",
            "Marketing_Regions",
            "WHERE",
            "Marketing_Region_Code",
            "=",
            "'CA'"
        ],
        "query_toks_no_value": [
            "select",
            "marketing_region_descriptrion",
            "from",
            "marketing_regions",
            "where",
            "marketing_region_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__marketing_regions__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__marketing_regions.marketing_region_descriptrion__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__marketing_regions.marketing_region_code__",
                            false
                        ],
                        null
                    ],
                    "\"CA\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Customer_ID FROM Customers WHERE Customer_Name = 'Alek';",
        "question": "Select customer id from customers when customer name equals Alek",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "customer",
            "id",
            "from",
            "customers",
            "when",
            "customer",
            "name",
            "equals",
            "Alek"
        ],
        "query_toks": [
            "SELECT",
            "Customer_ID",
            "FROM",
            "Customers",
            "WHERE",
            "Customer_Name",
            "=",
            "'Alek'"
        ],
        "query_toks_no_value": [
            "select",
            "customer_id",
            "from",
            "customers",
            "where",
            "customer_name",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customers.customer_name__",
                            false
                        ],
                        null
                    ],
                    "\"Alek\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Performer_ID FROM Performers_in_Bookings WHERE Order_ID = '11';",
        "question": "Select performer id from performers in bookings when order id equals 11",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "performer",
            "id",
            "from",
            "performers",
            "in",
            "bookings",
            "when",
            "order",
            "id",
            "equals",
            "11"
        ],
        "query_toks": [
            "SELECT",
            "Performer_ID",
            "FROM",
            "Performers_in_Bookings",
            "WHERE",
            "Order_ID",
            "=",
            "'11'"
        ],
        "query_toks_no_value": [
            "select",
            "performer_id",
            "from",
            "performers_in_bookings",
            "where",
            "order_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__performers_in_bookings__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__performers_in_bookings.performer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__performers_in_bookings.order_id__",
                            false
                        ],
                        null
                    ],
                    "\"11\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Order_ID FROM Performers_in_Bookings WHERE Performer_ID = 376;",
        "question": "Select order id from performers in bookings when performer id equals 376",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "order",
            "id",
            "from",
            "performers",
            "in",
            "bookings",
            "when",
            "performer",
            "id",
            "equals",
            "376"
        ],
        "query_toks": [
            "SELECT",
            "Order_ID",
            "FROM",
            "Performers_in_Bookings",
            "WHERE",
            "Performer_ID",
            "=",
            "376"
        ],
        "query_toks_no_value": [
            "select",
            "order_id",
            "from",
            "performers_in_bookings",
            "where",
            "performer_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__performers_in_bookings__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__performers_in_bookings.order_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__performers_in_bookings.performer_id__",
                            false
                        ],
                        null
                    ],
                    376.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Store_Email_Address FROM Stores WHERE Store_ID = '512';",
        "question": "Select store email address from stores when store id equals 512",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "store",
            "email",
            "address",
            "from",
            "stores",
            "when",
            "store",
            "id",
            "equals",
            "512"
        ],
        "query_toks": [
            "SELECT",
            "Store_Email_Address",
            "FROM",
            "Stores",
            "WHERE",
            "Store_ID",
            "=",
            "'512'"
        ],
        "query_toks_no_value": [
            "select",
            "store_email_address",
            "from",
            "stores",
            "where",
            "store_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__stores__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__stores.store_email_address__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__stores.store_id__",
                            false
                        ],
                        null
                    ],
                    "\"512\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Customer_Name FROM Clients WHERE Other_Details = 'VIP';",
        "question": "Select customer name from clients when other details equals VIP",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "customer",
            "name",
            "from",
            "clients",
            "when",
            "other",
            "details",
            "equals",
            "VIP"
        ],
        "query_toks": [
            "SELECT",
            "Customer_Name",
            "FROM",
            "Clients",
            "WHERE",
            "Other_Details",
            "=",
            "'VIP'"
        ],
        "query_toks_no_value": [
            "select",
            "customer_name",
            "from",
            "clients",
            "where",
            "other_details",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__clients__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__clients.customer_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__clients.other_details__",
                            false
                        ],
                        null
                    ],
                    "\"VIP\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Customer_Name FROM Clients WHERE Client_ID = 868;",
        "question": "Select customer name from clients when client id equals 868",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "customer",
            "name",
            "from",
            "clients",
            "when",
            "client",
            "id",
            "equals",
            "868"
        ],
        "query_toks": [
            "SELECT",
            "Customer_Name",
            "FROM",
            "Clients",
            "WHERE",
            "Client_ID",
            "=",
            "868"
        ],
        "query_toks_no_value": [
            "select",
            "customer_name",
            "from",
            "clients",
            "where",
            "client_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__clients__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__clients.customer_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__clients.client_id__",
                            false
                        ],
                        null
                    ],
                    868.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Service_Type_Code FROM Ref_Service_Types WHERE Parent_Service_Type_Code = '1';",
        "question": "Select service type code from reference service types when parent service type code equals 1",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "service",
            "type",
            "code",
            "from",
            "reference",
            "service",
            "types",
            "when",
            "parent",
            "service",
            "type",
            "code",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Service_Type_Code",
            "FROM",
            "Ref_Service_Types",
            "WHERE",
            "Parent_Service_Type_Code",
            "=",
            "'1'"
        ],
        "query_toks_no_value": [
            "select",
            "service_type_code",
            "from",
            "ref_service_types",
            "where",
            "parent_service_type_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__ref_service_types__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__ref_service_types.service_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__ref_service_types.parent_service_type_code__",
                            false
                        ],
                        null
                    ],
                    "\"1\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT payment_method_code FROM Ref_Payment_Methods WHERE payment_method_description = 'credit';",
        "question": "Select payment method code from reference payment methods when payment method description equals credit",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "payment",
            "method",
            "code",
            "from",
            "reference",
            "payment",
            "methods",
            "when",
            "payment",
            "method",
            "description",
            "equals",
            "credit"
        ],
        "query_toks": [
            "SELECT",
            "payment_method_code",
            "FROM",
            "Ref_Payment_Methods",
            "WHERE",
            "payment_method_description",
            "=",
            "'credit'"
        ],
        "query_toks_no_value": [
            "select",
            "payment_method_code",
            "from",
            "ref_payment_methods",
            "where",
            "payment_method_description",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__ref_payment_methods__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__ref_payment_methods.payment_method_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__ref_payment_methods.payment_method_description__",
                            false
                        ],
                        null
                    ],
                    "\"credit\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "query": "SELECT FullName FROM car_makers WHERE Maker = 'bmw';",
        "question": "Select full name from car makers when maker equals bmw",
        "tables": [
            "car_makers",
            "car_names",
            "countries",
            "model_list",
            "cars_data",
            "continents"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "full",
            "name",
            "from",
            "car",
            "makers",
            "when",
            "maker",
            "equals",
            "bmw"
        ],
        "query_toks": [
            "SELECT",
            "FullName",
            "FROM",
            "car_makers",
            "WHERE",
            "Maker",
            "=",
            "'bmw'"
        ],
        "query_toks_no_value": [
            "select",
            "fullname",
            "from",
            "car_makers",
            "where",
            "maker",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__car_makers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__car_makers.fullname__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__car_makers.maker__",
                            false
                        ],
                        null
                    ],
                    "\"bmw\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "query": "SELECT * FROM car_makers WHERE Country = 6;",
        "question": "Select all columns from car makers when country equals 6",
        "tables": [
            "car_makers",
            "car_names",
            "countries",
            "model_list",
            "cars_data",
            "continents"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "car",
            "makers",
            "when",
            "country",
            "equals",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "car_makers",
            "WHERE",
            "Countr",
            "(",
            "Countr",
            ")",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "car_makers",
            "where",
            "countr",
            "(",
            "countr",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__car_makers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__car_makers.country__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "query": "SELECT Model FROM car_names WHERE MakeId = '350';",
        "question": "Select model from car names when make id equals 350",
        "tables": [
            "car_makers",
            "car_names",
            "countries",
            "model_list",
            "cars_data",
            "continents"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "model",
            "from",
            "car",
            "names",
            "when",
            "make",
            "id",
            "equals",
            "350"
        ],
        "query_toks": [
            "SELECT",
            "Model",
            "FROM",
            "car_names",
            "WHERE",
            "MakeId",
            "=",
            "'350'"
        ],
        "query_toks_no_value": [
            "select",
            "model",
            "from",
            "car_names",
            "where",
            "makeid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__car_names__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__car_names.model__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__car_names.makeid__",
                            false
                        ],
                        null
                    ],
                    "\"350\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "query": "SELECT CountryName FROM countries WHERE Continent = '5';",
        "question": "Select country name from countries when continent equals 5",
        "tables": [
            "car_makers",
            "car_names",
            "countries",
            "model_list",
            "cars_data",
            "continents"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "country",
            "name",
            "from",
            "countries",
            "when",
            "continent",
            "equals",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "CountryNam",
            "(",
            "CountryNam",
            ")",
            "FROM",
            "countrie",
            "(",
            "countrie",
            ")",
            "WHERE",
            "Continent",
            "=",
            "'5'"
        ],
        "query_toks_no_value": [
            "select",
            "countrynam",
            "(",
            "countrynam",
            ")",
            "from",
            "countrie",
            "(",
            "countrie",
            ")",
            "where",
            "continent",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__countries__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__countries.countryname__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__countries.continent__",
                            false
                        ],
                        null
                    ],
                    "\"5\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "query": "SELECT CountryId FROM countries WHERE Continent = 5;",
        "question": "Select country id from countries when continent equals 5",
        "tables": [
            "car_makers",
            "car_names",
            "countries",
            "model_list",
            "cars_data",
            "continents"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "country",
            "id",
            "from",
            "countries",
            "when",
            "continent",
            "equals",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "CountryI",
            "(",
            "CountryI",
            ")",
            "FROM",
            "countrie",
            "(",
            "countrie",
            ")",
            "WHERE",
            "Continent",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "countryi",
            "(",
            "countryi",
            ")",
            "from",
            "countrie",
            "(",
            "countrie",
            ")",
            "where",
            "continent",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__countries__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__countries.countryid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__countries.continent__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "query": "SELECT ModelId FROM model_list WHERE Maker = '14';",
        "question": "Select model id from model list when maker equals 14",
        "tables": [
            "car_makers",
            "car_names",
            "countries",
            "model_list",
            "cars_data",
            "continents"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "model",
            "id",
            "from",
            "model",
            "list",
            "when",
            "maker",
            "equals",
            "14"
        ],
        "query_toks": [
            "SELECT",
            "ModelId",
            "FROM",
            "model_list",
            "WHERE",
            "Maker",
            "=",
            "'14'"
        ],
        "query_toks_no_value": [
            "select",
            "modelid",
            "from",
            "model_list",
            "where",
            "maker",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__model_list__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__model_list.modelid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__model_list.maker__",
                            false
                        ],
                        null
                    ],
                    "\"14\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "query": "SELECT Maker FROM model_list WHERE ModelId = 25;",
        "question": "Select maker from model list when model id equals 25",
        "tables": [
            "car_makers",
            "car_names",
            "countries",
            "model_list",
            "cars_data",
            "continents"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "maker",
            "from",
            "model",
            "list",
            "when",
            "model",
            "id",
            "equals",
            "25"
        ],
        "query_toks": [
            "SELECT",
            "Maker",
            "FROM",
            "model_list",
            "WHERE",
            "ModelId",
            "=",
            "25"
        ],
        "query_toks_no_value": [
            "select",
            "maker",
            "from",
            "model_list",
            "where",
            "modelid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__model_list__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__model_list.maker__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__model_list.modelid__",
                            false
                        ],
                        null
                    ],
                    25.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "query": "SELECT ContId FROM continents WHERE Continent = 'america';",
        "question": "Select cont id from continents when continent equals america",
        "tables": [
            "car_makers",
            "car_names",
            "countries",
            "model_list",
            "cars_data",
            "continents"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "cont",
            "id",
            "from",
            "continents",
            "when",
            "continent",
            "equals",
            "america"
        ],
        "query_toks": [
            "SELECT",
            "ContId",
            "FROM",
            "continents",
            "WHERE",
            "Continent",
            "=",
            "'america'"
        ],
        "query_toks_no_value": [
            "select",
            "contid",
            "from",
            "continents",
            "where",
            "continent",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__continents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__continents.contid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__continents.continent__",
                            false
                        ],
                        null
                    ],
                    "\"america\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "query": "SELECT * FROM continents WHERE ContId = 2;",
        "question": "Select all columns from continents when cont id equals 2",
        "tables": [
            "car_makers",
            "car_names",
            "countries",
            "model_list",
            "cars_data",
            "continents"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "continents",
            "when",
            "cont",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "continents",
            "WHERE",
            "ContId",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "continents",
            "where",
            "contid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__continents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__continents.contid__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "behavior_monitoring",
        "query": "SELECT last_name FROM Teachers WHERE first_name = 'Aniya';",
        "question": "Select last name from teachers when first name equals Aniya",
        "tables": [
            "Ref_Detention_Type",
            "Teachers",
            "Students",
            "Addresses",
            "Assessment_Notes",
            "Detention",
            "Students_in_Detention",
            "Student_Addresses",
            "Ref_Incident_Type",
            "Behavior_Incident",
            "Ref_Address_Types"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "last",
            "name",
            "from",
            "teachers",
            "when",
            "first",
            "name",
            "equals",
            "Aniya"
        ],
        "query_toks": [
            "SELECT",
            "last_name",
            "FROM",
            "Teachers",
            "WHERE",
            "first_name",
            "=",
            "'Aniya'"
        ],
        "query_toks_no_value": [
            "select",
            "last_name",
            "from",
            "teachers",
            "where",
            "first_name",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__teachers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__teachers.last_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__teachers.first_name__",
                            false
                        ],
                        null
                    ],
                    "\"Aniya\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "behavior_monitoring",
        "query": "SELECT * FROM Teachers WHERE teacher_id = 11;",
        "question": "Select all columns from teachers when teacher id equals 11",
        "tables": [
            "Ref_Detention_Type",
            "Teachers",
            "Students",
            "Addresses",
            "Assessment_Notes",
            "Detention",
            "Students_in_Detention",
            "Student_Addresses",
            "Ref_Incident_Type",
            "Behavior_Incident",
            "Ref_Address_Types"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "teachers",
            "when",
            "teacher",
            "id",
            "equals",
            "11"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Teachers",
            "WHERE",
            "teacher_id",
            "=",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "teachers",
            "where",
            "teacher_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__teachers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__teachers.teacher_id__",
                            false
                        ],
                        null
                    ],
                    11.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "behavior_monitoring",
        "query": "SELECT date_left_university FROM Students WHERE student_id = '4';",
        "question": "Select date left university from students when student id equals 4",
        "tables": [
            "Ref_Detention_Type",
            "Teachers",
            "Students",
            "Addresses",
            "Assessment_Notes",
            "Detention",
            "Students_in_Detention",
            "Student_Addresses",
            "Ref_Incident_Type",
            "Behavior_Incident",
            "Ref_Address_Types"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "date",
            "left",
            "university",
            "from",
            "students",
            "when",
            "student",
            "id",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "date_left_university",
            "FROM",
            "Students",
            "WHERE",
            "student_id",
            "=",
            "'4'"
        ],
        "query_toks_no_value": [
            "select",
            "date_left_university",
            "from",
            "students",
            "where",
            "student_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__students__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__students.date_left_university__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__students.student_id__",
                            false
                        ],
                        null
                    ],
                    "\"4\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "behavior_monitoring",
        "query": "SELECT email_address FROM Students WHERE address_id = 1;",
        "question": "Select email address from students when address id equals 1",
        "tables": [
            "Ref_Detention_Type",
            "Teachers",
            "Students",
            "Addresses",
            "Assessment_Notes",
            "Detention",
            "Students_in_Detention",
            "Student_Addresses",
            "Ref_Incident_Type",
            "Behavior_Incident",
            "Ref_Address_Types"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "email",
            "address",
            "from",
            "students",
            "when",
            "address",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "email_address",
            "FROM",
            "Students",
            "WHERE",
            "address_id",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "email_address",
            "from",
            "students",
            "where",
            "address_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__students__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__students.email_address__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__students.address_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "behavior_monitoring",
        "query": "SELECT line_3 FROM Addresses WHERE line_1 = '654 Fisher Roads';",
        "question": "Select line 3 from addresses when line 1 equals 654 Fisher Roads",
        "tables": [
            "Ref_Detention_Type",
            "Teachers",
            "Students",
            "Addresses",
            "Assessment_Notes",
            "Detention",
            "Students_in_Detention",
            "Student_Addresses",
            "Ref_Incident_Type",
            "Behavior_Incident",
            "Ref_Address_Types"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "line",
            "3",
            "from",
            "addresses",
            "when",
            "line",
            "1",
            "equals",
            "654",
            "Fisher",
            "Roads"
        ],
        "query_toks": [
            "SELECT",
            "line_3",
            "FROM",
            "Addresses",
            "WHERE",
            "line_1",
            "=",
            "'654",
            "Fisher",
            "Roads'"
        ],
        "query_toks_no_value": [
            "select",
            "line_3",
            "from",
            "addresses",
            "where",
            "line_1",
            "=",
            "value",
            "fisher",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__addresses.line_3__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__addresses.line_1__",
                            false
                        ],
                        null
                    ],
                    "\"654 Fisher Roads\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "behavior_monitoring",
        "query": "SELECT * FROM Assessment_Notes WHERE notes_id = 12;",
        "question": "Select all columns from assessment notes when notes id equals 12",
        "tables": [
            "Ref_Detention_Type",
            "Teachers",
            "Students",
            "Addresses",
            "Assessment_Notes",
            "Detention",
            "Students_in_Detention",
            "Student_Addresses",
            "Ref_Incident_Type",
            "Behavior_Incident",
            "Ref_Address_Types"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "assessment",
            "notes",
            "when",
            "notes",
            "id",
            "equals",
            "12"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Assessment_Notes",
            "WHERE",
            "notes_id",
            "=",
            "12"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "assessment_notes",
            "where",
            "notes_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__assessment_notes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__assessment_notes.notes_id__",
                            false
                        ],
                        null
                    ],
                    12.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "behavior_monitoring",
        "query": "SELECT datetime_detention_start FROM Detention WHERE teacher_id = '8';",
        "question": "Select datetime detention start from detention when teacher id equals 8",
        "tables": [
            "Ref_Detention_Type",
            "Teachers",
            "Students",
            "Addresses",
            "Assessment_Notes",
            "Detention",
            "Students_in_Detention",
            "Student_Addresses",
            "Ref_Incident_Type",
            "Behavior_Incident",
            "Ref_Address_Types"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "datetime",
            "detention",
            "start",
            "from",
            "detention",
            "when",
            "teacher",
            "id",
            "equals",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "datetime_detention_start",
            "FROM",
            "Detention",
            "WHERE",
            "teacher_id",
            "=",
            "'8'"
        ],
        "query_toks_no_value": [
            "select",
            "datetime_detention_start",
            "from",
            "detention",
            "where",
            "teacher_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__detention__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__detention.datetime_detention_start__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__detention.teacher_id__",
                            false
                        ],
                        null
                    ],
                    "\"8\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "behavior_monitoring",
        "query": "SELECT incident_id FROM Students_in_Detention WHERE detention_id = '2';",
        "question": "Select incident id from students in detention when detention id equals 2",
        "tables": [
            "Ref_Detention_Type",
            "Teachers",
            "Students",
            "Addresses",
            "Assessment_Notes",
            "Detention",
            "Students_in_Detention",
            "Student_Addresses",
            "Ref_Incident_Type",
            "Behavior_Incident",
            "Ref_Address_Types"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "incident",
            "id",
            "from",
            "students",
            "in",
            "detention",
            "when",
            "detention",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "incident_id",
            "FROM",
            "Students_in_Detention",
            "WHERE",
            "detention_id",
            "=",
            "'2'"
        ],
        "query_toks_no_value": [
            "select",
            "incident_id",
            "from",
            "students_in_detention",
            "where",
            "detention_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__students_in_detention__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__students_in_detention.incident_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__students_in_detention.detention_id__",
                            false
                        ],
                        null
                    ],
                    "\"2\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "behavior_monitoring",
        "query": "SELECT incident_id FROM Students_in_Detention WHERE detention_id = 12;",
        "question": "Select incident id from students in detention when detention id equals 12",
        "tables": [
            "Ref_Detention_Type",
            "Teachers",
            "Students",
            "Addresses",
            "Assessment_Notes",
            "Detention",
            "Students_in_Detention",
            "Student_Addresses",
            "Ref_Incident_Type",
            "Behavior_Incident",
            "Ref_Address_Types"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "incident",
            "id",
            "from",
            "students",
            "in",
            "detention",
            "when",
            "detention",
            "id",
            "equals",
            "12"
        ],
        "query_toks": [
            "SELECT",
            "incident_id",
            "FROM",
            "Students_in_Detention",
            "WHERE",
            "detention_id",
            "=",
            "12"
        ],
        "query_toks_no_value": [
            "select",
            "incident_id",
            "from",
            "students_in_detention",
            "where",
            "detention_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__students_in_detention__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__students_in_detention.incident_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__students_in_detention.detention_id__",
                            false
                        ],
                        null
                    ],
                    12.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "behavior_monitoring",
        "query": "SELECT student_id FROM Student_Addresses WHERE address_id = '3';",
        "question": "Select student id from student addresses when address id equals 3",
        "tables": [
            "Ref_Detention_Type",
            "Teachers",
            "Students",
            "Addresses",
            "Assessment_Notes",
            "Detention",
            "Students_in_Detention",
            "Student_Addresses",
            "Ref_Incident_Type",
            "Behavior_Incident",
            "Ref_Address_Types"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "student",
            "id",
            "from",
            "student",
            "addresses",
            "when",
            "address",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "student_id",
            "FROM",
            "Student_Addresses",
            "WHERE",
            "address_id",
            "=",
            "'3'"
        ],
        "query_toks_no_value": [
            "select",
            "student_id",
            "from",
            "student_addresses",
            "where",
            "address_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student_addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student_addresses.student_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__student_addresses.address_id__",
                            false
                        ],
                        null
                    ],
                    "\"3\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "behavior_monitoring",
        "query": "SELECT address_id FROM Student_Addresses WHERE student_id = 2;",
        "question": "Select address id from student addresses when student id equals 2",
        "tables": [
            "Ref_Detention_Type",
            "Teachers",
            "Students",
            "Addresses",
            "Assessment_Notes",
            "Detention",
            "Students_in_Detention",
            "Student_Addresses",
            "Ref_Incident_Type",
            "Behavior_Incident",
            "Ref_Address_Types"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "address",
            "id",
            "from",
            "student",
            "addresses",
            "when",
            "student",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "address_id",
            "FROM",
            "Student_Addresses",
            "WHERE",
            "student_id",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "address_id",
            "from",
            "student_addresses",
            "where",
            "student_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student_addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student_addresses.address_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__student_addresses.student_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "behavior_monitoring",
        "query": "SELECT incident_type_description FROM Ref_Incident_Type WHERE incident_type_code = 'DISTURB';",
        "question": "Select incident type description from reference incident type when incident type code equals DISTURB",
        "tables": [
            "Ref_Detention_Type",
            "Teachers",
            "Students",
            "Addresses",
            "Assessment_Notes",
            "Detention",
            "Students_in_Detention",
            "Student_Addresses",
            "Ref_Incident_Type",
            "Behavior_Incident",
            "Ref_Address_Types"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "incident",
            "type",
            "description",
            "from",
            "reference",
            "incident",
            "type",
            "when",
            "incident",
            "type",
            "code",
            "equals",
            "DISTURB"
        ],
        "query_toks": [
            "SELECT",
            "incident_type_description",
            "FROM",
            "Ref_Incident_Type",
            "WHERE",
            "incident_type_code",
            "=",
            "'DISTURB'"
        ],
        "query_toks_no_value": [
            "select",
            "incident_type_description",
            "from",
            "ref_incident_type",
            "where",
            "incident_type_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__ref_incident_type__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__ref_incident_type.incident_type_description__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__ref_incident_type.incident_type_code__",
                            false
                        ],
                        null
                    ],
                    "\"DISTURB\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "behavior_monitoring",
        "query": "SELECT address_type_description FROM Ref_Address_Types WHERE address_type_code = 'BILL';",
        "question": "Select address type description from reference address types when address type code equals BILL",
        "tables": [
            "Ref_Detention_Type",
            "Teachers",
            "Students",
            "Addresses",
            "Assessment_Notes",
            "Detention",
            "Students_in_Detention",
            "Student_Addresses",
            "Ref_Incident_Type",
            "Behavior_Incident",
            "Ref_Address_Types"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "address",
            "type",
            "description",
            "from",
            "reference",
            "address",
            "types",
            "when",
            "address",
            "type",
            "code",
            "equals",
            "BILL"
        ],
        "query_toks": [
            "SELECT",
            "address_type_description",
            "FROM",
            "Ref_Address_Types",
            "WHERE",
            "address_type_code",
            "=",
            "'BILL'"
        ],
        "query_toks_no_value": [
            "select",
            "address_type_description",
            "from",
            "ref_address_types",
            "where",
            "address_type_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__ref_address_types__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__ref_address_types.address_type_description__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__ref_address_types.address_type_code__",
                            false
                        ],
                        null
                    ],
                    "\"BILL\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "query": "SELECT Document_Type_Code FROM Ref_Document_Types WHERE Document_Type_Description = '';",
        "question": "Select document type code from reference document types when document type description equals ",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Calendar",
            "Documents_to_be_Destroyed",
            "Document_Locations",
            "All_Documents",
            "Ref_Locations",
            "Employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "document",
            "type",
            "code",
            "from",
            "reference",
            "document",
            "types",
            "when",
            "document",
            "type",
            "description",
            "equals"
        ],
        "query_toks": [
            "SELECT",
            "Document_Type_Code",
            "FROM",
            "Ref_Document_Types",
            "WHERE",
            "Document_Type_Description",
            "=",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "document_type_code",
            "from",
            "ref_document_types",
            "where",
            "document_type_description",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__ref_document_types__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__ref_document_types.document_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__ref_document_types.document_type_description__",
                            false
                        ],
                        null
                    ],
                    "\"\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "query": "SELECT * FROM Ref_Calendar WHERE Day_Number = 3;",
        "question": "Select all columns from reference calendar when day number equals 3",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Calendar",
            "Documents_to_be_Destroyed",
            "Document_Locations",
            "All_Documents",
            "Ref_Locations",
            "Employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "reference",
            "calendar",
            "when",
            "day",
            "number",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Ref_Calendar",
            "WHERE",
            "Day_Number",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "ref_calendar",
            "where",
            "day_number",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__ref_calendar__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__ref_calendar.day_number__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "query": "SELECT Planned_Destruction_Date FROM Documents_to_be_Destroyed WHERE Destroyed_by_Employee_ID = '136';",
        "question": "Select planned destruction date from documents to be destroyed when destroyed by employee id equals 136",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Calendar",
            "Documents_to_be_Destroyed",
            "Document_Locations",
            "All_Documents",
            "Ref_Locations",
            "Employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "planned",
            "destruction",
            "date",
            "from",
            "documents",
            "to",
            "be",
            "destroyed",
            "when",
            "destroyed",
            "by",
            "employee",
            "id",
            "equals",
            "136"
        ],
        "query_toks": [
            "SELECT",
            "Planned_Destruction_Date",
            "FROM",
            "Documents_to_be_Destroyed",
            "WHERE",
            "Destroyed_by_Employee_ID",
            "=",
            "'136'"
        ],
        "query_toks_no_value": [
            "select",
            "planned_destruction_date",
            "from",
            "documents_to_be_destroyed",
            "where",
            "destroyed_by_employee_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__documents_to_be_destroyed__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__documents_to_be_destroyed.planned_destruction_date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__documents_to_be_destroyed.destroyed_by_employee_id__",
                            false
                        ],
                        null
                    ],
                    "\"136\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "query": "SELECT Document_Name FROM All_Documents WHERE Document_ID = 7;",
        "question": "Select document name from all documents when document id equals 7",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Calendar",
            "Documents_to_be_Destroyed",
            "Document_Locations",
            "All_Documents",
            "Ref_Locations",
            "Employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "document",
            "name",
            "from",
            "all",
            "documents",
            "when",
            "document",
            "id",
            "equals",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "Document_Name",
            "FROM",
            "All_Documents",
            "WHERE",
            "Document_ID",
            "=",
            "7"
        ],
        "query_toks_no_value": [
            "select",
            "document_name",
            "from",
            "all_documents",
            "where",
            "document_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__all_documents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all_documents.document_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__all_documents.document_id__",
                            false
                        ],
                        null
                    ],
                    7.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "query": "SELECT Location_Description FROM Ref_Locations WHERE Location_Code = 'n';",
        "question": "Select location description from reference locations when location code equals n",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Calendar",
            "Documents_to_be_Destroyed",
            "Document_Locations",
            "All_Documents",
            "Ref_Locations",
            "Employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "location",
            "description",
            "from",
            "reference",
            "locations",
            "when",
            "location",
            "code",
            "equals",
            "n"
        ],
        "query_toks": [
            "SELECT",
            "Location_Description",
            "FROM",
            "Ref_Locations",
            "WHERE",
            "Location_Code",
            "=",
            "'n'"
        ],
        "query_toks_no_value": [
            "select",
            "location_description",
            "from",
            "ref_locations",
            "where",
            "location_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__ref_locations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__ref_locations.location_description__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__ref_locations.location_code__",
                            false
                        ],
                        null
                    ],
                    "\"n\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "query": "SELECT Other_Details FROM Employees WHERE Employee_ID = 71;",
        "question": "Select other details from employees when employee id equals 71",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Calendar",
            "Documents_to_be_Destroyed",
            "Document_Locations",
            "All_Documents",
            "Ref_Locations",
            "Employees"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "other",
            "details",
            "from",
            "employees",
            "when",
            "employee",
            "id",
            "equals",
            "71"
        ],
        "query_toks": [
            "SELECT",
            "Other_Details",
            "FROM",
            "Employees",
            "WHERE",
            "Employee_ID",
            "=",
            "71"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            "from",
            "employees",
            "where",
            "employee_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__employees__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__employees.other_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__employees.employee_id__",
                            false
                        ],
                        null
                    ],
                    71.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "university_basketball",
        "query": "SELECT All_Road FROM basketball_match WHERE Team_ID = '2';",
        "question": "Select all road from basketball match when team id equals 2",
        "tables": [
            "basketball_match",
            "university"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "road",
            "from",
            "basketball",
            "match",
            "when",
            "team",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "All_Road",
            "FROM",
            "basketball_match",
            "WHERE",
            "Team_ID",
            "=",
            "'2'"
        ],
        "query_toks_no_value": [
            "select",
            "all_road",
            "from",
            "basketball_match",
            "where",
            "team_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__basketball_match__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__basketball_match.all_road__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__basketball_match.team_id__",
                            false
                        ],
                        null
                    ],
                    "\"2\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "university_basketball",
        "query": "SELECT Founded FROM university WHERE Location = 'Kingston, RI';",
        "question": "Select founded from university when location equals Kingston, RI",
        "tables": [
            "basketball_match",
            "university"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "founded",
            "from",
            "university",
            "when",
            "location",
            "equals",
            "Kingston",
            ",",
            "RI"
        ],
        "query_toks": [
            "SELECT",
            "Founded",
            "FROM",
            "university",
            "WHERE",
            "Location",
            "=",
            "'Kingston",
            ",",
            "RI'"
        ],
        "query_toks_no_value": [
            "select",
            "founded",
            "from",
            "university",
            "where",
            "location",
            "=",
            "value",
            ",",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__university__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__university.founded__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__university.location__",
                            false
                        ],
                        null
                    ],
                    "\"Kingston, RI\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_2",
        "query": "SELECT cName FROM Tryout WHERE pPos = 'goalie';",
        "question": "Select college name from tryout when player position equals goalie",
        "tables": [
            "Tryout",
            "Player",
            "College"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "college",
            "name",
            "from",
            "tryout",
            "when",
            "player",
            "position",
            "equals",
            "goalie"
        ],
        "query_toks": [
            "SELECT",
            "cName",
            "FROM",
            "Tryout",
            "WHERE",
            "pPos",
            "=",
            "'goalie'"
        ],
        "query_toks_no_value": [
            "select",
            "cname",
            "from",
            "tryout",
            "where",
            "ppos",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__tryout__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__tryout.cname__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__tryout.ppos__",
                            false
                        ],
                        null
                    ],
                    "\"goalie\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_2",
        "query": "SELECT pName FROM Player WHERE HS = '1200';",
        "question": "Select player name from player when training hours equals 1200",
        "tables": [
            "Tryout",
            "Player",
            "College"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "player",
            "name",
            "from",
            "player",
            "when",
            "training",
            "hours",
            "equals",
            "1200"
        ],
        "query_toks": [
            "SELECT",
            "pName",
            "FROM",
            "Player",
            "WHERE",
            "HS",
            "=",
            "'1200'"
        ],
        "query_toks_no_value": [
            "select",
            "pname",
            "from",
            "player",
            "where",
            "hs",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__player__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__player.pname__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__player.hs__",
                            false
                        ],
                        null
                    ],
                    "\"1200\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_2",
        "query": "SELECT enr FROM College WHERE cName = 'ASU';",
        "question": "Select enrollment from college when college name equals ASU",
        "tables": [
            "Tryout",
            "Player",
            "College"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "enrollment",
            "from",
            "college",
            "when",
            "college",
            "name",
            "equals",
            "ASU"
        ],
        "query_toks": [
            "SELECT",
            "enr",
            "FROM",
            "College",
            "WHERE",
            "cName",
            "=",
            "'ASU'"
        ],
        "query_toks_no_value": [
            "select",
            "enr",
            "from",
            "college",
            "where",
            "cname",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__college__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__college.enr__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__college.cname__",
                            false
                        ],
                        null
                    ],
                    "\"ASU\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_2",
        "query": "SELECT * FROM College WHERE enr = 22000;",
        "question": "Select all columns from college when enrollment equals 22000",
        "tables": [
            "Tryout",
            "Player",
            "College"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "college",
            "when",
            "enrollment",
            "equals",
            "22000"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "College",
            "WHERE",
            "enr",
            "=",
            "22000"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "college",
            "where",
            "enr",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__college__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__college.enr__",
                            false
                        ],
                        null
                    ],
                    22000.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "activity_1",
        "query": "SELECT Sex FROM Student WHERE Fname = 'Stacy';",
        "question": "Select sex from student when first name equals Stacy",
        "tables": [
            "Student",
            "Faculty_Participates_in",
            "Activity",
            "Faculty",
            "Participates_in"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "sex",
            "from",
            "student",
            "when",
            "first",
            "name",
            "equals",
            "Stacy"
        ],
        "query_toks": [
            "SELECT",
            "Sex",
            "FROM",
            "Student",
            "WHERE",
            "Fname",
            "=",
            "'Stacy'"
        ],
        "query_toks_no_value": [
            "select",
            "sex",
            "from",
            "student",
            "where",
            "fname",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.sex__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__student.fname__",
                            false
                        ],
                        null
                    ],
                    "\"Stacy\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "activity_1",
        "query": "SELECT Fname FROM Student WHERE Advisor = 5718;",
        "question": "Select first name from student when advisor equals 5718",
        "tables": [
            "Student",
            "Faculty_Participates_in",
            "Activity",
            "Faculty",
            "Participates_in"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "first",
            "name",
            "from",
            "student",
            "when",
            "advisor",
            "equals",
            "5718"
        ],
        "query_toks": [
            "SELECT",
            "Fname",
            "FROM",
            "Student",
            "WHERE",
            "Advisor",
            "=",
            "5718"
        ],
        "query_toks_no_value": [
            "select",
            "fname",
            "from",
            "student",
            "where",
            "advisor",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.fname__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__student.advisor__",
                            false
                        ],
                        null
                    ],
                    5718.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "activity_1",
        "query": "SELECT FacID FROM Faculty_Participates_in WHERE actid = '771';",
        "question": "Select faculty id from faculty participates in when activity id equals 771",
        "tables": [
            "Student",
            "Faculty_Participates_in",
            "Activity",
            "Faculty",
            "Participates_in"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "faculty",
            "id",
            "from",
            "faculty",
            "participates",
            "in",
            "when",
            "activity",
            "id",
            "equals",
            "771"
        ],
        "query_toks": [
            "SELECT",
            "FacID",
            "FROM",
            "Faculty_Participates_in",
            "WHERE",
            "actid",
            "=",
            "'771'"
        ],
        "query_toks_no_value": [
            "select",
            "facid",
            "from",
            "faculty_participates_in",
            "where",
            "actid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__faculty_participates_in__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__faculty_participates_in.facid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__faculty_participates_in.actid__",
                            false
                        ],
                        null
                    ],
                    "\"771\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "activity_1",
        "query": "SELECT * FROM Faculty_Participates_in WHERE actid = 780;",
        "question": "Select all columns from faculty participates in when activity id equals 780",
        "tables": [
            "Student",
            "Faculty_Participates_in",
            "Activity",
            "Faculty",
            "Participates_in"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "faculty",
            "participates",
            "in",
            "when",
            "activity",
            "id",
            "equals",
            "780"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Faculty_Participates_in",
            "WHERE",
            "actid",
            "=",
            "780"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "faculty_participates_in",
            "where",
            "actid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__faculty_participates_in__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__faculty_participates_in.actid__",
                            false
                        ],
                        null
                    ],
                    780.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "activity_1",
        "query": "SELECT activity_name FROM Activity WHERE actid = '779';",
        "question": "Select activity name from activity when activity id equals 779",
        "tables": [
            "Student",
            "Faculty_Participates_in",
            "Activity",
            "Faculty",
            "Participates_in"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "activity",
            "name",
            "from",
            "activity",
            "when",
            "activity",
            "id",
            "equals",
            "779"
        ],
        "query_toks": [
            "SELECT",
            "activity_name",
            "FROM",
            "Activity",
            "WHERE",
            "actid",
            "=",
            "'779'"
        ],
        "query_toks_no_value": [
            "select",
            "activity_name",
            "from",
            "activity",
            "where",
            "actid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__activity__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__activity.activity_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__activity.actid__",
                            false
                        ],
                        null
                    ],
                    "\"779\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "activity_1",
        "query": "SELECT Rank FROM Faculty WHERE Lname = 'Hall';",
        "question": "Select rank from faculty when last name equals Hall",
        "tables": [
            "Student",
            "Faculty_Participates_in",
            "Activity",
            "Faculty",
            "Participates_in"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "rank",
            "from",
            "faculty",
            "when",
            "last",
            "name",
            "equals",
            "Hall"
        ],
        "query_toks": [
            "SELECT",
            "Rank",
            "FROM",
            "Faculty",
            "WHERE",
            "Lname",
            "=",
            "'Hall'"
        ],
        "query_toks_no_value": [
            "select",
            "rank",
            "from",
            "faculty",
            "where",
            "lname",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__faculty__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__faculty.rank__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__faculty.lname__",
                            false
                        ],
                        null
                    ],
                    "\"Hall\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "activity_1",
        "query": "SELECT actid FROM Participates_in WHERE stuid = '1001';",
        "question": "Select activity id from participates in when student id equals 1001",
        "tables": [
            "Student",
            "Faculty_Participates_in",
            "Activity",
            "Faculty",
            "Participates_in"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "activity",
            "id",
            "from",
            "participates",
            "in",
            "when",
            "student",
            "id",
            "equals",
            "1001"
        ],
        "query_toks": [
            "SELECT",
            "actid",
            "FROM",
            "Participates_in",
            "WHERE",
            "stuid",
            "=",
            "'1001'"
        ],
        "query_toks_no_value": [
            "select",
            "actid",
            "from",
            "participates_in",
            "where",
            "stuid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__participates_in__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__participates_in.actid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__participates_in.stuid__",
                            false
                        ],
                        null
                    ],
                    "\"1001\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "activity_1",
        "query": "SELECT stuid FROM Participates_in WHERE actid = 776;",
        "question": "Select student id from participates in when activity id equals 776",
        "tables": [
            "Student",
            "Faculty_Participates_in",
            "Activity",
            "Faculty",
            "Participates_in"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "student",
            "id",
            "from",
            "participates",
            "in",
            "when",
            "activity",
            "id",
            "equals",
            "776"
        ],
        "query_toks": [
            "SELECT",
            "stuid",
            "FROM",
            "Participates_in",
            "WHERE",
            "actid",
            "=",
            "776"
        ],
        "query_toks_no_value": [
            "select",
            "stuid",
            "from",
            "participates_in",
            "where",
            "actid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__participates_in__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__participates_in.stuid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__participates_in.actid__",
                            false
                        ],
                        null
                    ],
                    776.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Other_Details FROM Staff WHERE Tourist_Attraction_ID = '2113';",
        "question": "Select other details from staff when tourist attraction id equals 2113",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "other",
            "details",
            "from",
            "staff",
            "when",
            "tourist",
            "attraction",
            "id",
            "equals",
            "2113"
        ],
        "query_toks": [
            "SELECT",
            "Other_Details",
            "FROM",
            "Staff",
            "WHERE",
            "Tourist_Attraction_ID",
            "=",
            "'2113'"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            "from",
            "staff",
            "where",
            "tourist_attraction_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__staff__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__staff.other_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__staff.tourist_attraction_id__",
                            false
                        ],
                        null
                    ],
                    "\"2113\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Tourist_Attraction_ID FROM Visits WHERE Tourist_ID = '500';",
        "question": "Select tourist attraction id from visits when tourist id equals 500",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "tourist",
            "attraction",
            "id",
            "from",
            "visits",
            "when",
            "tourist",
            "id",
            "equals",
            "500"
        ],
        "query_toks": [
            "SELECT",
            "Tourist_Attraction_ID",
            "FROM",
            "Visits",
            "WHERE",
            "Tourist_ID",
            "=",
            "'500'"
        ],
        "query_toks_no_value": [
            "select",
            "tourist_attraction_id",
            "from",
            "visits",
            "where",
            "tourist_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__visits__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__visits.tourist_attraction_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__visits.tourist_id__",
                            false
                        ],
                        null
                    ],
                    "\"500\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT * FROM Visits WHERE Tourist_ID = 211;",
        "question": "Select all columns from visits when tourist id equals 211",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "visits",
            "when",
            "tourist",
            "id",
            "equals",
            "211"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Visits",
            "WHERE",
            "Tourist_ID",
            "=",
            "211"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "visits",
            "where",
            "tourist_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__visits__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__visits.tourist_id__",
                            false
                        ],
                        null
                    ],
                    211.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Feature_ID FROM Features WHERE Feature_Details = 'shopping';",
        "question": "Select feature id from features when feature details equals shopping",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "feature",
            "id",
            "from",
            "features",
            "when",
            "feature",
            "details",
            "equals",
            "shopping"
        ],
        "query_toks": [
            "SELECT",
            "Feature_ID",
            "FROM",
            "Features",
            "WHERE",
            "Feature_Details",
            "=",
            "'shopping'"
        ],
        "query_toks_no_value": [
            "select",
            "feature_id",
            "from",
            "features",
            "where",
            "feature_details",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__features__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__features.feature_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__features.feature_details__",
                            false
                        ],
                        null
                    ],
                    "\"shopping\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Feature_Details FROM Features WHERE Feature_ID = 523;",
        "question": "Select feature details from features when feature id equals 523",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "feature",
            "details",
            "from",
            "features",
            "when",
            "feature",
            "id",
            "equals",
            "523"
        ],
        "query_toks": [
            "SELECT",
            "Feature_Details",
            "FROM",
            "Features",
            "WHERE",
            "Feature_ID",
            "=",
            "523"
        ],
        "query_toks_no_value": [
            "select",
            "feature_details",
            "from",
            "features",
            "where",
            "feature_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__features__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__features.feature_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__features.feature_id__",
                            false
                        ],
                        null
                    ],
                    523.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Market_Details FROM Street_Markets WHERE Market_ID = '7067';",
        "question": "Select market details from street markets when market id equals 7067",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "market",
            "details",
            "from",
            "street",
            "markets",
            "when",
            "market",
            "id",
            "equals",
            "7067"
        ],
        "query_toks": [
            "SELECT",
            "Market_Details",
            "FROM",
            "Street_Markets",
            "WHERE",
            "Market_ID",
            "=",
            "'7067'"
        ],
        "query_toks_no_value": [
            "select",
            "market_details",
            "from",
            "street_markets",
            "where",
            "market_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__street_markets__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__street_markets.market_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__street_markets.market_id__",
                            false
                        ],
                        null
                    ],
                    "\"7067\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT * FROM Street_Markets WHERE Market_ID = 6852;",
        "question": "Select all columns from street markets when market id equals 6852",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "street",
            "markets",
            "when",
            "market",
            "id",
            "equals",
            "6852"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Street_Markets",
            "WHERE",
            "Market_ID",
            "=",
            "6852"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "street_markets",
            "where",
            "market_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__street_markets__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__street_markets.market_id__",
                            false
                        ],
                        null
                    ],
                    6852.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT star_rating_code FROM Ref_Hotel_Star_Ratings WHERE star_rating_description = 'star';",
        "question": "Select star rating code from ref hotel star ratings when star rating description equals star",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "star",
            "rating",
            "code",
            "from",
            "ref",
            "hotel",
            "star",
            "ratings",
            "when",
            "star",
            "rating",
            "description",
            "equals",
            "star"
        ],
        "query_toks": [
            "SELECT",
            "star_rating_code",
            "FROM",
            "Ref_Hotel_Star_Ratings",
            "WHERE",
            "star_rating_description",
            "=",
            "'star'"
        ],
        "query_toks_no_value": [
            "select",
            "star_rating_code",
            "from",
            "ref_hotel_star_ratings",
            "where",
            "star_rating_description",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__ref_hotel_star_ratings__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__ref_hotel_star_ratings.star_rating_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__ref_hotel_star_ratings.star_rating_description__",
                            false
                        ],
                        null
                    ],
                    "\"star\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT * FROM Ref_Hotel_Star_Ratings WHERE star_rating_code = 3;",
        "question": "Select all columns from ref hotel star ratings when star rating code equals 3",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "ref",
            "hotel",
            "star",
            "ratings",
            "when",
            "star",
            "rating",
            "code",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Ref_Hotel_Star_Ratings",
            "WHERE",
            "star_rating_code",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "ref_hotel_star_ratings",
            "where",
            "star_rating_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__ref_hotel_star_ratings__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__ref_hotel_star_ratings.star_rating_code__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Tourist_Details FROM Visitors WHERE Tourist_ID = '541';",
        "question": "Select tourist details from visitors when tourist id equals 541",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "tourist",
            "details",
            "from",
            "visitors",
            "when",
            "tourist",
            "id",
            "equals",
            "541"
        ],
        "query_toks": [
            "SELECT",
            "Tourist_Details",
            "FROM",
            "Visitors",
            "WHERE",
            "Tourist_ID",
            "=",
            "'541'"
        ],
        "query_toks_no_value": [
            "select",
            "tourist_details",
            "from",
            "visitors",
            "where",
            "tourist_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__visitors__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__visitors.tourist_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__visitors.tourist_id__",
                            false
                        ],
                        null
                    ],
                    "\"541\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Museum_Details FROM Museums WHERE Museum_ID = '5076';",
        "question": "Select museum details from museums when museum id equals 5076",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "museum",
            "details",
            "from",
            "museums",
            "when",
            "museum",
            "id",
            "equals",
            "5076"
        ],
        "query_toks": [
            "SELECT",
            "Museum_Details",
            "FROM",
            "Museums",
            "WHERE",
            "Museum_ID",
            "=",
            "'5076'"
        ],
        "query_toks_no_value": [
            "select",
            "museum_details",
            "from",
            "museums",
            "where",
            "museum_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__museums__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__museums.museum_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__museums.museum_id__",
                            false
                        ],
                        null
                    ],
                    "\"5076\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Tourist_Attraction_ID FROM Photos WHERE Filename = '148';",
        "question": "Select tourist attraction id from photos when filename equals 148",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "tourist",
            "attraction",
            "id",
            "from",
            "photos",
            "when",
            "filename",
            "equals",
            "148"
        ],
        "query_toks": [
            "SELECT",
            "Tourist_Attraction_ID",
            "FROM",
            "Photos",
            "WHERE",
            "Filename",
            "=",
            "'148'"
        ],
        "query_toks_no_value": [
            "select",
            "tourist_attraction_id",
            "from",
            "photos",
            "where",
            "filename",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__photos__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__photos.tourist_attraction_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__photos.filename__",
                            false
                        ],
                        null
                    ],
                    "\"148\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT * FROM Photos WHERE Photo_ID = 332;",
        "question": "Select all columns from photos when photo id equals 332",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "photos",
            "when",
            "photo",
            "id",
            "equals",
            "332"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Photos",
            "WHERE",
            "Photo_ID",
            "=",
            "332"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "photos",
            "where",
            "photo_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__photos__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__photos.photo_id__",
                            false
                        ],
                        null
                    ],
                    332.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Shop_ID FROM Shops WHERE Shop_Details = 'see food';",
        "question": "Select shop id from shops when shop details equals see food",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "shop",
            "id",
            "from",
            "shops",
            "when",
            "shop",
            "details",
            "equals",
            "see",
            "food"
        ],
        "query_toks": [
            "SELECT",
            "Shop_ID",
            "FROM",
            "Shops",
            "WHERE",
            "Shop_Details",
            "=",
            "'see",
            "food'"
        ],
        "query_toks_no_value": [
            "select",
            "shop_id",
            "from",
            "shops",
            "where",
            "shop_details",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__shops__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__shops.shop_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__shops.shop_details__",
                            false
                        ],
                        null
                    ],
                    "\"see food\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Other_Details FROM Locations WHERE Location_Name = 'The Boneyard';",
        "question": "Select other details from locations when location name equals The Boneyard",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "other",
            "details",
            "from",
            "locations",
            "when",
            "location",
            "name",
            "equals",
            "The",
            "Boneyard"
        ],
        "query_toks": [
            "SELECT",
            "Other_Details",
            "FROM",
            "Locations",
            "WHERE",
            "Location_Name",
            "=",
            "'The",
            "Boneyard'"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            "from",
            "locations",
            "where",
            "location_name",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__locations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__locations.other_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__locations.location_name__",
                            false
                        ],
                        null
                    ],
                    "\"The Boneyard\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Theme_Park_ID FROM Theme_Parks WHERE Theme_Park_Details = 'Universal Studios';",
        "question": "Select theme park id from theme parks when theme park details equals Universal Studios",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "theme",
            "park",
            "id",
            "from",
            "theme",
            "parks",
            "when",
            "theme",
            "park",
            "details",
            "equals",
            "Universal",
            "Studios"
        ],
        "query_toks": [
            "SELECT",
            "Theme_Park_ID",
            "FROM",
            "Theme_Parks",
            "WHERE",
            "Theme_Park_Details",
            "=",
            "'Universal",
            "Studios'"
        ],
        "query_toks_no_value": [
            "select",
            "theme_park_id",
            "from",
            "theme_parks",
            "where",
            "theme_park_details",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__theme_parks__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__theme_parks.theme_park_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__theme_parks.theme_park_details__",
                            false
                        ],
                        null
                    ],
                    "\"Universal Studios\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Attraction_Type_Code FROM Ref_Attraction_Types WHERE Attraction_Type_Description = 'garden';",
        "question": "Select attraction type code from ref attraction types when attraction type description equals garden",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "attraction",
            "type",
            "code",
            "from",
            "ref",
            "attraction",
            "types",
            "when",
            "attraction",
            "type",
            "description",
            "equals",
            "garden"
        ],
        "query_toks": [
            "SELECT",
            "Attraction_Type_Code",
            "FROM",
            "Ref_Attraction_Types",
            "WHERE",
            "Attraction_Type_Description",
            "=",
            "'garden'"
        ],
        "query_toks_no_value": [
            "select",
            "attraction_type_code",
            "from",
            "ref_attraction_types",
            "where",
            "attraction_type_description",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__ref_attraction_types__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__ref_attraction_types.attraction_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__ref_attraction_types.attraction_type_description__",
                            false
                        ],
                        null
                    ],
                    "\"garden\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Attraction_Type_Description FROM Ref_Attraction_Types WHERE Attraction_Type_Code = 2;",
        "question": "Select attraction type description from ref attraction types when attraction type code equals 2",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "attraction",
            "type",
            "description",
            "from",
            "ref",
            "attraction",
            "types",
            "when",
            "attraction",
            "type",
            "code",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Attraction_Type_Description",
            "FROM",
            "Ref_Attraction_Types",
            "WHERE",
            "Attraction_Type_Code",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "attraction_type_description",
            "from",
            "ref_attraction_types",
            "where",
            "attraction_type_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__ref_attraction_types__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__ref_attraction_types.attraction_type_description__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__ref_attraction_types.attraction_type_code__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Tourist_Attraction_ID FROM Tourist_Attraction_Features WHERE Feature_ID = '955';",
        "question": "Select tourist attraction id from tourist attraction features when feature id equals 955",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "tourist",
            "attraction",
            "id",
            "from",
            "tourist",
            "attraction",
            "features",
            "when",
            "feature",
            "id",
            "equals",
            "955"
        ],
        "query_toks": [
            "SELECT",
            "Tourist_Attraction_ID",
            "FROM",
            "Tourist_Attraction_Features",
            "WHERE",
            "Feature_ID",
            "=",
            "'955'"
        ],
        "query_toks_no_value": [
            "select",
            "tourist_attraction_id",
            "from",
            "tourist_attraction_features",
            "where",
            "feature_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__tourist_attraction_features__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__tourist_attraction_features.tourist_attraction_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__tourist_attraction_features.feature_id__",
                            false
                        ],
                        null
                    ],
                    "\"955\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Feature_ID FROM Tourist_Attraction_Features WHERE Tourist_Attraction_ID = 5265;",
        "question": "Select feature id from tourist attraction features when tourist attraction id equals 5265",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "feature",
            "id",
            "from",
            "tourist",
            "attraction",
            "features",
            "when",
            "tourist",
            "attraction",
            "id",
            "equals",
            "5265"
        ],
        "query_toks": [
            "SELECT",
            "Feature_ID",
            "FROM",
            "Tourist_Attraction_Features",
            "WHERE",
            "Tourist_Attraction_ID",
            "=",
            "5265"
        ],
        "query_toks_no_value": [
            "select",
            "feature_id",
            "from",
            "tourist_attraction_features",
            "where",
            "tourist_attraction_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__tourist_attraction_features__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__tourist_attraction_features.feature_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__tourist_attraction_features.tourist_attraction_id__",
                            false
                        ],
                        null
                    ],
                    5265.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Location_ID FROM Tourist_Attractions WHERE Name = 'fun shops';",
        "question": "Select location id from tourist attractions when name equals fun shops",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "location",
            "id",
            "from",
            "tourist",
            "attractions",
            "when",
            "name",
            "equals",
            "fun",
            "shops"
        ],
        "query_toks": [
            "SELECT",
            "Location_ID",
            "FROM",
            "Tourist_Attractions",
            "WHERE",
            "Name",
            "=",
            "'fun",
            "shops'"
        ],
        "query_toks_no_value": [
            "select",
            "location_id",
            "from",
            "tourist_attractions",
            "where",
            "name",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__tourist_attractions__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__tourist_attractions.location_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__tourist_attractions.name__",
                            false
                        ],
                        null
                    ],
                    "\"fun shops\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "twitter_1",
        "query": "SELECT uid FROM user_profiles WHERE followers = '6662425';",
        "question": "Select uid from user profiles when followers equals 6662425",
        "tables": [
            "user_profiles",
            "follows",
            "tweets"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "uid",
            "from",
            "user",
            "profiles",
            "when",
            "followers",
            "equals",
            "6662425"
        ],
        "query_toks": [
            "SELECT",
            "uid",
            "FROM",
            "user_profiles",
            "WHERE",
            "followers",
            "=",
            "'6662425'"
        ],
        "query_toks_no_value": [
            "select",
            "uid",
            "from",
            "user_profiles",
            "where",
            "followers",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__user_profiles__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__user_profiles.uid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__user_profiles.followers__",
                            false
                        ],
                        null
                    ],
                    "\"6662425\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "twitter_1",
        "query": "SELECT f2 FROM follows WHERE f1 = '7';",
        "question": "Select follower id from follows when user id equals 7",
        "tables": [
            "user_profiles",
            "follows",
            "tweets"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "follower",
            "id",
            "from",
            "follows",
            "when",
            "user",
            "id",
            "equals",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "f2",
            "FROM",
            "follows",
            "WHERE",
            "f1",
            "=",
            "'7'"
        ],
        "query_toks_no_value": [
            "select",
            "f2",
            "from",
            "follows",
            "where",
            "f1",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__follows__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__follows.f2__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__follows.f1__",
                            false
                        ],
                        null
                    ],
                    "\"7\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "twitter_1",
        "query": "SELECT f2 FROM follows WHERE f1 = 1;",
        "question": "Select follower id from follows when user id equals 1",
        "tables": [
            "user_profiles",
            "follows",
            "tweets"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "follower",
            "id",
            "from",
            "follows",
            "when",
            "user",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "f2",
            "FROM",
            "follows",
            "WHERE",
            "f1",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "f2",
            "from",
            "follows",
            "where",
            "f1",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__follows__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__follows.f2__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__follows.f1__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "twitter_1",
        "query": "SELECT text FROM tweets WHERE uid = 1;",
        "question": "Select text from tweets when user id equals 1",
        "tables": [
            "user_profiles",
            "follows",
            "tweets"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "text",
            "from",
            "tweets",
            "when",
            "user",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "text",
            "FROM",
            "tweets",
            "WHERE",
            "uid",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "text",
            "from",
            "tweets",
            "where",
            "uid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__tweets__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__tweets.text__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__tweets.uid__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "election_representative",
        "query": "SELECT Election_ID FROM election WHERE Date = '1953';",
        "question": "Select election id from election when date equals 1953",
        "tables": [
            "election",
            "representative"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "election",
            "id",
            "from",
            "election",
            "when",
            "date",
            "equals",
            "1953"
        ],
        "query_toks": [
            "SELECT",
            "Election_ID",
            "FROM",
            "election",
            "WHERE",
            "Date",
            "=",
            "'1953'"
        ],
        "query_toks_no_value": [
            "select",
            "election_id",
            "from",
            "election",
            "where",
            "date",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__election__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__election.election_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__election.date__",
                            false
                        ],
                        null
                    ],
                    "\"1953\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "election_representative",
        "query": "SELECT State FROM representative WHERE Representative_ID = '4';",
        "question": "Select state from representative when representative id equals 4",
        "tables": [
            "election",
            "representative"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "state",
            "from",
            "representative",
            "when",
            "representative",
            "id",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "State",
            "FROM",
            "representative",
            "WHERE",
            "Representative_ID",
            "=",
            "'4'"
        ],
        "query_toks_no_value": [
            "select",
            "state",
            "from",
            "representative",
            "where",
            "representative_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__representative__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__representative.state__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__representative.representative_id__",
                            false
                        ],
                        null
                    ],
                    "\"4\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "election_representative",
        "query": "SELECT State FROM representative WHERE Representative_ID = 1;",
        "question": "Select state from representative when representative id equals 1",
        "tables": [
            "election",
            "representative"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "state",
            "from",
            "representative",
            "when",
            "representative",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "State",
            "FROM",
            "representative",
            "WHERE",
            "Representative_ID",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "state",
            "from",
            "representative",
            "where",
            "representative_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__representative__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__representative.state__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__representative.representative_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_2",
        "query": "SELECT Major FROM Student WHERE Sex = 'M';",
        "question": "Select major from student when sex equals M",
        "tables": [
            "Student",
            "Voting_record"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "major",
            "from",
            "student",
            "when",
            "sex",
            "equals",
            "M"
        ],
        "query_toks": [
            "SELECT",
            "Major",
            "FROM",
            "Student",
            "WHERE",
            "Sex",
            "=",
            "'M'"
        ],
        "query_toks_no_value": [
            "select",
            "major",
            "from",
            "student",
            "where",
            "sex",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.major__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__student.sex__",
                            false
                        ],
                        null
                    ],
                    "\"M\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_2",
        "query": "SELECT Class_President_Vote FROM Voting_record WHERE President_Vote = '1014';",
        "question": "Select class president vote from voting record when president vote equals 1014",
        "tables": [
            "Student",
            "Voting_record"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "class",
            "president",
            "vote",
            "from",
            "voting",
            "record",
            "when",
            "president",
            "vote",
            "equals",
            "1014"
        ],
        "query_toks": [
            "SELECT",
            "Class_President_Vote",
            "FROM",
            "Voting_record",
            "WHERE",
            "President_Vote",
            "=",
            "'1014'"
        ],
        "query_toks_no_value": [
            "select",
            "class_president_vote",
            "from",
            "voting_record",
            "where",
            "president_vote",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__voting_record__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__voting_record.class_president_vote__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__voting_record.president_vote__",
                            false
                        ],
                        null
                    ],
                    "\"1014\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_2",
        "query": "SELECT * FROM Voting_record WHERE StuID = 1004;",
        "question": "Select all columns from voting record when student id equals 1004",
        "tables": [
            "Student",
            "Voting_record"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "voting",
            "record",
            "when",
            "student",
            "id",
            "equals",
            "1004"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Voting_record",
            "WHERE",
            "StuID",
            "=",
            "1004"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "voting_record",
            "where",
            "stuid",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__voting_record__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__voting_record.stuid__",
                            false
                        ],
                        null
                    ],
                    1004.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wedding",
        "query": "SELECT Name FROM church WHERE Continuation_of = 'Church of Christ';",
        "question": "Select name from church when continuation of equals Church of Christ",
        "tables": [
            "church",
            "wedding",
            "people"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "name",
            "from",
            "church",
            "when",
            "continuation",
            "of",
            "equals",
            "Church",
            "of",
            "Christ"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "church",
            "WHERE",
            "Continuation_of",
            "=",
            "'Church",
            "of",
            "Christ'"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "church",
            "where",
            "continuation_of",
            "=",
            "value",
            "of",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__church__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__church.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__church.continuation_of__",
                            false
                        ],
                        null
                    ],
                    "\"Church of Christ\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wedding",
        "query": "SELECT Female_ID FROM wedding WHERE Male_ID = '3';",
        "question": "Select female id from wedding when male id equals 3",
        "tables": [
            "church",
            "wedding",
            "people"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "female",
            "id",
            "from",
            "wedding",
            "when",
            "male",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Female_ID",
            "FROM",
            "wedding",
            "WHERE",
            "Male_ID",
            "=",
            "'3'"
        ],
        "query_toks_no_value": [
            "select",
            "female_id",
            "from",
            "wedding",
            "where",
            "male_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__wedding__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__wedding.female_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__wedding.male_id__",
                            false
                        ],
                        null
                    ],
                    "\"3\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wedding",
        "query": "SELECT Male_ID FROM wedding WHERE Church_ID = 5;",
        "question": "Select male id from wedding when church id equals 5",
        "tables": [
            "church",
            "wedding",
            "people"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "male",
            "id",
            "from",
            "wedding",
            "when",
            "church",
            "id",
            "equals",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "Male_ID",
            "FROM",
            "wedding",
            "WHERE",
            "Church_ID",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "male_id",
            "from",
            "wedding",
            "where",
            "church_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__wedding__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__wedding.male_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__wedding.church_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wedding",
        "query": "SELECT People_ID FROM people WHERE Country = 'United States';",
        "question": "Select people id from people when country equals United States",
        "tables": [
            "church",
            "wedding",
            "people"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "people",
            "id",
            "from",
            "people",
            "when",
            "country",
            "equals",
            "United",
            "States"
        ],
        "query_toks": [
            "SELECT",
            "People_ID",
            "FROM",
            "people",
            "WHERE",
            "Countr",
            "(",
            "Countr",
            ")",
            "=",
            "'United",
            "States'"
        ],
        "query_toks_no_value": [
            "select",
            "people_id",
            "from",
            "people",
            "where",
            "countr",
            "(",
            "countr",
            ")",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__people__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__people.people_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__people.country__",
                            false
                        ],
                        null
                    ],
                    "\"United States\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wedding",
        "query": "SELECT Name FROM people WHERE People_ID = 3;",
        "question": "Select name from people when people id equals 3",
        "tables": [
            "church",
            "wedding",
            "people"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "name",
            "from",
            "people",
            "when",
            "people",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "people",
            "WHERE",
            "People_ID",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "people",
            "where",
            "people_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__people__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__people.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__people.people_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "news_report",
        "query": "SELECT Date FROM event WHERE Name = 'Government Hearing';",
        "question": "Select date from event when name equals Government Hearing",
        "tables": [
            "event",
            "journalist",
            "news_report"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "date",
            "from",
            "event",
            "when",
            "name",
            "equals",
            "Government",
            "Hearing"
        ],
        "query_toks": [
            "SELECT",
            "Date",
            "FROM",
            "event",
            "WHERE",
            "Name",
            "=",
            "'Government",
            "Hearing'"
        ],
        "query_toks_no_value": [
            "select",
            "date",
            "from",
            "event",
            "where",
            "name",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__event__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__event.date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__event.name__",
                            false
                        ],
                        null
                    ],
                    "\"Government Hearing\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "news_report",
        "query": "SELECT Age FROM journalist WHERE Years_working = '21';",
        "question": "Select age from journalist when years working equals 21",
        "tables": [
            "event",
            "journalist",
            "news_report"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "age",
            "from",
            "journalist",
            "when",
            "years",
            "working",
            "equals",
            "21"
        ],
        "query_toks": [
            "SELECT",
            "Age",
            "FROM",
            "journalist",
            "WHERE",
            "Years_working",
            "=",
            "'21'"
        ],
        "query_toks_no_value": [
            "select",
            "age",
            "from",
            "journalist",
            "where",
            "years_working",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__journalist__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__journalist.age__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__journalist.years_working__",
                            false
                        ],
                        null
                    ],
                    "\"21\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "news_report",
        "query": "SELECT Years_working FROM journalist WHERE journalist_ID = 7;",
        "question": "Select years working from journalist when journalist id equals 7",
        "tables": [
            "event",
            "journalist",
            "news_report"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "years",
            "working",
            "from",
            "journalist",
            "when",
            "journalist",
            "id",
            "equals",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "Years_working",
            "FROM",
            "journalist",
            "WHERE",
            "journalist_ID",
            "=",
            "7"
        ],
        "query_toks_no_value": [
            "select",
            "years_working",
            "from",
            "journalist",
            "where",
            "journalist_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__journalist__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__journalist.years_working__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__journalist.journalist_id__",
                            false
                        ],
                        null
                    ],
                    7.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "news_report",
        "query": "SELECT Work_Type FROM news_report WHERE Event_ID = '4';",
        "question": "Select work type from news report when event id equals 4",
        "tables": [
            "event",
            "journalist",
            "news_report"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "work",
            "type",
            "from",
            "news",
            "report",
            "when",
            "event",
            "id",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Work_Type",
            "FROM",
            "news_report",
            "WHERE",
            "Event_ID",
            "=",
            "'4'"
        ],
        "query_toks_no_value": [
            "select",
            "work_type",
            "from",
            "news_report",
            "where",
            "event_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__news_report__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__news_report.work_type__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__news_report.event_id__",
                            false
                        ],
                        null
                    ],
                    "\"4\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "news_report",
        "query": "SELECT * FROM news_report WHERE journalist_ID = 1;",
        "question": "Select all columns from news report when journalist id equals 1",
        "tables": [
            "event",
            "journalist",
            "news_report"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "news",
            "report",
            "when",
            "journalist",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "news_report",
            "WHERE",
            "journalist_ID",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "news_report",
            "where",
            "journalist_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__news_report__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__news_report.journalist_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wine_1",
        "query": "SELECT Appelation FROM wine WHERE Score = '82';",
        "question": "Select appelation from wine when score equals 82",
        "tables": [
            "wine",
            "grapes",
            "appellations"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "appelation",
            "from",
            "wine",
            "when",
            "score",
            "equals",
            "82"
        ],
        "query_toks": [
            "SELECT",
            "Appelation",
            "FROM",
            "wine",
            "WHERE",
            "Score",
            "=",
            "'82'"
        ],
        "query_toks_no_value": [
            "select",
            "appelation",
            "from",
            "wine",
            "where",
            "score",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__wine__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__wine.appelation__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__wine.score__",
                            false
                        ],
                        null
                    ],
                    "\"82\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wine_1",
        "query": "SELECT ID FROM grapes WHERE Grape = 'Cabernet Franc';",
        "question": "Select id from grapes when grape equals Cabernet Franc",
        "tables": [
            "wine",
            "grapes",
            "appellations"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "id",
            "from",
            "grapes",
            "when",
            "grape",
            "equals",
            "Cabernet",
            "Franc"
        ],
        "query_toks": [
            "SELECT",
            "ID",
            "FROM",
            "grapes",
            "WHERE",
            "Grape",
            "=",
            "'Cabernet",
            "Franc'"
        ],
        "query_toks_no_value": [
            "select",
            "id",
            "from",
            "grapes",
            "where",
            "grape",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__grapes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__grapes.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__grapes.grape__",
                            false
                        ],
                        null
                    ],
                    "\"Cabernet Franc\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wine_1",
        "query": "SELECT * FROM grapes WHERE ID = 3;",
        "question": "Select all columns from grapes when id equals 3",
        "tables": [
            "wine",
            "grapes",
            "appellations"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "grapes",
            "when",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "grapes",
            "WHERE",
            "ID",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "grapes",
            "where",
            "id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__grapes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__grapes.id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wine_1",
        "query": "SELECT isAVA FROM appellations WHERE County = 'Monterey';",
        "question": "Select isava from appellations when county equals Monterey",
        "tables": [
            "wine",
            "grapes",
            "appellations"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "isava",
            "from",
            "appellations",
            "when",
            "county",
            "equals",
            "Monterey"
        ],
        "query_toks": [
            "SELECT",
            "isAVA",
            "FROM",
            "appellations",
            "WHERE",
            "Count",
            "(",
            "Count",
            ")",
            "=",
            "'Monterey'"
        ],
        "query_toks_no_value": [
            "select",
            "isava",
            "from",
            "appellations",
            "where",
            "count",
            "(",
            "count",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__appellations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__appellations.isava__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__appellations.county__",
                            false
                        ],
                        null
                    ],
                    "\"Monterey\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_addresses",
        "query": "SELECT product_id FROM Products WHERE product_details = 'Latte';",
        "question": "Select product id from products when product details equals Latte",
        "tables": [
            "Customer_Contact_Channels",
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "product",
            "id",
            "from",
            "products",
            "when",
            "product",
            "details",
            "equals",
            "Latte"
        ],
        "query_toks": [
            "SELECT",
            "product_id",
            "FROM",
            "Products",
            "WHERE",
            "product_details",
            "=",
            "'Latte'"
        ],
        "query_toks_no_value": [
            "select",
            "product_id",
            "from",
            "products",
            "where",
            "product_details",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products.product_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__products.product_details__",
                            false
                        ],
                        null
                    ],
                    "\"Latte\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_addresses",
        "query": "SELECT order_quantity FROM Order_Items WHERE product_id = '3';",
        "question": "Select order quantity from order items when product id equals 3",
        "tables": [
            "Customer_Contact_Channels",
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "order",
            "quantity",
            "from",
            "order",
            "items",
            "when",
            "product",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "order_quantity",
            "FROM",
            "Order_Items",
            "WHERE",
            "product_id",
            "=",
            "'3'"
        ],
        "query_toks_no_value": [
            "select",
            "order_quantity",
            "from",
            "order_items",
            "where",
            "product_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__order_items__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__order_items.order_quantity__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__order_items.product_id__",
                            false
                        ],
                        null
                    ],
                    "\"3\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_addresses",
        "query": "SELECT order_id FROM Order_Items WHERE order_quantity = 9;",
        "question": "Select order id from order items when order quantity equals 9",
        "tables": [
            "Customer_Contact_Channels",
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "order",
            "id",
            "from",
            "order",
            "items",
            "when",
            "order",
            "quantity",
            "equals",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "order_id",
            "FROM",
            "Order_Items",
            "WHERE",
            "order_quantity",
            "=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "order_id",
            "from",
            "order_items",
            "where",
            "order_quantity",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__order_items__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__order_items.order_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__order_items.order_quantity__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_addresses",
        "query": "SELECT state_province_county FROM Addresses WHERE address_content = '92865 Margaretta Streets Suite 467';",
        "question": "Select state province county from addresses when address content equals 92865 Margaretta Streets Suite 467",
        "tables": [
            "Customer_Contact_Channels",
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "state",
            "province",
            "county",
            "from",
            "addresses",
            "when",
            "address",
            "content",
            "equals",
            "92865",
            "Margaretta",
            "Streets",
            "Suite",
            "467"
        ],
        "query_toks": [
            "SELECT",
            "state_province_county",
            "FROM",
            "Addresses",
            "WHERE",
            "address_content",
            "=",
            "'92865",
            "Margaretta",
            "Streets",
            "Suite",
            "467'"
        ],
        "query_toks_no_value": [
            "select",
            "state_province_county",
            "from",
            "addresses",
            "where",
            "address_content",
            "=",
            "value",
            "margaretta",
            "streets",
            "suite",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__addresses.state_province_county__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__addresses.address_content__",
                            false
                        ],
                        null
                    ],
                    "\"92865 Margaretta Streets Suite 467\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_addresses",
        "query": "SELECT date_address_to FROM Customer_Addresses WHERE address_id = '7';",
        "question": "Select date address to from customer addresses when address id equals 7",
        "tables": [
            "Customer_Contact_Channels",
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "date",
            "address",
            "to",
            "from",
            "customer",
            "addresses",
            "when",
            "address",
            "id",
            "equals",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "date_address_to",
            "FROM",
            "Customer_Addresses",
            "WHERE",
            "address_id",
            "=",
            "'7'"
        ],
        "query_toks_no_value": [
            "select",
            "date_address_to",
            "from",
            "customer_addresses",
            "where",
            "address_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_addresses.date_address_to__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customer_addresses.address_id__",
                            false
                        ],
                        null
                    ],
                    "\"7\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_addresses",
        "query": "SELECT payment_method FROM Customers WHERE customer_id = 2;",
        "question": "Select payment method from customers when customer id equals 2",
        "tables": [
            "Customer_Contact_Channels",
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "payment",
            "method",
            "from",
            "customers",
            "when",
            "customer",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "payment_method",
            "FROM",
            "Customers",
            "WHERE",
            "customer_id",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "payment_method",
            "from",
            "customers",
            "where",
            "customer_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.payment_method__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customers.customer_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "protein_institute",
        "query": "SELECT Name FROM building WHERE Height_feet = '280';",
        "question": "Select name from building when height feet equals 280",
        "tables": [
            "building",
            "protein",
            "Institution"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "name",
            "from",
            "building",
            "when",
            "height",
            "feet",
            "equals",
            "280"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "building",
            "WHERE",
            "Height_feet",
            "=",
            "'280'"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "building",
            "where",
            "height_feet",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__building__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__building.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__building.height_feet__",
                            false
                        ],
                        null
                    ],
                    "\"280\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "protein_institute",
        "query": "SELECT * FROM building WHERE Height_feet = 537;",
        "question": "Select all columns from building when height feet equals 537",
        "tables": [
            "building",
            "protein",
            "Institution"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "building",
            "when",
            "height",
            "feet",
            "equals",
            "537"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "building",
            "WHERE",
            "Height_feet",
            "=",
            "537"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "building",
            "where",
            "height_feet",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__building__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__building.height_feet__",
                            false
                        ],
                        null
                    ],
                    537.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "protein_institute",
        "query": "SELECT sequence_length FROM protein WHERE Institution_id = '5';",
        "question": "Select sequence length from protein when institution id equals 5",
        "tables": [
            "building",
            "protein",
            "Institution"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "sequence",
            "length",
            "from",
            "protein",
            "when",
            "institution",
            "id",
            "equals",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "sequence_length",
            "FROM",
            "protein",
            "WHERE",
            "Institution_id",
            "=",
            "'5'"
        ],
        "query_toks_no_value": [
            "select",
            "sequence_length",
            "from",
            "protein",
            "where",
            "institution_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__protein__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__protein.sequence_length__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__protein.institution_id__",
                            false
                        ],
                        null
                    ],
                    "\"5\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "protein_institute",
        "query": "SELECT Institution_id FROM Institution WHERE Primary_Conference = 'none';",
        "question": "Select institution id from institution when primary conference equals none",
        "tables": [
            "building",
            "protein",
            "Institution"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "institution",
            "id",
            "from",
            "institution",
            "when",
            "primary",
            "conference",
            "equals",
            "none"
        ],
        "query_toks": [
            "SELECT",
            "Institution_id",
            "FROM",
            "Institution",
            "WHERE",
            "Primary_Conference",
            "=",
            "'none'"
        ],
        "query_toks_no_value": [
            "select",
            "institution_id",
            "from",
            "institution",
            "where",
            "primary_conference",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__institution__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__institution.institution_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__institution.primary_conference__",
                            false
                        ],
                        null
                    ],
                    "\"none\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "school_player",
        "query": "SELECT School_Year FROM school_performance WHERE School_Id = '2';",
        "question": "Select school year from school performance when school id equals 2",
        "tables": [
            "school_performance",
            "school",
            "player",
            "school_details"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "school",
            "year",
            "from",
            "school",
            "performance",
            "when",
            "school",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "School_Year",
            "FROM",
            "school_performance",
            "WHERE",
            "School_Id",
            "=",
            "'2'"
        ],
        "query_toks_no_value": [
            "select",
            "school_year",
            "from",
            "school_performance",
            "where",
            "school_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__school_performance__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__school_performance.school_year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__school_performance.school_id__",
                            false
                        ],
                        null
                    ],
                    "\"2\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "school_player",
        "query": "SELECT School_Colors FROM school WHERE School = 'Knox Grammar School';",
        "question": "Select school colors from school when school equals Knox Grammar School",
        "tables": [
            "school_performance",
            "school",
            "player",
            "school_details"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "school",
            "colors",
            "from",
            "school",
            "when",
            "school",
            "equals",
            "Knox",
            "Grammar",
            "School"
        ],
        "query_toks": [
            "SELECT",
            "School_Colors",
            "FROM",
            "school",
            "WHERE",
            "School",
            "=",
            "'Knox",
            "Grammar",
            "School'"
        ],
        "query_toks_no_value": [
            "select",
            "school_colors",
            "from",
            "school",
            "where",
            "school",
            "=",
            "value",
            "grammar",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__school__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__school.school_colors__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__school.school__",
                            false
                        ],
                        null
                    ],
                    "\"Knox Grammar School\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "school_player",
        "query": "SELECT Player_ID FROM player WHERE School_ID = '6';",
        "question": "Select player id from player when school id equals 6",
        "tables": [
            "school_performance",
            "school",
            "player",
            "school_details"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "player",
            "id",
            "from",
            "player",
            "when",
            "school",
            "id",
            "equals",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "Player_ID",
            "FROM",
            "player",
            "WHERE",
            "School_ID",
            "=",
            "'6'"
        ],
        "query_toks_no_value": [
            "select",
            "player_id",
            "from",
            "player",
            "where",
            "school_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__player__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__player.player_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__player.school_id__",
                            false
                        ],
                        null
                    ],
                    "\"6\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "school_player",
        "query": "SELECT Class FROM school_details WHERE Colors = 'Silver and Maroon';",
        "question": "Select class from school details when colors equals Silver and Maroon",
        "tables": [
            "school_performance",
            "school",
            "player",
            "school_details"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "class",
            "from",
            "school",
            "details",
            "when",
            "colors",
            "equals",
            "Silver",
            "and",
            "Maroon"
        ],
        "query_toks": [
            "SELECT",
            "Class",
            "FROM",
            "school_details",
            "WHERE",
            "Colors",
            "=",
            "'Silver",
            "and",
            "Maroon'"
        ],
        "query_toks_no_value": [
            "select",
            "class",
            "from",
            "school_details",
            "where",
            "colors",
            "=",
            "value",
            "and",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__school_details__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__school_details.class__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__school_details.colors__",
                            false
                        ],
                        null
                    ],
                    "\"Silver and Maroon\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "school_player",
        "query": "SELECT * FROM school_details WHERE School_ID = 2;",
        "question": "Select all columns from school details when school id equals 2",
        "tables": [
            "school_performance",
            "school",
            "player",
            "school_details"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "school",
            "details",
            "when",
            "school",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "school_details",
            "WHERE",
            "School_ID",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "school_details",
            "where",
            "school_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__school_details__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__school_details.school_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "query": "SELECT Written_by FROM Cartoon WHERE Original_air_date = 'December5,2008';",
        "question": "Select written by from cartoon when original air date equals December5,2008",
        "tables": [
            "Cartoon",
            "TV_Channel",
            "TV_series"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "written",
            "by",
            "from",
            "cartoon",
            "when",
            "original",
            "air",
            "date",
            "equals",
            "December5,2008"
        ],
        "query_toks": [
            "SELECT",
            "Written_by",
            "FROM",
            "Cartoon",
            "WHERE",
            "Original_air_date",
            "=",
            "'December5,2008'"
        ],
        "query_toks_no_value": [
            "select",
            "written_by",
            "from",
            "cartoon",
            "where",
            "original_air_date",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__cartoon__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__cartoon.written_by__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__cartoon.original_air_date__",
                            false
                        ],
                        null
                    ],
                    "\"December5,2008\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "query": "SELECT Content FROM TV_Channel WHERE Pay_per_view_PPV = 'no';",
        "question": "Select content from tv channel when pay per view ppv equals no",
        "tables": [
            "Cartoon",
            "TV_Channel",
            "TV_series"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "content",
            "from",
            "tv",
            "channel",
            "when",
            "pay",
            "per",
            "view",
            "ppv",
            "equals",
            "no"
        ],
        "query_toks": [
            "SELECT",
            "Content",
            "FROM",
            "TV_Channel",
            "WHERE",
            "Pay_per_view_PPV",
            "=",
            "'no'"
        ],
        "query_toks_no_value": [
            "select",
            "content",
            "from",
            "tv_channel",
            "where",
            "pay_per_view_ppv",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__tv_channel__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__tv_channel.content__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__tv_channel.pay_per_view_ppv__",
                            false
                        ],
                        null
                    ],
                    "\"no\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "query": "SELECT Share FROM TV_series WHERE Air_Date = 'December 10, 2007';",
        "question": "Select share from tv series when air date equals December 10, 2007",
        "tables": [
            "Cartoon",
            "TV_Channel",
            "TV_series"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "share",
            "from",
            "tv",
            "series",
            "when",
            "air",
            "date",
            "equals",
            "December",
            "10",
            ",",
            "2007"
        ],
        "query_toks": [
            "SELECT",
            "Share",
            "FROM",
            "TV_series",
            "WHERE",
            "Air_Date",
            "=",
            "'December",
            "10",
            ",",
            "2007'"
        ],
        "query_toks_no_value": [
            "select",
            "share",
            "from",
            "tv_series",
            "where",
            "air_date",
            "=",
            "value",
            "value",
            ",",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__tv_series__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__tv_series.share__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__tv_series.air_date__",
                            false
                        ],
                        null
                    ],
                    "\"December 10, 2007\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wrestler",
        "query": "SELECT Elimination_ID FROM Elimination WHERE Eliminated_By = 'Henry';",
        "question": "Select elimination id from elimination when eliminated by equals Henry",
        "tables": [
            "Elimination",
            "wrestler"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "elimination",
            "id",
            "from",
            "elimination",
            "when",
            "eliminated",
            "by",
            "equals",
            "Henry"
        ],
        "query_toks": [
            "SELECT",
            "Elimination_ID",
            "FROM",
            "Elimination",
            "WHERE",
            "Eliminated_By",
            "=",
            "'Henry'"
        ],
        "query_toks_no_value": [
            "select",
            "elimination_id",
            "from",
            "elimination",
            "where",
            "eliminated_by",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__elimination__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__elimination.elimination_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__elimination.eliminated_by__",
                            false
                        ],
                        null
                    ],
                    "\"Henry\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wrestler",
        "query": "SELECT * FROM Elimination WHERE Elimination_ID = 3;",
        "question": "Select all columns from elimination when elimination id equals 3",
        "tables": [
            "Elimination",
            "wrestler"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "elimination",
            "when",
            "elimination",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Elimination",
            "WHERE",
            "Elimination_ID",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "elimination",
            "where",
            "elimination_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__elimination__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__elimination.elimination_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wrestler",
        "query": "SELECT Wrestler_ID FROM wrestler WHERE Days_held = '1285';",
        "question": "Select wrestler id from wrestler when days held equals 1285",
        "tables": [
            "Elimination",
            "wrestler"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "wrestler",
            "id",
            "from",
            "wrestler",
            "when",
            "days",
            "held",
            "equals",
            "1285"
        ],
        "query_toks": [
            "SELECT",
            "Wrestler_ID",
            "FROM",
            "wrestler",
            "WHERE",
            "Days_held",
            "=",
            "'1285'"
        ],
        "query_toks_no_value": [
            "select",
            "wrestler_id",
            "from",
            "wrestler",
            "where",
            "days_held",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__wrestler__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__wrestler.wrestler_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__wrestler.days_held__",
                            false
                        ],
                        null
                    ],
                    "\"1285\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_complaints",
        "query": "SELECT * FROM Staff WHERE gender = 1;",
        "question": "Select all columns from staff when gender equals 1",
        "tables": [
            "Staff",
            "Complaints",
            "Products",
            "Customers"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "staff",
            "when",
            "gender",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Staff",
            "WHERE",
            "gender",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "staff",
            "where",
            "gender",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__staff__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__staff.gender__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_complaints",
        "query": "SELECT customer_id FROM Complaints WHERE staff_id = '118';",
        "question": "Select customer id from complaints when staff id equals 118",
        "tables": [
            "Staff",
            "Complaints",
            "Products",
            "Customers"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "customer",
            "id",
            "from",
            "complaints",
            "when",
            "staff",
            "id",
            "equals",
            "118"
        ],
        "query_toks": [
            "SELECT",
            "customer_id",
            "FROM",
            "Complaints",
            "WHERE",
            "staff_id",
            "=",
            "'118'"
        ],
        "query_toks_no_value": [
            "select",
            "customer_id",
            "from",
            "complaints",
            "where",
            "staff_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__complaints__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__complaints.customer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__complaints.staff_id__",
                            false
                        ],
                        null
                    ],
                    "\"118\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_complaints",
        "query": "SELECT * FROM Complaints WHERE staff_id = 118;",
        "question": "Select all columns from complaints when staff id equals 118",
        "tables": [
            "Staff",
            "Complaints",
            "Products",
            "Customers"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "complaints",
            "when",
            "staff",
            "id",
            "equals",
            "118"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Complaints",
            "WHERE",
            "staff_id",
            "=",
            "118"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "complaints",
            "where",
            "staff_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__complaints__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__complaints.staff_id__",
                            false
                        ],
                        null
                    ],
                    118.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_management",
        "query": "SELECT head_ID FROM management WHERE temporary_acting = 'No';",
        "question": "Select head id from management when temporary acting equals No",
        "tables": [
            "management",
            "department",
            "head"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "head",
            "id",
            "from",
            "management",
            "when",
            "temporary",
            "acting",
            "equals",
            "No"
        ],
        "query_toks": [
            "SELECT",
            "head_ID",
            "FROM",
            "management",
            "WHERE",
            "temporary_acting",
            "=",
            "'No'"
        ],
        "query_toks_no_value": [
            "select",
            "head_id",
            "from",
            "management",
            "where",
            "temporary_acting",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__management__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__management.head_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__management.temporary_acting__",
                            false
                        ],
                        null
                    ],
                    "\"No\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_products_contacts",
        "query": "SELECT product_name FROM Products WHERE product_type_code = 'Clothes';",
        "question": "Select product name from products when product type code equals Clothes",
        "tables": [
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Address_History",
            "Customer_Orders",
            "Customers",
            "Contacts"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "product",
            "name",
            "from",
            "products",
            "when",
            "product",
            "type",
            "code",
            "equals",
            "Clothes"
        ],
        "query_toks": [
            "SELECT",
            "product_name",
            "FROM",
            "Products",
            "WHERE",
            "product_type_code",
            "=",
            "'Clothes'"
        ],
        "query_toks_no_value": [
            "select",
            "product_name",
            "from",
            "products",
            "where",
            "product_type_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products.product_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__products.product_type_code__",
                            false
                        ],
                        null
                    ],
                    "\"Clothes\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_products_contacts",
        "query": "SELECT product_id FROM Order_Items WHERE order_quantity = '8';",
        "question": "Select product id from order items when order quantity equals 8",
        "tables": [
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Address_History",
            "Customer_Orders",
            "Customers",
            "Contacts"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "product",
            "id",
            "from",
            "order",
            "items",
            "when",
            "order",
            "quantity",
            "equals",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "product_id",
            "FROM",
            "Order_Items",
            "WHERE",
            "order_quantity",
            "=",
            "'8'"
        ],
        "query_toks_no_value": [
            "select",
            "product_id",
            "from",
            "order_items",
            "where",
            "order_quantity",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__order_items__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__order_items.product_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__order_items.order_quantity__",
                            false
                        ],
                        null
                    ],
                    "\"8\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_products_contacts",
        "query": "SELECT * FROM Order_Items WHERE product_id = 15;",
        "question": "Select all columns from order items when product id equals 15",
        "tables": [
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Address_History",
            "Customer_Orders",
            "Customers",
            "Contacts"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "order",
            "items",
            "when",
            "product",
            "id",
            "equals",
            "15"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Order_Items",
            "WHERE",
            "product_id",
            "=",
            "15"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "order_items",
            "where",
            "product_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__order_items__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__order_items.product_id__",
                            false
                        ],
                        null
                    ],
                    15.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_products_contacts",
        "query": "SELECT zip_postcode FROM Addresses WHERE address_id = '8';",
        "question": "Select zip postcode from addresses when address id equals 8",
        "tables": [
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Address_History",
            "Customer_Orders",
            "Customers",
            "Contacts"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "zip",
            "postcode",
            "from",
            "addresses",
            "when",
            "address",
            "id",
            "equals",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "zip_postcode",
            "FROM",
            "Addresses",
            "WHERE",
            "address_id",
            "=",
            "'8'"
        ],
        "query_toks_no_value": [
            "select",
            "zip_postcode",
            "from",
            "addresses",
            "where",
            "address_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__addresses.zip_postcode__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__addresses.address_id__",
                            false
                        ],
                        null
                    ],
                    "\"8\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_products_contacts",
        "query": "SELECT date_from FROM Customer_Address_History WHERE address_id = '13';",
        "question": "Select date from from customer address history when address id equals 13",
        "tables": [
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Address_History",
            "Customer_Orders",
            "Customers",
            "Contacts"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "date",
            "from",
            "from",
            "customer",
            "address",
            "history",
            "when",
            "address",
            "id",
            "equals",
            "13"
        ],
        "query_toks": [
            "SELECT",
            "date_from",
            "FROM",
            "Customer_Address_History",
            "WHERE",
            "address_id",
            "=",
            "'13'"
        ],
        "query_toks_no_value": [
            "select",
            "date_from",
            "from",
            "customer_address_history",
            "where",
            "address_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_address_history__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_address_history.date_from__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customer_address_history.address_id__",
                            false
                        ],
                        null
                    ],
                    "\"13\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_products_contacts",
        "query": "SELECT customer_id FROM Customer_Address_History WHERE address_id = 1;",
        "question": "Select customer id from customer address history when address id equals 1",
        "tables": [
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Address_History",
            "Customer_Orders",
            "Customers",
            "Contacts"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "customer",
            "id",
            "from",
            "customer",
            "address",
            "history",
            "when",
            "address",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "customer_id",
            "FROM",
            "Customer_Address_History",
            "WHERE",
            "address_id",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "customer_id",
            "from",
            "customer_address_history",
            "where",
            "address_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_address_history__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_address_history.customer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customer_address_history.address_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_products_contacts",
        "query": "SELECT customer_id FROM Customer_Orders WHERE order_status_code = 'Completed';",
        "question": "Select customer id from customer orders when order status code equals Completed",
        "tables": [
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Address_History",
            "Customer_Orders",
            "Customers",
            "Contacts"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "customer",
            "id",
            "from",
            "customer",
            "orders",
            "when",
            "order",
            "status",
            "code",
            "equals",
            "Completed"
        ],
        "query_toks": [
            "SELECT",
            "customer_id",
            "FROM",
            "Customer_Orders",
            "WHERE",
            "order_status_code",
            "=",
            "'Completed'"
        ],
        "query_toks_no_value": [
            "select",
            "customer_id",
            "from",
            "customer_orders",
            "where",
            "order_status_code",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_orders__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_orders.customer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customer_orders.order_status_code__",
                            false
                        ],
                        null
                    ],
                    "\"Completed\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_products_contacts",
        "query": "SELECT customer_name FROM Customers WHERE customer_id = 4;",
        "question": "Select customer name from customers when customer id equals 4",
        "tables": [
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Address_History",
            "Customer_Orders",
            "Customers",
            "Contacts"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "customer",
            "name",
            "from",
            "customers",
            "when",
            "customer",
            "id",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "customer_name",
            "FROM",
            "Customers",
            "WHERE",
            "customer_id",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "customer_name",
            "from",
            "customers",
            "where",
            "customer_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__customers.customer_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_products_contacts",
        "query": "SELECT contact_phone FROM Contacts WHERE gender = 'male';",
        "question": "Select contact phone from contacts when gender equals male",
        "tables": [
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Address_History",
            "Customer_Orders",
            "Customers",
            "Contacts"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "contact",
            "phone",
            "from",
            "contacts",
            "when",
            "gender",
            "equals",
            "male"
        ],
        "query_toks": [
            "SELECT",
            "contact_phone",
            "FROM",
            "Contacts",
            "WHERE",
            "gender",
            "=",
            "'male'"
        ],
        "query_toks_no_value": [
            "select",
            "contact_phone",
            "from",
            "contacts",
            "where",
            "gender",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__contacts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__contacts.contact_phone__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__contacts.gender__",
                            false
                        ],
                        null
                    ],
                    "\"male\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_1",
        "query": "SELECT Pno FROM works_on WHERE Essn = '333445555';",
        "question": "Select project number from works on when employee ssn equals 333445555",
        "tables": [
            "works_on",
            "dept_locations",
            "dependent",
            "department",
            "project",
            "employee"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "project",
            "number",
            "from",
            "works",
            "on",
            "when",
            "employee",
            "ssn",
            "equals",
            "333445555"
        ],
        "query_toks": [
            "SELECT",
            "Pno",
            "FROM",
            "works_on",
            "WHERE",
            "Essn",
            "=",
            "'333445555'"
        ],
        "query_toks_no_value": [
            "select",
            "pno",
            "from",
            "works_on",
            "where",
            "essn",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__works_on__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__works_on.pno__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__works_on.essn__",
                            false
                        ],
                        null
                    ],
                    "\"333445555\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_1",
        "query": "SELECT Hours FROM works_on WHERE Essn = 999887777;",
        "question": "Select hours from works on when employee ssn equals 999887777",
        "tables": [
            "works_on",
            "dept_locations",
            "dependent",
            "department",
            "project",
            "employee"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "hours",
            "from",
            "works",
            "on",
            "when",
            "employee",
            "ssn",
            "equals",
            "999887777"
        ],
        "query_toks": [
            "SELECT",
            "Hours",
            "FROM",
            "works_on",
            "WHERE",
            "Essn",
            "=",
            "999887777"
        ],
        "query_toks_no_value": [
            "select",
            "hours",
            "from",
            "works_on",
            "where",
            "essn",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__works_on__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__works_on.hours__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__works_on.essn__",
                            false
                        ],
                        null
                    ],
                    999887777.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_1",
        "query": "SELECT Dlocation FROM dept_locations WHERE Dnumber = '4';",
        "question": "Select department location from department locations when department number equals 4",
        "tables": [
            "works_on",
            "dept_locations",
            "dependent",
            "department",
            "project",
            "employee"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "department",
            "location",
            "from",
            "department",
            "locations",
            "when",
            "department",
            "number",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Dlocation",
            "FROM",
            "dept_locations",
            "WHERE",
            "Dnumber",
            "=",
            "'4'"
        ],
        "query_toks_no_value": [
            "select",
            "dlocation",
            "from",
            "dept_locations",
            "where",
            "dnumber",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__dept_locations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__dept_locations.dlocation__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__dept_locations.dnumber__",
                            false
                        ],
                        null
                    ],
                    "\"4\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_1",
        "query": "SELECT * FROM dept_locations WHERE Dnumber = 1;",
        "question": "Select all columns from department locations when department number equals 1",
        "tables": [
            "works_on",
            "dept_locations",
            "dependent",
            "department",
            "project",
            "employee"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "department",
            "locations",
            "when",
            "department",
            "number",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "dept_locations",
            "WHERE",
            "Dnumber",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "dept_locations",
            "where",
            "dnumber",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__dept_locations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__dept_locations.dnumber__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_1",
        "query": "SELECT Dnumber FROM department WHERE Mgr_ssn = '333445555';",
        "question": "Select department number from department when manager ssn equals 333445555",
        "tables": [
            "works_on",
            "dept_locations",
            "dependent",
            "department",
            "project",
            "employee"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "department",
            "number",
            "from",
            "department",
            "when",
            "manager",
            "ssn",
            "equals",
            "333445555"
        ],
        "query_toks": [
            "SELECT",
            "Dnumber",
            "FROM",
            "department",
            "WHERE",
            "Mgr_ssn",
            "=",
            "'333445555'"
        ],
        "query_toks_no_value": [
            "select",
            "dnumber",
            "from",
            "department",
            "where",
            "mgr_ssn",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__department__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__department.dnumber__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__department.mgr_ssn__",
                            false
                        ],
                        null
                    ],
                    "\"333445555\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_1",
        "query": "SELECT Dnumber FROM department WHERE Mgr_ssn = 888665555;",
        "question": "Select department number from department when manager ssn equals 888665555",
        "tables": [
            "works_on",
            "dept_locations",
            "dependent",
            "department",
            "project",
            "employee"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "department",
            "number",
            "from",
            "department",
            "when",
            "manager",
            "ssn",
            "equals",
            "888665555"
        ],
        "query_toks": [
            "SELECT",
            "Dnumber",
            "FROM",
            "department",
            "WHERE",
            "Mgr_ssn",
            "=",
            "888665555"
        ],
        "query_toks_no_value": [
            "select",
            "dnumber",
            "from",
            "department",
            "where",
            "mgr_ssn",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__department__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__department.dnumber__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__department.mgr_ssn__",
                            false
                        ],
                        null
                    ],
                    888665555.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_1",
        "query": "SELECT Pnumber FROM project WHERE Dnum = '5';",
        "question": "Select dependent number from project when department number equals 5",
        "tables": [
            "works_on",
            "dept_locations",
            "dependent",
            "department",
            "project",
            "employee"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "dependent",
            "number",
            "from",
            "project",
            "when",
            "department",
            "number",
            "equals",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "Pnumber",
            "FROM",
            "project",
            "WHERE",
            "Dnum",
            "=",
            "'5'"
        ],
        "query_toks_no_value": [
            "select",
            "pnumber",
            "from",
            "project",
            "where",
            "dnum",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__project__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__project.pnumber__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__project.dnum__",
                            false
                        ],
                        null
                    ],
                    "\"5\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_1",
        "query": "SELECT Minit FROM employee WHERE Super_ssn = '333445555';",
        "question": "Select minit from employee when super ssn equals 333445555",
        "tables": [
            "works_on",
            "dept_locations",
            "dependent",
            "department",
            "project",
            "employee"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "minit",
            "from",
            "employee",
            "when",
            "super",
            "ssn",
            "equals",
            "333445555"
        ],
        "query_toks": [
            "SELECT",
            "Mini",
            "(",
            "Mini",
            ")",
            "FROM",
            "employee",
            "WHERE",
            "Super_ssn",
            "=",
            "'333445555'"
        ],
        "query_toks_no_value": [
            "select",
            "mini",
            "(",
            "mini",
            ")",
            "from",
            "employee",
            "where",
            "super_ssn",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__employee__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__employee.minit__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__employee.super_ssn__",
                            false
                        ],
                        null
                    ],
                    "\"333445555\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "workshop_paper",
        "query": "SELECT Result FROM Acceptance WHERE Submission_ID = '3';",
        "question": "Select result from acceptance when submission id equals 3",
        "tables": [
            "Acceptance",
            "submission",
            "workshop"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "result",
            "from",
            "acceptance",
            "when",
            "submission",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Result",
            "FROM",
            "Acceptance",
            "WHERE",
            "Submission_ID",
            "=",
            "'3'"
        ],
        "query_toks_no_value": [
            "select",
            "result",
            "from",
            "acceptance",
            "where",
            "submission_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__acceptance__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__acceptance.result__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__acceptance.submission_id__",
                            false
                        ],
                        null
                    ],
                    "\"3\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "workshop_paper",
        "query": "SELECT Workshop_ID FROM Acceptance WHERE Submission_ID = 3;",
        "question": "Select workshop id from acceptance when submission id equals 3",
        "tables": [
            "Acceptance",
            "submission",
            "workshop"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "workshop",
            "id",
            "from",
            "acceptance",
            "when",
            "submission",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Workshop_ID",
            "FROM",
            "Acceptance",
            "WHERE",
            "Submission_ID",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "workshop_id",
            "from",
            "acceptance",
            "where",
            "submission_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__acceptance__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__acceptance.workshop_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__acceptance.submission_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "workshop_paper",
        "query": "SELECT Submission_ID FROM submission WHERE Author = 'Rick Engles';",
        "question": "Select submission id from submission when author equals Rick Engles",
        "tables": [
            "Acceptance",
            "submission",
            "workshop"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "submission",
            "id",
            "from",
            "submission",
            "when",
            "author",
            "equals",
            "Rick",
            "Engles"
        ],
        "query_toks": [
            "SELECT",
            "Submission_ID",
            "FROM",
            "submission",
            "WHERE",
            "Author",
            "=",
            "'Rick",
            "Engles'"
        ],
        "query_toks_no_value": [
            "select",
            "submission_id",
            "from",
            "submission",
            "where",
            "author",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__submission__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__submission.submission_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__submission.author__",
                            false
                        ],
                        null
                    ],
                    "\"Rick Engles\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "workshop_paper",
        "query": "SELECT Scores FROM submission WHERE Submission_ID = 3;",
        "question": "Select scores from submission when submission id equals 3",
        "tables": [
            "Acceptance",
            "submission",
            "workshop"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "scores",
            "from",
            "submission",
            "when",
            "submission",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Scores",
            "FROM",
            "submission",
            "WHERE",
            "Submission_ID",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "scores",
            "from",
            "submission",
            "where",
            "submission_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__submission__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__submission.scores__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__submission.submission_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "workshop_paper",
        "query": "SELECT Workshop_ID FROM workshop WHERE Name = 'Conference 2007';",
        "question": "Select workshop id from workshop when name equals Conference 2007",
        "tables": [
            "Acceptance",
            "submission",
            "workshop"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "workshop",
            "id",
            "from",
            "workshop",
            "when",
            "name",
            "equals",
            "Conference",
            "2007"
        ],
        "query_toks": [
            "SELECT",
            "Workshop_ID",
            "FROM",
            "workshop",
            "WHERE",
            "Name",
            "=",
            "'Conference",
            "2007'"
        ],
        "query_toks_no_value": [
            "select",
            "workshop_id",
            "from",
            "workshop",
            "where",
            "name",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__workshop__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__workshop.workshop_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__workshop.name__",
                            false
                        ],
                        null
                    ],
                    "\"Conference 2007\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "workshop_paper",
        "query": "SELECT * FROM workshop WHERE Workshop_ID = 1;",
        "question": "Select all columns from workshop when workshop id equals 1",
        "tables": [
            "Acceptance",
            "submission",
            "workshop"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "workshop",
            "when",
            "workshop",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "workshop",
            "WHERE",
            "Workshop_ID",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "workshop",
            "where",
            "workshop_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__workshop__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__workshop.workshop_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "epinions_1",
        "query": "SELECT i_id FROM item WHERE title = 'shampoo';",
        "question": "Select item id from item when title equals shampoo",
        "tables": [
            "item",
            "review",
            "useracct",
            "trust"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "item",
            "id",
            "from",
            "item",
            "when",
            "title",
            "equals",
            "shampoo"
        ],
        "query_toks": [
            "SELECT",
            "i_id",
            "FROM",
            "item",
            "WHERE",
            "title",
            "=",
            "'shampoo'"
        ],
        "query_toks_no_value": [
            "select",
            "i_id",
            "from",
            "item",
            "where",
            "title",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__item__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__item.i_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__item.title__",
                            false
                        ],
                        null
                    ],
                    "\"shampoo\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "epinions_1",
        "query": "SELECT a_id FROM review WHERE i_id = '1';",
        "question": "Select a id from review when item id equals 1",
        "tables": [
            "item",
            "review",
            "useracct",
            "trust"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "a",
            "id",
            "from",
            "review",
            "when",
            "item",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "a_id",
            "FROM",
            "review",
            "WHERE",
            "i_id",
            "=",
            "'1'"
        ],
        "query_toks_no_value": [
            "select",
            "a_id",
            "from",
            "review",
            "where",
            "i_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__review__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__review.a_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__review.i_id__",
                            false
                        ],
                        null
                    ],
                    "\"1\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "epinions_1",
        "query": "SELECT u_id FROM review WHERE rank = 7;",
        "question": "Select user id from review when rank equals 7",
        "tables": [
            "item",
            "review",
            "useracct",
            "trust"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "user",
            "id",
            "from",
            "review",
            "when",
            "rank",
            "equals",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "u_id",
            "FROM",
            "review",
            "WHERE",
            "rank",
            "=",
            "7"
        ],
        "query_toks_no_value": [
            "select",
            "u_id",
            "from",
            "review",
            "where",
            "rank",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__review__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__review.u_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__review.rank__",
                            false
                        ],
                        null
                    ],
                    7.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "epinions_1",
        "query": "SELECT name FROM useracct WHERE u_id = '4';",
        "question": "Select name from useracct when user id equals 4",
        "tables": [
            "item",
            "review",
            "useracct",
            "trust"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "name",
            "from",
            "useracct",
            "when",
            "user",
            "id",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "useracct",
            "WHERE",
            "u_id",
            "=",
            "'4'"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "useracct",
            "where",
            "u_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__useracct__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__useracct.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__useracct.u_id__",
                            false
                        ],
                        null
                    ],
                    "\"4\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "epinions_1",
        "query": "SELECT trust FROM trust WHERE source_u_id = '1';",
        "question": "Select trust from trust when source user id equals 1",
        "tables": [
            "item",
            "review",
            "useracct",
            "trust"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "trust",
            "from",
            "trust",
            "when",
            "source",
            "user",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "trust",
            "FROM",
            "trust",
            "WHERE",
            "source_u_id",
            "=",
            "'1'"
        ],
        "query_toks_no_value": [
            "select",
            "trust",
            "from",
            "trust",
            "where",
            "source_u_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__trust__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__trust.trust__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__trust.source_u_id__",
                            false
                        ],
                        null
                    ],
                    "\"1\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "epinions_1",
        "query": "SELECT * FROM trust WHERE trust = 4;",
        "question": "Select all columns from trust when trust equals 4",
        "tables": [
            "item",
            "review",
            "useracct",
            "trust"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "trust",
            "when",
            "trust",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "trust",
            "WHERE",
            "trust",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "trust",
            "where",
            "trust",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__trust__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__trust.trust__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "party_host",
        "query": "SELECT Nationality FROM host WHERE Name = 'Carlos Delfino';",
        "question": "Select nationality from host when name equals Carlos Delfino",
        "tables": [
            "host",
            "party",
            "party_host"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "nationality",
            "from",
            "host",
            "when",
            "name",
            "equals",
            "Carlos",
            "Delfino"
        ],
        "query_toks": [
            "SELECT",
            "Nationality",
            "FROM",
            "host",
            "WHERE",
            "Name",
            "=",
            "'Carlos",
            "Delfino'"
        ],
        "query_toks_no_value": [
            "select",
            "nationality",
            "from",
            "host",
            "where",
            "name",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__host__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__host.nationality__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__host.name__",
                            false
                        ],
                        null
                    ],
                    "\"Carlos Delfino\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "party_host",
        "query": "SELECT Host_ID FROM host WHERE Age = 43;",
        "question": "Select host id from host when age equals 43",
        "tables": [
            "host",
            "party",
            "party_host"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "host",
            "id",
            "from",
            "host",
            "when",
            "age",
            "equals",
            "43"
        ],
        "query_toks": [
            "SELECT",
            "Host_ID",
            "FROM",
            "host",
            "WHERE",
            "Age",
            "=",
            "43"
        ],
        "query_toks_no_value": [
            "select",
            "host_id",
            "from",
            "host",
            "where",
            "age",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__host__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__host.host_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__host.age__",
                            false
                        ],
                        null
                    ],
                    43.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "party_host",
        "query": "SELECT Party_Theme FROM party WHERE Location = 'RAI Amsterdam';",
        "question": "Select party theme from party when location equals RAI Amsterdam",
        "tables": [
            "host",
            "party",
            "party_host"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "party",
            "theme",
            "from",
            "party",
            "when",
            "location",
            "equals",
            "RAI",
            "Amsterdam"
        ],
        "query_toks": [
            "SELECT",
            "Party_Theme",
            "FROM",
            "party",
            "WHERE",
            "Location",
            "=",
            "'RAI",
            "Amsterdam'"
        ],
        "query_toks_no_value": [
            "select",
            "party_theme",
            "from",
            "party",
            "where",
            "location",
            "=",
            "value",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__party__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__party.party_theme__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__party.location__",
                            false
                        ],
                        null
                    ],
                    "\"RAI Amsterdam\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "party_host",
        "query": "SELECT Party_Theme FROM party WHERE First_year = 2004;",
        "question": "Select party theme from party when first year equals 2004",
        "tables": [
            "host",
            "party",
            "party_host"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "party",
            "theme",
            "from",
            "party",
            "when",
            "first",
            "year",
            "equals",
            "2004"
        ],
        "query_toks": [
            "SELECT",
            "Party_Theme",
            "FROM",
            "party",
            "WHERE",
            "First_year",
            "=",
            "2004"
        ],
        "query_toks_no_value": [
            "select",
            "party_theme",
            "from",
            "party",
            "where",
            "first_year",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__party__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__party.party_theme__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__party.first_year__",
                            false
                        ],
                        null
                    ],
                    2004.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "party_host",
        "query": "SELECT Is_Main_in_Charge FROM party_host WHERE Party_ID = '4';",
        "question": "Select is main in charge from party host when party id equals 4",
        "tables": [
            "host",
            "party",
            "party_host"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "is",
            "main",
            "in",
            "charge",
            "from",
            "party",
            "host",
            "when",
            "party",
            "id",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Is_Main_in_Charge",
            "FROM",
            "party_host",
            "WHERE",
            "Party_ID",
            "=",
            "'4'"
        ],
        "query_toks_no_value": [
            "select",
            "is_main_in_charge",
            "from",
            "party_host",
            "where",
            "party_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__party_host__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__party_host.is_main_in_charge__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__party_host.party_id__",
                            false
                        ],
                        null
                    ],
                    "\"4\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "party_host",
        "query": "SELECT Is_Main_in_Charge FROM party_host WHERE Party_ID = 1;",
        "question": "Select is main in charge from party host when party id equals 1",
        "tables": [
            "host",
            "party",
            "party_host"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "is",
            "main",
            "in",
            "charge",
            "from",
            "party",
            "host",
            "when",
            "party",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Is_Main_in_Charge",
            "FROM",
            "party_host",
            "WHERE",
            "Party_ID",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "is_main_in_charge",
            "from",
            "party_host",
            "where",
            "party_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__party_host__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__party_host.is_main_in_charge__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__party_host.party_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "product_catalog",
        "query": "SELECT catalog_entry_id FROM Catalog_Contents WHERE width = '7';",
        "question": "Select catalog entry id from catalog contents when width equals 7",
        "tables": [
            "Catalog_Contents",
            "Catalogs",
            "Attribute_Definitions",
            "Catalog_Contents_Additional_Attributes",
            "Catalog_Structure"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "catalog",
            "entry",
            "id",
            "from",
            "catalog",
            "contents",
            "when",
            "width",
            "equals",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "catalog_entry_id",
            "FROM",
            "Catalog_Contents",
            "WHERE",
            "width",
            "=",
            "'7'"
        ],
        "query_toks_no_value": [
            "select",
            "catalog_entry_id",
            "from",
            "catalog_contents",
            "where",
            "width",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__catalog_contents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__catalog_contents.catalog_entry_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__catalog_contents.width__",
                            false
                        ],
                        null
                    ],
                    "\"7\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "product_catalog",
        "query": "SELECT parent_entry_id FROM Catalog_Contents WHERE height = 9;",
        "question": "Select parent entry id from catalog contents when height equals 9",
        "tables": [
            "Catalog_Contents",
            "Catalogs",
            "Attribute_Definitions",
            "Catalog_Contents_Additional_Attributes",
            "Catalog_Structure"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "parent",
            "entry",
            "id",
            "from",
            "catalog",
            "contents",
            "when",
            "height",
            "equals",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "parent_entry_id",
            "FROM",
            "Catalog_Contents",
            "WHERE",
            "height",
            "=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "parent_entry_id",
            "from",
            "catalog_contents",
            "where",
            "height",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__catalog_contents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__catalog_contents.parent_entry_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__catalog_contents.height__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "product_catalog",
        "query": "SELECT date_of_latest_revision FROM Catalogs WHERE catalog_name = 'Latte';",
        "question": "Select date of latest revision from catalogs when catalog name equals Latte",
        "tables": [
            "Catalog_Contents",
            "Catalogs",
            "Attribute_Definitions",
            "Catalog_Contents_Additional_Attributes",
            "Catalog_Structure"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "date",
            "of",
            "latest",
            "revision",
            "from",
            "catalogs",
            "when",
            "catalog",
            "name",
            "equals",
            "Latte"
        ],
        "query_toks": [
            "SELECT",
            "date_of_latest_revision",
            "FROM",
            "Catalogs",
            "WHERE",
            "catalog_name",
            "=",
            "'Latte'"
        ],
        "query_toks_no_value": [
            "select",
            "date_of_latest_revision",
            "from",
            "catalogs",
            "where",
            "catalog_name",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__catalogs__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__catalogs.date_of_latest_revision__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__catalogs.catalog_name__",
                            false
                        ],
                        null
                    ],
                    "\"Latte\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "product_catalog",
        "query": "SELECT catalog_publisher FROM Catalogs WHERE catalog_id = 4;",
        "question": "Select catalog publisher from catalogs when catalog id equals 4",
        "tables": [
            "Catalog_Contents",
            "Catalogs",
            "Attribute_Definitions",
            "Catalog_Contents_Additional_Attributes",
            "Catalog_Structure"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "catalog",
            "publisher",
            "from",
            "catalogs",
            "when",
            "catalog",
            "id",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "catalog_publisher",
            "FROM",
            "Catalogs",
            "WHERE",
            "catalog_id",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "catalog_publisher",
            "from",
            "catalogs",
            "where",
            "catalog_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__catalogs__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__catalogs.catalog_publisher__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__catalogs.catalog_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "product_catalog",
        "query": "SELECT attribute_name FROM Attribute_Definitions WHERE attribute_id = '4';",
        "question": "Select attribute name from attribute definitions when attribute id equals 4",
        "tables": [
            "Catalog_Contents",
            "Catalogs",
            "Attribute_Definitions",
            "Catalog_Contents_Additional_Attributes",
            "Catalog_Structure"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "attribute",
            "name",
            "from",
            "attribute",
            "definitions",
            "when",
            "attribute",
            "id",
            "equals",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "attribute_name",
            "FROM",
            "Attribute_Definitions",
            "WHERE",
            "attribute_id",
            "=",
            "'4'"
        ],
        "query_toks_no_value": [
            "select",
            "attribute_name",
            "from",
            "attribute_definitions",
            "where",
            "attribute_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__attribute_definitions__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__attribute_definitions.attribute_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__attribute_definitions.attribute_id__",
                            false
                        ],
                        null
                    ],
                    "\"4\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "product_catalog",
        "query": "SELECT attribute_name FROM Attribute_Definitions WHERE attribute_id = 2;",
        "question": "Select attribute name from attribute definitions when attribute id equals 2",
        "tables": [
            "Catalog_Contents",
            "Catalogs",
            "Attribute_Definitions",
            "Catalog_Contents_Additional_Attributes",
            "Catalog_Structure"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "attribute",
            "name",
            "from",
            "attribute",
            "definitions",
            "when",
            "attribute",
            "id",
            "equals",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "attribute_name",
            "FROM",
            "Attribute_Definitions",
            "WHERE",
            "attribute_id",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "attribute_name",
            "from",
            "attribute_definitions",
            "where",
            "attribute_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__attribute_definitions__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__attribute_definitions.attribute_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__attribute_definitions.attribute_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "product_catalog",
        "query": "SELECT catalog_entry_id FROM Catalog_Contents_Additional_Attributes WHERE attribute_id = '3';",
        "question": "Select catalog entry id from catalog contents additional attributes when attribute id equals 3",
        "tables": [
            "Catalog_Contents",
            "Catalogs",
            "Attribute_Definitions",
            "Catalog_Contents_Additional_Attributes",
            "Catalog_Structure"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "catalog",
            "entry",
            "id",
            "from",
            "catalog",
            "contents",
            "additional",
            "attributes",
            "when",
            "attribute",
            "id",
            "equals",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "catalog_entry_id",
            "FROM",
            "Catalog_Contents_Additional_Attributes",
            "WHERE",
            "attribute_id",
            "=",
            "'3'"
        ],
        "query_toks_no_value": [
            "select",
            "catalog_entry_id",
            "from",
            "catalog_contents_additional_attributes",
            "where",
            "attribute_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__catalog_contents_additional_attributes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__catalog_contents_additional_attributes.catalog_entry_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__catalog_contents_additional_attributes.attribute_id__",
                            false
                        ],
                        null
                    ],
                    "\"3\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "product_catalog",
        "query": "SELECT attribute_value FROM Catalog_Contents_Additional_Attributes WHERE catalog_entry_id = 6;",
        "question": "Select attribute value from catalog contents additional attributes when catalog entry id equals 6",
        "tables": [
            "Catalog_Contents",
            "Catalogs",
            "Attribute_Definitions",
            "Catalog_Contents_Additional_Attributes",
            "Catalog_Structure"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "attribute",
            "value",
            "from",
            "catalog",
            "contents",
            "additional",
            "attributes",
            "when",
            "catalog",
            "entry",
            "id",
            "equals",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "attribute_value",
            "FROM",
            "Catalog_Contents_Additional_Attributes",
            "WHERE",
            "catalog_entry_id",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "attribute_value",
            "from",
            "catalog_contents_additional_attributes",
            "where",
            "catalog_entry_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__catalog_contents_additional_attributes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__catalog_contents_additional_attributes.attribute_value__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__catalog_contents_additional_attributes.catalog_entry_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "product_catalog",
        "query": "SELECT catalog_level_number FROM Catalog_Structure WHERE catalog_id = '1';",
        "question": "Select catalog level number from catalog structure when catalog id equals 1",
        "tables": [
            "Catalog_Contents",
            "Catalogs",
            "Attribute_Definitions",
            "Catalog_Contents_Additional_Attributes",
            "Catalog_Structure"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "catalog",
            "level",
            "number",
            "from",
            "catalog",
            "structure",
            "when",
            "catalog",
            "id",
            "equals",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "catalog_level_number",
            "FROM",
            "Catalog_Structure",
            "WHERE",
            "catalog_id",
            "=",
            "'1'"
        ],
        "query_toks_no_value": [
            "select",
            "catalog_level_number",
            "from",
            "catalog_structure",
            "where",
            "catalog_id",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__catalog_structure__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__catalog_structure.catalog_level_number__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__catalog_structure.catalog_id__",
                            false
                        ],
                        null
                    ],
                    "\"1\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "product_catalog",
        "query": "SELECT * FROM Catalog_Structure WHERE catalog_level_number = 8;",
        "question": "Select all columns from catalog structure when catalog level number equals 8",
        "tables": [
            "Catalog_Contents",
            "Catalogs",
            "Attribute_Definitions",
            "Catalog_Contents_Additional_Attributes",
            "Catalog_Structure"
        ],
        "rule": "where",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "catalog",
            "structure",
            "when",
            "catalog",
            "level",
            "number",
            "equals",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Catalog_Structure",
            "WHERE",
            "catalog_level_number",
            "=",
            "8"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "catalog_structure",
            "where",
            "catalog_level_number",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__catalog_structure__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            "__catalog_structure.catalog_level_number__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    }
]