[
    {
        "db_id": "perpetrator",
        "query": "SELECT Name FROM people GROUP BY Name HAVING MAX(People_ID) = 2;",
        "question": "Select name from people grouped by name with maximum people id equal to 2",
        "tables": [
            "people",
            "perpetrator"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "people",
            "grouped",
            "by",
            "name",
            "with",
            "maximum",
            "people",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "people",
            "GROUP",
            "BY",
            "Name",
            "HAVING",
            "MAX",
            "(",
            "People_ID",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "people",
            "group",
            "by",
            "name",
            "having",
            "max",
            "(",
            "people_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__people__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__people.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__people.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__people.people_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "perpetrator",
        "query": "SELECT Date FROM perpetrator GROUP BY Date HAVING MAX(People_ID) = 4;",
        "question": "Select date from perpetrator grouped by date with maximum people id equal to 4",
        "tables": [
            "people",
            "perpetrator"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "date",
            "from",
            "perpetrator",
            "grouped",
            "by",
            "date",
            "with",
            "maximum",
            "people",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Date",
            "FROM",
            "perpetrator",
            "GROUP",
            "BY",
            "Date",
            "HAVING",
            "MAX",
            "(",
            "People_ID",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "date",
            "from",
            "perpetrator",
            "group",
            "by",
            "date",
            "having",
            "max",
            "(",
            "people_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__perpetrator__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__perpetrator.date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__perpetrator.date__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__perpetrator.people_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT building FROM department GROUP BY building HAVING MIN(budget) = 406557.93;",
        "question": "Select building from department grouped by building with minimum budget equal to 406557.93",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "building",
            "from",
            "department",
            "grouped",
            "by",
            "building",
            "with",
            "minimum",
            "budget",
            "equal",
            "to",
            "406557.93"
        ],
        "query_toks": [
            "SELECT",
            "building",
            "FROM",
            "department",
            "GROUP",
            "BY",
            "building",
            "HAVING",
            "MIN",
            "(",
            "budget",
            ")",
            "=",
            "406557.93"
        ],
        "query_toks_no_value": [
            "select",
            "building",
            "from",
            "department",
            "group",
            "by",
            "building",
            "having",
            "min",
            "(",
            "budget",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__department__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__department.building__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__department.building__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__department.budget__",
                            false
                        ],
                        null
                    ],
                    406557.93,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT ID FROM student GROUP BY ID HAVING MAX(tot_cred) = 99;",
        "question": "Select id from student grouped by id with maximum total credits equal to 99",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "id",
            "from",
            "student",
            "grouped",
            "by",
            "id",
            "with",
            "maximum",
            "total",
            "credits",
            "equal",
            "to",
            "99"
        ],
        "query_toks": [
            "SELECT",
            "ID",
            "FROM",
            "student",
            "GROUP",
            "BY",
            "ID",
            "HAVING",
            "MAX",
            "(",
            "tot_cred",
            ")",
            "=",
            "99"
        ],
        "query_toks_no_value": [
            "select",
            "id",
            "from",
            "student",
            "group",
            "by",
            "id",
            "having",
            "max",
            "(",
            "tot_cred",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__student.id__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__student.tot_cred__",
                            false
                        ],
                        null
                    ],
                    99.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT building FROM classroom GROUP BY building HAVING MAX(capacity) = 15;",
        "question": "Select building from classroom grouped by building with maximum capacity equal to 15",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "building",
            "from",
            "classroom",
            "grouped",
            "by",
            "building",
            "with",
            "maximum",
            "capacity",
            "equal",
            "to",
            "15"
        ],
        "query_toks": [
            "SELECT",
            "building",
            "FROM",
            "classroom",
            "GROUP",
            "BY",
            "building",
            "HAVING",
            "MAX",
            "(",
            "capacity",
            ")",
            "=",
            "15"
        ],
        "query_toks_no_value": [
            "select",
            "building",
            "from",
            "classroom",
            "group",
            "by",
            "building",
            "having",
            "max",
            "(",
            "capacity",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__classroom__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__classroom.building__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__classroom.building__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__classroom.capacity__",
                            false
                        ],
                        null
                    ],
                    15.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT ID FROM teaches GROUP BY ID HAVING MAX(year) = 2006;",
        "question": "Select id from teaches grouped by id with maximum year equal to 2006",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "id",
            "from",
            "teaches",
            "grouped",
            "by",
            "id",
            "with",
            "maximum",
            "year",
            "equal",
            "to",
            "2006"
        ],
        "query_toks": [
            "SELECT",
            "ID",
            "FROM",
            "teaches",
            "GROUP",
            "BY",
            "ID",
            "HAVING",
            "MAX",
            "(",
            "year",
            ")",
            "=",
            "2006"
        ],
        "query_toks_no_value": [
            "select",
            "id",
            "from",
            "teaches",
            "group",
            "by",
            "id",
            "having",
            "max",
            "(",
            "year",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__teaches__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__teaches.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__teaches.id__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__teaches.year__",
                            false
                        ],
                        null
                    ],
                    2006.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT ID FROM takes GROUP BY ID HAVING MIN(year) = 2002;",
        "question": "Select id from takes classes grouped by id with minimum year equal to 2002",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "id",
            "from",
            "takes",
            "classes",
            "grouped",
            "by",
            "id",
            "with",
            "minimum",
            "year",
            "equal",
            "to",
            "2002"
        ],
        "query_toks": [
            "SELECT",
            "ID",
            "FROM",
            "takes",
            "GROUP",
            "BY",
            "ID",
            "HAVING",
            "MIN",
            "(",
            "year",
            ")",
            "=",
            "2002"
        ],
        "query_toks_no_value": [
            "select",
            "id",
            "from",
            "takes",
            "group",
            "by",
            "id",
            "having",
            "min",
            "(",
            "year",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__takes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__takes.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__takes.id__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__takes.year__",
                            false
                        ],
                        null
                    ],
                    2002.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT room_number FROM section GROUP BY room_number HAVING MIN(year) = 2003;",
        "question": "Select room number from section grouped by room number with minimum year equal to 2003",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "room",
            "number",
            "from",
            "section",
            "grouped",
            "by",
            "room",
            "number",
            "with",
            "minimum",
            "year",
            "equal",
            "to",
            "2003"
        ],
        "query_toks": [
            "SELECT",
            "room_number",
            "FROM",
            "section",
            "GROUP",
            "BY",
            "room_number",
            "HAVING",
            "MIN",
            "(",
            "year",
            ")",
            "=",
            "2003"
        ],
        "query_toks_no_value": [
            "select",
            "room_number",
            "from",
            "section",
            "group",
            "by",
            "room_number",
            "having",
            "min",
            "(",
            "year",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__section__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__section.room_number__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__section.room_number__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__section.year__",
                            false
                        ],
                        null
                    ],
                    2003.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT dept_name FROM instructor GROUP BY dept_name HAVING MAX(salary) = 80797.83;",
        "question": "Select department name from instructor grouped by department name with maximum salary equal to 80797.83",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "department",
            "name",
            "from",
            "instructor",
            "grouped",
            "by",
            "department",
            "name",
            "with",
            "maximum",
            "salary",
            "equal",
            "to",
            "80797.83"
        ],
        "query_toks": [
            "SELECT",
            "dept_name",
            "FROM",
            "instructor",
            "GROUP",
            "BY",
            "dept_name",
            "HAVING",
            "MAX",
            "(",
            "salary",
            ")",
            "=",
            "80797.83"
        ],
        "query_toks_no_value": [
            "select",
            "dept_name",
            "from",
            "instructor",
            "group",
            "by",
            "dept_name",
            "having",
            "max",
            "(",
            "salary",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__instructor__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__instructor.dept_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__instructor.dept_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__instructor.salary__",
                            false
                        ],
                        null
                    ],
                    80797.83,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT title FROM course GROUP BY title HAVING MIN(credits) = 3;",
        "question": "Select title from course grouped by title with minimum credits equal to 3",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "title",
            "from",
            "course",
            "grouped",
            "by",
            "title",
            "with",
            "minimum",
            "credits",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "title",
            "FROM",
            "course",
            "GROUP",
            "BY",
            "title",
            "HAVING",
            "MIN",
            "(",
            "credits",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "course",
            "group",
            "by",
            "title",
            "having",
            "min",
            "(",
            "credits",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__course__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__course.title__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__course.title__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__course.credits__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT time_slot_id FROM time_slot GROUP BY time_slot_id HAVING MAX(start_min) = 0;",
        "question": "Select time slot id from time slot grouped by time slot id with maximum start minute equal to 0",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "time",
            "slot",
            "id",
            "from",
            "time",
            "slot",
            "grouped",
            "by",
            "time",
            "slot",
            "id",
            "with",
            "maximum",
            "start",
            "minute",
            "equal",
            "to",
            "0"
        ],
        "query_toks": [
            "SELECT",
            "time_slot_id",
            "FROM",
            "time_slot",
            "GROUP",
            "BY",
            "time_slot_id",
            "HAVING",
            "MAX",
            "(",
            "start_min",
            ")",
            "=",
            "0"
        ],
        "query_toks_no_value": [
            "select",
            "time_slot_id",
            "from",
            "time_slot",
            "group",
            "by",
            "time_slot_id",
            "having",
            "max",
            "(",
            "start_min",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__time_slot__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__time_slot.time_slot_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__time_slot.time_slot_id__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__time_slot.start_min__",
                            false
                        ],
                        null
                    ],
                    0.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_company",
        "query": "SELECT IATA FROM airport GROUP BY IATA HAVING MIN(id) = 4;",
        "question": "Select iata from airport grouped by iata with minimum id equal to 4",
        "tables": [
            "airport",
            "operate_company",
            "flight"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "iata",
            "from",
            "airport",
            "grouped",
            "by",
            "iata",
            "with",
            "minimum",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "IATA",
            "FROM",
            "airport",
            "GROUP",
            "BY",
            "IATA",
            "HAVING",
            "MIN",
            "(",
            "id",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "iata",
            "from",
            "airport",
            "group",
            "by",
            "iata",
            "having",
            "min",
            "(",
            "id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__airport__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__airport.iata__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__airport.iata__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__airport.id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_company",
        "query": "SELECT Incorporated_in FROM operate_company GROUP BY Incorporated_in HAVING MAX(id) = 7;",
        "question": "Select incorporated in from operate company grouped by incorporated in with maximum id equal to 7",
        "tables": [
            "airport",
            "operate_company",
            "flight"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "incorporated",
            "in",
            "from",
            "operate",
            "company",
            "grouped",
            "by",
            "incorporated",
            "in",
            "with",
            "maximum",
            "id",
            "equal",
            "to",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "Incorporated_in",
            "FROM",
            "operate_company",
            "GROUP",
            "BY",
            "Incorporated_in",
            "HAVING",
            "MAX",
            "(",
            "id",
            ")",
            "=",
            "7"
        ],
        "query_toks_no_value": [
            "select",
            "incorporated_in",
            "from",
            "operate_company",
            "group",
            "by",
            "incorporated_in",
            "having",
            "max",
            "(",
            "id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__operate_company__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__operate_company.incorporated_in__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__operate_company.incorporated_in__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__operate_company.id__",
                            false
                        ],
                        null
                    ],
                    7.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_company",
        "query": "SELECT Date FROM flight GROUP BY Date HAVING MIN(airport_id) = 4;",
        "question": "Select date from flight grouped by date with minimum airport id equal to 4",
        "tables": [
            "airport",
            "operate_company",
            "flight"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "date",
            "from",
            "flight",
            "grouped",
            "by",
            "date",
            "with",
            "minimum",
            "airport",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Date",
            "FROM",
            "flight",
            "GROUP",
            "BY",
            "Date",
            "HAVING",
            "MIN",
            "(",
            "airport_id",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "date",
            "from",
            "flight",
            "group",
            "by",
            "date",
            "having",
            "min",
            "(",
            "airport_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__flight__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__flight.date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__flight.date__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__flight.airport_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "icfp_1",
        "query": "SELECT title FROM Papers GROUP BY title HAVING MIN(paperID) = 200;",
        "question": "Select title from papers grouped by title with minimum paper id equal to 200",
        "tables": [
            "Authorship",
            "Papers",
            "Inst",
            "Authors"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "title",
            "from",
            "papers",
            "grouped",
            "by",
            "title",
            "with",
            "minimum",
            "paper",
            "id",
            "equal",
            "to",
            "200"
        ],
        "query_toks": [
            "SELECT",
            "title",
            "FROM",
            "Papers",
            "GROUP",
            "BY",
            "title",
            "HAVING",
            "MIN",
            "(",
            "paperID",
            ")",
            "=",
            "200"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "papers",
            "group",
            "by",
            "title",
            "having",
            "min",
            "(",
            "paperid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__papers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__papers.title__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__papers.title__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__papers.paperid__",
                            false
                        ],
                        null
                    ],
                    200.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "icfp_1",
        "query": "SELECT country FROM Inst GROUP BY country HAVING MAX(instID) = 1010;",
        "question": "Select country from institution grouped by country with maximum institution id equal to 1010",
        "tables": [
            "Authorship",
            "Papers",
            "Inst",
            "Authors"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "country",
            "from",
            "institution",
            "grouped",
            "by",
            "country",
            "with",
            "maximum",
            "institution",
            "id",
            "equal",
            "to",
            "1010"
        ],
        "query_toks": [
            "SELECT",
            "countr",
            "(",
            "countr",
            ")",
            "FROM",
            "Inst",
            "GROUP",
            "BY",
            "countr",
            "(",
            "countr",
            ")",
            "HAVING",
            "MAX",
            "(",
            "instID",
            ")",
            "=",
            "1010"
        ],
        "query_toks_no_value": [
            "select",
            "countr",
            "(",
            "countr",
            ")",
            "from",
            "inst",
            "group",
            "by",
            "countr",
            "(",
            "countr",
            ")",
            "having",
            "max",
            "(",
            "instid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__inst__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__inst.country__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__inst.country__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__inst.instid__",
                            false
                        ],
                        null
                    ],
                    1010.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "icfp_1",
        "query": "SELECT lname FROM Authors GROUP BY lname HAVING MAX(authID) = 56;",
        "question": "Select last name from authors grouped by last name with maximum author id equal to 56",
        "tables": [
            "Authorship",
            "Papers",
            "Inst",
            "Authors"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "last",
            "name",
            "from",
            "authors",
            "grouped",
            "by",
            "last",
            "name",
            "with",
            "maximum",
            "author",
            "id",
            "equal",
            "to",
            "56"
        ],
        "query_toks": [
            "SELECT",
            "lname",
            "FROM",
            "Authors",
            "GROUP",
            "BY",
            "lname",
            "HAVING",
            "MAX",
            "(",
            "authID",
            ")",
            "=",
            "56"
        ],
        "query_toks_no_value": [
            "select",
            "lname",
            "from",
            "authors",
            "group",
            "by",
            "lname",
            "having",
            "max",
            "(",
            "authid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__authors__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__authors.lname__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__authors.lname__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__authors.authid__",
                            false
                        ],
                        null
                    ],
                    56.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "body_builder",
        "query": "SELECT Birth_Place FROM people GROUP BY Birth_Place HAVING MAX(Height) = 205.0;",
        "question": "Select birth place from people grouped by birth place with maximum height equal to 205.0",
        "tables": [
            "people",
            "body_builder"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "birth",
            "place",
            "from",
            "people",
            "grouped",
            "by",
            "birth",
            "place",
            "with",
            "maximum",
            "height",
            "equal",
            "to",
            "205.0"
        ],
        "query_toks": [
            "SELECT",
            "Birth_Place",
            "FROM",
            "people",
            "GROUP",
            "BY",
            "Birth_Place",
            "HAVING",
            "MAX",
            "(",
            "Height",
            ")",
            "=",
            "205.0"
        ],
        "query_toks_no_value": [
            "select",
            "birth_place",
            "from",
            "people",
            "group",
            "by",
            "birth_place",
            "having",
            "max",
            "(",
            "height",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__people__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__people.birth_place__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__people.birth_place__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__people.height__",
                            false
                        ],
                        null
                    ],
                    205.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "storm_record",
        "query": "SELECT Dates_active FROM storm GROUP BY Dates_active HAVING MIN(Damage_millions_USD) = 0.039;",
        "question": "Select dates active from storm grouped by dates active with minimum damage millions usd equal to 0.039",
        "tables": [
            "storm",
            "affected_region",
            "region"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "dates",
            "active",
            "from",
            "storm",
            "grouped",
            "by",
            "dates",
            "active",
            "with",
            "minimum",
            "damage",
            "millions",
            "usd",
            "equal",
            "to",
            "0.039"
        ],
        "query_toks": [
            "SELECT",
            "Dates_active",
            "FROM",
            "storm",
            "GROUP",
            "BY",
            "Dates_active",
            "HAVING",
            "MIN",
            "(",
            "Damage_millions_USD",
            ")",
            "=",
            "0.039"
        ],
        "query_toks_no_value": [
            "select",
            "dates_active",
            "from",
            "storm",
            "group",
            "by",
            "dates_active",
            "having",
            "min",
            "(",
            "damage_millions_usd",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__storm__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__storm.dates_active__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__storm.dates_active__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__storm.damage_millions_usd__",
                            false
                        ],
                        null
                    ],
                    0.039,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "storm_record",
        "query": "SELECT Region_code FROM region GROUP BY Region_code HAVING MIN(Region_id) = 13;",
        "question": "Select region code from region grouped by region code with minimum region id equal to 13",
        "tables": [
            "storm",
            "affected_region",
            "region"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "region",
            "code",
            "from",
            "region",
            "grouped",
            "by",
            "region",
            "code",
            "with",
            "minimum",
            "region",
            "id",
            "equal",
            "to",
            "13"
        ],
        "query_toks": [
            "SELECT",
            "Region_code",
            "FROM",
            "region",
            "GROUP",
            "BY",
            "Region_code",
            "HAVING",
            "MIN",
            "(",
            "Region_id",
            ")",
            "=",
            "13"
        ],
        "query_toks_no_value": [
            "select",
            "region_code",
            "from",
            "region",
            "group",
            "by",
            "region_code",
            "having",
            "min",
            "(",
            "region_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__region__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__region.region_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__region.region_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__region.region_id__",
                            false
                        ],
                        null
                    ],
                    13.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pilot_record",
        "query": "SELECT Nationality FROM pilot GROUP BY Nationality HAVING MAX(Pilot_ID) = 1;",
        "question": "Select nationality from pilot grouped by nationality with maximum pilot id equal to 1",
        "tables": [
            "pilot",
            "aircraft",
            "pilot_record"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "nationality",
            "from",
            "pilot",
            "grouped",
            "by",
            "nationality",
            "with",
            "maximum",
            "pilot",
            "id",
            "equal",
            "to",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Nationality",
            "FROM",
            "pilot",
            "GROUP",
            "BY",
            "Nationality",
            "HAVING",
            "MAX",
            "(",
            "Pilot_ID",
            ")",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "nationality",
            "from",
            "pilot",
            "group",
            "by",
            "nationality",
            "having",
            "max",
            "(",
            "pilot_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__pilot__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__pilot.nationality__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__pilot.nationality__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__pilot.pilot_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pilot_record",
        "query": "SELECT Model FROM aircraft GROUP BY Model HAVING MAX(Order_Year) = 2000;",
        "question": "Select model from aircraft grouped by model with maximum order year equal to 2000",
        "tables": [
            "pilot",
            "aircraft",
            "pilot_record"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "model",
            "from",
            "aircraft",
            "grouped",
            "by",
            "model",
            "with",
            "maximum",
            "order",
            "year",
            "equal",
            "to",
            "2000"
        ],
        "query_toks": [
            "SELECT",
            "Model",
            "FROM",
            "aircraft",
            "GROUP",
            "BY",
            "Model",
            "HAVING",
            "MAX",
            "(",
            "Order_Year",
            ")",
            "=",
            "2000"
        ],
        "query_toks_no_value": [
            "select",
            "model",
            "from",
            "aircraft",
            "group",
            "by",
            "model",
            "having",
            "max",
            "(",
            "order_year",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__aircraft__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__aircraft.model__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__aircraft.model__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__aircraft.order_year__",
                            false
                        ],
                        null
                    ],
                    2000.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pilot_record",
        "query": "SELECT Date FROM pilot_record GROUP BY Date HAVING MAX(Record_ID) = 6;",
        "question": "Select date from pilot record grouped by date with maximum record id equal to 6",
        "tables": [
            "pilot",
            "aircraft",
            "pilot_record"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "date",
            "from",
            "pilot",
            "record",
            "grouped",
            "by",
            "date",
            "with",
            "maximum",
            "record",
            "id",
            "equal",
            "to",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "Date",
            "FROM",
            "pilot_record",
            "GROUP",
            "BY",
            "Date",
            "HAVING",
            "MAX",
            "(",
            "Record_ID",
            ")",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "date",
            "from",
            "pilot_record",
            "group",
            "by",
            "date",
            "having",
            "max",
            "(",
            "record_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__pilot_record__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__pilot_record.date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__pilot_record.date__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__pilot_record.record_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "race_track",
        "query": "SELECT Date FROM race GROUP BY Date HAVING MAX(Race_ID) = 2;",
        "question": "Select date from race grouped by date with maximum race id equal to 2",
        "tables": [
            "race",
            "track"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "date",
            "from",
            "race",
            "grouped",
            "by",
            "date",
            "with",
            "maximum",
            "race",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Date",
            "FROM",
            "race",
            "GROUP",
            "BY",
            "Date",
            "HAVING",
            "MAX",
            "(",
            "Race_ID",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "date",
            "from",
            "race",
            "group",
            "by",
            "date",
            "having",
            "max",
            "(",
            "race_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__race__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__race.date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__race.date__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__race.race_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "race_track",
        "query": "SELECT Name FROM track GROUP BY Name HAVING MAX(Seating) = 75000.0;",
        "question": "Select name from track grouped by name with maximum seating equal to 75000.0",
        "tables": [
            "race",
            "track"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "track",
            "grouped",
            "by",
            "name",
            "with",
            "maximum",
            "seating",
            "equal",
            "to",
            "75000.0"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "track",
            "GROUP",
            "BY",
            "Name",
            "HAVING",
            "MAX",
            "(",
            "Seating",
            ")",
            "=",
            "75000.0"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "track",
            "group",
            "by",
            "name",
            "having",
            "max",
            "(",
            "seating",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__track__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__track.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__track.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__track.seating__",
                            false
                        ],
                        null
                    ],
                    75000.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT staff_name FROM Staff GROUP BY staff_name HAVING MAX(staff_id) = 10;",
        "question": "Select staff name from staff grouped by staff name with maximum staff id equal to 10",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "staff",
            "name",
            "from",
            "staff",
            "grouped",
            "by",
            "staff",
            "name",
            "with",
            "maximum",
            "staff",
            "id",
            "equal",
            "to",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "staff_name",
            "FROM",
            "Staff",
            "GROUP",
            "BY",
            "staff_name",
            "HAVING",
            "MAX",
            "(",
            "staff_id",
            ")",
            "=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "staff_name",
            "from",
            "staff",
            "group",
            "by",
            "staff_name",
            "having",
            "max",
            "(",
            "staff_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__staff__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__staff.staff_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__staff.staff_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__staff.staff_id__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT product_name FROM Products GROUP BY product_name HAVING MAX(product_id) = 3;",
        "question": "Select product name from products grouped by product name with maximum product id equal to 3",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "product",
            "name",
            "from",
            "products",
            "grouped",
            "by",
            "product",
            "name",
            "with",
            "maximum",
            "product",
            "id",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "product_name",
            "FROM",
            "Products",
            "GROUP",
            "BY",
            "product_name",
            "HAVING",
            "MAX",
            "(",
            "product_id",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "product_name",
            "from",
            "products",
            "group",
            "by",
            "product_name",
            "having",
            "max",
            "(",
            "product_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products.product_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__products.product_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__products.product_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT supplier_phone FROM Suppliers GROUP BY supplier_phone HAVING MIN(supplier_id) = 2;",
        "question": "Select supplier phone from suppliers grouped by supplier phone with minimum supplier id equal to 2",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "supplier",
            "phone",
            "from",
            "suppliers",
            "grouped",
            "by",
            "supplier",
            "phone",
            "with",
            "minimum",
            "supplier",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "supplier_phone",
            "FROM",
            "Suppliers",
            "GROUP",
            "BY",
            "supplier_phone",
            "HAVING",
            "MIN",
            "(",
            "supplier_id",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "supplier_phone",
            "from",
            "suppliers",
            "group",
            "by",
            "supplier_phone",
            "having",
            "min",
            "(",
            "supplier_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__suppliers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__suppliers.supplier_phone__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__suppliers.supplier_phone__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__suppliers.supplier_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT job_title_code FROM Staff_Department_Assignments GROUP BY job_title_code HAVING MAX(department_id) = 3;",
        "question": "Select job title code from staff department assignments grouped by job title code with maximum department id equal to 3",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "job",
            "title",
            "code",
            "from",
            "staff",
            "department",
            "assignments",
            "grouped",
            "by",
            "job",
            "title",
            "code",
            "with",
            "maximum",
            "department",
            "id",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "job_title_code",
            "FROM",
            "Staff_Department_Assignments",
            "GROUP",
            "BY",
            "job_title_code",
            "HAVING",
            "MAX",
            "(",
            "department_id",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "job_title_code",
            "from",
            "staff_department_assignments",
            "group",
            "by",
            "job_title_code",
            "having",
            "max",
            "(",
            "department_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__staff_department_assignments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__staff_department_assignments.job_title_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__staff_department_assignments.job_title_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__staff_department_assignments.department_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT address_details FROM Addresses GROUP BY address_details HAVING MIN(address_id) = 1;",
        "question": "Select address details from addresses grouped by address details with minimum address id equal to 1",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "address",
            "details",
            "from",
            "addresses",
            "grouped",
            "by",
            "address",
            "details",
            "with",
            "minimum",
            "address",
            "id",
            "equal",
            "to",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "address_details",
            "FROM",
            "Addresses",
            "GROUP",
            "BY",
            "address_details",
            "HAVING",
            "MIN",
            "(",
            "address_id",
            ")",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "address_details",
            "from",
            "addresses",
            "group",
            "by",
            "address_details",
            "having",
            "min",
            "(",
            "address_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__addresses.address_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__addresses.address_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__addresses.address_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT order_status_code FROM Customer_Orders GROUP BY order_status_code HAVING MAX(order_id) = 12;",
        "question": "Select order status code from customer orders grouped by order status code with maximum order id equal to 12",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "order",
            "status",
            "code",
            "from",
            "customer",
            "orders",
            "grouped",
            "by",
            "order",
            "status",
            "code",
            "with",
            "maximum",
            "order",
            "id",
            "equal",
            "to",
            "12"
        ],
        "query_toks": [
            "SELECT",
            "order_status_code",
            "FROM",
            "Customer_Orders",
            "GROUP",
            "BY",
            "order_status_code",
            "HAVING",
            "MAX",
            "(",
            "order_id",
            ")",
            "=",
            "12"
        ],
        "query_toks_no_value": [
            "select",
            "order_status_code",
            "from",
            "customer_orders",
            "group",
            "by",
            "order_status_code",
            "having",
            "max",
            "(",
            "order_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_orders__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_orders.order_status_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customer_orders.order_status_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__customer_orders.order_id__",
                            false
                        ],
                        null
                    ],
                    12.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT store_phone FROM Department_Stores GROUP BY store_phone HAVING MIN(dept_store_chain_id) = 4;",
        "question": "Select store phone from department stores grouped by store phone with minimum department store chain id equal to 4",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "store",
            "phone",
            "from",
            "department",
            "stores",
            "grouped",
            "by",
            "store",
            "phone",
            "with",
            "minimum",
            "department",
            "store",
            "chain",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "store_phone",
            "FROM",
            "Department_Stores",
            "GROUP",
            "BY",
            "store_phone",
            "HAVING",
            "MIN",
            "(",
            "dept_store_chain_id",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "store_phone",
            "from",
            "department_stores",
            "group",
            "by",
            "store_phone",
            "having",
            "min",
            "(",
            "dept_store_chain_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__department_stores__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__department_stores.store_phone__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__department_stores.store_phone__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__department_stores.dept_store_chain_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT department_name FROM Departments GROUP BY department_name HAVING MAX(dept_store_id) = 4;",
        "question": "Select department name from departments grouped by department name with maximum department store id equal to 4",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "department",
            "name",
            "from",
            "departments",
            "grouped",
            "by",
            "department",
            "name",
            "with",
            "maximum",
            "department",
            "store",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "department_name",
            "FROM",
            "Departments",
            "GROUP",
            "BY",
            "department_name",
            "HAVING",
            "MAX",
            "(",
            "dept_store_id",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "department_name",
            "from",
            "departments",
            "group",
            "by",
            "department_name",
            "having",
            "max",
            "(",
            "dept_store_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__departments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__departments.department_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__departments.department_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__departments.dept_store_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT customer_phone FROM Customers GROUP BY customer_phone HAVING MAX(customer_id) = 8;",
        "question": "Select customer phone from customers grouped by customer phone with maximum customer id equal to 8",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "customer",
            "phone",
            "from",
            "customers",
            "grouped",
            "by",
            "customer",
            "phone",
            "with",
            "maximum",
            "customer",
            "id",
            "equal",
            "to",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "customer_phone",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "customer_phone",
            "HAVING",
            "MAX",
            "(",
            "customer_id",
            ")",
            "=",
            "8"
        ],
        "query_toks_no_value": [
            "select",
            "customer_phone",
            "from",
            "customers",
            "group",
            "by",
            "customer_phone",
            "having",
            "max",
            "(",
            "customer_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_phone__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customers.customer_phone__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__customers.customer_id__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT dept_store_chain_name FROM Department_Store_Chain GROUP BY dept_store_chain_name HAVING MIN(dept_store_chain_id) = 1;",
        "question": "Select department store chain name from department store chain grouped by department store chain name with minimum department store chain id equal to 1",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "department",
            "store",
            "chain",
            "name",
            "from",
            "department",
            "store",
            "chain",
            "grouped",
            "by",
            "department",
            "store",
            "chain",
            "name",
            "with",
            "minimum",
            "department",
            "store",
            "chain",
            "id",
            "equal",
            "to",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "dept_store_chain_name",
            "FROM",
            "Department_Store_Chain",
            "GROUP",
            "BY",
            "dept_store_chain_name",
            "HAVING",
            "MIN",
            "(",
            "dept_store_chain_id",
            ")",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "dept_store_chain_name",
            "from",
            "department_store_chain",
            "group",
            "by",
            "dept_store_chain_name",
            "having",
            "min",
            "(",
            "dept_store_chain_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__department_store_chain__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__department_store_chain.dept_store_chain_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__department_store_chain.dept_store_chain_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__department_store_chain.dept_store_chain_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT total_amount_purchased FROM Product_Suppliers GROUP BY total_amount_purchased HAVING MAX(total_value_purchased) = 36014.6;",
        "question": "Select total amount purchased from product suppliers grouped by total amount purchased with maximum total value purchased equal to 36014.6",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "total",
            "amount",
            "purchased",
            "from",
            "product",
            "suppliers",
            "grouped",
            "by",
            "total",
            "amount",
            "purchased",
            "with",
            "maximum",
            "total",
            "value",
            "purchased",
            "equal",
            "to",
            "36014.6"
        ],
        "query_toks": [
            "SELECT",
            "total_amount_purchased",
            "FROM",
            "Product_Suppliers",
            "GROUP",
            "BY",
            "total_amount_purchased",
            "HAVING",
            "MAX",
            "(",
            "total_value_purchased",
            ")",
            "=",
            "36014.6"
        ],
        "query_toks_no_value": [
            "select",
            "total_amount_purchased",
            "from",
            "product_suppliers",
            "group",
            "by",
            "total_amount_purchased",
            "having",
            "max",
            "(",
            "total_value_purchased",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__product_suppliers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__product_suppliers.total_amount_purchased__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__product_suppliers.total_amount_purchased__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__product_suppliers.total_value_purchased__",
                            false
                        ],
                        null
                    ],
                    36014.6,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "music_4",
        "query": "SELECT Famous_Release_date FROM artist GROUP BY Famous_Release_date HAVING MAX(Age) = 34;",
        "question": "Select famous release date from artist grouped by famous release date with maximum age equal to 34",
        "tables": [
            "artist",
            "music_festival",
            "volume"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "famous",
            "release",
            "date",
            "from",
            "artist",
            "grouped",
            "by",
            "famous",
            "release",
            "date",
            "with",
            "maximum",
            "age",
            "equal",
            "to",
            "34"
        ],
        "query_toks": [
            "SELECT",
            "Famous_Release_date",
            "FROM",
            "artist",
            "GROUP",
            "BY",
            "Famous_Release_date",
            "HAVING",
            "MAX",
            "(",
            "Age",
            ")",
            "=",
            "34"
        ],
        "query_toks_no_value": [
            "select",
            "famous_release_date",
            "from",
            "artist",
            "group",
            "by",
            "famous_release_date",
            "having",
            "max",
            "(",
            "age",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__artist__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__artist.famous_release_date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__artist.famous_release_date__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__artist.age__",
                            false
                        ],
                        null
                    ],
                    34.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "music_4",
        "query": "SELECT Result FROM music_festival GROUP BY Result HAVING MIN(Volume) = 3;",
        "question": "Select result from music festival grouped by result with minimum volume equal to 3",
        "tables": [
            "artist",
            "music_festival",
            "volume"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "result",
            "from",
            "music",
            "festival",
            "grouped",
            "by",
            "result",
            "with",
            "minimum",
            "volume",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Result",
            "FROM",
            "music_festival",
            "GROUP",
            "BY",
            "Result",
            "HAVING",
            "MIN",
            "(",
            "Volume",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "result",
            "from",
            "music_festival",
            "group",
            "by",
            "result",
            "having",
            "min",
            "(",
            "volume",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__music_festival__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__music_festival.result__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__music_festival.result__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__music_festival.volume__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "music_4",
        "query": "SELECT Volume_Issue FROM volume GROUP BY Volume_Issue HAVING MAX(Weeks_on_Top) = 3.0;",
        "question": "Select volume issue from volume grouped by volume issue with maximum weeks on top equal to 3.0",
        "tables": [
            "artist",
            "music_festival",
            "volume"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "volume",
            "issue",
            "from",
            "volume",
            "grouped",
            "by",
            "volume",
            "issue",
            "with",
            "maximum",
            "weeks",
            "on",
            "top",
            "equal",
            "to",
            "3.0"
        ],
        "query_toks": [
            "SELECT",
            "Volume_Issue",
            "FROM",
            "volume",
            "GROUP",
            "BY",
            "Volume_Issue",
            "HAVING",
            "MAX",
            "(",
            "Weeks_on_Top",
            ")",
            "=",
            "3.0"
        ],
        "query_toks_no_value": [
            "select",
            "volume_issue",
            "from",
            "volume",
            "group",
            "by",
            "volume_issue",
            "having",
            "max",
            "(",
            "weeks_on_top",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__volume__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__volume.volume_issue__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__volume.volume_issue__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__volume.weeks_on_top__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_fnol",
        "query": "SELECT Service_name FROM Services GROUP BY Service_name HAVING MIN(Service_ID) = 1;",
        "question": "Select service name from services grouped by service name with minimum service id equal to 1",
        "tables": [
            "Settlements",
            "Claims",
            "Services",
            "First_Notification_of_Loss",
            "Customers_Policies",
            "Customers",
            "Available_Policies"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "service",
            "name",
            "from",
            "services",
            "grouped",
            "by",
            "service",
            "name",
            "with",
            "minimum",
            "service",
            "id",
            "equal",
            "to",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Service_name",
            "FROM",
            "Services",
            "GROUP",
            "BY",
            "Service_name",
            "HAVING",
            "MIN",
            "(",
            "Service_ID",
            ")",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "service_name",
            "from",
            "services",
            "group",
            "by",
            "service_name",
            "having",
            "min",
            "(",
            "service_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__services__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__services.service_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__services.service_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__services.service_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_fnol",
        "query": "SELECT Customer_name FROM Customers GROUP BY Customer_name HAVING MAX(Customer_ID) = 194;",
        "question": "Select customer name from customers grouped by customer name with maximum customer id equal to 194",
        "tables": [
            "Settlements",
            "Claims",
            "Services",
            "First_Notification_of_Loss",
            "Customers_Policies",
            "Customers",
            "Available_Policies"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "customer",
            "name",
            "from",
            "customers",
            "grouped",
            "by",
            "customer",
            "name",
            "with",
            "maximum",
            "customer",
            "id",
            "equal",
            "to",
            "194"
        ],
        "query_toks": [
            "SELECT",
            "Customer_name",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "Customer_name",
            "HAVING",
            "MAX",
            "(",
            "Customer_ID",
            ")",
            "=",
            "194"
        ],
        "query_toks_no_value": [
            "select",
            "customer_name",
            "from",
            "customers",
            "group",
            "by",
            "customer_name",
            "having",
            "max",
            "(",
            "customer_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customers.customer_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__customers.customer_id__",
                            false
                        ],
                        null
                    ],
                    194.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_fnol",
        "query": "SELECT policy_type_code FROM Available_Policies GROUP BY policy_type_code HAVING MIN(Policy_ID) = 366;",
        "question": "Select policy type code from available policies grouped by policy type code with minimum policy id equal to 366",
        "tables": [
            "Settlements",
            "Claims",
            "Services",
            "First_Notification_of_Loss",
            "Customers_Policies",
            "Customers",
            "Available_Policies"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "policy",
            "type",
            "code",
            "from",
            "available",
            "policies",
            "grouped",
            "by",
            "policy",
            "type",
            "code",
            "with",
            "minimum",
            "policy",
            "id",
            "equal",
            "to",
            "366"
        ],
        "query_toks": [
            "SELECT",
            "policy_type_code",
            "FROM",
            "Available_Policies",
            "GROUP",
            "BY",
            "policy_type_code",
            "HAVING",
            "MIN",
            "(",
            "Policy_ID",
            ")",
            "=",
            "366"
        ],
        "query_toks_no_value": [
            "select",
            "policy_type_code",
            "from",
            "available_policies",
            "group",
            "by",
            "policy_type_code",
            "having",
            "min",
            "(",
            "policy_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__available_policies__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__available_policies.policy_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__available_policies.policy_type_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__available_policies.policy_id__",
                            false
                        ],
                        null
                    ],
                    366.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cinema",
        "query": "SELECT Production_code FROM film GROUP BY Production_code HAVING MAX(Rank_in_series) = 30;",
        "question": "Select production code from film grouped by production code with maximum rank in series equal to 30",
        "tables": [
            "film",
            "cinema",
            "schedule"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "production",
            "code",
            "from",
            "film",
            "grouped",
            "by",
            "production",
            "code",
            "with",
            "maximum",
            "rank",
            "in",
            "series",
            "equal",
            "to",
            "30"
        ],
        "query_toks": [
            "SELECT",
            "Production_code",
            "FROM",
            "film",
            "GROUP",
            "BY",
            "Production_code",
            "HAVING",
            "MAX",
            "(",
            "Rank_in_series",
            ")",
            "=",
            "30"
        ],
        "query_toks_no_value": [
            "select",
            "production_code",
            "from",
            "film",
            "group",
            "by",
            "production_code",
            "having",
            "max",
            "(",
            "rank_in_series",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__film__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__film.production_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__film.production_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__film.rank_in_series__",
                            false
                        ],
                        null
                    ],
                    30.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cinema",
        "query": "SELECT Name FROM cinema GROUP BY Name HAVING MAX(Capacity) = 368;",
        "question": "Select name from cinema grouped by name with maximum capacity equal to 368",
        "tables": [
            "film",
            "cinema",
            "schedule"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "cinema",
            "grouped",
            "by",
            "name",
            "with",
            "maximum",
            "capacity",
            "equal",
            "to",
            "368"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "cinema",
            "GROUP",
            "BY",
            "Name",
            "HAVING",
            "MAX",
            "(",
            "Capacity",
            ")",
            "=",
            "368"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "cinema",
            "group",
            "by",
            "name",
            "having",
            "max",
            "(",
            "capacity",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__cinema__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__cinema.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__cinema.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__cinema.capacity__",
                            false
                        ],
                        null
                    ],
                    368.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cinema",
        "query": "SELECT Date FROM schedule GROUP BY Date HAVING MIN(Film_ID) = 3;",
        "question": "Select date from schedule grouped by date with minimum film id equal to 3",
        "tables": [
            "film",
            "cinema",
            "schedule"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "date",
            "from",
            "schedule",
            "grouped",
            "by",
            "date",
            "with",
            "minimum",
            "film",
            "id",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Date",
            "FROM",
            "schedule",
            "GROUP",
            "BY",
            "Date",
            "HAVING",
            "MIN",
            "(",
            "Film_ID",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "date",
            "from",
            "schedule",
            "group",
            "by",
            "date",
            "having",
            "min",
            "(",
            "film_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__schedule__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__schedule.date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__schedule.date__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__schedule.film_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "decoration_competition",
        "query": "SELECT Country FROM member GROUP BY Country HAVING MIN(Member_ID) = 5;",
        "question": "Select country from member grouped by country with minimum member id equal to 5",
        "tables": [
            "member",
            "round",
            "college"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "country",
            "from",
            "member",
            "grouped",
            "by",
            "country",
            "with",
            "minimum",
            "member",
            "id",
            "equal",
            "to",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "Countr",
            "(",
            "Countr",
            ")",
            "FROM",
            "member",
            "GROUP",
            "BY",
            "Countr",
            "(",
            "Countr",
            ")",
            "HAVING",
            "MIN",
            "(",
            "Member_ID",
            ")",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "countr",
            "(",
            "countr",
            ")",
            "from",
            "member",
            "group",
            "by",
            "countr",
            "(",
            "countr",
            ")",
            "having",
            "min",
            "(",
            "member_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__member__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__member.country__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__member.country__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__member.member_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "decoration_competition",
        "query": "SELECT Decoration_Theme FROM round GROUP BY Decoration_Theme HAVING MIN(Member_ID) = 6;",
        "question": "Select decoration theme from round grouped by decoration theme with minimum member id equal to 6",
        "tables": [
            "member",
            "round",
            "college"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "decoration",
            "theme",
            "from",
            "round",
            "grouped",
            "by",
            "decoration",
            "theme",
            "with",
            "minimum",
            "member",
            "id",
            "equal",
            "to",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "Decoration_Theme",
            "FROM",
            "round",
            "GROUP",
            "BY",
            "Decoration_Theme",
            "HAVING",
            "MIN",
            "(",
            "Member_ID",
            ")",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "decoration_theme",
            "from",
            "round",
            "group",
            "by",
            "decoration_theme",
            "having",
            "min",
            "(",
            "member_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__round__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__round.decoration_theme__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__round.decoration_theme__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__round.member_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "decoration_competition",
        "query": "SELECT Name FROM college GROUP BY Name HAVING MIN(College_ID) = 1;",
        "question": "Select name from college grouped by name with minimum college id equal to 1",
        "tables": [
            "member",
            "round",
            "college"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "college",
            "grouped",
            "by",
            "name",
            "with",
            "minimum",
            "college",
            "id",
            "equal",
            "to",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "college",
            "GROUP",
            "BY",
            "Name",
            "HAVING",
            "MIN",
            "(",
            "College_ID",
            ")",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "college",
            "group",
            "by",
            "name",
            "having",
            "min",
            "(",
            "college_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__college__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__college.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__college.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__college.college_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "phone_market",
        "query": "SELECT Phone_ID FROM phone_market GROUP BY Phone_ID HAVING MIN(Market_ID) = 6;",
        "question": "Select phone id from phone market grouped by phone id with minimum market id equal to 6",
        "tables": [
            "phone_market",
            "market",
            "phone"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "phone",
            "id",
            "from",
            "phone",
            "market",
            "grouped",
            "by",
            "phone",
            "id",
            "with",
            "minimum",
            "market",
            "id",
            "equal",
            "to",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "Phone_ID",
            "FROM",
            "phone_market",
            "GROUP",
            "BY",
            "Phone_ID",
            "HAVING",
            "MIN",
            "(",
            "Market_ID",
            ")",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "phone_id",
            "from",
            "phone_market",
            "group",
            "by",
            "phone_id",
            "having",
            "min",
            "(",
            "market_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__phone_market__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__phone_market.phone_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__phone_market.phone_id__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__phone_market.market_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "phone_market",
        "query": "SELECT District FROM market GROUP BY District HAVING MIN(Num_of_shops) = 54.0;",
        "question": "Select district from market grouped by district with minimum num of shops equal to 54.0",
        "tables": [
            "phone_market",
            "market",
            "phone"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "district",
            "from",
            "market",
            "grouped",
            "by",
            "district",
            "with",
            "minimum",
            "num",
            "of",
            "shops",
            "equal",
            "to",
            "54.0"
        ],
        "query_toks": [
            "SELECT",
            "District",
            "FROM",
            "market",
            "GROUP",
            "BY",
            "District",
            "HAVING",
            "MIN",
            "(",
            "Num_of_shops",
            ")",
            "=",
            "54.0"
        ],
        "query_toks_no_value": [
            "select",
            "district",
            "from",
            "market",
            "group",
            "by",
            "district",
            "having",
            "min",
            "(",
            "num_of_shops",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__market__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__market.district__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__market.district__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__market.num_of_shops__",
                            false
                        ],
                        null
                    ],
                    54.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "phone_market",
        "query": "SELECT Carrier FROM phone GROUP BY Carrier HAVING MAX(Phone_ID) = 4;",
        "question": "Select carrier from phone grouped by carrier with maximum phone id equal to 4",
        "tables": [
            "phone_market",
            "market",
            "phone"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "carrier",
            "from",
            "phone",
            "grouped",
            "by",
            "carrier",
            "with",
            "maximum",
            "phone",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Carrier",
            "FROM",
            "phone",
            "GROUP",
            "BY",
            "Carrier",
            "HAVING",
            "MAX",
            "(",
            "Phone_ID",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "carrier",
            "from",
            "phone",
            "group",
            "by",
            "carrier",
            "having",
            "max",
            "(",
            "phone_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__phone__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__phone.carrier__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__phone.carrier__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__phone.phone_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_product",
        "query": "SELECT max_page_size FROM product GROUP BY max_page_size HAVING MIN(dpi) = 600.0;",
        "question": "Select max page size from product grouped by max page size with minimum dpi equal to 600.0",
        "tables": [
            "product",
            "store",
            "store_district",
            "district",
            "store_product"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "max",
            "page",
            "size",
            "from",
            "product",
            "grouped",
            "by",
            "max",
            "page",
            "size",
            "with",
            "minimum",
            "dpi",
            "equal",
            "to",
            "600.0"
        ],
        "query_toks": [
            "SELECT",
            "max_page_siz",
            "(",
            "max_page_siz",
            ")",
            "FROM",
            "product",
            "GROUP",
            "BY",
            "max_page_siz",
            "(",
            "max_page_siz",
            ")",
            "HAVING",
            "MIN",
            "(",
            "dpi",
            ")",
            "=",
            "600.0"
        ],
        "query_toks_no_value": [
            "select",
            "max_page_siz",
            "(",
            "max_page_siz",
            ")",
            "from",
            "product",
            "group",
            "by",
            "max_page_siz",
            "(",
            "max_page_siz",
            ")",
            "having",
            "min",
            "(",
            "dpi",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__product__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__product.max_page_size__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__product.max_page_size__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__product.dpi__",
                            false
                        ],
                        null
                    ],
                    600.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_product",
        "query": "SELECT Store_Name FROM store GROUP BY Store_Name HAVING MIN(Area_size) = 7.23;",
        "question": "Select store name from store grouped by store name with minimum area size equal to 7.23",
        "tables": [
            "product",
            "store",
            "store_district",
            "district",
            "store_product"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "store",
            "name",
            "from",
            "store",
            "grouped",
            "by",
            "store",
            "name",
            "with",
            "minimum",
            "area",
            "size",
            "equal",
            "to",
            "7.23"
        ],
        "query_toks": [
            "SELECT",
            "Store_Name",
            "FROM",
            "store",
            "GROUP",
            "BY",
            "Store_Name",
            "HAVING",
            "MIN",
            "(",
            "Area_size",
            ")",
            "=",
            "7.23"
        ],
        "query_toks_no_value": [
            "select",
            "store_name",
            "from",
            "store",
            "group",
            "by",
            "store_name",
            "having",
            "min",
            "(",
            "area_size",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__store__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__store.store_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__store.store_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__store.area_size__",
                            false
                        ],
                        null
                    ],
                    7.23,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_product",
        "query": "SELECT Headquartered_City FROM district GROUP BY Headquartered_City HAVING MIN(City_Population) = 464742.0;",
        "question": "Select headquartered city from district grouped by headquartered city with minimum city population equal to 464742.0",
        "tables": [
            "product",
            "store",
            "store_district",
            "district",
            "store_product"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "headquartered",
            "city",
            "from",
            "district",
            "grouped",
            "by",
            "headquartered",
            "city",
            "with",
            "minimum",
            "city",
            "population",
            "equal",
            "to",
            "464742.0"
        ],
        "query_toks": [
            "SELECT",
            "Headquartered_City",
            "FROM",
            "district",
            "GROUP",
            "BY",
            "Headquartered_City",
            "HAVING",
            "MIN",
            "(",
            "City_Population",
            ")",
            "=",
            "464742.0"
        ],
        "query_toks_no_value": [
            "select",
            "headquartered_city",
            "from",
            "district",
            "group",
            "by",
            "headquartered_city",
            "having",
            "min",
            "(",
            "city_population",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__district__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__district.headquartered_city__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__district.headquartered_city__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__district.city_population__",
                            false
                        ],
                        null
                    ],
                    464742.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT staff_name FROM Staff GROUP BY staff_name HAVING MIN(staff_id) = 11;",
        "question": "Select staff name from staff grouped by staff name with minimum staff id equal to 11",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "staff",
            "name",
            "from",
            "staff",
            "grouped",
            "by",
            "staff",
            "name",
            "with",
            "minimum",
            "staff",
            "id",
            "equal",
            "to",
            "11"
        ],
        "query_toks": [
            "SELECT",
            "staff_name",
            "FROM",
            "Staff",
            "GROUP",
            "BY",
            "staff_name",
            "HAVING",
            "MIN",
            "(",
            "staff_id",
            ")",
            "=",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "staff_name",
            "from",
            "staff",
            "group",
            "by",
            "staff_name",
            "having",
            "min",
            "(",
            "staff_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__staff__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__staff.staff_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__staff.staff_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__staff.staff_id__",
                            false
                        ],
                        null
                    ],
                    11.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT part_name FROM Parts GROUP BY part_name HAVING MAX(part_id) = 3;",
        "question": "Select part name from parts grouped by part name with maximum part id equal to 3",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "part",
            "name",
            "from",
            "parts",
            "grouped",
            "by",
            "part",
            "name",
            "with",
            "maximum",
            "part",
            "id",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "part_name",
            "FROM",
            "Parts",
            "GROUP",
            "BY",
            "part_name",
            "HAVING",
            "MAX",
            "(",
            "part_id",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "part_name",
            "from",
            "parts",
            "group",
            "by",
            "part_name",
            "having",
            "max",
            "(",
            "part_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__parts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__parts.part_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__parts.part_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__parts.part_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT asset_details FROM Assets GROUP BY asset_details HAVING MAX(maintenance_contract_id) = 13;",
        "question": "Select asset details from assets grouped by asset details with maximum maintenance contract id equal to 13",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "asset",
            "details",
            "from",
            "assets",
            "grouped",
            "by",
            "asset",
            "details",
            "with",
            "maximum",
            "maintenance",
            "contract",
            "id",
            "equal",
            "to",
            "13"
        ],
        "query_toks": [
            "SELECT",
            "asset_details",
            "FROM",
            "Assets",
            "GROUP",
            "BY",
            "asset_details",
            "HAVING",
            "MAX",
            "(",
            "maintenance_contract_id",
            ")",
            "=",
            "13"
        ],
        "query_toks_no_value": [
            "select",
            "asset_details",
            "from",
            "assets",
            "group",
            "by",
            "asset_details",
            "having",
            "max",
            "(",
            "maintenance_contract_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__assets__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__assets.asset_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__assets.asset_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__assets.maintenance_contract_id__",
                            false
                        ],
                        null
                    ],
                    13.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT other_fault_details FROM Part_Faults GROUP BY other_fault_details HAVING MAX(part_id) = 1;",
        "question": "Select other fault details from part faults grouped by other fault details with maximum part id equal to 1",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "other",
            "fault",
            "details",
            "from",
            "part",
            "faults",
            "grouped",
            "by",
            "other",
            "fault",
            "details",
            "with",
            "maximum",
            "part",
            "id",
            "equal",
            "to",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "other_fault_details",
            "FROM",
            "Part_Faults",
            "GROUP",
            "BY",
            "other_fault_details",
            "HAVING",
            "MAX",
            "(",
            "part_id",
            ")",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "other_fault_details",
            "from",
            "part_faults",
            "group",
            "by",
            "other_fault_details",
            "having",
            "max",
            "(",
            "part_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__part_faults__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__part_faults.other_fault_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__part_faults.other_fault_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__part_faults.part_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT fault_status FROM Engineer_Visits GROUP BY fault_status HAVING MAX(engineer_id) = 12;",
        "question": "Select fault status from engineer visits grouped by fault status with maximum engineer id equal to 12",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "fault",
            "status",
            "from",
            "engineer",
            "visits",
            "grouped",
            "by",
            "fault",
            "status",
            "with",
            "maximum",
            "engineer",
            "id",
            "equal",
            "to",
            "12"
        ],
        "query_toks": [
            "SELECT",
            "fault_status",
            "FROM",
            "Engineer_Visits",
            "GROUP",
            "BY",
            "fault_status",
            "HAVING",
            "MAX",
            "(",
            "engineer_id",
            ")",
            "=",
            "12"
        ],
        "query_toks_no_value": [
            "select",
            "fault_status",
            "from",
            "engineer_visits",
            "group",
            "by",
            "fault_status",
            "having",
            "max",
            "(",
            "engineer_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__engineer_visits__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__engineer_visits.fault_status__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__engineer_visits.fault_status__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__engineer_visits.engineer_id__",
                            false
                        ],
                        null
                    ],
                    12.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT other_contract_details FROM Maintenance_Contracts GROUP BY other_contract_details HAVING MIN(maintenance_contract_id) = 2;",
        "question": "Select other contract details from maintenance contracts grouped by other contract details with minimum maintenance contract id equal to 2",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "other",
            "contract",
            "details",
            "from",
            "maintenance",
            "contracts",
            "grouped",
            "by",
            "other",
            "contract",
            "details",
            "with",
            "minimum",
            "maintenance",
            "contract",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "other_contract_details",
            "FROM",
            "Maintenance_Contracts",
            "GROUP",
            "BY",
            "other_contract_details",
            "HAVING",
            "MIN",
            "(",
            "maintenance_contract_id",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "other_contract_details",
            "from",
            "maintenance_contracts",
            "group",
            "by",
            "other_contract_details",
            "having",
            "min",
            "(",
            "maintenance_contract_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__maintenance_contracts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__maintenance_contracts.other_contract_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__maintenance_contracts.other_contract_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__maintenance_contracts.maintenance_contract_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT skill_description FROM Skills GROUP BY skill_description HAVING MAX(skill_id) = 2;",
        "question": "Select skill description from skills grouped by skill description with maximum skill id equal to 2",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "skill",
            "description",
            "from",
            "skills",
            "grouped",
            "by",
            "skill",
            "description",
            "with",
            "maximum",
            "skill",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "skill_description",
            "FROM",
            "Skills",
            "GROUP",
            "BY",
            "skill_description",
            "HAVING",
            "MAX",
            "(",
            "skill_id",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "skill_description",
            "from",
            "skills",
            "group",
            "by",
            "skill_description",
            "having",
            "max",
            "(",
            "skill_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__skills__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__skills.skill_description__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__skills.skill_description__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__skills.skill_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT last_name FROM Maintenance_Engineers GROUP BY last_name HAVING MIN(company_id) = 3;",
        "question": "Select last name from maintenance engineers grouped by last name with minimum company id equal to 3",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "last",
            "name",
            "from",
            "maintenance",
            "engineers",
            "grouped",
            "by",
            "last",
            "name",
            "with",
            "minimum",
            "company",
            "id",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "last_name",
            "FROM",
            "Maintenance_Engineers",
            "GROUP",
            "BY",
            "last_name",
            "HAVING",
            "MIN",
            "(",
            "company_id",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "last_name",
            "from",
            "maintenance_engineers",
            "group",
            "by",
            "last_name",
            "having",
            "min",
            "(",
            "company_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__maintenance_engineers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__maintenance_engineers.last_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__maintenance_engineers.last_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__maintenance_engineers.company_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT company_address FROM Third_Party_Companies GROUP BY company_address HAVING MAX(company_id) = 4;",
        "question": "Select company address from third party companies grouped by company address with maximum company id equal to 4",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "company",
            "address",
            "from",
            "third",
            "party",
            "companies",
            "grouped",
            "by",
            "company",
            "address",
            "with",
            "maximum",
            "company",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "company_address",
            "FROM",
            "Third_Party_Companies",
            "GROUP",
            "BY",
            "company_address",
            "HAVING",
            "MAX",
            "(",
            "company_id",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "company_address",
            "from",
            "third_party_companies",
            "group",
            "by",
            "company_address",
            "having",
            "max",
            "(",
            "company_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__third_party_companies__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__third_party_companies.company_address__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__third_party_companies.company_address__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__third_party_companies.company_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT fault_description FROM Fault_Log GROUP BY fault_description HAVING MAX(recorded_by_staff_id) = 10;",
        "question": "Select fault description from fault log grouped by fault description with maximum recorded by staff id equal to 10",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "fault",
            "description",
            "from",
            "fault",
            "log",
            "grouped",
            "by",
            "fault",
            "description",
            "with",
            "maximum",
            "recorded",
            "by",
            "staff",
            "id",
            "equal",
            "to",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "fault_description",
            "FROM",
            "Fault_Log",
            "GROUP",
            "BY",
            "fault_description",
            "HAVING",
            "MAX",
            "(",
            "recorded_by_staff_id",
            ")",
            "=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "fault_description",
            "from",
            "fault_log",
            "group",
            "by",
            "fault_description",
            "having",
            "max",
            "(",
            "recorded_by_staff_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__fault_log__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__fault_log.fault_description__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__fault_log.fault_description__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__fault_log.recorded_by_staff_id__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT fault_status FROM Fault_Log_Parts GROUP BY fault_status HAVING MIN(part_fault_id) = 10;",
        "question": "Select fault status from fault log parts grouped by fault status with minimum part fault id equal to 10",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "fault",
            "status",
            "from",
            "fault",
            "log",
            "parts",
            "grouped",
            "by",
            "fault",
            "status",
            "with",
            "minimum",
            "part",
            "fault",
            "id",
            "equal",
            "to",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "fault_status",
            "FROM",
            "Fault_Log_Parts",
            "GROUP",
            "BY",
            "fault_status",
            "HAVING",
            "MIN",
            "(",
            "part_fault_id",
            ")",
            "=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "fault_status",
            "from",
            "fault_log_parts",
            "group",
            "by",
            "fault_status",
            "having",
            "min",
            "(",
            "part_fault_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__fault_log_parts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__fault_log_parts.fault_status__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__fault_log_parts.fault_status__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__fault_log_parts.part_fault_id__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_assessment",
        "query": "SELECT student_details FROM Students GROUP BY student_details HAVING MIN(student_id) = 141;",
        "question": "Select student details from students grouped by student details with minimum student id equal to 141",
        "tables": [
            "Courses",
            "Students",
            "Candidates",
            "Addresses",
            "People_Addresses",
            "Student_Course_Registrations",
            "People",
            "Candidate_Assessments",
            "Student_Course_Attendance"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "student",
            "details",
            "from",
            "students",
            "grouped",
            "by",
            "student",
            "details",
            "with",
            "minimum",
            "student",
            "id",
            "equal",
            "to",
            "141"
        ],
        "query_toks": [
            "SELECT",
            "student_details",
            "FROM",
            "Students",
            "GROUP",
            "BY",
            "student_details",
            "HAVING",
            "MIN",
            "(",
            "student_id",
            ")",
            "=",
            "141"
        ],
        "query_toks_no_value": [
            "select",
            "student_details",
            "from",
            "students",
            "group",
            "by",
            "student_details",
            "having",
            "min",
            "(",
            "student_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__students__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__students.student_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__students.student_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__students.student_id__",
                            false
                        ],
                        null
                    ],
                    141.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_assessment",
        "query": "SELECT candidate_details FROM Candidates GROUP BY candidate_details HAVING MIN(candidate_id) = 151;",
        "question": "Select candidate details from candidates grouped by candidate details with minimum candidate id equal to 151",
        "tables": [
            "Courses",
            "Students",
            "Candidates",
            "Addresses",
            "People_Addresses",
            "Student_Course_Registrations",
            "People",
            "Candidate_Assessments",
            "Student_Course_Attendance"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "candidate",
            "details",
            "from",
            "candidates",
            "grouped",
            "by",
            "candidate",
            "details",
            "with",
            "minimum",
            "candidate",
            "id",
            "equal",
            "to",
            "151"
        ],
        "query_toks": [
            "SELECT",
            "candidate_details",
            "FROM",
            "Candidates",
            "GROUP",
            "BY",
            "candidate_details",
            "HAVING",
            "MIN",
            "(",
            "candidate_id",
            ")",
            "=",
            "151"
        ],
        "query_toks_no_value": [
            "select",
            "candidate_details",
            "from",
            "candidates",
            "group",
            "by",
            "candidate_details",
            "having",
            "min",
            "(",
            "candidate_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__candidates__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__candidates.candidate_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__candidates.candidate_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__candidates.candidate_id__",
                            false
                        ],
                        null
                    ],
                    151.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_assessment",
        "query": "SELECT zip_postcode FROM Addresses GROUP BY zip_postcode HAVING MAX(address_id) = 94;",
        "question": "Select zip postcode from addresses grouped by zip postcode with maximum address id equal to 94",
        "tables": [
            "Courses",
            "Students",
            "Candidates",
            "Addresses",
            "People_Addresses",
            "Student_Course_Registrations",
            "People",
            "Candidate_Assessments",
            "Student_Course_Attendance"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "zip",
            "postcode",
            "from",
            "addresses",
            "grouped",
            "by",
            "zip",
            "postcode",
            "with",
            "maximum",
            "address",
            "id",
            "equal",
            "to",
            "94"
        ],
        "query_toks": [
            "SELECT",
            "zip_postcode",
            "FROM",
            "Addresses",
            "GROUP",
            "BY",
            "zip_postcode",
            "HAVING",
            "MAX",
            "(",
            "address_id",
            ")",
            "=",
            "94"
        ],
        "query_toks_no_value": [
            "select",
            "zip_postcode",
            "from",
            "addresses",
            "group",
            "by",
            "zip_postcode",
            "having",
            "max",
            "(",
            "address_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__addresses.zip_postcode__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__addresses.zip_postcode__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__addresses.address_id__",
                            false
                        ],
                        null
                    ],
                    94.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_assessment",
        "query": "SELECT middle_name FROM People GROUP BY middle_name HAVING MIN(person_id) = 131;",
        "question": "Select middle name from people grouped by middle name with minimum person id equal to 131",
        "tables": [
            "Courses",
            "Students",
            "Candidates",
            "Addresses",
            "People_Addresses",
            "Student_Course_Registrations",
            "People",
            "Candidate_Assessments",
            "Student_Course_Attendance"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "middle",
            "name",
            "from",
            "people",
            "grouped",
            "by",
            "middle",
            "name",
            "with",
            "minimum",
            "person",
            "id",
            "equal",
            "to",
            "131"
        ],
        "query_toks": [
            "SELECT",
            "middle_name",
            "FROM",
            "People",
            "GROUP",
            "BY",
            "middle_name",
            "HAVING",
            "MIN",
            "(",
            "person_id",
            ")",
            "=",
            "131"
        ],
        "query_toks_no_value": [
            "select",
            "middle_name",
            "from",
            "people",
            "group",
            "by",
            "middle_name",
            "having",
            "min",
            "(",
            "person_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__people__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__people.middle_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__people.middle_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__people.person_id__",
                            false
                        ],
                        null
                    ],
                    131.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_assessment",
        "query": "SELECT asessment_outcome_code FROM Candidate_Assessments GROUP BY asessment_outcome_code HAVING MAX(candidate_id) = 111;",
        "question": "Select asessment outcome code from candidate assessments grouped by asessment outcome code with maximum candidate id equal to 111",
        "tables": [
            "Courses",
            "Students",
            "Candidates",
            "Addresses",
            "People_Addresses",
            "Student_Course_Registrations",
            "People",
            "Candidate_Assessments",
            "Student_Course_Attendance"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "asessment",
            "outcome",
            "code",
            "from",
            "candidate",
            "assessments",
            "grouped",
            "by",
            "asessment",
            "outcome",
            "code",
            "with",
            "maximum",
            "candidate",
            "id",
            "equal",
            "to",
            "111"
        ],
        "query_toks": [
            "SELECT",
            "asessment_outcome_code",
            "FROM",
            "Candidate_Assessments",
            "GROUP",
            "BY",
            "asessment_outcome_code",
            "HAVING",
            "MAX",
            "(",
            "candidate_id",
            ")",
            "=",
            "111"
        ],
        "query_toks_no_value": [
            "select",
            "asessment_outcome_code",
            "from",
            "candidate_assessments",
            "group",
            "by",
            "asessment_outcome_code",
            "having",
            "max",
            "(",
            "candidate_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__candidate_assessments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__candidate_assessments.asessment_outcome_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__candidate_assessments.asessment_outcome_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__candidate_assessments.candidate_id__",
                            false
                        ],
                        null
                    ],
                    111.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT email_address FROM Owners GROUP BY email_address HAVING MIN(owner_id) = 7;",
        "question": "Select email address from owners grouped by email address with minimum owner id equal to 7",
        "tables": [
            "Owners",
            "Breeds",
            "Treatment_Types",
            "Dogs",
            "Professionals",
            "Treatments",
            "Charges",
            "Sizes"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "email",
            "address",
            "from",
            "owners",
            "grouped",
            "by",
            "email",
            "address",
            "with",
            "minimum",
            "owner",
            "id",
            "equal",
            "to",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "email_address",
            "FROM",
            "Owners",
            "GROUP",
            "BY",
            "email_address",
            "HAVING",
            "MIN",
            "(",
            "owner_id",
            ")",
            "=",
            "7"
        ],
        "query_toks_no_value": [
            "select",
            "email_address",
            "from",
            "owners",
            "group",
            "by",
            "email_address",
            "having",
            "min",
            "(",
            "owner_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__owners__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__owners.email_address__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__owners.email_address__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__owners.owner_id__",
                            false
                        ],
                        null
                    ],
                    7.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT name FROM Dogs GROUP BY name HAVING MIN(dog_id) = 3;",
        "question": "Select name from dogs grouped by name with minimum dog id equal to 3",
        "tables": [
            "Owners",
            "Breeds",
            "Treatment_Types",
            "Dogs",
            "Professionals",
            "Treatments",
            "Charges",
            "Sizes"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "dogs",
            "grouped",
            "by",
            "name",
            "with",
            "minimum",
            "dog",
            "id",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "Dogs",
            "GROUP",
            "BY",
            "name",
            "HAVING",
            "MIN",
            "(",
            "dog_id",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "dogs",
            "group",
            "by",
            "name",
            "having",
            "min",
            "(",
            "dog_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__dogs__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__dogs.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__dogs.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__dogs.dog_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT cell_number FROM Professionals GROUP BY cell_number HAVING MIN(professional_id) = 4;",
        "question": "Select cell number from professionals grouped by cell number with minimum professional id equal to 4",
        "tables": [
            "Owners",
            "Breeds",
            "Treatment_Types",
            "Dogs",
            "Professionals",
            "Treatments",
            "Charges",
            "Sizes"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "cell",
            "number",
            "from",
            "professionals",
            "grouped",
            "by",
            "cell",
            "number",
            "with",
            "minimum",
            "professional",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "cell_number",
            "FROM",
            "Professionals",
            "GROUP",
            "BY",
            "cell_number",
            "HAVING",
            "MIN",
            "(",
            "professional_id",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "cell_number",
            "from",
            "professionals",
            "group",
            "by",
            "cell_number",
            "having",
            "min",
            "(",
            "professional_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__professionals__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__professionals.cell_number__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__professionals.cell_number__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__professionals.professional_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT treatment_type_code FROM Treatments GROUP BY treatment_type_code HAVING MAX(treatment_id) = 4;",
        "question": "Select treatment type code from treatments grouped by treatment type code with maximum treatment id equal to 4",
        "tables": [
            "Owners",
            "Breeds",
            "Treatment_Types",
            "Dogs",
            "Professionals",
            "Treatments",
            "Charges",
            "Sizes"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "treatment",
            "type",
            "code",
            "from",
            "treatments",
            "grouped",
            "by",
            "treatment",
            "type",
            "code",
            "with",
            "maximum",
            "treatment",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "treatment_type_code",
            "FROM",
            "Treatments",
            "GROUP",
            "BY",
            "treatment_type_code",
            "HAVING",
            "MAX",
            "(",
            "treatment_id",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "treatment_type_code",
            "from",
            "treatments",
            "group",
            "by",
            "treatment_type_code",
            "having",
            "max",
            "(",
            "treatment_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__treatments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__treatments.treatment_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__treatments.treatment_type_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__treatments.treatment_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT charge_type FROM Charges GROUP BY charge_type HAVING MIN(charge_id) = 3;",
        "question": "Select charge type from charges grouped by charge type with minimum charge id equal to 3",
        "tables": [
            "Owners",
            "Breeds",
            "Treatment_Types",
            "Dogs",
            "Professionals",
            "Treatments",
            "Charges",
            "Sizes"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "charge",
            "type",
            "from",
            "charges",
            "grouped",
            "by",
            "charge",
            "type",
            "with",
            "minimum",
            "charge",
            "id",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "charge_type",
            "FROM",
            "Charges",
            "GROUP",
            "BY",
            "charge_type",
            "HAVING",
            "MIN",
            "(",
            "charge_id",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "charge_type",
            "from",
            "charges",
            "group",
            "by",
            "charge_type",
            "having",
            "min",
            "(",
            "charge_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__charges__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__charges.charge_type__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__charges.charge_type__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__charges.charge_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "music_1",
        "query": "SELECT languages FROM song GROUP BY languages HAVING MAX(f_id) = 3;",
        "question": "Select languages from song grouped by languages with maximum song id equal to 3",
        "tables": [
            "artist",
            "song",
            "genre",
            "files"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "languages",
            "from",
            "song",
            "grouped",
            "by",
            "languages",
            "with",
            "maximum",
            "song",
            "id",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "languages",
            "FROM",
            "song",
            "GROUP",
            "BY",
            "languages",
            "HAVING",
            "MAX",
            "(",
            "f_id",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "languages",
            "from",
            "song",
            "group",
            "by",
            "languages",
            "having",
            "max",
            "(",
            "f_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__song__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__song.languages__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__song.languages__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__song.f_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "music_1",
        "query": "SELECT formats FROM files GROUP BY formats HAVING MIN(f_id) = 4;",
        "question": "Select formats from files grouped by formats with minimum song id equal to 4",
        "tables": [
            "artist",
            "song",
            "genre",
            "files"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "formats",
            "from",
            "files",
            "grouped",
            "by",
            "formats",
            "with",
            "minimum",
            "song",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "formats",
            "FROM",
            "files",
            "GROUP",
            "BY",
            "formats",
            "HAVING",
            "MIN",
            "(",
            "f_id",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "formats",
            "from",
            "files",
            "group",
            "by",
            "formats",
            "having",
            "min",
            "(",
            "f_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__files__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__files.formats__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__files.formats__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__files.f_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_employee",
        "query": "SELECT Name FROM people GROUP BY Name HAVING MIN(People_ID) = 4;",
        "question": "Select name from people grouped by name with minimum people id equal to 4",
        "tables": [
            "employment",
            "people",
            "company"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "people",
            "grouped",
            "by",
            "name",
            "with",
            "minimum",
            "people",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "people",
            "GROUP",
            "BY",
            "Name",
            "HAVING",
            "MIN",
            "(",
            "People_ID",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "people",
            "group",
            "by",
            "name",
            "having",
            "min",
            "(",
            "people_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__people__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__people.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__people.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__people.people_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_employee",
        "query": "SELECT Name FROM company GROUP BY Name HAVING MIN(Assets_in_Billion) = 292.5;",
        "question": "Select name from company grouped by name with minimum assets in billion equal to 292.5",
        "tables": [
            "employment",
            "people",
            "company"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "company",
            "grouped",
            "by",
            "name",
            "with",
            "minimum",
            "assets",
            "in",
            "billion",
            "equal",
            "to",
            "292.5"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "company",
            "GROUP",
            "BY",
            "Name",
            "HAVING",
            "MIN",
            "(",
            "Assets_in_Billion",
            ")",
            "=",
            "292.5"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "company",
            "group",
            "by",
            "name",
            "having",
            "min",
            "(",
            "assets_in_billion",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__company__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__company.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__company.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__company.assets_in_billion__",
                            false
                        ],
                        null
                    ],
                    292.5,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "farm",
        "query": "SELECT Theme FROM farm_competition GROUP BY Theme HAVING MIN(Host_city_ID) = 4;",
        "question": "Select theme from farm competition grouped by theme with minimum host city id equal to 4",
        "tables": [
            "farm_competition",
            "farm",
            "city",
            "competition_record"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "theme",
            "from",
            "farm",
            "competition",
            "grouped",
            "by",
            "theme",
            "with",
            "minimum",
            "host",
            "city",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Theme",
            "FROM",
            "farm_competition",
            "GROUP",
            "BY",
            "Theme",
            "HAVING",
            "MIN",
            "(",
            "Host_city_ID",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "theme",
            "from",
            "farm_competition",
            "group",
            "by",
            "theme",
            "having",
            "min",
            "(",
            "host_city_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__farm_competition__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__farm_competition.theme__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__farm_competition.theme__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__farm_competition.host_city_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "farm",
        "query": "SELECT Status FROM city GROUP BY Status HAVING MAX(Population) = 5706.0;",
        "question": "Select status from city grouped by status with maximum population equal to 5706.0",
        "tables": [
            "farm_competition",
            "farm",
            "city",
            "competition_record"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "status",
            "from",
            "city",
            "grouped",
            "by",
            "status",
            "with",
            "maximum",
            "population",
            "equal",
            "to",
            "5706.0"
        ],
        "query_toks": [
            "SELECT",
            "Status",
            "FROM",
            "city",
            "GROUP",
            "BY",
            "Status",
            "HAVING",
            "MAX",
            "(",
            "Population",
            ")",
            "=",
            "5706.0"
        ],
        "query_toks_no_value": [
            "select",
            "status",
            "from",
            "city",
            "group",
            "by",
            "status",
            "having",
            "max",
            "(",
            "population",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__city__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__city.status__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__city.status__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__city.population__",
                            false
                        ],
                        null
                    ],
                    5706.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code HAVING MAX(Product_ID) = 34;",
        "question": "Select product type code from products grouped by product type code with maximum product id equal to 34",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "product",
            "type",
            "code",
            "from",
            "products",
            "grouped",
            "by",
            "product",
            "type",
            "code",
            "with",
            "maximum",
            "product",
            "id",
            "equal",
            "to",
            "34"
        ],
        "query_toks": [
            "SELECT",
            "Product_Type_Code",
            "FROM",
            "Products",
            "GROUP",
            "BY",
            "Product_Type_Code",
            "HAVING",
            "MAX",
            "(",
            "Product_ID",
            ")",
            "=",
            "34"
        ],
        "query_toks_no_value": [
            "select",
            "product_type_code",
            "from",
            "products",
            "group",
            "by",
            "product_type_code",
            "having",
            "max",
            "(",
            "product_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products.product_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__products.product_type_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__products.product_id__",
                            false
                        ],
                        null
                    ],
                    34.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT Other_Details FROM Assets GROUP BY Other_Details HAVING MIN(Asset_ID) = 1;",
        "question": "Select other details from assets grouped by other details with minimum asset id equal to 1",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "other",
            "details",
            "from",
            "assets",
            "grouped",
            "by",
            "other",
            "details",
            "with",
            "minimum",
            "asset",
            "id",
            "equal",
            "to",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Other_Details",
            "FROM",
            "Assets",
            "GROUP",
            "BY",
            "Other_Details",
            "HAVING",
            "MIN",
            "(",
            "Asset_ID",
            ")",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            "from",
            "assets",
            "group",
            "by",
            "other_details",
            "having",
            "min",
            "(",
            "asset_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__assets__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__assets.other_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__assets.other_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__assets.asset_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT Event_Type_Code FROM Events GROUP BY Event_Type_Code HAVING MAX(Location_ID) = 5;",
        "question": "Select event type code from events grouped by event type code with maximum location id equal to 5",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "event",
            "type",
            "code",
            "from",
            "events",
            "grouped",
            "by",
            "event",
            "type",
            "code",
            "with",
            "maximum",
            "location",
            "id",
            "equal",
            "to",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "Event_Type_Code",
            "FROM",
            "Events",
            "GROUP",
            "BY",
            "Event_Type_Code",
            "HAVING",
            "MAX",
            "(",
            "Location_ID",
            ")",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "event_type_code",
            "from",
            "events",
            "group",
            "by",
            "event_type_code",
            "having",
            "max",
            "(",
            "location_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__events__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__events.event_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__events.event_type_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__events.location_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT address_details FROM Addresses GROUP BY address_details HAVING MIN(Address_ID) = 2;",
        "question": "Select address details from addresses grouped by address details with minimum address id equal to 2",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "address",
            "details",
            "from",
            "addresses",
            "grouped",
            "by",
            "address",
            "details",
            "with",
            "minimum",
            "address",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "address_details",
            "FROM",
            "Addresses",
            "GROUP",
            "BY",
            "address_details",
            "HAVING",
            "MIN",
            "(",
            "Address_ID",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "address_details",
            "from",
            "addresses",
            "group",
            "by",
            "address_details",
            "having",
            "min",
            "(",
            "address_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__addresses.address_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__addresses.address_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__addresses.address_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT Role_Code FROM Parties_in_Events GROUP BY Role_Code HAVING MAX(Party_ID) = 3;",
        "question": "Select role code from parties in events grouped by role code with maximum party id equal to 3",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "role",
            "code",
            "from",
            "parties",
            "in",
            "events",
            "grouped",
            "by",
            "role",
            "code",
            "with",
            "maximum",
            "party",
            "id",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Role_Code",
            "FROM",
            "Parties_in_Events",
            "GROUP",
            "BY",
            "Role_Code",
            "HAVING",
            "MAX",
            "(",
            "Party_ID",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "role_code",
            "from",
            "parties_in_events",
            "group",
            "by",
            "role_code",
            "having",
            "max",
            "(",
            "party_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__parties_in_events__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__parties_in_events.role_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__parties_in_events.role_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__parties_in_events.party_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT Other_Details FROM Finances GROUP BY Other_Details HAVING MAX(Finance_ID) = 10;",
        "question": "Select other details from finances grouped by other details with maximum finance id equal to 10",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "other",
            "details",
            "from",
            "finances",
            "grouped",
            "by",
            "other",
            "details",
            "with",
            "maximum",
            "finance",
            "id",
            "equal",
            "to",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "Other_Details",
            "FROM",
            "Finances",
            "GROUP",
            "BY",
            "Other_Details",
            "HAVING",
            "MAX",
            "(",
            "Finance_ID",
            ")",
            "=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            "from",
            "finances",
            "group",
            "by",
            "other_details",
            "having",
            "max",
            "(",
            "finance_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__finances__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__finances.other_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__finances.other_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__finances.finance_id__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT Other_Details FROM Locations GROUP BY Other_Details HAVING MAX(Location_ID) = 9;",
        "question": "Select other details from locations grouped by other details with maximum location id equal to 9",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "other",
            "details",
            "from",
            "locations",
            "grouped",
            "by",
            "other",
            "details",
            "with",
            "maximum",
            "location",
            "id",
            "equal",
            "to",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "Other_Details",
            "FROM",
            "Locations",
            "GROUP",
            "BY",
            "Other_Details",
            "HAVING",
            "MAX",
            "(",
            "Location_ID",
            ")",
            "=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            "from",
            "locations",
            "group",
            "by",
            "other_details",
            "having",
            "max",
            "(",
            "location_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__locations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__locations.other_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__locations.other_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__locations.location_id__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT Other_Details FROM Channels GROUP BY Other_Details HAVING MAX(Channel_ID) = 3;",
        "question": "Select other details from channels grouped by other details with maximum channel id equal to 3",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "other",
            "details",
            "from",
            "channels",
            "grouped",
            "by",
            "other",
            "details",
            "with",
            "maximum",
            "channel",
            "id",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Other_Details",
            "FROM",
            "Channels",
            "GROUP",
            "BY",
            "Other_Details",
            "HAVING",
            "MAX",
            "(",
            "Channel_ID",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            "from",
            "channels",
            "group",
            "by",
            "other_details",
            "having",
            "max",
            "(",
            "channel_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__channels__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__channels.other_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__channels.other_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__channels.channel_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT Party_Details FROM Parties GROUP BY Party_Details HAVING MIN(Party_ID) = 8;",
        "question": "Select party details from parties grouped by party details with minimum party id equal to 8",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "party",
            "details",
            "from",
            "parties",
            "grouped",
            "by",
            "party",
            "details",
            "with",
            "minimum",
            "party",
            "id",
            "equal",
            "to",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "Party_Details",
            "FROM",
            "Parties",
            "GROUP",
            "BY",
            "Party_Details",
            "HAVING",
            "MIN",
            "(",
            "Party_ID",
            ")",
            "=",
            "8"
        ],
        "query_toks_no_value": [
            "select",
            "party_details",
            "from",
            "parties",
            "group",
            "by",
            "party_details",
            "having",
            "min",
            "(",
            "party_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__parties__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__parties.party_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__parties.party_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__parties.party_id__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "city_record",
        "query": "SELECT Host_City FROM hosting_city GROUP BY Host_City HAVING MAX(Match_ID) = 1;",
        "question": "Select host city from hosting city grouped by host city with maximum match id equal to 1",
        "tables": [
            "temperature",
            "hosting_city",
            "city",
            "match"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "host",
            "city",
            "from",
            "hosting",
            "city",
            "grouped",
            "by",
            "host",
            "city",
            "with",
            "maximum",
            "match",
            "id",
            "equal",
            "to",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Host_City",
            "FROM",
            "hosting_city",
            "GROUP",
            "BY",
            "Host_City",
            "HAVING",
            "MAX",
            "(",
            "Match_ID",
            ")",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "host_city",
            "from",
            "hosting_city",
            "group",
            "by",
            "host_city",
            "having",
            "max",
            "(",
            "match_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__hosting_city__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__hosting_city.host_city__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__hosting_city.host_city__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__hosting_city.match_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "city_record",
        "query": "SELECT Hanzi FROM city GROUP BY Hanzi HAVING MAX(Regional_Population) = 7282835;",
        "question": "Select hanzi from city grouped by hanzi with maximum regional population equal to 7282835",
        "tables": [
            "temperature",
            "hosting_city",
            "city",
            "match"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "hanzi",
            "from",
            "city",
            "grouped",
            "by",
            "hanzi",
            "with",
            "maximum",
            "regional",
            "population",
            "equal",
            "to",
            "7282835"
        ],
        "query_toks": [
            "SELECT",
            "Hanzi",
            "FROM",
            "city",
            "GROUP",
            "BY",
            "Hanzi",
            "HAVING",
            "MAX",
            "(",
            "Regional_Population",
            ")",
            "=",
            "7282835"
        ],
        "query_toks_no_value": [
            "select",
            "hanzi",
            "from",
            "city",
            "group",
            "by",
            "hanzi",
            "having",
            "max",
            "(",
            "regional_population",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__city__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__city.hanzi__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__city.hanzi__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__city.regional_population__",
                            false
                        ],
                        null
                    ],
                    7282835.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "city_record",
        "query": "SELECT Competition FROM match GROUP BY Competition HAVING MAX(Match_ID) = 5;",
        "question": "Select competition from match grouped by competition with maximum match id equal to 5",
        "tables": [
            "temperature",
            "hosting_city",
            "city",
            "match"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "competition",
            "from",
            "match",
            "grouped",
            "by",
            "competition",
            "with",
            "maximum",
            "match",
            "id",
            "equal",
            "to",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "Competition",
            "FROM",
            "match",
            "GROUP",
            "BY",
            "Competition",
            "HAVING",
            "MAX",
            "(",
            "Match_ID",
            ")",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "competition",
            "from",
            "match",
            "group",
            "by",
            "competition",
            "having",
            "max",
            "(",
            "match_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__match__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__match.competition__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__match.competition__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__match.match_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "swimming",
        "query": "SELECT Year FROM event GROUP BY Year HAVING MAX(ID) = 1;",
        "question": "Select year from event grouped by year with maximum id equal to 1",
        "tables": [
            "event",
            "stadium",
            "record",
            "swimmer"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "year",
            "from",
            "event",
            "grouped",
            "by",
            "year",
            "with",
            "maximum",
            "id",
            "equal",
            "to",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Year",
            "FROM",
            "event",
            "GROUP",
            "BY",
            "Year",
            "HAVING",
            "MAX",
            "(",
            "ID",
            ")",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "year",
            "from",
            "event",
            "group",
            "by",
            "year",
            "having",
            "max",
            "(",
            "id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__event__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__event.year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__event.year__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__event.id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "swimming",
        "query": "SELECT City FROM stadium GROUP BY City HAVING MIN(Opening_year) = 2005;",
        "question": "Select city from stadium grouped by city with minimum opening year equal to 2005",
        "tables": [
            "event",
            "stadium",
            "record",
            "swimmer"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "city",
            "from",
            "stadium",
            "grouped",
            "by",
            "city",
            "with",
            "minimum",
            "opening",
            "year",
            "equal",
            "to",
            "2005"
        ],
        "query_toks": [
            "SELECT",
            "City",
            "FROM",
            "stadium",
            "GROUP",
            "BY",
            "City",
            "HAVING",
            "MIN",
            "(",
            "Opening_year",
            ")",
            "=",
            "2005"
        ],
        "query_toks_no_value": [
            "select",
            "city",
            "from",
            "stadium",
            "group",
            "by",
            "city",
            "having",
            "min",
            "(",
            "opening_year",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__stadium__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__stadium.city__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__stadium.city__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__stadium.opening_year__",
                            false
                        ],
                        null
                    ],
                    2005.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "swimming",
        "query": "SELECT Result FROM record GROUP BY Result HAVING MIN(Event_ID) = 3;",
        "question": "Select result from record grouped by result with minimum event id equal to 3",
        "tables": [
            "event",
            "stadium",
            "record",
            "swimmer"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "result",
            "from",
            "record",
            "grouped",
            "by",
            "result",
            "with",
            "minimum",
            "event",
            "id",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Result",
            "FROM",
            "record",
            "GROUP",
            "BY",
            "Result",
            "HAVING",
            "MIN",
            "(",
            "Event_ID",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "result",
            "from",
            "record",
            "group",
            "by",
            "result",
            "having",
            "min",
            "(",
            "event_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__record__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__record.result__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__record.result__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__record.event_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "swimming",
        "query": "SELECT Time FROM swimmer GROUP BY Time HAVING MAX(ID) = 4;",
        "question": "Select time from swimmer grouped by time with maximum id equal to 4",
        "tables": [
            "event",
            "stadium",
            "record",
            "swimmer"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "time",
            "from",
            "swimmer",
            "grouped",
            "by",
            "time",
            "with",
            "maximum",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Time",
            "FROM",
            "swimmer",
            "GROUP",
            "BY",
            "Time",
            "HAVING",
            "MAX",
            "(",
            "ID",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "time",
            "from",
            "swimmer",
            "group",
            "by",
            "time",
            "having",
            "max",
            "(",
            "id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__swimmer__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__swimmer.time__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__swimmer.time__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__swimmer.id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "query": "SELECT SourceAirport FROM flights GROUP BY SourceAirport HAVING MAX(FlightNo) = 1162;",
        "question": "Select source airport from flights grouped by source airport with maximum flight number equal to 1162",
        "tables": [
            "airports",
            "flights",
            "airlines"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "source",
            "airport",
            "from",
            "flights",
            "grouped",
            "by",
            "source",
            "airport",
            "with",
            "maximum",
            "flight",
            "number",
            "equal",
            "to",
            "1162"
        ],
        "query_toks": [
            "SELECT",
            "SourceAirport",
            "FROM",
            "flights",
            "GROUP",
            "BY",
            "SourceAirport",
            "HAVING",
            "MAX",
            "(",
            "FlightNo",
            ")",
            "=",
            "1162"
        ],
        "query_toks_no_value": [
            "select",
            "sourceairport",
            "from",
            "flights",
            "group",
            "by",
            "sourceairport",
            "having",
            "max",
            "(",
            "flightno",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__flights__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__flights.sourceairport__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__flights.sourceairport__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__flights.flightno__",
                            false
                        ],
                        null
                    ],
                    1162.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "query": "SELECT Abbreviation FROM airlines GROUP BY Abbreviation HAVING MIN(uid) = 5;",
        "question": "Select abbreviation from airlines grouped by abbreviation with minimum airline id equal to 5",
        "tables": [
            "airports",
            "flights",
            "airlines"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "abbreviation",
            "from",
            "airlines",
            "grouped",
            "by",
            "abbreviation",
            "with",
            "minimum",
            "airline",
            "id",
            "equal",
            "to",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "Abbreviation",
            "FROM",
            "airlines",
            "GROUP",
            "BY",
            "Abbreviation",
            "HAVING",
            "MIN",
            "(",
            "uid",
            ")",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "abbreviation",
            "from",
            "airlines",
            "group",
            "by",
            "abbreviation",
            "having",
            "min",
            "(",
            "uid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__airlines__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__airlines.abbreviation__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__airlines.abbreviation__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__airlines.uid__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "election",
        "query": "SELECT Delegate FROM election GROUP BY Delegate HAVING MAX(Election_ID) = 2;",
        "question": "Select delegate from election grouped by delegate with maximum election id equal to 2",
        "tables": [
            "election",
            "county",
            "party"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "delegate",
            "from",
            "election",
            "grouped",
            "by",
            "delegate",
            "with",
            "maximum",
            "election",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Delegate",
            "FROM",
            "election",
            "GROUP",
            "BY",
            "Delegate",
            "HAVING",
            "MAX",
            "(",
            "Election_ID",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "delegate",
            "from",
            "election",
            "group",
            "by",
            "delegate",
            "having",
            "max",
            "(",
            "election_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__election__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__election.delegate__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__election.delegate__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__election.election_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "election",
        "query": "SELECT Zip_code FROM county GROUP BY Zip_code HAVING MAX(Population) = 21000.0;",
        "question": "Select zip code from county grouped by zip code with maximum population equal to 21000.0",
        "tables": [
            "election",
            "county",
            "party"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "zip",
            "code",
            "from",
            "county",
            "grouped",
            "by",
            "zip",
            "code",
            "with",
            "maximum",
            "population",
            "equal",
            "to",
            "21000.0"
        ],
        "query_toks": [
            "SELECT",
            "Zip_code",
            "FROM",
            "count",
            "(",
            "count",
            ")",
            "GROUP",
            "BY",
            "Zip_code",
            "HAVING",
            "MAX",
            "(",
            "Population",
            ")",
            "=",
            "21000.0"
        ],
        "query_toks_no_value": [
            "select",
            "zip_code",
            "from",
            "count",
            "(",
            "count",
            ")",
            "group",
            "by",
            "zip_code",
            "having",
            "max",
            "(",
            "population",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__county__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__county.zip_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__county.zip_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__county.population__",
                            false
                        ],
                        null
                    ],
                    21000.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "election",
        "query": "SELECT Comptroller FROM party GROUP BY Comptroller HAVING MAX(Party_ID) = 1;",
        "question": "Select comptroller from party grouped by comptroller with maximum party id equal to 1",
        "tables": [
            "election",
            "county",
            "party"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "comptroller",
            "from",
            "party",
            "grouped",
            "by",
            "comptroller",
            "with",
            "maximum",
            "party",
            "id",
            "equal",
            "to",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Comptroller",
            "FROM",
            "party",
            "GROUP",
            "BY",
            "Comptroller",
            "HAVING",
            "MAX",
            "(",
            "Party_ID",
            ")",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "comptroller",
            "from",
            "party",
            "group",
            "by",
            "comptroller",
            "having",
            "max",
            "(",
            "party_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__party__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__party.comptroller__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__party.comptroller__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__party.party_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "manufactory_1",
        "query": "SELECT Headquarter FROM Manufacturers GROUP BY Headquarter HAVING MIN(Code) = 4;",
        "question": "Select headquarter from manufacturers grouped by headquarter with minimum code equal to 4",
        "tables": [
            "Manufacturers",
            "Products"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "headquarter",
            "from",
            "manufacturers",
            "grouped",
            "by",
            "headquarter",
            "with",
            "minimum",
            "code",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Headquarter",
            "FROM",
            "Manufacturers",
            "GROUP",
            "BY",
            "Headquarter",
            "HAVING",
            "MIN",
            "(",
            "Code",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "headquarter",
            "from",
            "manufacturers",
            "group",
            "by",
            "headquarter",
            "having",
            "min",
            "(",
            "code",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__manufacturers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__manufacturers.headquarter__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__manufacturers.headquarter__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__manufacturers.code__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "manufactory_1",
        "query": "SELECT Name FROM Products GROUP BY Name HAVING MAX(Code) = 8;",
        "question": "Select name from products grouped by name with maximum code equal to 8",
        "tables": [
            "Manufacturers",
            "Products"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "products",
            "grouped",
            "by",
            "name",
            "with",
            "maximum",
            "code",
            "equal",
            "to",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "Products",
            "GROUP",
            "BY",
            "Name",
            "HAVING",
            "MAX",
            "(",
            "Code",
            ")",
            "=",
            "8"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "products",
            "group",
            "by",
            "name",
            "having",
            "max",
            "(",
            "code",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__products.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__products.code__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "debate",
        "query": "SELECT Date FROM debate GROUP BY Date HAVING MAX(Num_of_Audience) = 342;",
        "question": "Select date from debate grouped by date with maximum num of audience equal to 342",
        "tables": [
            "debate",
            "people",
            "debate_people"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "date",
            "from",
            "debate",
            "grouped",
            "by",
            "date",
            "with",
            "maximum",
            "num",
            "of",
            "audience",
            "equal",
            "to",
            "342"
        ],
        "query_toks": [
            "SELECT",
            "Date",
            "FROM",
            "debate",
            "GROUP",
            "BY",
            "Date",
            "HAVING",
            "MAX",
            "(",
            "Num_of_Audience",
            ")",
            "=",
            "342"
        ],
        "query_toks_no_value": [
            "select",
            "date",
            "from",
            "debate",
            "group",
            "by",
            "date",
            "having",
            "max",
            "(",
            "num_of_audience",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__debate__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__debate.date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__debate.date__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__debate.num_of_audience__",
                            false
                        ],
                        null
                    ],
                    342.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "debate",
        "query": "SELECT Name FROM people GROUP BY Name HAVING MIN(Age) = 48;",
        "question": "Select name from people grouped by name with minimum age equal to 48",
        "tables": [
            "debate",
            "people",
            "debate_people"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "people",
            "grouped",
            "by",
            "name",
            "with",
            "minimum",
            "age",
            "equal",
            "to",
            "48"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "people",
            "GROUP",
            "BY",
            "Name",
            "HAVING",
            "MIN",
            "(",
            "Age",
            ")",
            "=",
            "48"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "people",
            "group",
            "by",
            "name",
            "having",
            "min",
            "(",
            "age",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__people__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__people.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__people.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__people.age__",
                            false
                        ],
                        null
                    ],
                    48.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_2",
        "query": "SELECT job FROM Person GROUP BY job HAVING MAX(age) = 45;",
        "question": "Select job from person grouped by job with maximum age equal to 45",
        "tables": [
            "Person",
            "PersonFriend"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "job",
            "from",
            "person",
            "grouped",
            "by",
            "job",
            "with",
            "maximum",
            "age",
            "equal",
            "to",
            "45"
        ],
        "query_toks": [
            "SELECT",
            "job",
            "FROM",
            "Person",
            "GROUP",
            "BY",
            "job",
            "HAVING",
            "MAX",
            "(",
            "age",
            ")",
            "=",
            "45"
        ],
        "query_toks_no_value": [
            "select",
            "job",
            "from",
            "person",
            "group",
            "by",
            "job",
            "having",
            "max",
            "(",
            "age",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__person__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__person.job__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__person.job__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__person.age__",
                            false
                        ],
                        null
                    ],
                    45.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_2",
        "query": "SELECT friend FROM PersonFriend GROUP BY friend HAVING MIN(year) = 10;",
        "question": "Select friend from person friend grouped by friend with minimum year equal to 10",
        "tables": [
            "Person",
            "PersonFriend"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "friend",
            "from",
            "person",
            "friend",
            "grouped",
            "by",
            "friend",
            "with",
            "minimum",
            "year",
            "equal",
            "to",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "friend",
            "FROM",
            "PersonFriend",
            "GROUP",
            "BY",
            "friend",
            "HAVING",
            "MIN",
            "(",
            "year",
            ")",
            "=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "friend",
            "from",
            "personfriend",
            "group",
            "by",
            "friend",
            "having",
            "min",
            "(",
            "year",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__personfriend__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__personfriend.friend__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__personfriend.friend__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__personfriend.year__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_in_alabama",
        "query": "SELECT Participant_Type_Code FROM Participants GROUP BY Participant_Type_Code HAVING MIN(Participant_ID) = 64;",
        "question": "Select participant type code from participants grouped by participant type code with minimum participant id equal to 64",
        "tables": [
            "Participants",
            "Services",
            "Events",
            "Participants_in_Events"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "participant",
            "type",
            "code",
            "from",
            "participants",
            "grouped",
            "by",
            "participant",
            "type",
            "code",
            "with",
            "minimum",
            "participant",
            "id",
            "equal",
            "to",
            "64"
        ],
        "query_toks": [
            "SELECT",
            "Participant_Type_Code",
            "FROM",
            "Participants",
            "GROUP",
            "BY",
            "Participant_Type_Code",
            "HAVING",
            "MIN",
            "(",
            "Participant_ID",
            ")",
            "=",
            "64"
        ],
        "query_toks_no_value": [
            "select",
            "participant_type_code",
            "from",
            "participants",
            "group",
            "by",
            "participant_type_code",
            "having",
            "min",
            "(",
            "participant_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__participants__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__participants.participant_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__participants.participant_type_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__participants.participant_id__",
                            false
                        ],
                        null
                    ],
                    64.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_in_alabama",
        "query": "SELECT Service_Type_Code FROM Services GROUP BY Service_Type_Code HAVING MAX(Service_ID) = 8;",
        "question": "Select service type code from services grouped by service type code with maximum service id equal to 8",
        "tables": [
            "Participants",
            "Services",
            "Events",
            "Participants_in_Events"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "service",
            "type",
            "code",
            "from",
            "services",
            "grouped",
            "by",
            "service",
            "type",
            "code",
            "with",
            "maximum",
            "service",
            "id",
            "equal",
            "to",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "Service_Type_Code",
            "FROM",
            "Services",
            "GROUP",
            "BY",
            "Service_Type_Code",
            "HAVING",
            "MAX",
            "(",
            "Service_ID",
            ")",
            "=",
            "8"
        ],
        "query_toks_no_value": [
            "select",
            "service_type_code",
            "from",
            "services",
            "group",
            "by",
            "service_type_code",
            "having",
            "max",
            "(",
            "service_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__services__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__services.service_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__services.service_type_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__services.service_id__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_in_alabama",
        "query": "SELECT Event_Details FROM Events GROUP BY Event_Details HAVING MAX(Service_ID) = 6;",
        "question": "Select event details from events grouped by event details with maximum service id equal to 6",
        "tables": [
            "Participants",
            "Services",
            "Events",
            "Participants_in_Events"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "event",
            "details",
            "from",
            "events",
            "grouped",
            "by",
            "event",
            "details",
            "with",
            "maximum",
            "service",
            "id",
            "equal",
            "to",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "Event_Details",
            "FROM",
            "Events",
            "GROUP",
            "BY",
            "Event_Details",
            "HAVING",
            "MAX",
            "(",
            "Service_ID",
            ")",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "event_details",
            "from",
            "events",
            "group",
            "by",
            "event_details",
            "having",
            "max",
            "(",
            "service_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__events__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__events.event_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__events.event_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__events.service_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "climbing",
        "query": "SELECT Name FROM climber GROUP BY Name HAVING MIN(Points) = 6.0;",
        "question": "Select name from climber grouped by name with minimum points equal to 6.0",
        "tables": [
            "climber",
            "mountain"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "climber",
            "grouped",
            "by",
            "name",
            "with",
            "minimum",
            "points",
            "equal",
            "to",
            "6.0"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "climber",
            "GROUP",
            "BY",
            "Name",
            "HAVING",
            "MIN",
            "(",
            "Points",
            ")",
            "=",
            "6.0"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "climber",
            "group",
            "by",
            "name",
            "having",
            "min",
            "(",
            "points",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__climber__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__climber.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__climber.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__climber.points__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "climbing",
        "query": "SELECT Country FROM mountain GROUP BY Country HAVING MAX(Prominence) = 5885.0;",
        "question": "Select country from mountain grouped by country with maximum prominence equal to 5885.0",
        "tables": [
            "climber",
            "mountain"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "country",
            "from",
            "mountain",
            "grouped",
            "by",
            "country",
            "with",
            "maximum",
            "prominence",
            "equal",
            "to",
            "5885.0"
        ],
        "query_toks": [
            "SELECT",
            "Countr",
            "(",
            "Countr",
            ")",
            "FROM",
            "mountain",
            "GROUP",
            "BY",
            "Countr",
            "(",
            "Countr",
            ")",
            "HAVING",
            "MAX",
            "(",
            "Prominence",
            ")",
            "=",
            "5885.0"
        ],
        "query_toks_no_value": [
            "select",
            "countr",
            "(",
            "countr",
            ")",
            "from",
            "mountain",
            "group",
            "by",
            "countr",
            "(",
            "countr",
            ")",
            "having",
            "max",
            "(",
            "prominence",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__mountain__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__mountain.country__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__mountain.country__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__mountain.prominence__",
                            false
                        ],
                        null
                    ],
                    5885.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_learning",
        "query": "SELECT course_description FROM Courses GROUP BY course_description HAVING MAX(author_id) = 6;",
        "question": "Select course description from courses grouped by course description with maximum author id equal to 6",
        "tables": [
            "Courses",
            "Students",
            "Subjects",
            "Course_Authors_and_Tutors",
            "Student_Course_Enrolment",
            "Student_Tests_Taken"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "course",
            "description",
            "from",
            "courses",
            "grouped",
            "by",
            "course",
            "description",
            "with",
            "maximum",
            "author",
            "id",
            "equal",
            "to",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "course_description",
            "FROM",
            "Courses",
            "GROUP",
            "BY",
            "course_description",
            "HAVING",
            "MAX",
            "(",
            "author_id",
            ")",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "course_description",
            "from",
            "courses",
            "group",
            "by",
            "course_description",
            "having",
            "max",
            "(",
            "author_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__courses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__courses.course_description__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__courses.course_description__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__courses.author_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_learning",
        "query": "SELECT middle_name FROM Students GROUP BY middle_name HAVING MAX(student_id) = 7;",
        "question": "Select middle name from students grouped by middle name with maximum student id equal to 7",
        "tables": [
            "Courses",
            "Students",
            "Subjects",
            "Course_Authors_and_Tutors",
            "Student_Course_Enrolment",
            "Student_Tests_Taken"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "middle",
            "name",
            "from",
            "students",
            "grouped",
            "by",
            "middle",
            "name",
            "with",
            "maximum",
            "student",
            "id",
            "equal",
            "to",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "middle_name",
            "FROM",
            "Students",
            "GROUP",
            "BY",
            "middle_name",
            "HAVING",
            "MAX",
            "(",
            "student_id",
            ")",
            "=",
            "7"
        ],
        "query_toks_no_value": [
            "select",
            "middle_name",
            "from",
            "students",
            "group",
            "by",
            "middle_name",
            "having",
            "max",
            "(",
            "student_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__students__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__students.middle_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__students.middle_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__students.student_id__",
                            false
                        ],
                        null
                    ],
                    7.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_learning",
        "query": "SELECT subject_name FROM Subjects GROUP BY subject_name HAVING MAX(subject_id) = 3;",
        "question": "Select subject name from subjects grouped by subject name with maximum subject id equal to 3",
        "tables": [
            "Courses",
            "Students",
            "Subjects",
            "Course_Authors_and_Tutors",
            "Student_Course_Enrolment",
            "Student_Tests_Taken"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "subject",
            "name",
            "from",
            "subjects",
            "grouped",
            "by",
            "subject",
            "name",
            "with",
            "maximum",
            "subject",
            "id",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "subject_name",
            "FROM",
            "Subjects",
            "GROUP",
            "BY",
            "subject_name",
            "HAVING",
            "MAX",
            "(",
            "subject_id",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "subject_name",
            "from",
            "subjects",
            "group",
            "by",
            "subject_name",
            "having",
            "max",
            "(",
            "subject_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__subjects__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__subjects.subject_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__subjects.subject_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__subjects.subject_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_learning",
        "query": "SELECT author_tutor_ATB FROM Course_Authors_and_Tutors GROUP BY author_tutor_ATB HAVING MAX(author_id) = 4;",
        "question": "Select author tutor atb from course authors and tutors grouped by author tutor atb with maximum author id equal to 4",
        "tables": [
            "Courses",
            "Students",
            "Subjects",
            "Course_Authors_and_Tutors",
            "Student_Course_Enrolment",
            "Student_Tests_Taken"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "author",
            "tutor",
            "atb",
            "from",
            "course",
            "authors",
            "and",
            "tutors",
            "grouped",
            "by",
            "author",
            "tutor",
            "atb",
            "with",
            "maximum",
            "author",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "author_tutor_ATB",
            "FROM",
            "Course_Authors_and_Tutors",
            "GROUP",
            "BY",
            "author_tutor_ATB",
            "HAVING",
            "MAX",
            "(",
            "author_id",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "author_tutor_atb",
            "from",
            "course_authors_and_tutors",
            "group",
            "by",
            "author_tutor_atb",
            "having",
            "max",
            "(",
            "author_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__course_authors_and_tutors__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__course_authors_and_tutors.author_tutor_atb__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__course_authors_and_tutors.author_tutor_atb__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__course_authors_and_tutors.author_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_learning",
        "query": "SELECT test_result FROM Student_Tests_Taken GROUP BY test_result HAVING MIN(registration_id) = 5;",
        "question": "Select test result from student tests taken grouped by test result with minimum registration id equal to 5",
        "tables": [
            "Courses",
            "Students",
            "Subjects",
            "Course_Authors_and_Tutors",
            "Student_Course_Enrolment",
            "Student_Tests_Taken"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "test",
            "result",
            "from",
            "student",
            "tests",
            "taken",
            "grouped",
            "by",
            "test",
            "result",
            "with",
            "minimum",
            "registration",
            "id",
            "equal",
            "to",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "test_result",
            "FROM",
            "Student_Tests_Taken",
            "GROUP",
            "BY",
            "test_result",
            "HAVING",
            "MIN",
            "(",
            "registration_id",
            ")",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "test_result",
            "from",
            "student_tests_taken",
            "group",
            "by",
            "test_result",
            "having",
            "min",
            "(",
            "registration_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student_tests_taken__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student_tests_taken.test_result__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__student_tests_taken.test_result__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__student_tests_taken.registration_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "scientist_1",
        "query": "SELECT Project FROM AssignedTo GROUP BY Project HAVING MAX(Scientist) = 745685214;",
        "question": "Select project from assigned to grouped by project with maximum scientist equal to 745685214",
        "tables": [
            "AssignedTo",
            "Projects",
            "Scientists"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "project",
            "from",
            "assigned",
            "to",
            "grouped",
            "by",
            "project",
            "with",
            "maximum",
            "scientist",
            "equal",
            "to",
            "745685214"
        ],
        "query_toks": [
            "SELECT",
            "Project",
            "FROM",
            "AssignedTo",
            "GROUP",
            "BY",
            "Project",
            "HAVING",
            "MAX",
            "(",
            "Scientist",
            ")",
            "=",
            "745685214"
        ],
        "query_toks_no_value": [
            "select",
            "project",
            "from",
            "assignedto",
            "group",
            "by",
            "project",
            "having",
            "max",
            "(",
            "scientist",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__assignedto__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__assignedto.project__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__assignedto.project__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__assignedto.scientist__",
                            false
                        ],
                        null
                    ],
                    745685214.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "scientist_1",
        "query": "SELECT Code FROM Projects GROUP BY Code HAVING MIN(Hours) = 789;",
        "question": "Select code from projects grouped by code with minimum hours equal to 789",
        "tables": [
            "AssignedTo",
            "Projects",
            "Scientists"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "code",
            "from",
            "projects",
            "grouped",
            "by",
            "code",
            "with",
            "minimum",
            "hours",
            "equal",
            "to",
            "789"
        ],
        "query_toks": [
            "SELECT",
            "Code",
            "FROM",
            "Projects",
            "GROUP",
            "BY",
            "Code",
            "HAVING",
            "MIN",
            "(",
            "Hours",
            ")",
            "=",
            "789"
        ],
        "query_toks_no_value": [
            "select",
            "code",
            "from",
            "projects",
            "group",
            "by",
            "code",
            "having",
            "min",
            "(",
            "hours",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__projects__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__projects.code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__projects.code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__projects.hours__",
                            false
                        ],
                        null
                    ],
                    789.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "scientist_1",
        "query": "SELECT Name FROM Scientists GROUP BY Name HAVING MAX(SSN) = 326587417;",
        "question": "Select name from scientists grouped by name with maximum ssn equal to 326587417",
        "tables": [
            "AssignedTo",
            "Projects",
            "Scientists"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "scientists",
            "grouped",
            "by",
            "name",
            "with",
            "maximum",
            "ssn",
            "equal",
            "to",
            "326587417"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "Scientists",
            "GROUP",
            "BY",
            "Name",
            "HAVING",
            "MAX",
            "(",
            "SSN",
            ")",
            "=",
            "326587417"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "scientists",
            "group",
            "by",
            "name",
            "having",
            "max",
            "(",
            "ssn",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__scientists__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__scientists.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__scientists.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__scientists.ssn__",
                            false
                        ],
                        null
                    ],
                    326587417.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "ship_1",
        "query": "SELECT Name FROM captain GROUP BY Name HAVING MIN(Captain_ID) = 1;",
        "question": "Select name from captain grouped by name with minimum captain id equal to 1",
        "tables": [
            "captain",
            "Ship"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "captain",
            "grouped",
            "by",
            "name",
            "with",
            "minimum",
            "captain",
            "id",
            "equal",
            "to",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "captain",
            "GROUP",
            "BY",
            "Name",
            "HAVING",
            "MIN",
            "(",
            "Captain_ID",
            ")",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "captain",
            "group",
            "by",
            "name",
            "having",
            "min",
            "(",
            "captain_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__captain__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__captain.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__captain.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__captain.captain_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "ship_1",
        "query": "SELECT Type FROM Ship GROUP BY Type HAVING MIN(Ship_ID) = 7;",
        "question": "Select type from ship grouped by type with minimum ship id equal to 7",
        "tables": [
            "captain",
            "Ship"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "type",
            "from",
            "ship",
            "grouped",
            "by",
            "type",
            "with",
            "minimum",
            "ship",
            "id",
            "equal",
            "to",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "Type",
            "FROM",
            "Ship",
            "GROUP",
            "BY",
            "Type",
            "HAVING",
            "MIN",
            "(",
            "Ship_ID",
            ")",
            "=",
            "7"
        ],
        "query_toks_no_value": [
            "select",
            "type",
            "from",
            "ship",
            "group",
            "by",
            "type",
            "having",
            "min",
            "(",
            "ship_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__ship__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__ship.type__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__ship.type__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__ship.ship_id__",
                            false
                        ],
                        null
                    ],
                    7.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "entertainment_awards",
        "query": "SELECT Result FROM nomination GROUP BY Result HAVING MAX(Artwork_ID) = 4;",
        "question": "Select result from nomination grouped by result with maximum artwork id equal to 4",
        "tables": [
            "nomination",
            "festival_detail",
            "artwork"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "result",
            "from",
            "nomination",
            "grouped",
            "by",
            "result",
            "with",
            "maximum",
            "artwork",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Result",
            "FROM",
            "nomination",
            "GROUP",
            "BY",
            "Result",
            "HAVING",
            "MAX",
            "(",
            "Artwork_ID",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "result",
            "from",
            "nomination",
            "group",
            "by",
            "result",
            "having",
            "max",
            "(",
            "artwork_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__nomination__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__nomination.result__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__nomination.result__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__nomination.artwork_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "entertainment_awards",
        "query": "SELECT Festival_Name FROM festival_detail GROUP BY Festival_Name HAVING MAX(Festival_ID) = 1;",
        "question": "Select festival name from festival detail grouped by festival name with maximum festival id equal to 1",
        "tables": [
            "nomination",
            "festival_detail",
            "artwork"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "festival",
            "name",
            "from",
            "festival",
            "detail",
            "grouped",
            "by",
            "festival",
            "name",
            "with",
            "maximum",
            "festival",
            "id",
            "equal",
            "to",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Festival_Name",
            "FROM",
            "festival_detail",
            "GROUP",
            "BY",
            "Festival_Name",
            "HAVING",
            "MAX",
            "(",
            "Festival_ID",
            ")",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "festival_name",
            "from",
            "festival_detail",
            "group",
            "by",
            "festival_name",
            "having",
            "max",
            "(",
            "festival_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__festival_detail__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__festival_detail.festival_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__festival_detail.festival_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__festival_detail.festival_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "entertainment_awards",
        "query": "SELECT Type FROM artwork GROUP BY Type HAVING MAX(Artwork_ID) = 8;",
        "question": "Select type from artwork grouped by type with maximum artwork id equal to 8",
        "tables": [
            "nomination",
            "festival_detail",
            "artwork"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "type",
            "from",
            "artwork",
            "grouped",
            "by",
            "type",
            "with",
            "maximum",
            "artwork",
            "id",
            "equal",
            "to",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "Type",
            "FROM",
            "artwork",
            "GROUP",
            "BY",
            "Type",
            "HAVING",
            "MAX",
            "(",
            "Artwork_ID",
            ")",
            "=",
            "8"
        ],
        "query_toks_no_value": [
            "select",
            "type",
            "from",
            "artwork",
            "group",
            "by",
            "type",
            "having",
            "max",
            "(",
            "artwork_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__artwork__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__artwork.type__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__artwork.type__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__artwork.artwork_id__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "allergy_1",
        "query": "SELECT city_code FROM Student GROUP BY city_code HAVING MAX(Major) = 540;",
        "question": "Select city code from student grouped by city code with maximum major equal to 540",
        "tables": [
            "Allergy_Type",
            "Student",
            "Has_Allergy"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "city",
            "code",
            "from",
            "student",
            "grouped",
            "by",
            "city",
            "code",
            "with",
            "maximum",
            "major",
            "equal",
            "to",
            "540"
        ],
        "query_toks": [
            "SELECT",
            "city_code",
            "FROM",
            "Student",
            "GROUP",
            "BY",
            "city_code",
            "HAVING",
            "MAX",
            "(",
            "Major",
            ")",
            "=",
            "540"
        ],
        "query_toks_no_value": [
            "select",
            "city_code",
            "from",
            "student",
            "group",
            "by",
            "city_code",
            "having",
            "max",
            "(",
            "major",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.city_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__student.city_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__student.major__",
                            false
                        ],
                        null
                    ],
                    540.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "allergy_1",
        "query": "SELECT Allergy FROM Has_Allergy GROUP BY Allergy HAVING MAX(StuID) = 1028;",
        "question": "Select allergy from has allergy grouped by allergy with maximum stuid equal to 1028",
        "tables": [
            "Allergy_Type",
            "Student",
            "Has_Allergy"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "allergy",
            "from",
            "has",
            "allergy",
            "grouped",
            "by",
            "allergy",
            "with",
            "maximum",
            "stuid",
            "equal",
            "to",
            "1028"
        ],
        "query_toks": [
            "SELECT",
            "Allergy",
            "FROM",
            "Has_Allergy",
            "GROUP",
            "BY",
            "Allergy",
            "HAVING",
            "MAX",
            "(",
            "StuID",
            ")",
            "=",
            "1028"
        ],
        "query_toks_no_value": [
            "select",
            "allergy",
            "from",
            "has_allergy",
            "group",
            "by",
            "allergy",
            "having",
            "max",
            "(",
            "stuid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__has_allergy__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__has_allergy.allergy__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__has_allergy.allergy__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__has_allergy.stuid__",
                            false
                        ],
                        null
                    ],
                    1028.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_for_hire",
        "query": "SELECT returned_yn FROM Products_Booked GROUP BY returned_yn HAVING MAX(booked_count) = 6;",
        "question": "Select returned yes or no from products booked grouped by returned yes or no with maximum booked count equal to 6",
        "tables": [
            "Products_Booked",
            "Bookings",
            "Customers",
            "Discount_Coupons",
            "View_Product_Availability",
            "Products_for_Hire",
            "Payments"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "returned",
            "yes",
            "or",
            "no",
            "from",
            "products",
            "booked",
            "grouped",
            "by",
            "returned",
            "yes",
            "or",
            "no",
            "with",
            "maximum",
            "booked",
            "count",
            "equal",
            "to",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "returned_yn",
            "FROM",
            "Products_Booked",
            "GROUP",
            "BY",
            "returned_yn",
            "HAVING",
            "MAX",
            "(",
            "booked_count",
            ")",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "returned_yn",
            "from",
            "products_booked",
            "group",
            "by",
            "returned_yn",
            "having",
            "max",
            "(",
            "booked_count",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products_booked__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products_booked.returned_yn__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__products_booked.returned_yn__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__products_booked.booked_count__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_for_hire",
        "query": "SELECT booking_status_code FROM Bookings GROUP BY booking_status_code HAVING MIN(customer_id) = 8;",
        "question": "Select booking status code from bookings grouped by booking status code with minimum customer id equal to 8",
        "tables": [
            "Products_Booked",
            "Bookings",
            "Customers",
            "Discount_Coupons",
            "View_Product_Availability",
            "Products_for_Hire",
            "Payments"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "booking",
            "status",
            "code",
            "from",
            "bookings",
            "grouped",
            "by",
            "booking",
            "status",
            "code",
            "with",
            "minimum",
            "customer",
            "id",
            "equal",
            "to",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "booking_status_code",
            "FROM",
            "Bookings",
            "GROUP",
            "BY",
            "booking_status_code",
            "HAVING",
            "MIN",
            "(",
            "customer_id",
            ")",
            "=",
            "8"
        ],
        "query_toks_no_value": [
            "select",
            "booking_status_code",
            "from",
            "bookings",
            "group",
            "by",
            "booking_status_code",
            "having",
            "min",
            "(",
            "customer_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__bookings__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__bookings.booking_status_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__bookings.booking_status_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__bookings.customer_id__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_for_hire",
        "query": "SELECT gender_mf FROM Customers GROUP BY gender_mf HAVING MAX(customer_id) = 12;",
        "question": "Select gender from customers grouped by gender with maximum customer id equal to 12",
        "tables": [
            "Products_Booked",
            "Bookings",
            "Customers",
            "Discount_Coupons",
            "View_Product_Availability",
            "Products_for_Hire",
            "Payments"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "gender",
            "from",
            "customers",
            "grouped",
            "by",
            "gender",
            "with",
            "maximum",
            "customer",
            "id",
            "equal",
            "to",
            "12"
        ],
        "query_toks": [
            "SELECT",
            "gender_mf",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "gender_mf",
            "HAVING",
            "MAX",
            "(",
            "customer_id",
            ")",
            "=",
            "12"
        ],
        "query_toks_no_value": [
            "select",
            "gender_mf",
            "from",
            "customers",
            "group",
            "by",
            "gender_mf",
            "having",
            "max",
            "(",
            "customer_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.gender_mf__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customers.gender_mf__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__customers.customer_id__",
                            false
                        ],
                        null
                    ],
                    12.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_for_hire",
        "query": "SELECT available_yn FROM View_Product_Availability GROUP BY available_yn HAVING MIN(booking_id) = 5;",
        "question": "Select available yes or no from view product availability grouped by available yes or no with minimum booking id equal to 5",
        "tables": [
            "Products_Booked",
            "Bookings",
            "Customers",
            "Discount_Coupons",
            "View_Product_Availability",
            "Products_for_Hire",
            "Payments"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "available",
            "yes",
            "or",
            "no",
            "from",
            "view",
            "product",
            "availability",
            "grouped",
            "by",
            "available",
            "yes",
            "or",
            "no",
            "with",
            "minimum",
            "booking",
            "id",
            "equal",
            "to",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "available_yn",
            "FROM",
            "View_Product_Availability",
            "GROUP",
            "BY",
            "available_yn",
            "HAVING",
            "MIN",
            "(",
            "booking_id",
            ")",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "available_yn",
            "from",
            "view_product_availability",
            "group",
            "by",
            "available_yn",
            "having",
            "min",
            "(",
            "booking_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__view_product_availability__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__view_product_availability.available_yn__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__view_product_availability.available_yn__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__view_product_availability.booking_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_for_hire",
        "query": "SELECT product_name FROM Products_for_Hire GROUP BY product_name HAVING MAX(daily_hire_cost) = 39.58;",
        "question": "Select product name from products for hire grouped by product name with maximum daily hire cost equal to 39.58",
        "tables": [
            "Products_Booked",
            "Bookings",
            "Customers",
            "Discount_Coupons",
            "View_Product_Availability",
            "Products_for_Hire",
            "Payments"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "product",
            "name",
            "from",
            "products",
            "for",
            "hire",
            "grouped",
            "by",
            "product",
            "name",
            "with",
            "maximum",
            "daily",
            "hire",
            "cost",
            "equal",
            "to",
            "39.58"
        ],
        "query_toks": [
            "SELECT",
            "product_name",
            "FROM",
            "Products_for_Hire",
            "GROUP",
            "BY",
            "product_name",
            "HAVING",
            "MAX",
            "(",
            "daily_hire_cost",
            ")",
            "=",
            "39.58"
        ],
        "query_toks_no_value": [
            "select",
            "product_name",
            "from",
            "products_for_hire",
            "group",
            "by",
            "product_name",
            "having",
            "max",
            "(",
            "daily_hire_cost",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products_for_hire__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products_for_hire.product_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__products_for_hire.product_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__products_for_hire.daily_hire_cost__",
                            false
                        ],
                        null
                    ],
                    39.58,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_for_hire",
        "query": "SELECT amount_paid_in_full_yn FROM Payments GROUP BY amount_paid_in_full_yn HAVING MAX(booking_id) = 5;",
        "question": "Select amount paid in full yn from payments grouped by amount paid in full yn with maximum booking id equal to 5",
        "tables": [
            "Products_Booked",
            "Bookings",
            "Customers",
            "Discount_Coupons",
            "View_Product_Availability",
            "Products_for_Hire",
            "Payments"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "amount",
            "paid",
            "in",
            "full",
            "yn",
            "from",
            "payments",
            "grouped",
            "by",
            "amount",
            "paid",
            "in",
            "full",
            "yn",
            "with",
            "maximum",
            "booking",
            "id",
            "equal",
            "to",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "amount_paid_in_full_yn",
            "FROM",
            "Payments",
            "GROUP",
            "BY",
            "amount_paid_in_full_yn",
            "HAVING",
            "MAX",
            "(",
            "booking_id",
            ")",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "amount_paid_in_full_yn",
            "from",
            "payments",
            "group",
            "by",
            "amount_paid_in_full_yn",
            "having",
            "max",
            "(",
            "booking_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__payments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__payments.amount_paid_in_full_yn__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__payments.amount_paid_in_full_yn__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__payments.booking_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "candidate_poll",
        "query": "SELECT Date FROM candidate GROUP BY Date HAVING MAX(Oppose_rate) = 0.44;",
        "question": "Select date from candidate grouped by date with maximum oppose rate equal to 0.44",
        "tables": [
            "candidate",
            "people"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "date",
            "from",
            "candidate",
            "grouped",
            "by",
            "date",
            "with",
            "maximum",
            "oppose",
            "rate",
            "equal",
            "to",
            "0.44"
        ],
        "query_toks": [
            "SELECT",
            "Date",
            "FROM",
            "candidate",
            "GROUP",
            "BY",
            "Date",
            "HAVING",
            "MAX",
            "(",
            "Oppose_rate",
            ")",
            "=",
            "0.44"
        ],
        "query_toks_no_value": [
            "select",
            "date",
            "from",
            "candidate",
            "group",
            "by",
            "date",
            "having",
            "max",
            "(",
            "oppose_rate",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__candidate__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__candidate.date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__candidate.date__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__candidate.oppose_rate__",
                            false
                        ],
                        null
                    ],
                    0.44,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "candidate_poll",
        "query": "SELECT Sex FROM people GROUP BY Sex HAVING MIN(Weight) = 82.0;",
        "question": "Select sex from people grouped by sex with minimum weight equal to 82.0",
        "tables": [
            "candidate",
            "people"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "sex",
            "from",
            "people",
            "grouped",
            "by",
            "sex",
            "with",
            "minimum",
            "weight",
            "equal",
            "to",
            "82.0"
        ],
        "query_toks": [
            "SELECT",
            "Sex",
            "FROM",
            "people",
            "GROUP",
            "BY",
            "Sex",
            "HAVING",
            "MIN",
            "(",
            "Weight",
            ")",
            "=",
            "82.0"
        ],
        "query_toks_no_value": [
            "select",
            "sex",
            "from",
            "people",
            "group",
            "by",
            "sex",
            "having",
            "min",
            "(",
            "weight",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__people__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__people.sex__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__people.sex__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__people.weight__",
                            false
                        ],
                        null
                    ],
                    82.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "chinook_1",
        "query": "SELECT BillingState FROM Invoice GROUP BY BillingState HAVING MAX(InvoiceId) = 16;",
        "question": "Select billing state from invoice grouped by billing state with maximum invoice id equal to 16",
        "tables": [
            "Invoice",
            "Artist",
            "Album",
            "Track",
            "InvoiceLine",
            "Employee",
            "Playlist",
            "Genre",
            "Customer",
            "PlaylistTrack",
            "MediaType"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "billing",
            "state",
            "from",
            "invoice",
            "grouped",
            "by",
            "billing",
            "state",
            "with",
            "maximum",
            "invoice",
            "id",
            "equal",
            "to",
            "16"
        ],
        "query_toks": [
            "SELECT",
            "BillingState",
            "FROM",
            "Invoice",
            "GROUP",
            "BY",
            "BillingState",
            "HAVING",
            "MAX",
            "(",
            "InvoiceId",
            ")",
            "=",
            "16"
        ],
        "query_toks_no_value": [
            "select",
            "billingstate",
            "from",
            "invoice",
            "group",
            "by",
            "billingstate",
            "having",
            "max",
            "(",
            "invoiceid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__invoice__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__invoice.billingstate__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__invoice.billingstate__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__invoice.invoiceid__",
                            false
                        ],
                        null
                    ],
                    16.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "chinook_1",
        "query": "SELECT Name FROM Artist GROUP BY Name HAVING MAX(ArtistId) = 69;",
        "question": "Select name from artist grouped by name with maximum artist id equal to 69",
        "tables": [
            "Invoice",
            "Artist",
            "Album",
            "Track",
            "InvoiceLine",
            "Employee",
            "Playlist",
            "Genre",
            "Customer",
            "PlaylistTrack",
            "MediaType"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "artist",
            "grouped",
            "by",
            "name",
            "with",
            "maximum",
            "artist",
            "id",
            "equal",
            "to",
            "69"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "Artist",
            "GROUP",
            "BY",
            "Name",
            "HAVING",
            "MAX",
            "(",
            "ArtistId",
            ")",
            "=",
            "69"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "artist",
            "group",
            "by",
            "name",
            "having",
            "max",
            "(",
            "artistid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__artist__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__artist.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__artist.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__artist.artistid__",
                            false
                        ],
                        null
                    ],
                    69.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "chinook_1",
        "query": "SELECT Title FROM Album GROUP BY Title HAVING MIN(AlbumId) = 114;",
        "question": "Select title from album grouped by title with minimum album id equal to 114",
        "tables": [
            "Invoice",
            "Artist",
            "Album",
            "Track",
            "InvoiceLine",
            "Employee",
            "Playlist",
            "Genre",
            "Customer",
            "PlaylistTrack",
            "MediaType"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "title",
            "from",
            "album",
            "grouped",
            "by",
            "title",
            "with",
            "minimum",
            "album",
            "id",
            "equal",
            "to",
            "114"
        ],
        "query_toks": [
            "SELECT",
            "Title",
            "FROM",
            "Album",
            "GROUP",
            "BY",
            "Title",
            "HAVING",
            "MIN",
            "(",
            "AlbumId",
            ")",
            "=",
            "114"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "album",
            "group",
            "by",
            "title",
            "having",
            "min",
            "(",
            "albumid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__album__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__album.title__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__album.title__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__album.albumid__",
                            false
                        ],
                        null
                    ],
                    114.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "chinook_1",
        "query": "SELECT Composer FROM Track GROUP BY Composer HAVING MAX(TrackId) = 2831;",
        "question": "Select composer from track grouped by composer with maximum track id equal to 2831",
        "tables": [
            "Invoice",
            "Artist",
            "Album",
            "Track",
            "InvoiceLine",
            "Employee",
            "Playlist",
            "Genre",
            "Customer",
            "PlaylistTrack",
            "MediaType"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "composer",
            "from",
            "track",
            "grouped",
            "by",
            "composer",
            "with",
            "maximum",
            "track",
            "id",
            "equal",
            "to",
            "2831"
        ],
        "query_toks": [
            "SELECT",
            "Composer",
            "FROM",
            "Track",
            "GROUP",
            "BY",
            "Composer",
            "HAVING",
            "MAX",
            "(",
            "TrackId",
            ")",
            "=",
            "2831"
        ],
        "query_toks_no_value": [
            "select",
            "composer",
            "from",
            "track",
            "group",
            "by",
            "composer",
            "having",
            "max",
            "(",
            "trackid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__track__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__track.composer__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__track.composer__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__track.trackid__",
                            false
                        ],
                        null
                    ],
                    2831.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "chinook_1",
        "query": "SELECT Address FROM Employee GROUP BY Address HAVING MAX(ReportsTo) = 6;",
        "question": "Select address from employee grouped by address with maximum reports to equal to 6",
        "tables": [
            "Invoice",
            "Artist",
            "Album",
            "Track",
            "InvoiceLine",
            "Employee",
            "Playlist",
            "Genre",
            "Customer",
            "PlaylistTrack",
            "MediaType"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "address",
            "from",
            "employee",
            "grouped",
            "by",
            "address",
            "with",
            "maximum",
            "reports",
            "to",
            "equal",
            "to",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "Address",
            "FROM",
            "Employee",
            "GROUP",
            "BY",
            "Address",
            "HAVING",
            "MAX",
            "(",
            "ReportsTo",
            ")",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "address",
            "from",
            "employee",
            "group",
            "by",
            "address",
            "having",
            "max",
            "(",
            "reportsto",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__employee__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__employee.address__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__employee.address__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__employee.reportsto__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "chinook_1",
        "query": "SELECT Name FROM Playlist GROUP BY Name HAVING MAX(PlaylistId) = 15;",
        "question": "Select name from playlist grouped by name with maximum play list id equal to 15",
        "tables": [
            "Invoice",
            "Artist",
            "Album",
            "Track",
            "InvoiceLine",
            "Employee",
            "Playlist",
            "Genre",
            "Customer",
            "PlaylistTrack",
            "MediaType"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "playlist",
            "grouped",
            "by",
            "name",
            "with",
            "maximum",
            "play",
            "list",
            "id",
            "equal",
            "to",
            "15"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "Playlist",
            "GROUP",
            "BY",
            "Name",
            "HAVING",
            "MAX",
            "(",
            "PlaylistId",
            ")",
            "=",
            "15"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "playlist",
            "group",
            "by",
            "name",
            "having",
            "max",
            "(",
            "playlistid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__playlist__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__playlist.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__playlist.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__playlist.playlistid__",
                            false
                        ],
                        null
                    ],
                    15.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "chinook_1",
        "query": "SELECT Name FROM Genre GROUP BY Name HAVING MAX(GenreId) = 11;",
        "question": "Select name from genre grouped by name with maximum genre id equal to 11",
        "tables": [
            "Invoice",
            "Artist",
            "Album",
            "Track",
            "InvoiceLine",
            "Employee",
            "Playlist",
            "Genre",
            "Customer",
            "PlaylistTrack",
            "MediaType"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "genre",
            "grouped",
            "by",
            "name",
            "with",
            "maximum",
            "genre",
            "id",
            "equal",
            "to",
            "11"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "Genre",
            "GROUP",
            "BY",
            "Name",
            "HAVING",
            "MAX",
            "(",
            "GenreId",
            ")",
            "=",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "genre",
            "group",
            "by",
            "name",
            "having",
            "max",
            "(",
            "genreid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__genre__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__genre.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__genre.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__genre.genreid__",
                            false
                        ],
                        null
                    ],
                    11.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "chinook_1",
        "query": "SELECT FirstName FROM Customer GROUP BY FirstName HAVING MIN(CustomerId) = 59;",
        "question": "Select first name from customer grouped by first name with minimum customer id equal to 59",
        "tables": [
            "Invoice",
            "Artist",
            "Album",
            "Track",
            "InvoiceLine",
            "Employee",
            "Playlist",
            "Genre",
            "Customer",
            "PlaylistTrack",
            "MediaType"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "first",
            "name",
            "from",
            "customer",
            "grouped",
            "by",
            "first",
            "name",
            "with",
            "minimum",
            "customer",
            "id",
            "equal",
            "to",
            "59"
        ],
        "query_toks": [
            "SELECT",
            "FirstName",
            "FROM",
            "Customer",
            "GROUP",
            "BY",
            "FirstName",
            "HAVING",
            "MIN",
            "(",
            "CustomerId",
            ")",
            "=",
            "59"
        ],
        "query_toks_no_value": [
            "select",
            "firstname",
            "from",
            "customer",
            "group",
            "by",
            "firstname",
            "having",
            "min",
            "(",
            "customerid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer.firstname__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customer.firstname__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__customer.customerid__",
                            false
                        ],
                        null
                    ],
                    59.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "chinook_1",
        "query": "SELECT Name FROM MediaType GROUP BY Name HAVING MIN(MediaTypeId) = 3;",
        "question": "Select name from media type grouped by name with minimum media type id equal to 3",
        "tables": [
            "Invoice",
            "Artist",
            "Album",
            "Track",
            "InvoiceLine",
            "Employee",
            "Playlist",
            "Genre",
            "Customer",
            "PlaylistTrack",
            "MediaType"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "media",
            "type",
            "grouped",
            "by",
            "name",
            "with",
            "minimum",
            "media",
            "type",
            "id",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "MediaType",
            "GROUP",
            "BY",
            "Name",
            "HAVING",
            "MIN",
            "(",
            "MediaTypeId",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "mediatype",
            "group",
            "by",
            "name",
            "having",
            "min",
            "(",
            "mediatypeid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__mediatype__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__mediatype.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__mediatype.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__mediatype.mediatypeid__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_4",
        "query": "SELECT city FROM airports GROUP BY city HAVING MIN(y) = 67.40750122070312;",
        "question": "Select city from airports grouped by city with minimum y equal to 67.40750122070312",
        "tables": [
            "airports",
            "routes",
            "airlines"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "city",
            "from",
            "airports",
            "grouped",
            "by",
            "city",
            "with",
            "minimum",
            "y",
            "equal",
            "to",
            "67.40750122070312"
        ],
        "query_toks": [
            "SELECT",
            "city",
            "FROM",
            "airports",
            "GROUP",
            "BY",
            "city",
            "HAVING",
            "MIN",
            "(",
            "y",
            ")",
            "=",
            "67.40750122070312"
        ],
        "query_toks_no_value": [
            "select",
            "city",
            "from",
            "airports",
            "group",
            "by",
            "city",
            "having",
            "min",
            "(",
            "y",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__airports__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__airports.city__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__airports.city__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__airports.y__",
                            false
                        ],
                        null
                    ],
                    67.40750122070312,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_4",
        "query": "SELECT codeshare FROM routes GROUP BY codeshare HAVING MAX(src_apid) = 6098;",
        "question": "Select code share from routes grouped by code share with maximum source airport id equal to 6098",
        "tables": [
            "airports",
            "routes",
            "airlines"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "code",
            "share",
            "from",
            "routes",
            "grouped",
            "by",
            "code",
            "share",
            "with",
            "maximum",
            "source",
            "airport",
            "id",
            "equal",
            "to",
            "6098"
        ],
        "query_toks": [
            "SELECT",
            "codeshare",
            "FROM",
            "routes",
            "GROUP",
            "BY",
            "codeshare",
            "HAVING",
            "MAX",
            "(",
            "src_apid",
            ")",
            "=",
            "6098"
        ],
        "query_toks_no_value": [
            "select",
            "codeshare",
            "from",
            "routes",
            "group",
            "by",
            "codeshare",
            "having",
            "max",
            "(",
            "src_apid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__routes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__routes.codeshare__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__routes.codeshare__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__routes.src_apid__",
                            false
                        ],
                        null
                    ],
                    6098.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_4",
        "query": "SELECT callsign FROM airlines GROUP BY callsign HAVING MAX(alid) = 72;",
        "question": "Select call sign from airlines grouped by call sign with maximum airline id equal to 72",
        "tables": [
            "airports",
            "routes",
            "airlines"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "call",
            "sign",
            "from",
            "airlines",
            "grouped",
            "by",
            "call",
            "sign",
            "with",
            "maximum",
            "airline",
            "id",
            "equal",
            "to",
            "72"
        ],
        "query_toks": [
            "SELECT",
            "callsign",
            "FROM",
            "airlines",
            "GROUP",
            "BY",
            "callsign",
            "HAVING",
            "MAX",
            "(",
            "alid",
            ")",
            "=",
            "72"
        ],
        "query_toks_no_value": [
            "select",
            "callsign",
            "from",
            "airlines",
            "group",
            "by",
            "callsign",
            "having",
            "max",
            "(",
            "alid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__airlines__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__airlines.callsign__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__airlines.callsign__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__airlines.alid__",
                            false
                        ],
                        null
                    ],
                    72.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "query": "SELECT city_code FROM Student GROUP BY city_code HAVING MIN(Major) = 100;",
        "question": "Select city code from student grouped by city code with minimum major equal to 100",
        "tables": [
            "Has_Pet",
            "Student",
            "Pets"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "city",
            "code",
            "from",
            "student",
            "grouped",
            "by",
            "city",
            "code",
            "with",
            "minimum",
            "major",
            "equal",
            "to",
            "100"
        ],
        "query_toks": [
            "SELECT",
            "city_code",
            "FROM",
            "Student",
            "GROUP",
            "BY",
            "city_code",
            "HAVING",
            "MIN",
            "(",
            "Major",
            ")",
            "=",
            "100"
        ],
        "query_toks_no_value": [
            "select",
            "city_code",
            "from",
            "student",
            "group",
            "by",
            "city_code",
            "having",
            "min",
            "(",
            "major",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.city_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__student.city_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__student.major__",
                            false
                        ],
                        null
                    ],
                    100.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "query": "SELECT PetType FROM Pets GROUP BY PetType HAVING MAX(pet_age) = 3;",
        "question": "Select pet type from pets grouped by pet type with maximum pet age equal to 3",
        "tables": [
            "Has_Pet",
            "Student",
            "Pets"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "pet",
            "type",
            "from",
            "pets",
            "grouped",
            "by",
            "pet",
            "type",
            "with",
            "maximum",
            "pet",
            "age",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "PetType",
            "FROM",
            "Pets",
            "GROUP",
            "BY",
            "PetType",
            "HAVING",
            "MAX",
            "(",
            "pet_age",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "pettype",
            "from",
            "pets",
            "group",
            "by",
            "pettype",
            "having",
            "max",
            "(",
            "pet_age",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__pets__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__pets.pettype__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__pets.pettype__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__pets.pet_age__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dorm_1",
        "query": "SELECT gender FROM Dorm GROUP BY gender HAVING MAX(dormid) = 100;",
        "question": "Select gender from dorm grouped by gender with maximum dorm id equal to 100",
        "tables": [
            "Dorm",
            "Has_amenity",
            "Student",
            "Lives_in",
            "Dorm_amenity"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "gender",
            "from",
            "dorm",
            "grouped",
            "by",
            "gender",
            "with",
            "maximum",
            "dorm",
            "id",
            "equal",
            "to",
            "100"
        ],
        "query_toks": [
            "SELECT",
            "gender",
            "FROM",
            "Dorm",
            "GROUP",
            "BY",
            "gender",
            "HAVING",
            "MAX",
            "(",
            "dormid",
            ")",
            "=",
            "100"
        ],
        "query_toks_no_value": [
            "select",
            "gender",
            "from",
            "dorm",
            "group",
            "by",
            "gender",
            "having",
            "max",
            "(",
            "dormid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__dorm__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__dorm.gender__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__dorm.gender__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__dorm.dormid__",
                            false
                        ],
                        null
                    ],
                    100.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dorm_1",
        "query": "SELECT LName FROM Student GROUP BY LName HAVING MIN(Age) = 16;",
        "question": "Select last name from student grouped by last name with minimum age equal to 16",
        "tables": [
            "Dorm",
            "Has_amenity",
            "Student",
            "Lives_in",
            "Dorm_amenity"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "last",
            "name",
            "from",
            "student",
            "grouped",
            "by",
            "last",
            "name",
            "with",
            "minimum",
            "age",
            "equal",
            "to",
            "16"
        ],
        "query_toks": [
            "SELECT",
            "LName",
            "FROM",
            "Student",
            "GROUP",
            "BY",
            "LName",
            "HAVING",
            "MIN",
            "(",
            "Age",
            ")",
            "=",
            "16"
        ],
        "query_toks_no_value": [
            "select",
            "lname",
            "from",
            "student",
            "group",
            "by",
            "lname",
            "having",
            "min",
            "(",
            "age",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.lname__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__student.lname__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__student.age__",
                            false
                        ],
                        null
                    ],
                    16.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dorm_1",
        "query": "SELECT amenity_name FROM Dorm_amenity GROUP BY amenity_name HAVING MAX(amenid) = 930;",
        "question": "Select amenity name from dorm amenity grouped by amenity name with maximum amenity id equal to 930",
        "tables": [
            "Dorm",
            "Has_amenity",
            "Student",
            "Lives_in",
            "Dorm_amenity"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "amenity",
            "name",
            "from",
            "dorm",
            "amenity",
            "grouped",
            "by",
            "amenity",
            "name",
            "with",
            "maximum",
            "amenity",
            "id",
            "equal",
            "to",
            "930"
        ],
        "query_toks": [
            "SELECT",
            "amenity_name",
            "FROM",
            "Dorm_amenity",
            "GROUP",
            "BY",
            "amenity_name",
            "HAVING",
            "MAX",
            "(",
            "amenid",
            ")",
            "=",
            "930"
        ],
        "query_toks_no_value": [
            "select",
            "amenity_name",
            "from",
            "dorm_amenity",
            "group",
            "by",
            "amenity_name",
            "having",
            "max",
            "(",
            "amenid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__dorm_amenity__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__dorm_amenity.amenity_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__dorm_amenity.amenity_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__dorm_amenity.amenid__",
                            false
                        ],
                        null
                    ],
                    930.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "journal_committee",
        "query": "SELECT Work_Type FROM journal_committee GROUP BY Work_Type HAVING MAX(Editor_ID) = 8;",
        "question": "Select work type from journal committee grouped by work type with maximum editor id equal to 8",
        "tables": [
            "journal_committee",
            "editor",
            "journal"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "work",
            "type",
            "from",
            "journal",
            "committee",
            "grouped",
            "by",
            "work",
            "type",
            "with",
            "maximum",
            "editor",
            "id",
            "equal",
            "to",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "Work_Type",
            "FROM",
            "journal_committee",
            "GROUP",
            "BY",
            "Work_Type",
            "HAVING",
            "MAX",
            "(",
            "Editor_ID",
            ")",
            "=",
            "8"
        ],
        "query_toks_no_value": [
            "select",
            "work_type",
            "from",
            "journal_committee",
            "group",
            "by",
            "work_type",
            "having",
            "max",
            "(",
            "editor_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__journal_committee__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__journal_committee.work_type__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__journal_committee.work_type__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__journal_committee.editor_id__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "journal_committee",
        "query": "SELECT Name FROM editor GROUP BY Name HAVING MAX(Age) = 20.0;",
        "question": "Select name from editor grouped by name with maximum age equal to 20.0",
        "tables": [
            "journal_committee",
            "editor",
            "journal"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "editor",
            "grouped",
            "by",
            "name",
            "with",
            "maximum",
            "age",
            "equal",
            "to",
            "20.0"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "editor",
            "GROUP",
            "BY",
            "Name",
            "HAVING",
            "MAX",
            "(",
            "Age",
            ")",
            "=",
            "20.0"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "editor",
            "group",
            "by",
            "name",
            "having",
            "max",
            "(",
            "age",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__editor__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__editor.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__editor.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__editor.age__",
                            false
                        ],
                        null
                    ],
                    20.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "journal_committee",
        "query": "SELECT Theme FROM journal GROUP BY Theme HAVING MIN(Journal_ID) = 17;",
        "question": "Select theme from journal grouped by theme with minimum journal id equal to 17",
        "tables": [
            "journal_committee",
            "editor",
            "journal"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "theme",
            "from",
            "journal",
            "grouped",
            "by",
            "theme",
            "with",
            "minimum",
            "journal",
            "id",
            "equal",
            "to",
            "17"
        ],
        "query_toks": [
            "SELECT",
            "Theme",
            "FROM",
            "journal",
            "GROUP",
            "BY",
            "Theme",
            "HAVING",
            "MIN",
            "(",
            "Journal_ID",
            ")",
            "=",
            "17"
        ],
        "query_toks_no_value": [
            "select",
            "theme",
            "from",
            "journal",
            "group",
            "by",
            "theme",
            "having",
            "min",
            "(",
            "journal_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__journal__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__journal.theme__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__journal.theme__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__journal.journal_id__",
                            false
                        ],
                        null
                    ],
                    17.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_1",
        "query": "SELECT name FROM employee GROUP BY name HAVING MAX(salary) = 24450;",
        "question": "Select name from employee grouped by name with maximum salary equal to 24450",
        "tables": [
            "employee",
            "aircraft",
            "certificate",
            "flight"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "employee",
            "grouped",
            "by",
            "name",
            "with",
            "maximum",
            "salary",
            "equal",
            "to",
            "24450"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "employee",
            "GROUP",
            "BY",
            "name",
            "HAVING",
            "MAX",
            "(",
            "salary",
            ")",
            "=",
            "24450"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "employee",
            "group",
            "by",
            "name",
            "having",
            "max",
            "(",
            "salary",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__employee__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__employee.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__employee.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__employee.salary__",
                            false
                        ],
                        null
                    ],
                    24450.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_1",
        "query": "SELECT name FROM aircraft GROUP BY name HAVING MIN(distance) = 6475;",
        "question": "Select name from aircraft grouped by name with minimum distance equal to 6475",
        "tables": [
            "employee",
            "aircraft",
            "certificate",
            "flight"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "aircraft",
            "grouped",
            "by",
            "name",
            "with",
            "minimum",
            "distance",
            "equal",
            "to",
            "6475"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "aircraft",
            "GROUP",
            "BY",
            "name",
            "HAVING",
            "MIN",
            "(",
            "distance",
            ")",
            "=",
            "6475"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "aircraft",
            "group",
            "by",
            "name",
            "having",
            "min",
            "(",
            "distance",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__aircraft__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__aircraft.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__aircraft.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__aircraft.distance__",
                            false
                        ],
                        null
                    ],
                    6475.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_1",
        "query": "SELECT origin FROM flight GROUP BY origin HAVING MIN(flno) = 2;",
        "question": "Select origin from flight grouped by origin with minimum flight number equal to 2",
        "tables": [
            "employee",
            "aircraft",
            "certificate",
            "flight"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "origin",
            "from",
            "flight",
            "grouped",
            "by",
            "origin",
            "with",
            "minimum",
            "flight",
            "number",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "origin",
            "FROM",
            "flight",
            "GROUP",
            "BY",
            "origin",
            "HAVING",
            "MIN",
            "(",
            "flno",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "origin",
            "from",
            "flight",
            "group",
            "by",
            "origin",
            "having",
            "min",
            "(",
            "flno",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__flight__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__flight.origin__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__flight.origin__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__flight.flno__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "query": "SELECT interaction_type FROM medicine_enzyme_interaction GROUP BY interaction_type HAVING MAX(medicine_id) = 2;",
        "question": "Select interaction type from medicine enzyme interaction grouped by interaction type with maximum medicine id equal to 2",
        "tables": [
            "medicine_enzyme_interaction",
            "enzyme",
            "medicine"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "interaction",
            "type",
            "from",
            "medicine",
            "enzyme",
            "interaction",
            "grouped",
            "by",
            "interaction",
            "type",
            "with",
            "maximum",
            "medicine",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "interaction_type",
            "FROM",
            "medicine_enzyme_interaction",
            "GROUP",
            "BY",
            "interaction_type",
            "HAVING",
            "MAX",
            "(",
            "medicine_id",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "interaction_type",
            "from",
            "medicine_enzyme_interaction",
            "group",
            "by",
            "interaction_type",
            "having",
            "max",
            "(",
            "medicine_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__medicine_enzyme_interaction__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__medicine_enzyme_interaction.interaction_type__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__medicine_enzyme_interaction.interaction_type__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__medicine_enzyme_interaction.medicine_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "query": "SELECT Porphyria FROM enzyme GROUP BY Porphyria HAVING MAX(OMIM) = 125270;",
        "question": "Select porphyria from enzyme grouped by porphyria with maximum omim equal to 125270",
        "tables": [
            "medicine_enzyme_interaction",
            "enzyme",
            "medicine"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "porphyria",
            "from",
            "enzyme",
            "grouped",
            "by",
            "porphyria",
            "with",
            "maximum",
            "omim",
            "equal",
            "to",
            "125270"
        ],
        "query_toks": [
            "SELECT",
            "Porphyria",
            "FROM",
            "enzyme",
            "GROUP",
            "BY",
            "Porphyria",
            "HAVING",
            "MAX",
            "(",
            "OMIM",
            ")",
            "=",
            "125270"
        ],
        "query_toks_no_value": [
            "select",
            "porphyria",
            "from",
            "enzyme",
            "group",
            "by",
            "porphyria",
            "having",
            "max",
            "(",
            "omim",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__enzyme__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__enzyme.porphyria__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__enzyme.porphyria__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__enzyme.omim__",
                            false
                        ],
                        null
                    ],
                    125270.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "query": "SELECT name FROM medicine GROUP BY name HAVING MAX(id) = 21;",
        "question": "Select name from medicine grouped by name with maximum id equal to 21",
        "tables": [
            "medicine_enzyme_interaction",
            "enzyme",
            "medicine"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "medicine",
            "grouped",
            "by",
            "name",
            "with",
            "maximum",
            "id",
            "equal",
            "to",
            "21"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "medicine",
            "GROUP",
            "BY",
            "name",
            "HAVING",
            "MAX",
            "(",
            "id",
            ")",
            "=",
            "21"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "medicine",
            "group",
            "by",
            "name",
            "having",
            "max",
            "(",
            "id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__medicine__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__medicine.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__medicine.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__medicine.id__",
                            false
                        ],
                        null
                    ],
                    21.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_and_lot",
        "query": "SELECT other_details FROM Residents GROUP BY other_details HAVING MIN(property_id) = 954;",
        "question": "Select other details from residents grouped by other details with minimum property id equal to 954",
        "tables": [
            "Residents",
            "Timed_Status_of_Things",
            "Things",
            "Organizations",
            "Services",
            "Residents_Services",
            "Customers",
            "Properties",
            "Customer_Events",
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "other",
            "details",
            "from",
            "residents",
            "grouped",
            "by",
            "other",
            "details",
            "with",
            "minimum",
            "property",
            "id",
            "equal",
            "to",
            "954"
        ],
        "query_toks": [
            "SELECT",
            "other_details",
            "FROM",
            "Residents",
            "GROUP",
            "BY",
            "other_details",
            "HAVING",
            "MIN",
            "(",
            "property_id",
            ")",
            "=",
            "954"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            "from",
            "residents",
            "group",
            "by",
            "other_details",
            "having",
            "min",
            "(",
            "property_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__residents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__residents.other_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__residents.other_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__residents.property_id__",
                            false
                        ],
                        null
                    ],
                    954.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_and_lot",
        "query": "SELECT Status_of_Thing_Code FROM Timed_Status_of_Things GROUP BY Status_of_Thing_Code HAVING MIN(thing_id) = 84;",
        "question": "Select status of thing code from timed status of things grouped by status of thing code with minimum thing id equal to 84",
        "tables": [
            "Residents",
            "Timed_Status_of_Things",
            "Things",
            "Organizations",
            "Services",
            "Residents_Services",
            "Customers",
            "Properties",
            "Customer_Events",
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "status",
            "of",
            "thing",
            "code",
            "from",
            "timed",
            "status",
            "of",
            "things",
            "grouped",
            "by",
            "status",
            "of",
            "thing",
            "code",
            "with",
            "minimum",
            "thing",
            "id",
            "equal",
            "to",
            "84"
        ],
        "query_toks": [
            "SELECT",
            "Status_of_Thing_Code",
            "FROM",
            "Timed_Status_of_Things",
            "GROUP",
            "BY",
            "Status_of_Thing_Code",
            "HAVING",
            "MIN",
            "(",
            "thing_id",
            ")",
            "=",
            "84"
        ],
        "query_toks_no_value": [
            "select",
            "status_of_thing_code",
            "from",
            "timed_status_of_things",
            "group",
            "by",
            "status_of_thing_code",
            "having",
            "min",
            "(",
            "thing_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__timed_status_of_things__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__timed_status_of_things.status_of_thing_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__timed_status_of_things.status_of_thing_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__timed_status_of_things.thing_id__",
                            false
                        ],
                        null
                    ],
                    84.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_and_lot",
        "query": "SELECT service_type_code FROM Things GROUP BY service_type_code HAVING MAX(thing_id) = 58;",
        "question": "Select service type code from things grouped by service type code with maximum thing id equal to 58",
        "tables": [
            "Residents",
            "Timed_Status_of_Things",
            "Things",
            "Organizations",
            "Services",
            "Residents_Services",
            "Customers",
            "Properties",
            "Customer_Events",
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "service",
            "type",
            "code",
            "from",
            "things",
            "grouped",
            "by",
            "service",
            "type",
            "code",
            "with",
            "maximum",
            "thing",
            "id",
            "equal",
            "to",
            "58"
        ],
        "query_toks": [
            "SELECT",
            "service_type_code",
            "FROM",
            "Things",
            "GROUP",
            "BY",
            "service_type_code",
            "HAVING",
            "MAX",
            "(",
            "thing_id",
            ")",
            "=",
            "58"
        ],
        "query_toks_no_value": [
            "select",
            "service_type_code",
            "from",
            "things",
            "group",
            "by",
            "service_type_code",
            "having",
            "max",
            "(",
            "thing_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__things__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__things.service_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__things.service_type_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__things.thing_id__",
                            false
                        ],
                        null
                    ],
                    58.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_and_lot",
        "query": "SELECT organization_details FROM Organizations GROUP BY organization_details HAVING MAX(parent_organization_id) = 7;",
        "question": "Select organization details from organizations grouped by organization details with maximum parent organization id equal to 7",
        "tables": [
            "Residents",
            "Timed_Status_of_Things",
            "Things",
            "Organizations",
            "Services",
            "Residents_Services",
            "Customers",
            "Properties",
            "Customer_Events",
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "organization",
            "details",
            "from",
            "organizations",
            "grouped",
            "by",
            "organization",
            "details",
            "with",
            "maximum",
            "parent",
            "organization",
            "id",
            "equal",
            "to",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "organization_details",
            "FROM",
            "Organizations",
            "GROUP",
            "BY",
            "organization_details",
            "HAVING",
            "MAX",
            "(",
            "parent_organization_id",
            ")",
            "=",
            "7"
        ],
        "query_toks_no_value": [
            "select",
            "organization_details",
            "from",
            "organizations",
            "group",
            "by",
            "organization_details",
            "having",
            "max",
            "(",
            "parent_organization_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__organizations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__organizations.organization_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__organizations.organization_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__organizations.parent_organization_id__",
                            false
                        ],
                        null
                    ],
                    7.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_and_lot",
        "query": "SELECT service_type_code FROM Services GROUP BY service_type_code HAVING MIN(service_id) = 47;",
        "question": "Select service type code from services grouped by service type code with minimum service id equal to 47",
        "tables": [
            "Residents",
            "Timed_Status_of_Things",
            "Things",
            "Organizations",
            "Services",
            "Residents_Services",
            "Customers",
            "Properties",
            "Customer_Events",
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "service",
            "type",
            "code",
            "from",
            "services",
            "grouped",
            "by",
            "service",
            "type",
            "code",
            "with",
            "minimum",
            "service",
            "id",
            "equal",
            "to",
            "47"
        ],
        "query_toks": [
            "SELECT",
            "service_type_code",
            "FROM",
            "Services",
            "GROUP",
            "BY",
            "service_type_code",
            "HAVING",
            "MIN",
            "(",
            "service_id",
            ")",
            "=",
            "47"
        ],
        "query_toks_no_value": [
            "select",
            "service_type_code",
            "from",
            "services",
            "group",
            "by",
            "service_type_code",
            "having",
            "min",
            "(",
            "service_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__services__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__services.service_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__services.service_type_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__services.service_id__",
                            false
                        ],
                        null
                    ],
                    47.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_and_lot",
        "query": "SELECT other_details FROM Residents_Services GROUP BY other_details HAVING MIN(property_id) = 879;",
        "question": "Select other details from residents services grouped by other details with minimum property id equal to 879",
        "tables": [
            "Residents",
            "Timed_Status_of_Things",
            "Things",
            "Organizations",
            "Services",
            "Residents_Services",
            "Customers",
            "Properties",
            "Customer_Events",
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "other",
            "details",
            "from",
            "residents",
            "services",
            "grouped",
            "by",
            "other",
            "details",
            "with",
            "minimum",
            "property",
            "id",
            "equal",
            "to",
            "879"
        ],
        "query_toks": [
            "SELECT",
            "other_details",
            "FROM",
            "Residents_Services",
            "GROUP",
            "BY",
            "other_details",
            "HAVING",
            "MIN",
            "(",
            "property_id",
            ")",
            "=",
            "879"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            "from",
            "residents_services",
            "group",
            "by",
            "other_details",
            "having",
            "min",
            "(",
            "property_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__residents_services__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__residents_services.other_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__residents_services.other_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__residents_services.property_id__",
                            false
                        ],
                        null
                    ],
                    879.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_and_lot",
        "query": "SELECT customer_details FROM Customers GROUP BY customer_details HAVING MAX(customer_id) = 5;",
        "question": "Select customer details from customers grouped by customer details with maximum customer id equal to 5",
        "tables": [
            "Residents",
            "Timed_Status_of_Things",
            "Things",
            "Organizations",
            "Services",
            "Residents_Services",
            "Customers",
            "Properties",
            "Customer_Events",
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "customer",
            "details",
            "from",
            "customers",
            "grouped",
            "by",
            "customer",
            "details",
            "with",
            "maximum",
            "customer",
            "id",
            "equal",
            "to",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "customer_details",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "customer_details",
            "HAVING",
            "MAX",
            "(",
            "customer_id",
            ")",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "customer_details",
            "from",
            "customers",
            "group",
            "by",
            "customer_details",
            "having",
            "max",
            "(",
            "customer_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customers.customer_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__customers.customer_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_and_lot",
        "query": "SELECT property_type_code FROM Properties GROUP BY property_type_code HAVING MIN(property_id) = 373;",
        "question": "Select property type code from properties grouped by property type code with minimum property id equal to 373",
        "tables": [
            "Residents",
            "Timed_Status_of_Things",
            "Things",
            "Organizations",
            "Services",
            "Residents_Services",
            "Customers",
            "Properties",
            "Customer_Events",
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "property",
            "type",
            "code",
            "from",
            "properties",
            "grouped",
            "by",
            "property",
            "type",
            "code",
            "with",
            "minimum",
            "property",
            "id",
            "equal",
            "to",
            "373"
        ],
        "query_toks": [
            "SELECT",
            "property_type_code",
            "FROM",
            "Properties",
            "GROUP",
            "BY",
            "property_type_code",
            "HAVING",
            "MIN",
            "(",
            "property_id",
            ")",
            "=",
            "373"
        ],
        "query_toks_no_value": [
            "select",
            "property_type_code",
            "from",
            "properties",
            "group",
            "by",
            "property_type_code",
            "having",
            "min",
            "(",
            "property_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__properties__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__properties.property_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__properties.property_type_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__properties.property_id__",
                            false
                        ],
                        null
                    ],
                    373.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_and_lot",
        "query": "SELECT service_type_code FROM Customer_Event_Notes GROUP BY service_type_code HAVING MIN(Customer_Event_Note_ID) = 50;",
        "question": "Select service type code from customer event notes grouped by service type code with minimum customer event note id equal to 50",
        "tables": [
            "Residents",
            "Timed_Status_of_Things",
            "Things",
            "Organizations",
            "Services",
            "Residents_Services",
            "Customers",
            "Properties",
            "Customer_Events",
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "service",
            "type",
            "code",
            "from",
            "customer",
            "event",
            "notes",
            "grouped",
            "by",
            "service",
            "type",
            "code",
            "with",
            "minimum",
            "customer",
            "event",
            "note",
            "id",
            "equal",
            "to",
            "50"
        ],
        "query_toks": [
            "SELECT",
            "service_type_code",
            "FROM",
            "Customer_Event_Notes",
            "GROUP",
            "BY",
            "service_type_code",
            "HAVING",
            "MIN",
            "(",
            "Customer_Event_Note_ID",
            ")",
            "=",
            "50"
        ],
        "query_toks_no_value": [
            "select",
            "service_type_code",
            "from",
            "customer_event_notes",
            "group",
            "by",
            "service_type_code",
            "having",
            "min",
            "(",
            "customer_event_note_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_event_notes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_event_notes.service_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customer_event_notes.service_type_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__customer_event_notes.customer_event_note_id__",
                            false
                        ],
                        null
                    ],
                    50.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_and_lot",
        "query": "SELECT Location_Code FROM Timed_Locations_of_Things GROUP BY Location_Code HAVING MIN(thing_id) = 26;",
        "question": "Select location code from timed locations of things grouped by location code with minimum thing id equal to 26",
        "tables": [
            "Residents",
            "Timed_Status_of_Things",
            "Things",
            "Organizations",
            "Services",
            "Residents_Services",
            "Customers",
            "Properties",
            "Customer_Events",
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "location",
            "code",
            "from",
            "timed",
            "locations",
            "of",
            "things",
            "grouped",
            "by",
            "location",
            "code",
            "with",
            "minimum",
            "thing",
            "id",
            "equal",
            "to",
            "26"
        ],
        "query_toks": [
            "SELECT",
            "Location_Code",
            "FROM",
            "Timed_Locations_of_Things",
            "GROUP",
            "BY",
            "Location_Code",
            "HAVING",
            "MIN",
            "(",
            "thing_id",
            ")",
            "=",
            "26"
        ],
        "query_toks_no_value": [
            "select",
            "location_code",
            "from",
            "timed_locations_of_things",
            "group",
            "by",
            "location_code",
            "having",
            "min",
            "(",
            "thing_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__timed_locations_of_things__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__timed_locations_of_things.location_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__timed_locations_of_things.location_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__timed_locations_of_things.thing_id__",
                            false
                        ],
                        null
                    ],
                    26.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "station_weather",
        "query": "SELECT day_of_week FROM weekly_weather GROUP BY day_of_week HAVING MIN(wind_speed_mph) = 13;",
        "question": "Select day of week from weekly weather grouped by day of week with minimum wind speed mph equal to 13",
        "tables": [
            "weekly_weather",
            "route",
            "train",
            "station"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "day",
            "of",
            "week",
            "from",
            "weekly",
            "weather",
            "grouped",
            "by",
            "day",
            "of",
            "week",
            "with",
            "minimum",
            "wind",
            "speed",
            "mph",
            "equal",
            "to",
            "13"
        ],
        "query_toks": [
            "SELECT",
            "day_of_week",
            "FROM",
            "weekly_weather",
            "GROUP",
            "BY",
            "day_of_week",
            "HAVING",
            "MIN",
            "(",
            "wind_speed_mph",
            ")",
            "=",
            "13"
        ],
        "query_toks_no_value": [
            "select",
            "day_of_week",
            "from",
            "weekly_weather",
            "group",
            "by",
            "day_of_week",
            "having",
            "min",
            "(",
            "wind_speed_mph",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__weekly_weather__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__weekly_weather.day_of_week__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__weekly_weather.day_of_week__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__weekly_weather.wind_speed_mph__",
                            false
                        ],
                        null
                    ],
                    13.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "station_weather",
        "query": "SELECT interval FROM train GROUP BY interval HAVING MAX(train_number) = 16381;",
        "question": "Select interval from train grouped by interval with maximum train number equal to 16381",
        "tables": [
            "weekly_weather",
            "route",
            "train",
            "station"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "interval",
            "from",
            "train",
            "grouped",
            "by",
            "interval",
            "with",
            "maximum",
            "train",
            "number",
            "equal",
            "to",
            "16381"
        ],
        "query_toks": [
            "SELECT",
            "interval",
            "FROM",
            "train",
            "GROUP",
            "BY",
            "interval",
            "HAVING",
            "MAX",
            "(",
            "train_number",
            ")",
            "=",
            "16381"
        ],
        "query_toks_no_value": [
            "select",
            "interval",
            "from",
            "train",
            "group",
            "by",
            "interval",
            "having",
            "max",
            "(",
            "train_number",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__train__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__train.interval__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__train.interval__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__train.train_number__",
                            false
                        ],
                        null
                    ],
                    16381.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "station_weather",
        "query": "SELECT network_name FROM station GROUP BY network_name HAVING MIN(id) = 7;",
        "question": "Select network name from station grouped by network name with minimum id equal to 7",
        "tables": [
            "weekly_weather",
            "route",
            "train",
            "station"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "network",
            "name",
            "from",
            "station",
            "grouped",
            "by",
            "network",
            "name",
            "with",
            "minimum",
            "id",
            "equal",
            "to",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "network_name",
            "FROM",
            "station",
            "GROUP",
            "BY",
            "network_name",
            "HAVING",
            "MIN",
            "(",
            "id",
            ")",
            "=",
            "7"
        ],
        "query_toks_no_value": [
            "select",
            "network_name",
            "from",
            "station",
            "group",
            "by",
            "network_name",
            "having",
            "min",
            "(",
            "id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__station__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__station.network_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__station.network_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__station.id__",
                            false
                        ],
                        null
                    ],
                    7.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "shop_membership",
        "query": "SELECT Year FROM purchase GROUP BY Year HAVING MAX(Total_pounds) = 232.09;",
        "question": "Select year from purchase grouped by year with maximum total pounds equal to 232.09",
        "tables": [
            "purchase",
            "membership_register_branch",
            "member",
            "branch"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "year",
            "from",
            "purchase",
            "grouped",
            "by",
            "year",
            "with",
            "maximum",
            "total",
            "pounds",
            "equal",
            "to",
            "232.09"
        ],
        "query_toks": [
            "SELECT",
            "Year",
            "FROM",
            "purchase",
            "GROUP",
            "BY",
            "Year",
            "HAVING",
            "MAX",
            "(",
            "Total_pounds",
            ")",
            "=",
            "232.09"
        ],
        "query_toks_no_value": [
            "select",
            "year",
            "from",
            "purchase",
            "group",
            "by",
            "year",
            "having",
            "max",
            "(",
            "total_pounds",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__purchase__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__purchase.year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__purchase.year__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__purchase.total_pounds__",
                            false
                        ],
                        null
                    ],
                    232.09,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "shop_membership",
        "query": "SELECT Branch_ID FROM membership_register_branch GROUP BY Branch_ID HAVING MIN(Member_ID) = 4;",
        "question": "Select branch id from membership register branch grouped by branch id with minimum member id equal to 4",
        "tables": [
            "purchase",
            "membership_register_branch",
            "member",
            "branch"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "branch",
            "id",
            "from",
            "membership",
            "register",
            "branch",
            "grouped",
            "by",
            "branch",
            "id",
            "with",
            "minimum",
            "member",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Branch_ID",
            "FROM",
            "membership_register_branch",
            "GROUP",
            "BY",
            "Branch_ID",
            "HAVING",
            "MIN",
            "(",
            "Member_ID",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "branch_id",
            "from",
            "membership_register_branch",
            "group",
            "by",
            "branch_id",
            "having",
            "min",
            "(",
            "member_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__membership_register_branch__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__membership_register_branch.branch_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__membership_register_branch.branch_id__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__membership_register_branch.member_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "shop_membership",
        "query": "SELECT Name FROM member GROUP BY Name HAVING MIN(Member_ID) = 3;",
        "question": "Select name from member grouped by name with minimum member id equal to 3",
        "tables": [
            "purchase",
            "membership_register_branch",
            "member",
            "branch"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "member",
            "grouped",
            "by",
            "name",
            "with",
            "minimum",
            "member",
            "id",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "member",
            "GROUP",
            "BY",
            "Name",
            "HAVING",
            "MIN",
            "(",
            "Member_ID",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "member",
            "group",
            "by",
            "name",
            "having",
            "min",
            "(",
            "member_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__member__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__member.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__member.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__member.member_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "shop_membership",
        "query": "SELECT Open_year FROM branch GROUP BY Open_year HAVING MAX(Branch_ID) = 8;",
        "question": "Select open year from branch grouped by open year with maximum branch id equal to 8",
        "tables": [
            "purchase",
            "membership_register_branch",
            "member",
            "branch"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "open",
            "year",
            "from",
            "branch",
            "grouped",
            "by",
            "open",
            "year",
            "with",
            "maximum",
            "branch",
            "id",
            "equal",
            "to",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "Open_year",
            "FROM",
            "branch",
            "GROUP",
            "BY",
            "Open_year",
            "HAVING",
            "MAX",
            "(",
            "Branch_ID",
            ")",
            "=",
            "8"
        ],
        "query_toks_no_value": [
            "select",
            "open_year",
            "from",
            "branch",
            "group",
            "by",
            "open_year",
            "having",
            "max",
            "(",
            "branch_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__branch__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__branch.open_year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__branch.open_year__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__branch.branch_id__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "driving_school",
        "query": "SELECT last_name FROM Staff GROUP BY last_name HAVING MAX(staff_id) = 13;",
        "question": "Select last name from staff grouped by last name with maximum staff id equal to 13",
        "tables": [
            "Staff",
            "Customer_Payments",
            "Addresses",
            "Customers",
            "Vehicles",
            "Lessons"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "last",
            "name",
            "from",
            "staff",
            "grouped",
            "by",
            "last",
            "name",
            "with",
            "maximum",
            "staff",
            "id",
            "equal",
            "to",
            "13"
        ],
        "query_toks": [
            "SELECT",
            "last_name",
            "FROM",
            "Staff",
            "GROUP",
            "BY",
            "last_name",
            "HAVING",
            "MAX",
            "(",
            "staff_id",
            ")",
            "=",
            "13"
        ],
        "query_toks_no_value": [
            "select",
            "last_name",
            "from",
            "staff",
            "group",
            "by",
            "last_name",
            "having",
            "max",
            "(",
            "staff_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__staff__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__staff.last_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__staff.last_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__staff.staff_id__",
                            false
                        ],
                        null
                    ],
                    13.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "driving_school",
        "query": "SELECT payment_method_code FROM Customer_Payments GROUP BY payment_method_code HAVING MAX(customer_id) = 1;",
        "question": "Select payment method code from customer payments grouped by payment method code with maximum customer id equal to 1",
        "tables": [
            "Staff",
            "Customer_Payments",
            "Addresses",
            "Customers",
            "Vehicles",
            "Lessons"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "payment",
            "method",
            "code",
            "from",
            "customer",
            "payments",
            "grouped",
            "by",
            "payment",
            "method",
            "code",
            "with",
            "maximum",
            "customer",
            "id",
            "equal",
            "to",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "payment_method_code",
            "FROM",
            "Customer_Payments",
            "GROUP",
            "BY",
            "payment_method_code",
            "HAVING",
            "MAX",
            "(",
            "customer_id",
            ")",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "payment_method_code",
            "from",
            "customer_payments",
            "group",
            "by",
            "payment_method_code",
            "having",
            "max",
            "(",
            "customer_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_payments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_payments.payment_method_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customer_payments.payment_method_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__customer_payments.customer_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "driving_school",
        "query": "SELECT state_province_county FROM Addresses GROUP BY state_province_county HAVING MAX(address_id) = 14;",
        "question": "Select state province county from addresses grouped by state province county with maximum address id equal to 14",
        "tables": [
            "Staff",
            "Customer_Payments",
            "Addresses",
            "Customers",
            "Vehicles",
            "Lessons"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "state",
            "province",
            "county",
            "from",
            "addresses",
            "grouped",
            "by",
            "state",
            "province",
            "county",
            "with",
            "maximum",
            "address",
            "id",
            "equal",
            "to",
            "14"
        ],
        "query_toks": [
            "SELECT",
            "state_province_county",
            "FROM",
            "Addresses",
            "GROUP",
            "BY",
            "state_province_county",
            "HAVING",
            "MAX",
            "(",
            "address_id",
            ")",
            "=",
            "14"
        ],
        "query_toks_no_value": [
            "select",
            "state_province_county",
            "from",
            "addresses",
            "group",
            "by",
            "state_province_county",
            "having",
            "max",
            "(",
            "address_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__addresses.state_province_county__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__addresses.state_province_county__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__addresses.address_id__",
                            false
                        ],
                        null
                    ],
                    14.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "driving_school",
        "query": "SELECT first_name FROM Customers GROUP BY first_name HAVING MIN(amount_outstanding) = 1000.0;",
        "question": "Select first name from customers grouped by first name with minimum amount outstanding equal to 1000.0",
        "tables": [
            "Staff",
            "Customer_Payments",
            "Addresses",
            "Customers",
            "Vehicles",
            "Lessons"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "first",
            "name",
            "from",
            "customers",
            "grouped",
            "by",
            "first",
            "name",
            "with",
            "minimum",
            "amount",
            "outstanding",
            "equal",
            "to",
            "1000.0"
        ],
        "query_toks": [
            "SELECT",
            "first_name",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "first_name",
            "HAVING",
            "MIN",
            "(",
            "amount_outstanding",
            ")",
            "=",
            "1000.0"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            "from",
            "customers",
            "group",
            "by",
            "first_name",
            "having",
            "min",
            "(",
            "amount_outstanding",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.first_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customers.first_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__customers.amount_outstanding__",
                            false
                        ],
                        null
                    ],
                    1000.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "driving_school",
        "query": "SELECT vehicle_details FROM Vehicles GROUP BY vehicle_details HAVING MIN(vehicle_id) = 2;",
        "question": "Select vehicle details from vehicles grouped by vehicle details with minimum vehicle id equal to 2",
        "tables": [
            "Staff",
            "Customer_Payments",
            "Addresses",
            "Customers",
            "Vehicles",
            "Lessons"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "vehicle",
            "details",
            "from",
            "vehicles",
            "grouped",
            "by",
            "vehicle",
            "details",
            "with",
            "minimum",
            "vehicle",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "vehicle_details",
            "FROM",
            "Vehicles",
            "GROUP",
            "BY",
            "vehicle_details",
            "HAVING",
            "MIN",
            "(",
            "vehicle_id",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "vehicle_details",
            "from",
            "vehicles",
            "group",
            "by",
            "vehicle_details",
            "having",
            "min",
            "(",
            "vehicle_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__vehicles__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__vehicles.vehicle_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__vehicles.vehicle_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__vehicles.vehicle_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "driving_school",
        "query": "SELECT lesson_time FROM Lessons GROUP BY lesson_time HAVING MIN(price) = 199.0;",
        "question": "Select lesson time from lessons grouped by lesson time with minimum price equal to 199.0",
        "tables": [
            "Staff",
            "Customer_Payments",
            "Addresses",
            "Customers",
            "Vehicles",
            "Lessons"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "lesson",
            "time",
            "from",
            "lessons",
            "grouped",
            "by",
            "lesson",
            "time",
            "with",
            "minimum",
            "price",
            "equal",
            "to",
            "199.0"
        ],
        "query_toks": [
            "SELECT",
            "lesson_time",
            "FROM",
            "Lessons",
            "GROUP",
            "BY",
            "lesson_time",
            "HAVING",
            "MIN",
            "(",
            "price",
            ")",
            "=",
            "199.0"
        ],
        "query_toks_no_value": [
            "select",
            "lesson_time",
            "from",
            "lessons",
            "group",
            "by",
            "lesson_time",
            "having",
            "min",
            "(",
            "price",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__lessons__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__lessons.lesson_time__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__lessons.lesson_time__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__lessons.price__",
                            false
                        ],
                        null
                    ],
                    199.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT Name FROM singer GROUP BY Name HAVING MIN(Age) = 29;",
        "question": "Select name from singer grouped by name with minimum age equal to 29",
        "tables": [
            "singer",
            "stadium",
            "singer_in_concert",
            "concert"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "singer",
            "grouped",
            "by",
            "name",
            "with",
            "minimum",
            "age",
            "equal",
            "to",
            "29"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "singer",
            "GROUP",
            "BY",
            "Name",
            "HAVING",
            "MIN",
            "(",
            "Age",
            ")",
            "=",
            "29"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "singer",
            "group",
            "by",
            "name",
            "having",
            "min",
            "(",
            "age",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__singer__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__singer.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__singer.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__singer.age__",
                            false
                        ],
                        null
                    ],
                    29.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT Name FROM stadium GROUP BY Name HAVING MIN(Capacity) = 4000;",
        "question": "Select name from stadium grouped by name with minimum capacity equal to 4000",
        "tables": [
            "singer",
            "stadium",
            "singer_in_concert",
            "concert"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "stadium",
            "grouped",
            "by",
            "name",
            "with",
            "minimum",
            "capacity",
            "equal",
            "to",
            "4000"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "stadium",
            "GROUP",
            "BY",
            "Name",
            "HAVING",
            "MIN",
            "(",
            "Capacity",
            ")",
            "=",
            "4000"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "stadium",
            "group",
            "by",
            "name",
            "having",
            "min",
            "(",
            "capacity",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__stadium__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__stadium.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__stadium.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__stadium.capacity__",
                            false
                        ],
                        null
                    ],
                    4000.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT Singer_ID FROM singer_in_concert GROUP BY Singer_ID HAVING MAX(concert_ID) = 1;",
        "question": "Select singer id from singer in concert grouped by singer id with maximum concert id equal to 1",
        "tables": [
            "singer",
            "stadium",
            "singer_in_concert",
            "concert"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "singer",
            "id",
            "from",
            "singer",
            "in",
            "concert",
            "grouped",
            "by",
            "singer",
            "id",
            "with",
            "maximum",
            "concert",
            "id",
            "equal",
            "to",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Singer_ID",
            "FROM",
            "singer_in_concert",
            "GROUP",
            "BY",
            "Singer_ID",
            "HAVING",
            "MAX",
            "(",
            "concert_ID",
            ")",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "singer_id",
            "from",
            "singer_in_concert",
            "group",
            "by",
            "singer_id",
            "having",
            "max",
            "(",
            "concert_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__singer_in_concert__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__singer_in_concert.singer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__singer_in_concert.singer_id__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__singer_in_concert.concert_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT Year FROM concert GROUP BY Year HAVING MAX(concert_ID) = 6;",
        "question": "Select year from concert grouped by year with maximum concert id equal to 6",
        "tables": [
            "singer",
            "stadium",
            "singer_in_concert",
            "concert"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "year",
            "from",
            "concert",
            "grouped",
            "by",
            "year",
            "with",
            "maximum",
            "concert",
            "id",
            "equal",
            "to",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "Year",
            "FROM",
            "concert",
            "GROUP",
            "BY",
            "Year",
            "HAVING",
            "MAX",
            "(",
            "concert_ID",
            ")",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "year",
            "from",
            "concert",
            "group",
            "by",
            "year",
            "having",
            "max",
            "(",
            "concert_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__concert__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__concert.year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__concert.year__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__concert.concert_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sports_competition",
        "query": "SELECT Competition_type FROM competition GROUP BY Competition_type HAVING MIN(Year) = 2006.0;",
        "question": "Select competition type from competition grouped by competition type with minimum year equal to 2006.0",
        "tables": [
            "club_rank",
            "competition",
            "club",
            "competition_result",
            "player"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "competition",
            "type",
            "from",
            "competition",
            "grouped",
            "by",
            "competition",
            "type",
            "with",
            "minimum",
            "year",
            "equal",
            "to",
            "2006.0"
        ],
        "query_toks": [
            "SELECT",
            "Competition_type",
            "FROM",
            "competition",
            "GROUP",
            "BY",
            "Competition_type",
            "HAVING",
            "MIN",
            "(",
            "Year",
            ")",
            "=",
            "2006.0"
        ],
        "query_toks_no_value": [
            "select",
            "competition_type",
            "from",
            "competition",
            "group",
            "by",
            "competition_type",
            "having",
            "min",
            "(",
            "year",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__competition__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__competition.competition_type__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__competition.competition_type__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__competition.year__",
                            false
                        ],
                        null
                    ],
                    2006.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sports_competition",
        "query": "SELECT name FROM club GROUP BY name HAVING MIN(Club_ID) = 2;",
        "question": "Select name from club grouped by name with minimum club id equal to 2",
        "tables": [
            "club_rank",
            "competition",
            "club",
            "competition_result",
            "player"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "club",
            "grouped",
            "by",
            "name",
            "with",
            "minimum",
            "club",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "club",
            "GROUP",
            "BY",
            "name",
            "HAVING",
            "MIN",
            "(",
            "Club_ID",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "club",
            "group",
            "by",
            "name",
            "having",
            "min",
            "(",
            "club_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__club__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__club.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__club.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__club.club_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sports_competition",
        "query": "SELECT Score FROM competition_result GROUP BY Score HAVING MIN(Competition_ID) = 2;",
        "question": "Select score from competition result grouped by score with minimum competition id equal to 2",
        "tables": [
            "club_rank",
            "competition",
            "club",
            "competition_result",
            "player"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "score",
            "from",
            "competition",
            "result",
            "grouped",
            "by",
            "score",
            "with",
            "minimum",
            "competition",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Score",
            "FROM",
            "competition_result",
            "GROUP",
            "BY",
            "Score",
            "HAVING",
            "MIN",
            "(",
            "Competition_ID",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "score",
            "from",
            "competition_result",
            "group",
            "by",
            "score",
            "having",
            "min",
            "(",
            "competition_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__competition_result__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__competition_result.score__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__competition_result.score__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__competition_result.competition_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sports_competition",
        "query": "SELECT name FROM player GROUP BY name HAVING MIN(Club_ID) = 5;",
        "question": "Select name from player grouped by name with minimum club id equal to 5",
        "tables": [
            "club_rank",
            "competition",
            "club",
            "competition_result",
            "player"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "player",
            "grouped",
            "by",
            "name",
            "with",
            "minimum",
            "club",
            "id",
            "equal",
            "to",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "player",
            "GROUP",
            "BY",
            "name",
            "HAVING",
            "MIN",
            "(",
            "Club_ID",
            ")",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "player",
            "group",
            "by",
            "name",
            "having",
            "min",
            "(",
            "club_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__player__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__player.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__player.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__player.club_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "railway",
        "query": "SELECT From_Year FROM railway_manage GROUP BY From_Year HAVING MAX(Manager_ID) = 1;",
        "question": "Select from year from railway manage grouped by from year with maximum manager id equal to 1",
        "tables": [
            "railway_manage",
            "train",
            "manager",
            "railway"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "from",
            "year",
            "from",
            "railway",
            "manage",
            "grouped",
            "by",
            "from",
            "year",
            "with",
            "maximum",
            "manager",
            "id",
            "equal",
            "to",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "From_Year",
            "FROM",
            "railway_manage",
            "GROUP",
            "BY",
            "From_Year",
            "HAVING",
            "MAX",
            "(",
            "Manager_ID",
            ")",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "from_year",
            "from",
            "railway_manage",
            "group",
            "by",
            "from_year",
            "having",
            "max",
            "(",
            "manager_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__railway_manage__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__railway_manage.from_year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__railway_manage.from_year__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__railway_manage.manager_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "railway",
        "query": "SELECT Name FROM train GROUP BY Name HAVING MAX(Train_ID) = 2;",
        "question": "Select name from train grouped by name with maximum train id equal to 2",
        "tables": [
            "railway_manage",
            "train",
            "manager",
            "railway"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "train",
            "grouped",
            "by",
            "name",
            "with",
            "maximum",
            "train",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "train",
            "GROUP",
            "BY",
            "Name",
            "HAVING",
            "MAX",
            "(",
            "Train_ID",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "train",
            "group",
            "by",
            "name",
            "having",
            "max",
            "(",
            "train_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__train__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__train.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__train.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__train.train_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "railway",
        "query": "SELECT Country FROM manager GROUP BY Country HAVING MIN(Age) = 51;",
        "question": "Select country from manager grouped by country with minimum age equal to 51",
        "tables": [
            "railway_manage",
            "train",
            "manager",
            "railway"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "country",
            "from",
            "manager",
            "grouped",
            "by",
            "country",
            "with",
            "minimum",
            "age",
            "equal",
            "to",
            "51"
        ],
        "query_toks": [
            "SELECT",
            "Countr",
            "(",
            "Countr",
            ")",
            "FROM",
            "manager",
            "GROUP",
            "BY",
            "Countr",
            "(",
            "Countr",
            ")",
            "HAVING",
            "MIN",
            "(",
            "Age",
            ")",
            "=",
            "51"
        ],
        "query_toks_no_value": [
            "select",
            "countr",
            "(",
            "countr",
            ")",
            "from",
            "manager",
            "group",
            "by",
            "countr",
            "(",
            "countr",
            ")",
            "having",
            "min",
            "(",
            "age",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__manager__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__manager.country__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__manager.country__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__manager.age__",
                            false
                        ],
                        null
                    ],
                    51.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "railway",
        "query": "SELECT Location FROM railway GROUP BY Location HAVING MAX(Railway_ID) = 6;",
        "question": "Select location from railway grouped by location with maximum railway id equal to 6",
        "tables": [
            "railway_manage",
            "train",
            "manager",
            "railway"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "location",
            "from",
            "railway",
            "grouped",
            "by",
            "location",
            "with",
            "maximum",
            "railway",
            "id",
            "equal",
            "to",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "Location",
            "FROM",
            "railway",
            "GROUP",
            "BY",
            "Location",
            "HAVING",
            "MAX",
            "(",
            "Railway_ID",
            ")",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "location",
            "from",
            "railway",
            "group",
            "by",
            "location",
            "having",
            "max",
            "(",
            "railway_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__railway__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__railway.location__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__railway.location__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__railway.railway_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "inn_1",
        "query": "SELECT bedType FROM Rooms GROUP BY bedType HAVING MIN(beds) = 2;",
        "question": "Select bed type from rooms grouped by bed type with minimum beds equal to 2",
        "tables": [
            "Rooms",
            "Reservations"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "bed",
            "type",
            "from",
            "rooms",
            "grouped",
            "by",
            "bed",
            "type",
            "with",
            "minimum",
            "beds",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "bedType",
            "FROM",
            "Rooms",
            "GROUP",
            "BY",
            "bedType",
            "HAVING",
            "MIN",
            "(",
            "beds",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "bedtype",
            "from",
            "rooms",
            "group",
            "by",
            "bedtype",
            "having",
            "min",
            "(",
            "beds",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__rooms__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__rooms.bedtype__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__rooms.bedtype__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__rooms.beds__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "inn_1",
        "query": "SELECT CheckIn FROM Reservations GROUP BY CheckIn HAVING MIN(Kids) = 2;",
        "question": "Select check in from reservations grouped by check in with minimum kids equal to 2",
        "tables": [
            "Rooms",
            "Reservations"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "check",
            "in",
            "from",
            "reservations",
            "grouped",
            "by",
            "check",
            "in",
            "with",
            "minimum",
            "kids",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "CheckIn",
            "FROM",
            "Reservations",
            "GROUP",
            "BY",
            "CheckIn",
            "HAVING",
            "MIN",
            "(",
            "Kids",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "checkin",
            "from",
            "reservations",
            "group",
            "by",
            "checkin",
            "having",
            "min",
            "(",
            "kids",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__reservations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__reservations.checkin__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__reservations.checkin__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__reservations.kids__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "museum_visit",
        "query": "SELECT visitor_ID FROM visit GROUP BY visitor_ID HAVING MIN(Museum_ID) = 8;",
        "question": "Select customer id from visit grouped by customer id with minimum museum id equal to 8",
        "tables": [
            "visit",
            "visitor",
            "museum"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "customer",
            "id",
            "from",
            "visit",
            "grouped",
            "by",
            "customer",
            "id",
            "with",
            "minimum",
            "museum",
            "id",
            "equal",
            "to",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "visitor_ID",
            "FROM",
            "visit",
            "GROUP",
            "BY",
            "visitor_ID",
            "HAVING",
            "MIN",
            "(",
            "Museum_ID",
            ")",
            "=",
            "8"
        ],
        "query_toks_no_value": [
            "select",
            "visitor_id",
            "from",
            "visit",
            "group",
            "by",
            "visitor_id",
            "having",
            "min",
            "(",
            "museum_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__visit__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__visit.visitor_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__visit.visitor_id__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__visit.museum_id__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "museum_visit",
        "query": "SELECT Name FROM visitor GROUP BY Name HAVING MIN(Level_of_membership) = 8;",
        "question": "Select name from customer grouped by name with minimum level of membership equal to 8",
        "tables": [
            "visit",
            "visitor",
            "museum"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "customer",
            "grouped",
            "by",
            "name",
            "with",
            "minimum",
            "level",
            "of",
            "membership",
            "equal",
            "to",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "visitor",
            "GROUP",
            "BY",
            "Name",
            "HAVING",
            "MIN",
            "(",
            "Level_of_membership",
            ")",
            "=",
            "8"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "visitor",
            "group",
            "by",
            "name",
            "having",
            "min",
            "(",
            "level_of_membership",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__visitor__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__visitor.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__visitor.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__visitor.level_of_membership__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "museum_visit",
        "query": "SELECT Open_Year FROM museum GROUP BY Open_Year HAVING MAX(Num_of_Staff) = 25;",
        "question": "Select open year from museum grouped by open year with maximum num of staff equal to 25",
        "tables": [
            "visit",
            "visitor",
            "museum"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "open",
            "year",
            "from",
            "museum",
            "grouped",
            "by",
            "open",
            "year",
            "with",
            "maximum",
            "num",
            "of",
            "staff",
            "equal",
            "to",
            "25"
        ],
        "query_toks": [
            "SELECT",
            "Open_Year",
            "FROM",
            "museum",
            "GROUP",
            "BY",
            "Open_Year",
            "HAVING",
            "MAX",
            "(",
            "Num_of_Staff",
            ")",
            "=",
            "25"
        ],
        "query_toks_no_value": [
            "select",
            "open_year",
            "from",
            "museum",
            "group",
            "by",
            "open_year",
            "having",
            "max",
            "(",
            "num_of_staff",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__museum__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__museum.open_year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__museum.open_year__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__museum.num_of_staff__",
                            false
                        ],
                        null
                    ],
                    25.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "browser_web",
        "query": "SELECT name FROM browser GROUP BY name HAVING MIN(market_share) = 28.96;",
        "question": "Select name from browser grouped by name with minimum market share equal to 28.96",
        "tables": [
            "browser",
            "accelerator_compatible_browser",
            "Web_client_accelerator"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "browser",
            "grouped",
            "by",
            "name",
            "with",
            "minimum",
            "market",
            "share",
            "equal",
            "to",
            "28.96"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "browser",
            "GROUP",
            "BY",
            "name",
            "HAVING",
            "MIN",
            "(",
            "market_share",
            ")",
            "=",
            "28.96"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "browser",
            "group",
            "by",
            "name",
            "having",
            "min",
            "(",
            "market_share",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__browser__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__browser.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__browser.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__browser.market_share__",
                            false
                        ],
                        null
                    ],
                    28.96,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "browser_web",
        "query": "SELECT name FROM Web_client_accelerator GROUP BY name HAVING MIN(id) = 5;",
        "question": "Select name from web client accelerator grouped by name with minimum id equal to 5",
        "tables": [
            "browser",
            "accelerator_compatible_browser",
            "Web_client_accelerator"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "web",
            "client",
            "accelerator",
            "grouped",
            "by",
            "name",
            "with",
            "minimum",
            "id",
            "equal",
            "to",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "Web_client_accelerator",
            "GROUP",
            "BY",
            "name",
            "HAVING",
            "MIN",
            "(",
            "id",
            ")",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "web_client_accelerator",
            "group",
            "by",
            "name",
            "having",
            "min",
            "(",
            "id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__web_client_accelerator__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__web_client_accelerator.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__web_client_accelerator.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__web_client_accelerator.id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "architecture",
        "query": "SELECT type FROM mill GROUP BY type HAVING MAX(architect_id) = 3;",
        "question": "Select type from mill grouped by type with maximum architect id equal to 3",
        "tables": [
            "architect",
            "mill",
            "bridge"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "type",
            "from",
            "mill",
            "grouped",
            "by",
            "type",
            "with",
            "maximum",
            "architect",
            "id",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "type",
            "FROM",
            "mill",
            "GROUP",
            "BY",
            "type",
            "HAVING",
            "MAX",
            "(",
            "architect_id",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "type",
            "from",
            "mill",
            "group",
            "by",
            "type",
            "having",
            "max",
            "(",
            "architect_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__mill__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__mill.type__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__mill.type__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__mill.architect_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "architecture",
        "query": "SELECT location FROM bridge GROUP BY location HAVING MIN(length_meters) = 121.0;",
        "question": "Select location from bridge grouped by location with minimum length meters equal to 121.0",
        "tables": [
            "architect",
            "mill",
            "bridge"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "location",
            "from",
            "bridge",
            "grouped",
            "by",
            "location",
            "with",
            "minimum",
            "length",
            "meters",
            "equal",
            "to",
            "121.0"
        ],
        "query_toks": [
            "SELECT",
            "location",
            "FROM",
            "bridge",
            "GROUP",
            "BY",
            "location",
            "HAVING",
            "MIN",
            "(",
            "length_meters",
            ")",
            "=",
            "121.0"
        ],
        "query_toks_no_value": [
            "select",
            "location",
            "from",
            "bridge",
            "group",
            "by",
            "location",
            "having",
            "min",
            "(",
            "length_meters",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__bridge__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__bridge.location__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__bridge.location__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__bridge.length_meters__",
                            false
                        ],
                        null
                    ],
                    121.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "csu_1",
        "query": "SELECT Location FROM Campuses GROUP BY Location HAVING MAX(Id) = 18;",
        "question": "Select location from campuses grouped by location with maximum id equal to 18",
        "tables": [
            "discipline_enrollments",
            "Campuses",
            "degrees",
            "csu_fees",
            "faculty",
            "enrollments"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "location",
            "from",
            "campuses",
            "grouped",
            "by",
            "location",
            "with",
            "maximum",
            "id",
            "equal",
            "to",
            "18"
        ],
        "query_toks": [
            "SELECT",
            "Location",
            "FROM",
            "Campuses",
            "GROUP",
            "BY",
            "Location",
            "HAVING",
            "MAX",
            "(",
            "Id",
            ")",
            "=",
            "18"
        ],
        "query_toks_no_value": [
            "select",
            "location",
            "from",
            "campuses",
            "group",
            "by",
            "location",
            "having",
            "max",
            "(",
            "id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__campuses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__campuses.location__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__campuses.location__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__campuses.id__",
                            false
                        ],
                        null
                    ],
                    18.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_orders",
        "query": "SELECT product_name FROM Products GROUP BY product_name HAVING MAX(product_id) = 3;",
        "question": "Select product name from products grouped by product name with maximum product id equal to 3",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Shipments",
            "Customers",
            "Shipment_Items",
            "Orders"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "product",
            "name",
            "from",
            "products",
            "grouped",
            "by",
            "product",
            "name",
            "with",
            "maximum",
            "product",
            "id",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "product_name",
            "FROM",
            "Products",
            "GROUP",
            "BY",
            "product_name",
            "HAVING",
            "MAX",
            "(",
            "product_id",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "product_name",
            "from",
            "products",
            "group",
            "by",
            "product_name",
            "having",
            "max",
            "(",
            "product_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products.product_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__products.product_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__products.product_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_orders",
        "query": "SELECT order_item_details FROM Order_Items GROUP BY order_item_details HAVING MAX(order_item_id) = 9;",
        "question": "Select order item details from order items grouped by order item details with maximum order item id equal to 9",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Shipments",
            "Customers",
            "Shipment_Items",
            "Orders"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "order",
            "item",
            "details",
            "from",
            "order",
            "items",
            "grouped",
            "by",
            "order",
            "item",
            "details",
            "with",
            "maximum",
            "order",
            "item",
            "id",
            "equal",
            "to",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "order_item_details",
            "FROM",
            "Order_Items",
            "GROUP",
            "BY",
            "order_item_details",
            "HAVING",
            "MAX",
            "(",
            "order_item_id",
            ")",
            "=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "order_item_details",
            "from",
            "order_items",
            "group",
            "by",
            "order_item_details",
            "having",
            "max",
            "(",
            "order_item_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__order_items__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__order_items.order_item_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__order_items.order_item_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__order_items.order_item_id__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_orders",
        "query": "SELECT invoice_details FROM Invoices GROUP BY invoice_details HAVING MAX(invoice_number) = 15;",
        "question": "Select invoice details from invoices grouped by invoice details with maximum invoice number equal to 15",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Shipments",
            "Customers",
            "Shipment_Items",
            "Orders"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "invoice",
            "details",
            "from",
            "invoices",
            "grouped",
            "by",
            "invoice",
            "details",
            "with",
            "maximum",
            "invoice",
            "number",
            "equal",
            "to",
            "15"
        ],
        "query_toks": [
            "SELECT",
            "invoice_details",
            "FROM",
            "Invoices",
            "GROUP",
            "BY",
            "invoice_details",
            "HAVING",
            "MAX",
            "(",
            "invoice_number",
            ")",
            "=",
            "15"
        ],
        "query_toks_no_value": [
            "select",
            "invoice_details",
            "from",
            "invoices",
            "group",
            "by",
            "invoice_details",
            "having",
            "max",
            "(",
            "invoice_number",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__invoices__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__invoices.invoice_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__invoices.invoice_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__invoices.invoice_number__",
                            false
                        ],
                        null
                    ],
                    15.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_orders",
        "query": "SELECT shipment_tracking_number FROM Shipments GROUP BY shipment_tracking_number HAVING MAX(invoice_number) = 10;",
        "question": "Select shipment tracking number from shipments grouped by shipment tracking number with maximum invoice number equal to 10",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Shipments",
            "Customers",
            "Shipment_Items",
            "Orders"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "shipment",
            "tracking",
            "number",
            "from",
            "shipments",
            "grouped",
            "by",
            "shipment",
            "tracking",
            "number",
            "with",
            "maximum",
            "invoice",
            "number",
            "equal",
            "to",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "shipment_tracking_number",
            "FROM",
            "Shipments",
            "GROUP",
            "BY",
            "shipment_tracking_number",
            "HAVING",
            "MAX",
            "(",
            "invoice_number",
            ")",
            "=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "shipment_tracking_number",
            "from",
            "shipments",
            "group",
            "by",
            "shipment_tracking_number",
            "having",
            "max",
            "(",
            "invoice_number",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__shipments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__shipments.shipment_tracking_number__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__shipments.shipment_tracking_number__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__shipments.invoice_number__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_orders",
        "query": "SELECT customer_name FROM Customers GROUP BY customer_name HAVING MIN(customer_id) = 9;",
        "question": "Select customer name from customers grouped by customer name with minimum customer id equal to 9",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Shipments",
            "Customers",
            "Shipment_Items",
            "Orders"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "customer",
            "name",
            "from",
            "customers",
            "grouped",
            "by",
            "customer",
            "name",
            "with",
            "minimum",
            "customer",
            "id",
            "equal",
            "to",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "customer_name",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "customer_name",
            "HAVING",
            "MIN",
            "(",
            "customer_id",
            ")",
            "=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "customer_name",
            "from",
            "customers",
            "group",
            "by",
            "customer_name",
            "having",
            "min",
            "(",
            "customer_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customers.customer_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__customers.customer_id__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_orders",
        "query": "SELECT order_status FROM Orders GROUP BY order_status HAVING MIN(customer_id) = 3;",
        "question": "Select order status from orders grouped by order status with minimum customer id equal to 3",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Shipments",
            "Customers",
            "Shipment_Items",
            "Orders"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "order",
            "status",
            "from",
            "orders",
            "grouped",
            "by",
            "order",
            "status",
            "with",
            "minimum",
            "customer",
            "id",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "order_status",
            "FROM",
            "Orders",
            "GROUP",
            "BY",
            "order_status",
            "HAVING",
            "MIN",
            "(",
            "customer_id",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "order_status",
            "from",
            "orders",
            "group",
            "by",
            "order_status",
            "having",
            "min",
            "(",
            "customer_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__orders__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__orders.order_status__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__orders.order_status__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__orders.customer_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_policies",
        "query": "SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code HAVING MAX(Policy_ID) = 143;",
        "question": "Select policy type code from customer policies grouped by policy type code with maximum policy id equal to 143",
        "tables": [
            "Settlements",
            "Claims",
            "Customer_Policies",
            "Customers",
            "Payments"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "policy",
            "type",
            "code",
            "from",
            "customer",
            "policies",
            "grouped",
            "by",
            "policy",
            "type",
            "code",
            "with",
            "maximum",
            "policy",
            "id",
            "equal",
            "to",
            "143"
        ],
        "query_toks": [
            "SELECT",
            "Policy_Type_Code",
            "FROM",
            "Customer_Policies",
            "GROUP",
            "BY",
            "Policy_Type_Code",
            "HAVING",
            "MAX",
            "(",
            "Policy_ID",
            ")",
            "=",
            "143"
        ],
        "query_toks_no_value": [
            "select",
            "policy_type_code",
            "from",
            "customer_policies",
            "group",
            "by",
            "policy_type_code",
            "having",
            "max",
            "(",
            "policy_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_policies__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_policies.policy_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customer_policies.policy_type_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__customer_policies.policy_id__",
                            false
                        ],
                        null
                    ],
                    143.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_policies",
        "query": "SELECT Customer_Details FROM Customers GROUP BY Customer_Details HAVING MIN(Customer_ID) = 10;",
        "question": "Select customer details from customers grouped by customer details with minimum customer id equal to 10",
        "tables": [
            "Settlements",
            "Claims",
            "Customer_Policies",
            "Customers",
            "Payments"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "customer",
            "details",
            "from",
            "customers",
            "grouped",
            "by",
            "customer",
            "details",
            "with",
            "minimum",
            "customer",
            "id",
            "equal",
            "to",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "Customer_Details",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "Customer_Details",
            "HAVING",
            "MIN",
            "(",
            "Customer_ID",
            ")",
            "=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "customer_details",
            "from",
            "customers",
            "group",
            "by",
            "customer_details",
            "having",
            "min",
            "(",
            "customer_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customers.customer_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__customers.customer_id__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_policies",
        "query": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code HAVING MIN(Amount_Payment) = 319142;",
        "question": "Select payment method code from payments grouped by payment method code with minimum amount payment equal to 319142",
        "tables": [
            "Settlements",
            "Claims",
            "Customer_Policies",
            "Customers",
            "Payments"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "payment",
            "method",
            "code",
            "from",
            "payments",
            "grouped",
            "by",
            "payment",
            "method",
            "code",
            "with",
            "minimum",
            "amount",
            "payment",
            "equal",
            "to",
            "319142"
        ],
        "query_toks": [
            "SELECT",
            "Payment_Method_Code",
            "FROM",
            "Payments",
            "GROUP",
            "BY",
            "Payment_Method_Code",
            "HAVING",
            "MIN",
            "(",
            "Amount_Payment",
            ")",
            "=",
            "319142"
        ],
        "query_toks_no_value": [
            "select",
            "payment_method_code",
            "from",
            "payments",
            "group",
            "by",
            "payment_method_code",
            "having",
            "min",
            "(",
            "amount_payment",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__payments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__payments.payment_method_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__payments.payment_method_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__payments.amount_payment__",
                            false
                        ],
                        null
                    ],
                    319142.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "gas_company",
        "query": "SELECT Location FROM gas_station GROUP BY Location HAVING MIN(Open_Year) = 2009;",
        "question": "Select location from gas station grouped by location with minimum open year equal to 2009",
        "tables": [
            "gas_station",
            "company",
            "station_company"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "location",
            "from",
            "gas",
            "station",
            "grouped",
            "by",
            "location",
            "with",
            "minimum",
            "open",
            "year",
            "equal",
            "to",
            "2009"
        ],
        "query_toks": [
            "SELECT",
            "Location",
            "FROM",
            "gas_station",
            "GROUP",
            "BY",
            "Location",
            "HAVING",
            "MIN",
            "(",
            "Open_Year",
            ")",
            "=",
            "2009"
        ],
        "query_toks_no_value": [
            "select",
            "location",
            "from",
            "gas_station",
            "group",
            "by",
            "location",
            "having",
            "min",
            "(",
            "open_year",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__gas_station__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__gas_station.location__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__gas_station.location__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__gas_station.open_year__",
                            false
                        ],
                        null
                    ],
                    2009.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "gas_company",
        "query": "SELECT Headquarters FROM company GROUP BY Headquarters HAVING MAX(Assets_billion) = 319.4;",
        "question": "Select headquarters from company grouped by headquarters with maximum assets billion equal to 319.4",
        "tables": [
            "gas_station",
            "company",
            "station_company"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "headquarters",
            "from",
            "company",
            "grouped",
            "by",
            "headquarters",
            "with",
            "maximum",
            "assets",
            "billion",
            "equal",
            "to",
            "319.4"
        ],
        "query_toks": [
            "SELECT",
            "Headquarters",
            "FROM",
            "company",
            "GROUP",
            "BY",
            "Headquarters",
            "HAVING",
            "MAX",
            "(",
            "Assets_billion",
            ")",
            "=",
            "319.4"
        ],
        "query_toks_no_value": [
            "select",
            "headquarters",
            "from",
            "company",
            "group",
            "by",
            "headquarters",
            "having",
            "max",
            "(",
            "assets_billion",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__company__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__company.headquarters__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__company.headquarters__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__company.assets_billion__",
                            false
                        ],
                        null
                    ],
                    319.4,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_government",
        "query": "SELECT individual_first_name FROM Individuals GROUP BY individual_first_name HAVING MIN(individual_id) = 15;",
        "question": "Select individual first name from individuals grouped by individual first name with minimum individual id equal to 15",
        "tables": [
            "Individuals",
            "Organization_Contact_Individuals",
            "Addresses",
            "Organizations",
            "Services",
            "Party_Forms",
            "Party_Addresses",
            "Party_Services",
            "Parties",
            "Forms"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "individual",
            "first",
            "name",
            "from",
            "individuals",
            "grouped",
            "by",
            "individual",
            "first",
            "name",
            "with",
            "minimum",
            "individual",
            "id",
            "equal",
            "to",
            "15"
        ],
        "query_toks": [
            "SELECT",
            "individual_first_name",
            "FROM",
            "Individuals",
            "GROUP",
            "BY",
            "individual_first_name",
            "HAVING",
            "MIN",
            "(",
            "individual_id",
            ")",
            "=",
            "15"
        ],
        "query_toks_no_value": [
            "select",
            "individual_first_name",
            "from",
            "individuals",
            "group",
            "by",
            "individual_first_name",
            "having",
            "min",
            "(",
            "individual_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__individuals__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__individuals.individual_first_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__individuals.individual_first_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__individuals.individual_id__",
                            false
                        ],
                        null
                    ],
                    15.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_government",
        "query": "SELECT state_province_county FROM Addresses GROUP BY state_province_county HAVING MIN(address_id) = 2;",
        "question": "Select state province county from addresses grouped by state province county with minimum address id equal to 2",
        "tables": [
            "Individuals",
            "Organization_Contact_Individuals",
            "Addresses",
            "Organizations",
            "Services",
            "Party_Forms",
            "Party_Addresses",
            "Party_Services",
            "Parties",
            "Forms"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "state",
            "province",
            "county",
            "from",
            "addresses",
            "grouped",
            "by",
            "state",
            "province",
            "county",
            "with",
            "minimum",
            "address",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "state_province_county",
            "FROM",
            "Addresses",
            "GROUP",
            "BY",
            "state_province_county",
            "HAVING",
            "MIN",
            "(",
            "address_id",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "state_province_county",
            "from",
            "addresses",
            "group",
            "by",
            "state_province_county",
            "having",
            "min",
            "(",
            "address_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__addresses.state_province_county__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__addresses.state_province_county__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__addresses.address_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_government",
        "query": "SELECT organization_name FROM Organizations GROUP BY organization_name HAVING MIN(organization_id) = 4;",
        "question": "Select organization name from organizations grouped by organization name with minimum organization id equal to 4",
        "tables": [
            "Individuals",
            "Organization_Contact_Individuals",
            "Addresses",
            "Organizations",
            "Services",
            "Party_Forms",
            "Party_Addresses",
            "Party_Services",
            "Parties",
            "Forms"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "organization",
            "name",
            "from",
            "organizations",
            "grouped",
            "by",
            "organization",
            "name",
            "with",
            "minimum",
            "organization",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "organization_name",
            "FROM",
            "Organizations",
            "GROUP",
            "BY",
            "organization_name",
            "HAVING",
            "MIN",
            "(",
            "organization_id",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "organization_name",
            "from",
            "organizations",
            "group",
            "by",
            "organization_name",
            "having",
            "min",
            "(",
            "organization_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__organizations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__organizations.organization_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__organizations.organization_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__organizations.organization_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_government",
        "query": "SELECT service_name FROM Services GROUP BY service_name HAVING MAX(service_id) = 2;",
        "question": "Select service name from services grouped by service name with maximum service id equal to 2",
        "tables": [
            "Individuals",
            "Organization_Contact_Individuals",
            "Addresses",
            "Organizations",
            "Services",
            "Party_Forms",
            "Party_Addresses",
            "Party_Services",
            "Parties",
            "Forms"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "service",
            "name",
            "from",
            "services",
            "grouped",
            "by",
            "service",
            "name",
            "with",
            "maximum",
            "service",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "service_name",
            "FROM",
            "Services",
            "GROUP",
            "BY",
            "service_name",
            "HAVING",
            "MAX",
            "(",
            "service_id",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "service_name",
            "from",
            "services",
            "group",
            "by",
            "service_name",
            "having",
            "max",
            "(",
            "service_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__services__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__services.service_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__services.service_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__services.service_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_government",
        "query": "SELECT form_status_code FROM Party_Forms GROUP BY form_status_code HAVING MAX(form_id) = 6;",
        "question": "Select form status code from party forms grouped by form status code with maximum form id equal to 6",
        "tables": [
            "Individuals",
            "Organization_Contact_Individuals",
            "Addresses",
            "Organizations",
            "Services",
            "Party_Forms",
            "Party_Addresses",
            "Party_Services",
            "Parties",
            "Forms"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "form",
            "status",
            "code",
            "from",
            "party",
            "forms",
            "grouped",
            "by",
            "form",
            "status",
            "code",
            "with",
            "maximum",
            "form",
            "id",
            "equal",
            "to",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "form_status_code",
            "FROM",
            "Party_Forms",
            "GROUP",
            "BY",
            "form_status_code",
            "HAVING",
            "MAX",
            "(",
            "form_id",
            ")",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "form_status_code",
            "from",
            "party_forms",
            "group",
            "by",
            "form_status_code",
            "having",
            "max",
            "(",
            "form_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__party_forms__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__party_forms.form_status_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__party_forms.form_status_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__party_forms.form_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_government",
        "query": "SELECT address_type_code FROM Party_Addresses GROUP BY address_type_code HAVING MAX(address_id) = 2;",
        "question": "Select address type code from party addresses grouped by address type code with maximum address id equal to 2",
        "tables": [
            "Individuals",
            "Organization_Contact_Individuals",
            "Addresses",
            "Organizations",
            "Services",
            "Party_Forms",
            "Party_Addresses",
            "Party_Services",
            "Parties",
            "Forms"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "address",
            "type",
            "code",
            "from",
            "party",
            "addresses",
            "grouped",
            "by",
            "address",
            "type",
            "code",
            "with",
            "maximum",
            "address",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "address_type_code",
            "FROM",
            "Party_Addresses",
            "GROUP",
            "BY",
            "address_type_code",
            "HAVING",
            "MAX",
            "(",
            "address_id",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "address_type_code",
            "from",
            "party_addresses",
            "group",
            "by",
            "address_type_code",
            "having",
            "max",
            "(",
            "address_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__party_addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__party_addresses.address_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__party_addresses.address_type_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__party_addresses.address_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_government",
        "query": "SELECT payment_method_code FROM Parties GROUP BY payment_method_code HAVING MAX(party_id) = 9;",
        "question": "Select payment method code from parties grouped by payment method code with maximum party id equal to 9",
        "tables": [
            "Individuals",
            "Organization_Contact_Individuals",
            "Addresses",
            "Organizations",
            "Services",
            "Party_Forms",
            "Party_Addresses",
            "Party_Services",
            "Parties",
            "Forms"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "payment",
            "method",
            "code",
            "from",
            "parties",
            "grouped",
            "by",
            "payment",
            "method",
            "code",
            "with",
            "maximum",
            "party",
            "id",
            "equal",
            "to",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "payment_method_code",
            "FROM",
            "Parties",
            "GROUP",
            "BY",
            "payment_method_code",
            "HAVING",
            "MAX",
            "(",
            "party_id",
            ")",
            "=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "payment_method_code",
            "from",
            "parties",
            "group",
            "by",
            "payment_method_code",
            "having",
            "max",
            "(",
            "party_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__parties__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__parties.payment_method_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__parties.payment_method_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__parties.party_id__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_government",
        "query": "SELECT form_type_code FROM Forms GROUP BY form_type_code HAVING MIN(service_id) = 13;",
        "question": "Select form type code from forms grouped by form type code with minimum service id equal to 13",
        "tables": [
            "Individuals",
            "Organization_Contact_Individuals",
            "Addresses",
            "Organizations",
            "Services",
            "Party_Forms",
            "Party_Addresses",
            "Party_Services",
            "Parties",
            "Forms"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "form",
            "type",
            "code",
            "from",
            "forms",
            "grouped",
            "by",
            "form",
            "type",
            "code",
            "with",
            "minimum",
            "service",
            "id",
            "equal",
            "to",
            "13"
        ],
        "query_toks": [
            "SELECT",
            "form_type_code",
            "FROM",
            "Forms",
            "GROUP",
            "BY",
            "form_type_code",
            "HAVING",
            "MIN",
            "(",
            "service_id",
            ")",
            "=",
            "13"
        ],
        "query_toks_no_value": [
            "select",
            "form_type_code",
            "from",
            "forms",
            "group",
            "by",
            "form_type_code",
            "having",
            "min",
            "(",
            "service_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__forms__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__forms.form_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__forms.form_type_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__forms.service_id__",
                            false
                        ],
                        null
                    ],
                    13.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "school_bus",
        "query": "SELECT Location FROM school GROUP BY Location HAVING MIN(School_ID) = 4;",
        "question": "Select location from school grouped by location with minimum school id equal to 4",
        "tables": [
            "school_bus",
            "school",
            "driver"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "location",
            "from",
            "school",
            "grouped",
            "by",
            "location",
            "with",
            "minimum",
            "school",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Location",
            "FROM",
            "school",
            "GROUP",
            "BY",
            "Location",
            "HAVING",
            "MIN",
            "(",
            "School_ID",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "location",
            "from",
            "school",
            "group",
            "by",
            "location",
            "having",
            "min",
            "(",
            "school_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__school__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__school.location__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__school.location__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__school.school_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "school_bus",
        "query": "SELECT Home_city FROM driver GROUP BY Home_city HAVING MIN(Driver_ID) = 11;",
        "question": "Select home city from driver grouped by home city with minimum driver id equal to 11",
        "tables": [
            "school_bus",
            "school",
            "driver"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "home",
            "city",
            "from",
            "driver",
            "grouped",
            "by",
            "home",
            "city",
            "with",
            "minimum",
            "driver",
            "id",
            "equal",
            "to",
            "11"
        ],
        "query_toks": [
            "SELECT",
            "Home_city",
            "FROM",
            "driver",
            "GROUP",
            "BY",
            "Home_city",
            "HAVING",
            "MIN",
            "(",
            "Driver_ID",
            ")",
            "=",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "home_city",
            "from",
            "driver",
            "group",
            "by",
            "home_city",
            "having",
            "min",
            "(",
            "driver_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__driver__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__driver.home_city__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__driver.home_city__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__driver.driver_id__",
                            false
                        ],
                        null
                    ],
                    11.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "machine_repair",
        "query": "SELECT Name FROM technician GROUP BY Name HAVING MAX(technician_id) = 10.0;",
        "question": "Select name from technician grouped by name with maximum technician id equal to 10.0",
        "tables": [
            "technician",
            "repair",
            "machine",
            "repair_assignment"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "technician",
            "grouped",
            "by",
            "name",
            "with",
            "maximum",
            "technician",
            "id",
            "equal",
            "to",
            "10.0"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "technician",
            "GROUP",
            "BY",
            "Name",
            "HAVING",
            "MAX",
            "(",
            "technician_id",
            ")",
            "=",
            "10.0"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "technician",
            "group",
            "by",
            "name",
            "having",
            "max",
            "(",
            "technician_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__technician__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__technician.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__technician.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__technician.technician_id__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "machine_repair",
        "query": "SELECT name FROM repair GROUP BY name HAVING MIN(repair_ID) = 2;",
        "question": "Select name from repair grouped by name with minimum repair id equal to 2",
        "tables": [
            "technician",
            "repair",
            "machine",
            "repair_assignment"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "repair",
            "grouped",
            "by",
            "name",
            "with",
            "minimum",
            "repair",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "repair",
            "GROUP",
            "BY",
            "name",
            "HAVING",
            "MIN",
            "(",
            "repair_ID",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "repair",
            "group",
            "by",
            "name",
            "having",
            "min",
            "(",
            "repair_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__repair__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__repair.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__repair.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__repair.repair_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "machine_repair",
        "query": "SELECT Machine_series FROM machine GROUP BY Machine_series HAVING MAX(quality_rank) = 8;",
        "question": "Select machine series from machine grouped by machine series with maximum quality rank equal to 8",
        "tables": [
            "technician",
            "repair",
            "machine",
            "repair_assignment"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "machine",
            "series",
            "from",
            "machine",
            "grouped",
            "by",
            "machine",
            "series",
            "with",
            "maximum",
            "quality",
            "rank",
            "equal",
            "to",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "Machine_series",
            "FROM",
            "machine",
            "GROUP",
            "BY",
            "Machine_series",
            "HAVING",
            "MAX",
            "(",
            "quality_rank",
            ")",
            "=",
            "8"
        ],
        "query_toks_no_value": [
            "select",
            "machine_series",
            "from",
            "machine",
            "group",
            "by",
            "machine_series",
            "having",
            "max",
            "(",
            "quality_rank",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__machine__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__machine.machine_series__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__machine.machine_series__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__machine.quality_rank__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "theme_gallery",
        "query": "SELECT Name FROM artist GROUP BY Name HAVING MIN(Year_Join) = 1996;",
        "question": "Select name from artist grouped by name with minimum year join equal to 1996",
        "tables": [
            "artist",
            "exhibition_record",
            "exhibition"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "artist",
            "grouped",
            "by",
            "name",
            "with",
            "minimum",
            "year",
            "join",
            "equal",
            "to",
            "1996"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "artist",
            "GROUP",
            "BY",
            "Name",
            "HAVING",
            "MIN",
            "(",
            "Year_Join",
            ")",
            "=",
            "1996"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "artist",
            "group",
            "by",
            "name",
            "having",
            "min",
            "(",
            "year_join",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__artist__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__artist.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__artist.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__artist.year_join__",
                            false
                        ],
                        null
                    ],
                    1996.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "theme_gallery",
        "query": "SELECT Date FROM exhibition_record GROUP BY Date HAVING MIN(Exhibition_ID) = 4;",
        "question": "Select date from exhibition record grouped by date with minimum exhibition id equal to 4",
        "tables": [
            "artist",
            "exhibition_record",
            "exhibition"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "date",
            "from",
            "exhibition",
            "record",
            "grouped",
            "by",
            "date",
            "with",
            "minimum",
            "exhibition",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Date",
            "FROM",
            "exhibition_record",
            "GROUP",
            "BY",
            "Date",
            "HAVING",
            "MIN",
            "(",
            "Exhibition_ID",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "date",
            "from",
            "exhibition_record",
            "group",
            "by",
            "date",
            "having",
            "min",
            "(",
            "exhibition_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__exhibition_record__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__exhibition_record.date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__exhibition_record.date__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__exhibition_record.exhibition_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "theme_gallery",
        "query": "SELECT Theme FROM exhibition GROUP BY Theme HAVING MAX(Year) = 2007;",
        "question": "Select theme from exhibition grouped by theme with maximum year equal to 2007",
        "tables": [
            "artist",
            "exhibition_record",
            "exhibition"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "theme",
            "from",
            "exhibition",
            "grouped",
            "by",
            "theme",
            "with",
            "maximum",
            "year",
            "equal",
            "to",
            "2007"
        ],
        "query_toks": [
            "SELECT",
            "Theme",
            "FROM",
            "exhibition",
            "GROUP",
            "BY",
            "Theme",
            "HAVING",
            "MAX",
            "(",
            "Year",
            ")",
            "=",
            "2007"
        ],
        "query_toks_no_value": [
            "select",
            "theme",
            "from",
            "exhibition",
            "group",
            "by",
            "theme",
            "having",
            "max",
            "(",
            "year",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__exhibition__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__exhibition.theme__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__exhibition.theme__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__exhibition.year__",
                            false
                        ],
                        null
                    ],
                    2007.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "film_rank",
        "query": "SELECT Title FROM film GROUP BY Title HAVING MAX(Gross_in_dollar) = 109492484;",
        "question": "Select title from film grouped by title with maximum gross in dollar equal to 109492484",
        "tables": [
            "film",
            "market",
            "film_market_estimation"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "title",
            "from",
            "film",
            "grouped",
            "by",
            "title",
            "with",
            "maximum",
            "gross",
            "in",
            "dollar",
            "equal",
            "to",
            "109492484"
        ],
        "query_toks": [
            "SELECT",
            "Title",
            "FROM",
            "film",
            "GROUP",
            "BY",
            "Title",
            "HAVING",
            "MAX",
            "(",
            "Gross_in_dollar",
            ")",
            "=",
            "109492484"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "film",
            "group",
            "by",
            "title",
            "having",
            "max",
            "(",
            "gross_in_dollar",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__film__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__film.title__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__film.title__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__film.gross_in_dollar__",
                            false
                        ],
                        null
                    ],
                    109492484.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "film_rank",
        "query": "SELECT Country FROM market GROUP BY Country HAVING MAX(Number_cities) = 700;",
        "question": "Select country from market grouped by country with maximum number cities equal to 700",
        "tables": [
            "film",
            "market",
            "film_market_estimation"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "country",
            "from",
            "market",
            "grouped",
            "by",
            "country",
            "with",
            "maximum",
            "number",
            "cities",
            "equal",
            "to",
            "700"
        ],
        "query_toks": [
            "SELECT",
            "Countr",
            "(",
            "Countr",
            ")",
            "FROM",
            "market",
            "GROUP",
            "BY",
            "Countr",
            "(",
            "Countr",
            ")",
            "HAVING",
            "MAX",
            "(",
            "Number_cities",
            ")",
            "=",
            "700"
        ],
        "query_toks_no_value": [
            "select",
            "countr",
            "(",
            "countr",
            ")",
            "from",
            "market",
            "group",
            "by",
            "countr",
            "(",
            "countr",
            ")",
            "having",
            "max",
            "(",
            "number_cities",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__market__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__market.country__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__market.country__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__market.number_cities__",
                            false
                        ],
                        null
                    ],
                    700.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "film_rank",
        "query": "SELECT Type FROM film_market_estimation GROUP BY Type HAVING MIN(Year) = 1994;",
        "question": "Select type from film market estimation grouped by type with minimum year equal to 1994",
        "tables": [
            "film",
            "market",
            "film_market_estimation"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "type",
            "from",
            "film",
            "market",
            "estimation",
            "grouped",
            "by",
            "type",
            "with",
            "minimum",
            "year",
            "equal",
            "to",
            "1994"
        ],
        "query_toks": [
            "SELECT",
            "Type",
            "FROM",
            "film_market_estimation",
            "GROUP",
            "BY",
            "Type",
            "HAVING",
            "MIN",
            "(",
            "Year",
            ")",
            "=",
            "1994"
        ],
        "query_toks_no_value": [
            "select",
            "type",
            "from",
            "film_market_estimation",
            "group",
            "by",
            "type",
            "having",
            "min",
            "(",
            "year",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__film_market_estimation__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__film_market_estimation.type__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__film_market_estimation.type__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__film_market_estimation.year__",
                            false
                        ],
                        null
                    ],
                    1994.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "party_people",
        "query": "SELECT Party_ID FROM member GROUP BY Party_ID HAVING MAX(Member_ID) = 11;",
        "question": "Select party id from member grouped by party id with maximum member id equal to 11",
        "tables": [
            "member",
            "party_events",
            "party",
            "region"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "party",
            "id",
            "from",
            "member",
            "grouped",
            "by",
            "party",
            "id",
            "with",
            "maximum",
            "member",
            "id",
            "equal",
            "to",
            "11"
        ],
        "query_toks": [
            "SELECT",
            "Party_ID",
            "FROM",
            "member",
            "GROUP",
            "BY",
            "Party_ID",
            "HAVING",
            "MAX",
            "(",
            "Member_ID",
            ")",
            "=",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "party_id",
            "from",
            "member",
            "group",
            "by",
            "party_id",
            "having",
            "max",
            "(",
            "member_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__member__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__member.party_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__member.party_id__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__member.member_id__",
                            false
                        ],
                        null
                    ],
                    11.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "party_people",
        "query": "SELECT Event_Name FROM party_events GROUP BY Event_Name HAVING MAX(Member_in_charge_ID) = 11;",
        "question": "Select event name from party events grouped by event name with maximum member in charge id equal to 11",
        "tables": [
            "member",
            "party_events",
            "party",
            "region"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "event",
            "name",
            "from",
            "party",
            "events",
            "grouped",
            "by",
            "event",
            "name",
            "with",
            "maximum",
            "member",
            "in",
            "charge",
            "id",
            "equal",
            "to",
            "11"
        ],
        "query_toks": [
            "SELECT",
            "Event_Name",
            "FROM",
            "party_events",
            "GROUP",
            "BY",
            "Event_Name",
            "HAVING",
            "MAX",
            "(",
            "Member_in_charge_ID",
            ")",
            "=",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "event_name",
            "from",
            "party_events",
            "group",
            "by",
            "event_name",
            "having",
            "max",
            "(",
            "member_in_charge_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__party_events__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__party_events.event_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__party_events.event_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__party_events.member_in_charge_id__",
                            false
                        ],
                        null
                    ],
                    11.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "party_people",
        "query": "SELECT Minister FROM party GROUP BY Minister HAVING MAX(Party_ID) = 4;",
        "question": "Select minister from party grouped by minister with maximum party id equal to 4",
        "tables": [
            "member",
            "party_events",
            "party",
            "region"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "minister",
            "from",
            "party",
            "grouped",
            "by",
            "minister",
            "with",
            "maximum",
            "party",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Ministe",
            "(",
            "Ministe",
            ")",
            "FROM",
            "party",
            "GROUP",
            "BY",
            "Ministe",
            "(",
            "Ministe",
            ")",
            "HAVING",
            "MAX",
            "(",
            "Party_ID",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "ministe",
            "(",
            "ministe",
            ")",
            "from",
            "party",
            "group",
            "by",
            "ministe",
            "(",
            "ministe",
            ")",
            "having",
            "max",
            "(",
            "party_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__party__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__party.minister__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__party.minister__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__party.party_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "party_people",
        "query": "SELECT Date FROM region GROUP BY Date HAVING MIN(Region_ID) = 3;",
        "question": "Select date from region grouped by date with minimum region id equal to 3",
        "tables": [
            "member",
            "party_events",
            "party",
            "region"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "date",
            "from",
            "region",
            "grouped",
            "by",
            "date",
            "with",
            "minimum",
            "region",
            "id",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Date",
            "FROM",
            "region",
            "GROUP",
            "BY",
            "Date",
            "HAVING",
            "MIN",
            "(",
            "Region_ID",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "date",
            "from",
            "region",
            "group",
            "by",
            "date",
            "having",
            "min",
            "(",
            "region_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__region__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__region.date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__region.date__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__region.region_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT Dose FROM Prescribes GROUP BY Dose HAVING MAX(Physician) = 9;",
        "question": "Select dose from prescribes grouped by dose with maximum physician equal to 9",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "dose",
            "from",
            "prescribes",
            "grouped",
            "by",
            "dose",
            "with",
            "maximum",
            "physician",
            "equal",
            "to",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "Dose",
            "FROM",
            "Prescribes",
            "GROUP",
            "BY",
            "Dose",
            "HAVING",
            "MAX",
            "(",
            "Physician",
            ")",
            "=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "dose",
            "from",
            "prescribes",
            "group",
            "by",
            "dose",
            "having",
            "max",
            "(",
            "physician",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__prescribes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__prescribes.dose__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__prescribes.dose__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__prescribes.physician__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT RoomType FROM Room GROUP BY RoomType HAVING MIN(BlockCode) = 2;",
        "question": "Select room type from room grouped by room type with minimum block code equal to 2",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "room",
            "type",
            "from",
            "room",
            "grouped",
            "by",
            "room",
            "type",
            "with",
            "minimum",
            "block",
            "code",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "RoomType",
            "FROM",
            "Room",
            "GROUP",
            "BY",
            "RoomType",
            "HAVING",
            "MIN",
            "(",
            "BlockCode",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "roomtype",
            "from",
            "room",
            "group",
            "by",
            "roomtype",
            "having",
            "min",
            "(",
            "blockcode",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__room__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__room.roomtype__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__room.roomtype__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__room.blockcode__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT Name FROM Procedures GROUP BY Name HAVING MIN(Cost) = 25.0;",
        "question": "Select name from procedures grouped by name with minimum cost equal to 25.0",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "procedures",
            "grouped",
            "by",
            "name",
            "with",
            "minimum",
            "cost",
            "equal",
            "to",
            "25.0"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "Procedures",
            "GROUP",
            "BY",
            "Name",
            "HAVING",
            "MIN",
            "(",
            "Cost",
            ")",
            "=",
            "25.0"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "procedures",
            "group",
            "by",
            "name",
            "having",
            "min",
            "(",
            "cost",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__procedures__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__procedures.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__procedures.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__procedures.cost__",
                            false
                        ],
                        null
                    ],
                    25.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT Name FROM Department GROUP BY Name HAVING MIN(DepartmentID) = 3;",
        "question": "Select name from department grouped by name with minimum departmentid equal to 3",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "department",
            "grouped",
            "by",
            "name",
            "with",
            "minimum",
            "departmentid",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "Department",
            "GROUP",
            "BY",
            "Name",
            "HAVING",
            "MIN",
            "(",
            "DepartmentID",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "department",
            "group",
            "by",
            "name",
            "having",
            "min",
            "(",
            "departmentid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__department__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__department.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__department.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__department.departmentid__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT Address FROM Patient GROUP BY Address HAVING MAX(SSN) = 100000004;",
        "question": "Select address from patient grouped by address with maximum ssn equal to 100000004",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "address",
            "from",
            "patient",
            "grouped",
            "by",
            "address",
            "with",
            "maximum",
            "ssn",
            "equal",
            "to",
            "100000004"
        ],
        "query_toks": [
            "SELECT",
            "Address",
            "FROM",
            "Patient",
            "GROUP",
            "BY",
            "Address",
            "HAVING",
            "MAX",
            "(",
            "SSN",
            ")",
            "=",
            "100000004"
        ],
        "query_toks_no_value": [
            "select",
            "address",
            "from",
            "patient",
            "group",
            "by",
            "address",
            "having",
            "max",
            "(",
            "ssn",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__patient__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__patient.address__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__patient.address__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__patient.ssn__",
                            false
                        ],
                        null
                    ],
                    100000004.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT Position FROM Physician GROUP BY Position HAVING MIN(SSN) = 777777777;",
        "question": "Select position from physician grouped by position with minimum ssn equal to 777777777",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "position",
            "from",
            "physician",
            "grouped",
            "by",
            "position",
            "with",
            "minimum",
            "ssn",
            "equal",
            "to",
            "777777777"
        ],
        "query_toks": [
            "SELECT",
            "Position",
            "FROM",
            "Physician",
            "GROUP",
            "BY",
            "Position",
            "HAVING",
            "MIN",
            "(",
            "SSN",
            ")",
            "=",
            "777777777"
        ],
        "query_toks_no_value": [
            "select",
            "position",
            "from",
            "physician",
            "group",
            "by",
            "position",
            "having",
            "min",
            "(",
            "ssn",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__physician__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__physician.position__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__physician.position__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__physician.ssn__",
                            false
                        ],
                        null
                    ],
                    777777777.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT Name FROM Nurse GROUP BY Name HAVING MAX(EmployeeID) = 103;",
        "question": "Select name from nurse grouped by name with maximum employee id equal to 103",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "nurse",
            "grouped",
            "by",
            "name",
            "with",
            "maximum",
            "employee",
            "id",
            "equal",
            "to",
            "103"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "Nurse",
            "GROUP",
            "BY",
            "Name",
            "HAVING",
            "MAX",
            "(",
            "EmployeeID",
            ")",
            "=",
            "103"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "nurse",
            "group",
            "by",
            "name",
            "having",
            "max",
            "(",
            "employeeid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__nurse__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__nurse.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__nurse.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__nurse.employeeid__",
                            false
                        ],
                        null
                    ],
                    103.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT ExaminationRoom FROM Appointment GROUP BY ExaminationRoom HAVING MIN(AppointmentID) = 76983231;",
        "question": "Select examination room from appointment grouped by examination room with minimum appointment id equal to 76983231",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "examination",
            "room",
            "from",
            "appointment",
            "grouped",
            "by",
            "examination",
            "room",
            "with",
            "minimum",
            "appointment",
            "id",
            "equal",
            "to",
            "76983231"
        ],
        "query_toks": [
            "SELECT",
            "ExaminationRoom",
            "FROM",
            "Appointment",
            "GROUP",
            "BY",
            "ExaminationRoom",
            "HAVING",
            "MIN",
            "(",
            "AppointmentID",
            ")",
            "=",
            "76983231"
        ],
        "query_toks_no_value": [
            "select",
            "examinationroom",
            "from",
            "appointment",
            "group",
            "by",
            "examinationroom",
            "having",
            "min",
            "(",
            "appointmentid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__appointment__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__appointment.examinationroom__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__appointment.examinationroom__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__appointment.appointmentid__",
                            false
                        ],
                        null
                    ],
                    76983231.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT Brand FROM Medication GROUP BY Brand HAVING MAX(Code) = 1;",
        "question": "Select brand from medication grouped by brand with maximum code equal to 1",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "brand",
            "from",
            "medication",
            "grouped",
            "by",
            "brand",
            "with",
            "maximum",
            "code",
            "equal",
            "to",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Brand",
            "FROM",
            "Medication",
            "GROUP",
            "BY",
            "Brand",
            "HAVING",
            "MAX",
            "(",
            "Code",
            ")",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "brand",
            "from",
            "medication",
            "group",
            "by",
            "brand",
            "having",
            "max",
            "(",
            "code",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__medication__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__medication.brand__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__medication.brand__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__medication.code__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "query": "SELECT mailshot_name FROM Mailshot_Campaigns GROUP BY mailshot_name HAVING MIN(mailshot_id) = 8;",
        "question": "Select mailshot name from mailshot campaigns grouped by mailshot name with minimum mailshot id equal to 8",
        "tables": [
            "Mailshot_Campaigns",
            "Products",
            "Mailshot_Customers",
            "Order_Items",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers",
            "Premises"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "mailshot",
            "name",
            "from",
            "mailshot",
            "campaigns",
            "grouped",
            "by",
            "mailshot",
            "name",
            "with",
            "minimum",
            "mailshot",
            "id",
            "equal",
            "to",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "mailshot_name",
            "FROM",
            "Mailshot_Campaigns",
            "GROUP",
            "BY",
            "mailshot_name",
            "HAVING",
            "MIN",
            "(",
            "mailshot_id",
            ")",
            "=",
            "8"
        ],
        "query_toks_no_value": [
            "select",
            "mailshot_name",
            "from",
            "mailshot_campaigns",
            "group",
            "by",
            "mailshot_name",
            "having",
            "min",
            "(",
            "mailshot_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__mailshot_campaigns__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__mailshot_campaigns.mailshot_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__mailshot_campaigns.mailshot_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__mailshot_campaigns.mailshot_id__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "query": "SELECT product_category FROM Products GROUP BY product_category HAVING MIN(product_id) = 8;",
        "question": "Select product category from products grouped by product category with minimum product id equal to 8",
        "tables": [
            "Mailshot_Campaigns",
            "Products",
            "Mailshot_Customers",
            "Order_Items",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers",
            "Premises"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "product",
            "category",
            "from",
            "products",
            "grouped",
            "by",
            "product",
            "category",
            "with",
            "minimum",
            "product",
            "id",
            "equal",
            "to",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "product_category",
            "FROM",
            "Products",
            "GROUP",
            "BY",
            "product_category",
            "HAVING",
            "MIN",
            "(",
            "product_id",
            ")",
            "=",
            "8"
        ],
        "query_toks_no_value": [
            "select",
            "product_category",
            "from",
            "products",
            "group",
            "by",
            "product_category",
            "having",
            "min",
            "(",
            "product_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products.product_category__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__products.product_category__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__products.product_id__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "query": "SELECT outcome_code FROM Mailshot_Customers GROUP BY outcome_code HAVING MAX(customer_id) = 3;",
        "question": "Select outcome code from mailshot customers grouped by outcome code with maximum customer id equal to 3",
        "tables": [
            "Mailshot_Campaigns",
            "Products",
            "Mailshot_Customers",
            "Order_Items",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers",
            "Premises"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "outcome",
            "code",
            "from",
            "mailshot",
            "customers",
            "grouped",
            "by",
            "outcome",
            "code",
            "with",
            "maximum",
            "customer",
            "id",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "outcome_code",
            "FROM",
            "Mailshot_Customers",
            "GROUP",
            "BY",
            "outcome_code",
            "HAVING",
            "MAX",
            "(",
            "customer_id",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "outcome_code",
            "from",
            "mailshot_customers",
            "group",
            "by",
            "outcome_code",
            "having",
            "max",
            "(",
            "customer_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__mailshot_customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__mailshot_customers.outcome_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__mailshot_customers.outcome_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__mailshot_customers.customer_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "query": "SELECT order_item_status_code FROM Order_Items GROUP BY order_item_status_code HAVING MIN(order_id) = 11;",
        "question": "Select order item status code from order items grouped by order item status code with minimum order id equal to 11",
        "tables": [
            "Mailshot_Campaigns",
            "Products",
            "Mailshot_Customers",
            "Order_Items",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers",
            "Premises"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "order",
            "item",
            "status",
            "code",
            "from",
            "order",
            "items",
            "grouped",
            "by",
            "order",
            "item",
            "status",
            "code",
            "with",
            "minimum",
            "order",
            "id",
            "equal",
            "to",
            "11"
        ],
        "query_toks": [
            "SELECT",
            "order_item_status_code",
            "FROM",
            "Order_Items",
            "GROUP",
            "BY",
            "order_item_status_code",
            "HAVING",
            "MIN",
            "(",
            "order_id",
            ")",
            "=",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "order_item_status_code",
            "from",
            "order_items",
            "group",
            "by",
            "order_item_status_code",
            "having",
            "min",
            "(",
            "order_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__order_items__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__order_items.order_item_status_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__order_items.order_item_status_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__order_items.order_id__",
                            false
                        ],
                        null
                    ],
                    11.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "query": "SELECT order_shipping_charges FROM Customer_Orders GROUP BY order_shipping_charges HAVING MIN(order_id) = 15;",
        "question": "Select order shipping charges from customer orders grouped by order shipping charges with minimum order id equal to 15",
        "tables": [
            "Mailshot_Campaigns",
            "Products",
            "Mailshot_Customers",
            "Order_Items",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers",
            "Premises"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "order",
            "shipping",
            "charges",
            "from",
            "customer",
            "orders",
            "grouped",
            "by",
            "order",
            "shipping",
            "charges",
            "with",
            "minimum",
            "order",
            "id",
            "equal",
            "to",
            "15"
        ],
        "query_toks": [
            "SELECT",
            "order_shipping_charges",
            "FROM",
            "Customer_Orders",
            "GROUP",
            "BY",
            "order_shipping_charges",
            "HAVING",
            "MIN",
            "(",
            "order_id",
            ")",
            "=",
            "15"
        ],
        "query_toks_no_value": [
            "select",
            "order_shipping_charges",
            "from",
            "customer_orders",
            "group",
            "by",
            "order_shipping_charges",
            "having",
            "min",
            "(",
            "order_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_orders__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_orders.order_shipping_charges__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customer_orders.order_shipping_charges__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__customer_orders.order_id__",
                            false
                        ],
                        null
                    ],
                    15.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "query": "SELECT address_type_code FROM Customer_Addresses GROUP BY address_type_code HAVING MAX(premise_id) = 10;",
        "question": "Select address type code from customer addresses grouped by address type code with maximum premise id equal to 10",
        "tables": [
            "Mailshot_Campaigns",
            "Products",
            "Mailshot_Customers",
            "Order_Items",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers",
            "Premises"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "address",
            "type",
            "code",
            "from",
            "customer",
            "addresses",
            "grouped",
            "by",
            "address",
            "type",
            "code",
            "with",
            "maximum",
            "premise",
            "id",
            "equal",
            "to",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "address_type_code",
            "FROM",
            "Customer_Addresses",
            "GROUP",
            "BY",
            "address_type_code",
            "HAVING",
            "MAX",
            "(",
            "premise_id",
            ")",
            "=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "address_type_code",
            "from",
            "customer_addresses",
            "group",
            "by",
            "address_type_code",
            "having",
            "max",
            "(",
            "premise_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_addresses.address_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customer_addresses.address_type_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__customer_addresses.premise_id__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "query": "SELECT customer_phone FROM Customers GROUP BY customer_phone HAVING MIN(customer_id) = 5;",
        "question": "Select customer phone from customers grouped by customer phone with minimum customer id equal to 5",
        "tables": [
            "Mailshot_Campaigns",
            "Products",
            "Mailshot_Customers",
            "Order_Items",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers",
            "Premises"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "customer",
            "phone",
            "from",
            "customers",
            "grouped",
            "by",
            "customer",
            "phone",
            "with",
            "minimum",
            "customer",
            "id",
            "equal",
            "to",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "customer_phone",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "customer_phone",
            "HAVING",
            "MIN",
            "(",
            "customer_id",
            ")",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "customer_phone",
            "from",
            "customers",
            "group",
            "by",
            "customer_phone",
            "having",
            "min",
            "(",
            "customer_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_phone__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customers.customer_phone__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__customers.customer_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "query": "SELECT premise_details FROM Premises GROUP BY premise_details HAVING MIN(premise_id) = 6;",
        "question": "Select premise details from premises grouped by premise details with minimum premise id equal to 6",
        "tables": [
            "Mailshot_Campaigns",
            "Products",
            "Mailshot_Customers",
            "Order_Items",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers",
            "Premises"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "premise",
            "details",
            "from",
            "premises",
            "grouped",
            "by",
            "premise",
            "details",
            "with",
            "minimum",
            "premise",
            "id",
            "equal",
            "to",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "premise_details",
            "FROM",
            "Premises",
            "GROUP",
            "BY",
            "premise_details",
            "HAVING",
            "MIN",
            "(",
            "premise_id",
            ")",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "premise_details",
            "from",
            "premises",
            "group",
            "by",
            "premise_details",
            "having",
            "min",
            "(",
            "premise_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__premises__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__premises.premise_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__premises.premise_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__premises.premise_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "gymnast",
        "query": "SELECT Hometown FROM people GROUP BY Hometown HAVING MIN(People_ID) = 6;",
        "question": "Select hometown from people grouped by hometown with minimum people id equal to 6",
        "tables": [
            "gymnast",
            "people"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "hometown",
            "from",
            "people",
            "grouped",
            "by",
            "hometown",
            "with",
            "minimum",
            "people",
            "id",
            "equal",
            "to",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "Hometown",
            "FROM",
            "people",
            "GROUP",
            "BY",
            "Hometown",
            "HAVING",
            "MIN",
            "(",
            "People_ID",
            ")",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "hometown",
            "from",
            "people",
            "group",
            "by",
            "hometown",
            "having",
            "min",
            "(",
            "people_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__people__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__people.hometown__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__people.hometown__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__people.people_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "mountain_photos",
        "query": "SELECT Range FROM mountain GROUP BY Range HAVING MAX(id) = 4;",
        "question": "Select range from mountain grouped by range with maximum id equal to 4",
        "tables": [
            "mountain",
            "camera_lens",
            "photos"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "range",
            "from",
            "mountain",
            "grouped",
            "by",
            "range",
            "with",
            "maximum",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Range",
            "FROM",
            "mountain",
            "GROUP",
            "BY",
            "Range",
            "HAVING",
            "MAX",
            "(",
            "id",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "range",
            "from",
            "mountain",
            "group",
            "by",
            "range",
            "having",
            "max",
            "(",
            "id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__mountain__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__mountain.range__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__mountain.range__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__mountain.id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "mountain_photos",
        "query": "SELECT brand FROM camera_lens GROUP BY brand HAVING MIN(id) = 10;",
        "question": "Select brand from camera lens grouped by brand with minimum id equal to 10",
        "tables": [
            "mountain",
            "camera_lens",
            "photos"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "brand",
            "from",
            "camera",
            "lens",
            "grouped",
            "by",
            "brand",
            "with",
            "minimum",
            "id",
            "equal",
            "to",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "brand",
            "FROM",
            "camera_lens",
            "GROUP",
            "BY",
            "brand",
            "HAVING",
            "MIN",
            "(",
            "id",
            ")",
            "=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "brand",
            "from",
            "camera_lens",
            "group",
            "by",
            "brand",
            "having",
            "min",
            "(",
            "id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__camera_lens__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__camera_lens.brand__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__camera_lens.brand__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__camera_lens.id__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "mountain_photos",
        "query": "SELECT name FROM photos GROUP BY name HAVING MIN(id) = 6;",
        "question": "Select name from photos grouped by name with minimum id equal to 6",
        "tables": [
            "mountain",
            "camera_lens",
            "photos"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "photos",
            "grouped",
            "by",
            "name",
            "with",
            "minimum",
            "id",
            "equal",
            "to",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "photos",
            "GROUP",
            "BY",
            "name",
            "HAVING",
            "MIN",
            "(",
            "id",
            ")",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "photos",
            "group",
            "by",
            "name",
            "having",
            "min",
            "(",
            "id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__photos__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__photos.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__photos.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__photos.id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "battle_death",
        "query": "SELECT disposition_of_ship FROM ship GROUP BY disposition_of_ship HAVING MAX(id) = 6;",
        "question": "Select disposition of ship from ship grouped by disposition of ship with maximum id equal to 6",
        "tables": [
            "ship",
            "battle",
            "death"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "disposition",
            "of",
            "ship",
            "from",
            "ship",
            "grouped",
            "by",
            "disposition",
            "of",
            "ship",
            "with",
            "maximum",
            "id",
            "equal",
            "to",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "disposition_of_ship",
            "FROM",
            "ship",
            "GROUP",
            "BY",
            "disposition_of_ship",
            "HAVING",
            "MAX",
            "(",
            "id",
            ")",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "disposition_of_ship",
            "from",
            "ship",
            "group",
            "by",
            "disposition_of_ship",
            "having",
            "max",
            "(",
            "id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__ship__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__ship.disposition_of_ship__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__ship.disposition_of_ship__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__ship.id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "battle_death",
        "query": "SELECT bulgarian_commander FROM battle GROUP BY bulgarian_commander HAVING MAX(id) = 6;",
        "question": "Select bulgarian commander from battle grouped by bulgarian commander with maximum id equal to 6",
        "tables": [
            "ship",
            "battle",
            "death"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "bulgarian",
            "commander",
            "from",
            "battle",
            "grouped",
            "by",
            "bulgarian",
            "commander",
            "with",
            "maximum",
            "id",
            "equal",
            "to",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "bulgarian_commander",
            "FROM",
            "battle",
            "GROUP",
            "BY",
            "bulgarian_commander",
            "HAVING",
            "MAX",
            "(",
            "id",
            ")",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "bulgarian_commander",
            "from",
            "battle",
            "group",
            "by",
            "bulgarian_commander",
            "having",
            "max",
            "(",
            "id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__battle__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__battle.bulgarian_commander__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__battle.bulgarian_commander__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__battle.id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "battle_death",
        "query": "SELECT note FROM death GROUP BY note HAVING MIN(caused_by_ship_id) = 5;",
        "question": "Select note from death grouped by note with minimum caused by ship id equal to 5",
        "tables": [
            "ship",
            "battle",
            "death"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "note",
            "from",
            "death",
            "grouped",
            "by",
            "note",
            "with",
            "minimum",
            "caused",
            "by",
            "ship",
            "id",
            "equal",
            "to",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "note",
            "FROM",
            "death",
            "GROUP",
            "BY",
            "note",
            "HAVING",
            "MIN",
            "(",
            "caused_by_ship_id",
            ")",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "note",
            "from",
            "death",
            "group",
            "by",
            "note",
            "having",
            "min",
            "(",
            "caused_by_ship_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__death__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__death.note__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__death.note__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__death.caused_by_ship_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "query": "SELECT receipt_number FROM Documents GROUP BY receipt_number HAVING MAX(document_id) = 4;",
        "question": "Select receipt number from documents grouped by receipt number with maximum document id equal to 4",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Document_Status",
            "Draft_Copies",
            "Documents",
            "Addresses",
            "Circulation_History",
            "Document_Drafts",
            "Documents_Mailed",
            "Ref_Shipping_Agents",
            "Employees"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "receipt",
            "number",
            "from",
            "documents",
            "grouped",
            "by",
            "receipt",
            "number",
            "with",
            "maximum",
            "document",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "receipt_number",
            "FROM",
            "Documents",
            "GROUP",
            "BY",
            "receipt_number",
            "HAVING",
            "MAX",
            "(",
            "document_id",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "receipt_number",
            "from",
            "documents",
            "group",
            "by",
            "receipt_number",
            "having",
            "max",
            "(",
            "document_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__documents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__documents.receipt_number__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__documents.receipt_number__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__documents.document_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "query": "SELECT address_details FROM Addresses GROUP BY address_details HAVING MIN(address_id) = 0;",
        "question": "Select address details from addresses grouped by address details with minimum address id equal to 0",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Document_Status",
            "Draft_Copies",
            "Documents",
            "Addresses",
            "Circulation_History",
            "Document_Drafts",
            "Documents_Mailed",
            "Ref_Shipping_Agents",
            "Employees"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "address",
            "details",
            "from",
            "addresses",
            "grouped",
            "by",
            "address",
            "details",
            "with",
            "minimum",
            "address",
            "id",
            "equal",
            "to",
            "0"
        ],
        "query_toks": [
            "SELECT",
            "address_details",
            "FROM",
            "Addresses",
            "GROUP",
            "BY",
            "address_details",
            "HAVING",
            "MIN",
            "(",
            "address_id",
            ")",
            "=",
            "0"
        ],
        "query_toks_no_value": [
            "select",
            "address_details",
            "from",
            "addresses",
            "group",
            "by",
            "address_details",
            "having",
            "min",
            "(",
            "address_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__addresses.address_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__addresses.address_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__addresses.address_id__",
                            false
                        ],
                        null
                    ],
                    0.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "query": "SELECT draft_details FROM Document_Drafts GROUP BY draft_details HAVING MAX(draft_number) = 20;",
        "question": "Select draft details from document drafts grouped by draft details with maximum draft number equal to 20",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Document_Status",
            "Draft_Copies",
            "Documents",
            "Addresses",
            "Circulation_History",
            "Document_Drafts",
            "Documents_Mailed",
            "Ref_Shipping_Agents",
            "Employees"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "draft",
            "details",
            "from",
            "document",
            "drafts",
            "grouped",
            "by",
            "draft",
            "details",
            "with",
            "maximum",
            "draft",
            "number",
            "equal",
            "to",
            "20"
        ],
        "query_toks": [
            "SELECT",
            "draft_details",
            "FROM",
            "Document_Drafts",
            "GROUP",
            "BY",
            "draft_details",
            "HAVING",
            "MAX",
            "(",
            "draft_number",
            ")",
            "=",
            "20"
        ],
        "query_toks_no_value": [
            "select",
            "draft_details",
            "from",
            "document_drafts",
            "group",
            "by",
            "draft_details",
            "having",
            "max",
            "(",
            "draft_number",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__document_drafts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__document_drafts.draft_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__document_drafts.draft_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__document_drafts.draft_number__",
                            false
                        ],
                        null
                    ],
                    20.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "query": "SELECT employee_name FROM Employees GROUP BY employee_name HAVING MAX(employee_id) = 2;",
        "question": "Select employee name from employees grouped by employee name with maximum employee id equal to 2",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Document_Status",
            "Draft_Copies",
            "Documents",
            "Addresses",
            "Circulation_History",
            "Document_Drafts",
            "Documents_Mailed",
            "Ref_Shipping_Agents",
            "Employees"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "employee",
            "name",
            "from",
            "employees",
            "grouped",
            "by",
            "employee",
            "name",
            "with",
            "maximum",
            "employee",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "employee_name",
            "FROM",
            "Employees",
            "GROUP",
            "BY",
            "employee_name",
            "HAVING",
            "MAX",
            "(",
            "employee_id",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "employee_name",
            "from",
            "employees",
            "group",
            "by",
            "employee_name",
            "having",
            "max",
            "(",
            "employee_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__employees__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__employees.employee_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__employees.employee_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__employees.employee_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_share_transactions",
        "query": "SELECT other_details FROM Transactions GROUP BY other_details HAVING MAX(transaction_id) = 7;",
        "question": "Select other details from transactions grouped by other details with maximum transaction id equal to 7",
        "tables": [
            "Transactions",
            "Ref_Transaction_Types",
            "Purchases",
            "Investors",
            "Sales",
            "Lots",
            "Transactions_Lots"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "other",
            "details",
            "from",
            "transactions",
            "grouped",
            "by",
            "other",
            "details",
            "with",
            "maximum",
            "transaction",
            "id",
            "equal",
            "to",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "other_details",
            "FROM",
            "Transactions",
            "GROUP",
            "BY",
            "other_details",
            "HAVING",
            "MAX",
            "(",
            "transaction_id",
            ")",
            "=",
            "7"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            "from",
            "transactions",
            "group",
            "by",
            "other_details",
            "having",
            "max",
            "(",
            "transaction_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__transactions__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__transactions.other_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__transactions.other_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__transactions.transaction_id__",
                            false
                        ],
                        null
                    ],
                    7.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_share_transactions",
        "query": "SELECT purchase_details FROM Purchases GROUP BY purchase_details HAVING MIN(purchase_transaction_id) = 9;",
        "question": "Select purchase details from purchases grouped by purchase details with minimum purchase transaction id equal to 9",
        "tables": [
            "Transactions",
            "Ref_Transaction_Types",
            "Purchases",
            "Investors",
            "Sales",
            "Lots",
            "Transactions_Lots"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "purchase",
            "details",
            "from",
            "purchases",
            "grouped",
            "by",
            "purchase",
            "details",
            "with",
            "minimum",
            "purchase",
            "transaction",
            "id",
            "equal",
            "to",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "purchase_details",
            "FROM",
            "Purchases",
            "GROUP",
            "BY",
            "purchase_details",
            "HAVING",
            "MIN",
            "(",
            "purchase_transaction_id",
            ")",
            "=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "purchase_details",
            "from",
            "purchases",
            "group",
            "by",
            "purchase_details",
            "having",
            "min",
            "(",
            "purchase_transaction_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__purchases__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__purchases.purchase_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__purchases.purchase_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__purchases.purchase_transaction_id__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_share_transactions",
        "query": "SELECT Investor_details FROM Investors GROUP BY Investor_details HAVING MAX(investor_id) = 18;",
        "question": "Select investor details from investors grouped by investor details with maximum investor id equal to 18",
        "tables": [
            "Transactions",
            "Ref_Transaction_Types",
            "Purchases",
            "Investors",
            "Sales",
            "Lots",
            "Transactions_Lots"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "investor",
            "details",
            "from",
            "investors",
            "grouped",
            "by",
            "investor",
            "details",
            "with",
            "maximum",
            "investor",
            "id",
            "equal",
            "to",
            "18"
        ],
        "query_toks": [
            "SELECT",
            "Investor_details",
            "FROM",
            "Investors",
            "GROUP",
            "BY",
            "Investor_details",
            "HAVING",
            "MAX",
            "(",
            "investor_id",
            ")",
            "=",
            "18"
        ],
        "query_toks_no_value": [
            "select",
            "investor_details",
            "from",
            "investors",
            "group",
            "by",
            "investor_details",
            "having",
            "max",
            "(",
            "investor_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__investors__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__investors.investor_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__investors.investor_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__investors.investor_id__",
                            false
                        ],
                        null
                    ],
                    18.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_share_transactions",
        "query": "SELECT sales_details FROM Sales GROUP BY sales_details HAVING MIN(sales_transaction_id) = 14;",
        "question": "Select sales details from sales grouped by sales details with minimum sales transaction id equal to 14",
        "tables": [
            "Transactions",
            "Ref_Transaction_Types",
            "Purchases",
            "Investors",
            "Sales",
            "Lots",
            "Transactions_Lots"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "sales",
            "details",
            "from",
            "sales",
            "grouped",
            "by",
            "sales",
            "details",
            "with",
            "minimum",
            "sales",
            "transaction",
            "id",
            "equal",
            "to",
            "14"
        ],
        "query_toks": [
            "SELECT",
            "sales_details",
            "FROM",
            "Sales",
            "GROUP",
            "BY",
            "sales_details",
            "HAVING",
            "MIN",
            "(",
            "sales_transaction_id",
            ")",
            "=",
            "14"
        ],
        "query_toks_no_value": [
            "select",
            "sales_details",
            "from",
            "sales",
            "group",
            "by",
            "sales_details",
            "having",
            "min",
            "(",
            "sales_transaction_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__sales__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__sales.sales_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__sales.sales_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__sales.sales_transaction_id__",
                            false
                        ],
                        null
                    ],
                    14.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_share_transactions",
        "query": "SELECT lot_details FROM Lots GROUP BY lot_details HAVING MIN(lot_id) = 9;",
        "question": "Select lot details from lots grouped by lot details with minimum lot id equal to 9",
        "tables": [
            "Transactions",
            "Ref_Transaction_Types",
            "Purchases",
            "Investors",
            "Sales",
            "Lots",
            "Transactions_Lots"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "lot",
            "details",
            "from",
            "lots",
            "grouped",
            "by",
            "lot",
            "details",
            "with",
            "minimum",
            "lot",
            "id",
            "equal",
            "to",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "lot_details",
            "FROM",
            "Lots",
            "GROUP",
            "BY",
            "lot_details",
            "HAVING",
            "MIN",
            "(",
            "lot_id",
            ")",
            "=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "lot_details",
            "from",
            "lots",
            "group",
            "by",
            "lot_details",
            "having",
            "min",
            "(",
            "lot_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__lots__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__lots.lot_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__lots.lot_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__lots.lot_id__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "apartment_rentals",
        "query": "SELECT apt_number FROM Apartments GROUP BY apt_number HAVING MAX(bedroom_count) = 6;",
        "question": "Select apartment number from apartments grouped by apartment number with maximum bedroom count equal to 6",
        "tables": [
            "Apartments",
            "Apartment_Bookings",
            "View_Unit_Status",
            "Guests",
            "Apartment_Facilities",
            "Apartment_Buildings"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "apartment",
            "number",
            "from",
            "apartments",
            "grouped",
            "by",
            "apartment",
            "number",
            "with",
            "maximum",
            "bedroom",
            "count",
            "equal",
            "to",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "apt_number",
            "FROM",
            "Apartments",
            "GROUP",
            "BY",
            "apt_number",
            "HAVING",
            "MAX",
            "(",
            "bedroom_count",
            ")",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "apt_number",
            "from",
            "apartments",
            "group",
            "by",
            "apt_number",
            "having",
            "max",
            "(",
            "bedroom_count",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__apartments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__apartments.apt_number__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__apartments.apt_number__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__apartments.bedroom_count__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "apartment_rentals",
        "query": "SELECT booking_status_code FROM Apartment_Bookings GROUP BY booking_status_code HAVING MAX(apt_booking_id) = 924;",
        "question": "Select booking status code from apartment bookings grouped by booking status code with maximum apartment booking id equal to 924",
        "tables": [
            "Apartments",
            "Apartment_Bookings",
            "View_Unit_Status",
            "Guests",
            "Apartment_Facilities",
            "Apartment_Buildings"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "booking",
            "status",
            "code",
            "from",
            "apartment",
            "bookings",
            "grouped",
            "by",
            "booking",
            "status",
            "code",
            "with",
            "maximum",
            "apartment",
            "booking",
            "id",
            "equal",
            "to",
            "924"
        ],
        "query_toks": [
            "SELECT",
            "booking_status_code",
            "FROM",
            "Apartment_Bookings",
            "GROUP",
            "BY",
            "booking_status_code",
            "HAVING",
            "MAX",
            "(",
            "apt_booking_id",
            ")",
            "=",
            "924"
        ],
        "query_toks_no_value": [
            "select",
            "booking_status_code",
            "from",
            "apartment_bookings",
            "group",
            "by",
            "booking_status_code",
            "having",
            "max",
            "(",
            "apt_booking_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__apartment_bookings__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__apartment_bookings.booking_status_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__apartment_bookings.booking_status_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__apartment_bookings.apt_booking_id__",
                            false
                        ],
                        null
                    ],
                    924.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "apartment_rentals",
        "query": "SELECT guest_first_name FROM Guests GROUP BY guest_first_name HAVING MAX(guest_id) = 3;",
        "question": "Select guest first name from guests grouped by guest first name with maximum guest id equal to 3",
        "tables": [
            "Apartments",
            "Apartment_Bookings",
            "View_Unit_Status",
            "Guests",
            "Apartment_Facilities",
            "Apartment_Buildings"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "guest",
            "first",
            "name",
            "from",
            "guests",
            "grouped",
            "by",
            "guest",
            "first",
            "name",
            "with",
            "maximum",
            "guest",
            "id",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "guest_first_name",
            "FROM",
            "Guests",
            "GROUP",
            "BY",
            "guest_first_name",
            "HAVING",
            "MAX",
            "(",
            "guest_id",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "guest_first_name",
            "from",
            "guests",
            "group",
            "by",
            "guest_first_name",
            "having",
            "max",
            "(",
            "guest_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__guests__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__guests.guest_first_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__guests.guest_first_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__guests.guest_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "apartment_rentals",
        "query": "SELECT facility_code FROM Apartment_Facilities GROUP BY facility_code HAVING MIN(apt_id) = 2;",
        "question": "Select facility code from apartment facilities grouped by facility code with minimum apartment id equal to 2",
        "tables": [
            "Apartments",
            "Apartment_Bookings",
            "View_Unit_Status",
            "Guests",
            "Apartment_Facilities",
            "Apartment_Buildings"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "facility",
            "code",
            "from",
            "apartment",
            "facilities",
            "grouped",
            "by",
            "facility",
            "code",
            "with",
            "minimum",
            "apartment",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "facility_code",
            "FROM",
            "Apartment_Facilities",
            "GROUP",
            "BY",
            "facility_code",
            "HAVING",
            "MIN",
            "(",
            "apt_id",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "facility_code",
            "from",
            "apartment_facilities",
            "group",
            "by",
            "facility_code",
            "having",
            "min",
            "(",
            "apt_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__apartment_facilities__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__apartment_facilities.facility_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__apartment_facilities.facility_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__apartment_facilities.apt_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "apartment_rentals",
        "query": "SELECT building_description FROM Apartment_Buildings GROUP BY building_description HAVING MAX(building_id) = 644;",
        "question": "Select building description from apartment buildings grouped by building description with maximum building id equal to 644",
        "tables": [
            "Apartments",
            "Apartment_Bookings",
            "View_Unit_Status",
            "Guests",
            "Apartment_Facilities",
            "Apartment_Buildings"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "building",
            "description",
            "from",
            "apartment",
            "buildings",
            "grouped",
            "by",
            "building",
            "description",
            "with",
            "maximum",
            "building",
            "id",
            "equal",
            "to",
            "644"
        ],
        "query_toks": [
            "SELECT",
            "building_description",
            "FROM",
            "Apartment_Buildings",
            "GROUP",
            "BY",
            "building_description",
            "HAVING",
            "MAX",
            "(",
            "building_id",
            ")",
            "=",
            "644"
        ],
        "query_toks_no_value": [
            "select",
            "building_description",
            "from",
            "apartment_buildings",
            "group",
            "by",
            "building_description",
            "having",
            "max",
            "(",
            "building_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__apartment_buildings__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__apartment_buildings.building_description__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__apartment_buildings.building_description__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__apartment_buildings.building_id__",
                            false
                        ],
                        null
                    ],
                    644.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT other_details FROM Student_Enrolment GROUP BY other_details HAVING MAX(student_id) = 7;",
        "question": "Select other details from student enrolment grouped by other details with maximum student id equal to 7",
        "tables": [
            "Transcript_Contents",
            "Student_Enrolment",
            "Courses",
            "Students",
            "Student_Enrolment_Courses",
            "Addresses",
            "Transcripts",
            "Sections",
            "Degree_Programs",
            "Semesters",
            "Departments"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "other",
            "details",
            "from",
            "student",
            "enrolment",
            "grouped",
            "by",
            "other",
            "details",
            "with",
            "maximum",
            "student",
            "id",
            "equal",
            "to",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "other_details",
            "FROM",
            "Student_Enrolment",
            "GROUP",
            "BY",
            "other_details",
            "HAVING",
            "MAX",
            "(",
            "student_id",
            ")",
            "=",
            "7"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            "from",
            "student_enrolment",
            "group",
            "by",
            "other_details",
            "having",
            "max",
            "(",
            "student_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student_enrolment__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student_enrolment.other_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__student_enrolment.other_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__student_enrolment.student_id__",
                            false
                        ],
                        null
                    ],
                    7.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT other_details FROM Courses GROUP BY other_details HAVING MAX(course_id) = 3;",
        "question": "Select other details from courses grouped by other details with maximum course id equal to 3",
        "tables": [
            "Transcript_Contents",
            "Student_Enrolment",
            "Courses",
            "Students",
            "Student_Enrolment_Courses",
            "Addresses",
            "Transcripts",
            "Sections",
            "Degree_Programs",
            "Semesters",
            "Departments"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "other",
            "details",
            "from",
            "courses",
            "grouped",
            "by",
            "other",
            "details",
            "with",
            "maximum",
            "course",
            "id",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "other_details",
            "FROM",
            "Courses",
            "GROUP",
            "BY",
            "other_details",
            "HAVING",
            "MAX",
            "(",
            "course_id",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            "from",
            "courses",
            "group",
            "by",
            "other_details",
            "having",
            "max",
            "(",
            "course_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__courses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__courses.other_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__courses.other_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__courses.course_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT last_name FROM Students GROUP BY last_name HAVING MAX(current_address_id) = 14;",
        "question": "Select last name from students grouped by last name with maximum current address id equal to 14",
        "tables": [
            "Transcript_Contents",
            "Student_Enrolment",
            "Courses",
            "Students",
            "Student_Enrolment_Courses",
            "Addresses",
            "Transcripts",
            "Sections",
            "Degree_Programs",
            "Semesters",
            "Departments"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "last",
            "name",
            "from",
            "students",
            "grouped",
            "by",
            "last",
            "name",
            "with",
            "maximum",
            "current",
            "address",
            "id",
            "equal",
            "to",
            "14"
        ],
        "query_toks": [
            "SELECT",
            "last_name",
            "FROM",
            "Students",
            "GROUP",
            "BY",
            "last_name",
            "HAVING",
            "MAX",
            "(",
            "current_address_id",
            ")",
            "=",
            "14"
        ],
        "query_toks_no_value": [
            "select",
            "last_name",
            "from",
            "students",
            "group",
            "by",
            "last_name",
            "having",
            "max",
            "(",
            "current_address_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__students__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__students.last_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__students.last_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__students.current_address_id__",
                            false
                        ],
                        null
                    ],
                    14.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT zip_postcode FROM Addresses GROUP BY zip_postcode HAVING MIN(address_id) = 6;",
        "question": "Select zip postcode from addresses grouped by zip postcode with minimum address id equal to 6",
        "tables": [
            "Transcript_Contents",
            "Student_Enrolment",
            "Courses",
            "Students",
            "Student_Enrolment_Courses",
            "Addresses",
            "Transcripts",
            "Sections",
            "Degree_Programs",
            "Semesters",
            "Departments"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "zip",
            "postcode",
            "from",
            "addresses",
            "grouped",
            "by",
            "zip",
            "postcode",
            "with",
            "minimum",
            "address",
            "id",
            "equal",
            "to",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "zip_postcode",
            "FROM",
            "Addresses",
            "GROUP",
            "BY",
            "zip_postcode",
            "HAVING",
            "MIN",
            "(",
            "address_id",
            ")",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "zip_postcode",
            "from",
            "addresses",
            "group",
            "by",
            "zip_postcode",
            "having",
            "min",
            "(",
            "address_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__addresses.zip_postcode__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__addresses.zip_postcode__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__addresses.address_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT other_details FROM Transcripts GROUP BY other_details HAVING MAX(transcript_id) = 1;",
        "question": "Select other details from transcripts grouped by other details with maximum transcript id equal to 1",
        "tables": [
            "Transcript_Contents",
            "Student_Enrolment",
            "Courses",
            "Students",
            "Student_Enrolment_Courses",
            "Addresses",
            "Transcripts",
            "Sections",
            "Degree_Programs",
            "Semesters",
            "Departments"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "other",
            "details",
            "from",
            "transcripts",
            "grouped",
            "by",
            "other",
            "details",
            "with",
            "maximum",
            "transcript",
            "id",
            "equal",
            "to",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "other_details",
            "FROM",
            "Transcripts",
            "GROUP",
            "BY",
            "other_details",
            "HAVING",
            "MAX",
            "(",
            "transcript_id",
            ")",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            "from",
            "transcripts",
            "group",
            "by",
            "other_details",
            "having",
            "max",
            "(",
            "transcript_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__transcripts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__transcripts.other_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__transcripts.other_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__transcripts.transcript_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT other_details FROM Sections GROUP BY other_details HAVING MAX(course_id) = 5;",
        "question": "Select other details from sections grouped by other details with maximum course id equal to 5",
        "tables": [
            "Transcript_Contents",
            "Student_Enrolment",
            "Courses",
            "Students",
            "Student_Enrolment_Courses",
            "Addresses",
            "Transcripts",
            "Sections",
            "Degree_Programs",
            "Semesters",
            "Departments"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "other",
            "details",
            "from",
            "sections",
            "grouped",
            "by",
            "other",
            "details",
            "with",
            "maximum",
            "course",
            "id",
            "equal",
            "to",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "other_details",
            "FROM",
            "Sections",
            "GROUP",
            "BY",
            "other_details",
            "HAVING",
            "MAX",
            "(",
            "course_id",
            ")",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            "from",
            "sections",
            "group",
            "by",
            "other_details",
            "having",
            "max",
            "(",
            "course_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__sections__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__sections.other_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__sections.other_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__sections.course_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT other_details FROM Degree_Programs GROUP BY other_details HAVING MIN(department_id) = 4;",
        "question": "Select other details from degree programs grouped by other details with minimum department id equal to 4",
        "tables": [
            "Transcript_Contents",
            "Student_Enrolment",
            "Courses",
            "Students",
            "Student_Enrolment_Courses",
            "Addresses",
            "Transcripts",
            "Sections",
            "Degree_Programs",
            "Semesters",
            "Departments"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "other",
            "details",
            "from",
            "degree",
            "programs",
            "grouped",
            "by",
            "other",
            "details",
            "with",
            "minimum",
            "department",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "other_details",
            "FROM",
            "Degree_Programs",
            "GROUP",
            "BY",
            "other_details",
            "HAVING",
            "MIN",
            "(",
            "department_id",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            "from",
            "degree_programs",
            "group",
            "by",
            "other_details",
            "having",
            "min",
            "(",
            "department_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__degree_programs__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__degree_programs.other_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__degree_programs.other_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__degree_programs.department_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT other_details FROM Semesters GROUP BY other_details HAVING MIN(semester_id) = 5;",
        "question": "Select other details from semesters grouped by other details with minimum semester id equal to 5",
        "tables": [
            "Transcript_Contents",
            "Student_Enrolment",
            "Courses",
            "Students",
            "Student_Enrolment_Courses",
            "Addresses",
            "Transcripts",
            "Sections",
            "Degree_Programs",
            "Semesters",
            "Departments"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "other",
            "details",
            "from",
            "semesters",
            "grouped",
            "by",
            "other",
            "details",
            "with",
            "minimum",
            "semester",
            "id",
            "equal",
            "to",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "other_details",
            "FROM",
            "Semesters",
            "GROUP",
            "BY",
            "other_details",
            "HAVING",
            "MIN",
            "(",
            "semester_id",
            ")",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            "from",
            "semesters",
            "group",
            "by",
            "other_details",
            "having",
            "min",
            "(",
            "semester_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__semesters__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__semesters.other_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__semesters.other_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__semesters.semester_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT other_details FROM Departments GROUP BY other_details HAVING MIN(department_id) = 15;",
        "question": "Select other details from departments grouped by other details with minimum department id equal to 15",
        "tables": [
            "Transcript_Contents",
            "Student_Enrolment",
            "Courses",
            "Students",
            "Student_Enrolment_Courses",
            "Addresses",
            "Transcripts",
            "Sections",
            "Degree_Programs",
            "Semesters",
            "Departments"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "other",
            "details",
            "from",
            "departments",
            "grouped",
            "by",
            "other",
            "details",
            "with",
            "minimum",
            "department",
            "id",
            "equal",
            "to",
            "15"
        ],
        "query_toks": [
            "SELECT",
            "other_details",
            "FROM",
            "Departments",
            "GROUP",
            "BY",
            "other_details",
            "HAVING",
            "MIN",
            "(",
            "department_id",
            ")",
            "=",
            "15"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            "from",
            "departments",
            "group",
            "by",
            "other_details",
            "having",
            "min",
            "(",
            "department_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__departments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__departments.other_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__departments.other_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__departments.department_id__",
                            false
                        ],
                        null
                    ],
                    15.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "query": "SELECT Project_Details FROM Projects GROUP BY Project_Details HAVING MAX(Project_ID) = 105;",
        "question": "Select project details from projects grouped by project details with maximum project id equal to 105",
        "tables": [
            "Ref_Document_Types",
            "Projects",
            "Documents",
            "Ref_Budget_Codes",
            "Accounts",
            "Statements",
            "Documents_with_Expenses"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "project",
            "details",
            "from",
            "projects",
            "grouped",
            "by",
            "project",
            "details",
            "with",
            "maximum",
            "project",
            "id",
            "equal",
            "to",
            "105"
        ],
        "query_toks": [
            "SELECT",
            "Project_Details",
            "FROM",
            "Projects",
            "GROUP",
            "BY",
            "Project_Details",
            "HAVING",
            "MAX",
            "(",
            "Project_ID",
            ")",
            "=",
            "105"
        ],
        "query_toks_no_value": [
            "select",
            "project_details",
            "from",
            "projects",
            "group",
            "by",
            "project_details",
            "having",
            "max",
            "(",
            "project_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__projects__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__projects.project_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__projects.project_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__projects.project_id__",
                            false
                        ],
                        null
                    ],
                    105.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "query": "SELECT Other_Details FROM Documents GROUP BY Other_Details HAVING MIN(Project_ID) = 195;",
        "question": "Select other details from documents grouped by other details with minimum project id equal to 195",
        "tables": [
            "Ref_Document_Types",
            "Projects",
            "Documents",
            "Ref_Budget_Codes",
            "Accounts",
            "Statements",
            "Documents_with_Expenses"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "other",
            "details",
            "from",
            "documents",
            "grouped",
            "by",
            "other",
            "details",
            "with",
            "minimum",
            "project",
            "id",
            "equal",
            "to",
            "195"
        ],
        "query_toks": [
            "SELECT",
            "Other_Details",
            "FROM",
            "Documents",
            "GROUP",
            "BY",
            "Other_Details",
            "HAVING",
            "MIN",
            "(",
            "Project_ID",
            ")",
            "=",
            "195"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            "from",
            "documents",
            "group",
            "by",
            "other_details",
            "having",
            "min",
            "(",
            "project_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__documents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__documents.other_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__documents.other_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__documents.project_id__",
                            false
                        ],
                        null
                    ],
                    195.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "query": "SELECT Account_Details FROM Accounts GROUP BY Account_Details HAVING MIN(Statement_ID) = 57;",
        "question": "Select account details from accounts grouped by account details with minimum statement id equal to 57",
        "tables": [
            "Ref_Document_Types",
            "Projects",
            "Documents",
            "Ref_Budget_Codes",
            "Accounts",
            "Statements",
            "Documents_with_Expenses"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "account",
            "details",
            "from",
            "accounts",
            "grouped",
            "by",
            "account",
            "details",
            "with",
            "minimum",
            "statement",
            "id",
            "equal",
            "to",
            "57"
        ],
        "query_toks": [
            "SELECT",
            "Account_Details",
            "FROM",
            "Accounts",
            "GROUP",
            "BY",
            "Account_Details",
            "HAVING",
            "MIN",
            "(",
            "Statement_ID",
            ")",
            "=",
            "57"
        ],
        "query_toks_no_value": [
            "select",
            "account_details",
            "from",
            "accounts",
            "group",
            "by",
            "account_details",
            "having",
            "min",
            "(",
            "statement_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__accounts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__accounts.account_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__accounts.account_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__accounts.statement_id__",
                            false
                        ],
                        null
                    ],
                    57.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "query": "SELECT Statement_Details FROM Statements GROUP BY Statement_Details HAVING MIN(Statement_ID) = 57;",
        "question": "Select statement details from statements grouped by statement details with minimum statement id equal to 57",
        "tables": [
            "Ref_Document_Types",
            "Projects",
            "Documents",
            "Ref_Budget_Codes",
            "Accounts",
            "Statements",
            "Documents_with_Expenses"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "statement",
            "details",
            "from",
            "statements",
            "grouped",
            "by",
            "statement",
            "details",
            "with",
            "minimum",
            "statement",
            "id",
            "equal",
            "to",
            "57"
        ],
        "query_toks": [
            "SELECT",
            "Statement_Details",
            "FROM",
            "Statements",
            "GROUP",
            "BY",
            "Statement_Details",
            "HAVING",
            "MIN",
            "(",
            "Statement_ID",
            ")",
            "=",
            "57"
        ],
        "query_toks_no_value": [
            "select",
            "statement_details",
            "from",
            "statements",
            "group",
            "by",
            "statement_details",
            "having",
            "min",
            "(",
            "statement_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__statements__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__statements.statement_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__statements.statement_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__statements.statement_id__",
                            false
                        ],
                        null
                    ],
                    57.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "query": "SELECT Budget_Type_Code FROM Documents_with_Expenses GROUP BY Budget_Type_Code HAVING MAX(Document_ID) = 57;",
        "question": "Select budget type code from documents with expenses grouped by budget type code with maximum document id equal to 57",
        "tables": [
            "Ref_Document_Types",
            "Projects",
            "Documents",
            "Ref_Budget_Codes",
            "Accounts",
            "Statements",
            "Documents_with_Expenses"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "budget",
            "type",
            "code",
            "from",
            "documents",
            "with",
            "expenses",
            "grouped",
            "by",
            "budget",
            "type",
            "code",
            "with",
            "maximum",
            "document",
            "id",
            "equal",
            "to",
            "57"
        ],
        "query_toks": [
            "SELECT",
            "Budget_Type_Code",
            "FROM",
            "Documents_with_Expenses",
            "GROUP",
            "BY",
            "Budget_Type_Code",
            "HAVING",
            "MAX",
            "(",
            "Document_ID",
            ")",
            "=",
            "57"
        ],
        "query_toks_no_value": [
            "select",
            "budget_type_code",
            "from",
            "documents_with_expenses",
            "group",
            "by",
            "budget_type_code",
            "having",
            "max",
            "(",
            "document_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__documents_with_expenses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__documents_with_expenses.budget_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__documents_with_expenses.budget_type_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__documents_with_expenses.document_id__",
                            false
                        ],
                        null
                    ],
                    57.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "ship_mission",
        "query": "SELECT Nationality FROM ship GROUP BY Nationality HAVING MIN(Ship_ID) = 5;",
        "question": "Select nationality from ship grouped by nationality with minimum ship id equal to 5",
        "tables": [
            "ship",
            "mission"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "nationality",
            "from",
            "ship",
            "grouped",
            "by",
            "nationality",
            "with",
            "minimum",
            "ship",
            "id",
            "equal",
            "to",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "Nationality",
            "FROM",
            "ship",
            "GROUP",
            "BY",
            "Nationality",
            "HAVING",
            "MIN",
            "(",
            "Ship_ID",
            ")",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "nationality",
            "from",
            "ship",
            "group",
            "by",
            "nationality",
            "having",
            "min",
            "(",
            "ship_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__ship__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__ship.nationality__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__ship.nationality__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__ship.ship_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "ship_mission",
        "query": "SELECT Location FROM mission GROUP BY Location HAVING MIN(Ship_ID) = 3;",
        "question": "Select location from mission grouped by location with minimum ship id equal to 3",
        "tables": [
            "ship",
            "mission"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "location",
            "from",
            "mission",
            "grouped",
            "by",
            "location",
            "with",
            "minimum",
            "ship",
            "id",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Location",
            "FROM",
            "mission",
            "GROUP",
            "BY",
            "Location",
            "HAVING",
            "MIN",
            "(",
            "Ship_ID",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "location",
            "from",
            "mission",
            "group",
            "by",
            "location",
            "having",
            "min",
            "(",
            "ship_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__mission__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__mission.location__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__mission.location__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__mission.ship_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_office",
        "query": "SELECT Market_Value_billion FROM Companies GROUP BY Market_Value_billion HAVING MIN(id) = 8;",
        "question": "Select market value billion from companies grouped by market value billion with minimum id equal to 8",
        "tables": [
            "Office_locations",
            "Companies",
            "buildings"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "market",
            "value",
            "billion",
            "from",
            "companies",
            "grouped",
            "by",
            "market",
            "value",
            "billion",
            "with",
            "minimum",
            "id",
            "equal",
            "to",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "Market_Value_billion",
            "FROM",
            "Companies",
            "GROUP",
            "BY",
            "Market_Value_billion",
            "HAVING",
            "MIN",
            "(",
            "id",
            ")",
            "=",
            "8"
        ],
        "query_toks_no_value": [
            "select",
            "market_value_billion",
            "from",
            "companies",
            "group",
            "by",
            "market_value_billion",
            "having",
            "min",
            "(",
            "id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__companies__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__companies.market_value_billion__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__companies.market_value_billion__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__companies.id__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_office",
        "query": "SELECT name FROM buildings GROUP BY name HAVING MAX(Height) = 200;",
        "question": "Select name from buildings grouped by name with maximum height equal to 200",
        "tables": [
            "Office_locations",
            "Companies",
            "buildings"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "buildings",
            "grouped",
            "by",
            "name",
            "with",
            "maximum",
            "height",
            "equal",
            "to",
            "200"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "buildings",
            "GROUP",
            "BY",
            "name",
            "HAVING",
            "MAX",
            "(",
            "Height",
            ")",
            "=",
            "200"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "buildings",
            "group",
            "by",
            "name",
            "having",
            "max",
            "(",
            "height",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__buildings__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__buildings.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__buildings.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__buildings.height__",
                            false
                        ],
                        null
                    ],
                    200.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_software_problems",
        "query": "SELECT staff_first_name FROM Staff GROUP BY staff_first_name HAVING MAX(staff_id) = 2;",
        "question": "Select staff first name from staff grouped by staff first name with maximum staff id equal to 2",
        "tables": [
            "Staff",
            "Product",
            "Problem_Log",
            "Problems",
            "Problem_Category_Codes",
            "Problem_Status_Codes"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "staff",
            "first",
            "name",
            "from",
            "staff",
            "grouped",
            "by",
            "staff",
            "first",
            "name",
            "with",
            "maximum",
            "staff",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "staff_first_name",
            "FROM",
            "Staff",
            "GROUP",
            "BY",
            "staff_first_name",
            "HAVING",
            "MAX",
            "(",
            "staff_id",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "staff_first_name",
            "from",
            "staff",
            "group",
            "by",
            "staff_first_name",
            "having",
            "max",
            "(",
            "staff_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__staff__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__staff.staff_first_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__staff.staff_first_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__staff.staff_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_software_problems",
        "query": "SELECT product_name FROM Product GROUP BY product_name HAVING MIN(product_id) = 15;",
        "question": "Select product name from product grouped by product name with minimum product id equal to 15",
        "tables": [
            "Staff",
            "Product",
            "Problem_Log",
            "Problems",
            "Problem_Category_Codes",
            "Problem_Status_Codes"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "product",
            "name",
            "from",
            "product",
            "grouped",
            "by",
            "product",
            "name",
            "with",
            "minimum",
            "product",
            "id",
            "equal",
            "to",
            "15"
        ],
        "query_toks": [
            "SELECT",
            "product_name",
            "FROM",
            "Product",
            "GROUP",
            "BY",
            "product_name",
            "HAVING",
            "MIN",
            "(",
            "product_id",
            ")",
            "=",
            "15"
        ],
        "query_toks_no_value": [
            "select",
            "product_name",
            "from",
            "product",
            "group",
            "by",
            "product_name",
            "having",
            "min",
            "(",
            "product_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__product__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__product.product_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__product.product_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__product.product_id__",
                            false
                        ],
                        null
                    ],
                    15.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_software_problems",
        "query": "SELECT log_entry_fix FROM Problem_Log GROUP BY log_entry_fix HAVING MAX(problem_id) = 1;",
        "question": "Select log entry fix from problem log grouped by log entry fix with maximum problem id equal to 1",
        "tables": [
            "Staff",
            "Product",
            "Problem_Log",
            "Problems",
            "Problem_Category_Codes",
            "Problem_Status_Codes"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "log",
            "entry",
            "fix",
            "from",
            "problem",
            "log",
            "grouped",
            "by",
            "log",
            "entry",
            "fix",
            "with",
            "maximum",
            "problem",
            "id",
            "equal",
            "to",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "log_entry_fix",
            "FROM",
            "Problem_Log",
            "GROUP",
            "BY",
            "log_entry_fix",
            "HAVING",
            "MAX",
            "(",
            "problem_id",
            ")",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "log_entry_fix",
            "from",
            "problem_log",
            "group",
            "by",
            "log_entry_fix",
            "having",
            "max",
            "(",
            "problem_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__problem_log__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__problem_log.log_entry_fix__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__problem_log.log_entry_fix__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__problem_log.problem_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_software_problems",
        "query": "SELECT other_problem_details FROM Problems GROUP BY other_problem_details HAVING MAX(problem_id) = 11;",
        "question": "Select other problem details from problems grouped by other problem details with maximum problem id equal to 11",
        "tables": [
            "Staff",
            "Product",
            "Problem_Log",
            "Problems",
            "Problem_Category_Codes",
            "Problem_Status_Codes"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "other",
            "problem",
            "details",
            "from",
            "problems",
            "grouped",
            "by",
            "other",
            "problem",
            "details",
            "with",
            "maximum",
            "problem",
            "id",
            "equal",
            "to",
            "11"
        ],
        "query_toks": [
            "SELECT",
            "other_problem_details",
            "FROM",
            "Problems",
            "GROUP",
            "BY",
            "other_problem_details",
            "HAVING",
            "MAX",
            "(",
            "problem_id",
            ")",
            "=",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "other_problem_details",
            "from",
            "problems",
            "group",
            "by",
            "other_problem_details",
            "having",
            "max",
            "(",
            "problem_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__problems__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__problems.other_problem_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__problems.other_problem_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__problems.problem_id__",
                            false
                        ],
                        null
                    ],
                    11.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_gen_characteristics",
        "query": "SELECT other_characteristic_details FROM Characteristics GROUP BY other_characteristic_details HAVING MAX(characteristic_id) = 6;",
        "question": "Select other characteristic details from characteristics grouped by other characteristic details with maximum characteristic id equal to 6",
        "tables": [
            "Ref_Colors",
            "Characteristics",
            "Products",
            "Ref_Characteristic_Types",
            "Product_Characteristics",
            "Ref_Product_Categories"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "other",
            "characteristic",
            "details",
            "from",
            "characteristics",
            "grouped",
            "by",
            "other",
            "characteristic",
            "details",
            "with",
            "maximum",
            "characteristic",
            "id",
            "equal",
            "to",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "other_characteristic_details",
            "FROM",
            "Characteristics",
            "GROUP",
            "BY",
            "other_characteristic_details",
            "HAVING",
            "MAX",
            "(",
            "characteristic_id",
            ")",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "other_characteristic_details",
            "from",
            "characteristics",
            "group",
            "by",
            "other_characteristic_details",
            "having",
            "max",
            "(",
            "characteristic_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__characteristics__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__characteristics.other_characteristic_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__characteristics.other_characteristic_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__characteristics.characteristic_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_gen_characteristics",
        "query": "SELECT typical_selling_price FROM Products GROUP BY typical_selling_price HAVING MAX(product_id) = 13;",
        "question": "Select typical selling price from products grouped by typical selling price with maximum product id equal to 13",
        "tables": [
            "Ref_Colors",
            "Characteristics",
            "Products",
            "Ref_Characteristic_Types",
            "Product_Characteristics",
            "Ref_Product_Categories"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "typical",
            "selling",
            "price",
            "from",
            "products",
            "grouped",
            "by",
            "typical",
            "selling",
            "price",
            "with",
            "maximum",
            "product",
            "id",
            "equal",
            "to",
            "13"
        ],
        "query_toks": [
            "SELECT",
            "typical_selling_price",
            "FROM",
            "Products",
            "GROUP",
            "BY",
            "typical_selling_price",
            "HAVING",
            "MAX",
            "(",
            "product_id",
            ")",
            "=",
            "13"
        ],
        "query_toks_no_value": [
            "select",
            "typical_selling_price",
            "from",
            "products",
            "group",
            "by",
            "typical_selling_price",
            "having",
            "max",
            "(",
            "product_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products.typical_selling_price__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__products.typical_selling_price__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__products.product_id__",
                            false
                        ],
                        null
                    ],
                    13.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_gen_characteristics",
        "query": "SELECT product_characteristic_value FROM Product_Characteristics GROUP BY product_characteristic_value HAVING MIN(characteristic_id) = 10;",
        "question": "Select product characteristic value from product characteristics grouped by product characteristic value with minimum characteristic id equal to 10",
        "tables": [
            "Ref_Colors",
            "Characteristics",
            "Products",
            "Ref_Characteristic_Types",
            "Product_Characteristics",
            "Ref_Product_Categories"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "product",
            "characteristic",
            "value",
            "from",
            "product",
            "characteristics",
            "grouped",
            "by",
            "product",
            "characteristic",
            "value",
            "with",
            "minimum",
            "characteristic",
            "id",
            "equal",
            "to",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "product_characteristic_value",
            "FROM",
            "Product_Characteristics",
            "GROUP",
            "BY",
            "product_characteristic_value",
            "HAVING",
            "MIN",
            "(",
            "characteristic_id",
            ")",
            "=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "product_characteristic_value",
            "from",
            "product_characteristics",
            "group",
            "by",
            "product_characteristic_value",
            "having",
            "min",
            "(",
            "characteristic_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__product_characteristics__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__product_characteristics.product_characteristic_value__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__product_characteristics.product_characteristic_value__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__product_characteristics.characteristic_id__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "coffee_shop",
        "query": "SELECT Membership_card FROM member GROUP BY Membership_card HAVING MAX(Member_ID) = 7;",
        "question": "Select membership card from member grouped by membership card with maximum member id equal to 7",
        "tables": [
            "happy_hour_member",
            "member",
            "shop",
            "happy_hour"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "membership",
            "card",
            "from",
            "member",
            "grouped",
            "by",
            "membership",
            "card",
            "with",
            "maximum",
            "member",
            "id",
            "equal",
            "to",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "Membership_card",
            "FROM",
            "member",
            "GROUP",
            "BY",
            "Membership_card",
            "HAVING",
            "MAX",
            "(",
            "Member_ID",
            ")",
            "=",
            "7"
        ],
        "query_toks_no_value": [
            "select",
            "membership_card",
            "from",
            "member",
            "group",
            "by",
            "membership_card",
            "having",
            "max",
            "(",
            "member_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__member__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__member.membership_card__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__member.membership_card__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__member.member_id__",
                            false
                        ],
                        null
                    ],
                    7.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "coffee_shop",
        "query": "SELECT Address FROM shop GROUP BY Address HAVING MIN(Shop_ID) = 4;",
        "question": "Select address from shop grouped by address with minimum shop id equal to 4",
        "tables": [
            "happy_hour_member",
            "member",
            "shop",
            "happy_hour"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "address",
            "from",
            "shop",
            "grouped",
            "by",
            "address",
            "with",
            "minimum",
            "shop",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Address",
            "FROM",
            "shop",
            "GROUP",
            "BY",
            "Address",
            "HAVING",
            "MIN",
            "(",
            "Shop_ID",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "address",
            "from",
            "shop",
            "group",
            "by",
            "address",
            "having",
            "min",
            "(",
            "shop_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__shop__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__shop.address__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__shop.address__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__shop.shop_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "coffee_shop",
        "query": "SELECT Month FROM happy_hour GROUP BY Month HAVING MAX(HH_ID) = 2;",
        "question": "Select month from happy hour grouped by month with maximum hh id equal to 2",
        "tables": [
            "happy_hour_member",
            "member",
            "shop",
            "happy_hour"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "month",
            "from",
            "happy",
            "hour",
            "grouped",
            "by",
            "month",
            "with",
            "maximum",
            "hh",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Month",
            "FROM",
            "happy_hour",
            "GROUP",
            "BY",
            "Month",
            "HAVING",
            "MAX",
            "(",
            "HH_ID",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "month",
            "from",
            "happy_hour",
            "group",
            "by",
            "month",
            "having",
            "max",
            "(",
            "hh_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__happy_hour__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__happy_hour.month__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__happy_hour.month__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__happy_hour.hh_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "riding_club",
        "query": "SELECT Region FROM club GROUP BY Region HAVING MAX(Club_ID) = 2;",
        "question": "Select region from club grouped by region with maximum club id equal to 2",
        "tables": [
            "club",
            "player",
            "coach",
            "match_result",
            "player_coach"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "region",
            "from",
            "club",
            "grouped",
            "by",
            "region",
            "with",
            "maximum",
            "club",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Region",
            "FROM",
            "club",
            "GROUP",
            "BY",
            "Region",
            "HAVING",
            "MAX",
            "(",
            "Club_ID",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "region",
            "from",
            "club",
            "group",
            "by",
            "region",
            "having",
            "max",
            "(",
            "club_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__club__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__club.region__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__club.region__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__club.club_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "riding_club",
        "query": "SELECT Sponsor_name FROM player GROUP BY Sponsor_name HAVING MAX(Player_ID) = 2;",
        "question": "Select sponsor name from player grouped by sponsor name with maximum player id equal to 2",
        "tables": [
            "club",
            "player",
            "coach",
            "match_result",
            "player_coach"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "sponsor",
            "name",
            "from",
            "player",
            "grouped",
            "by",
            "sponsor",
            "name",
            "with",
            "maximum",
            "player",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Sponsor_name",
            "FROM",
            "player",
            "GROUP",
            "BY",
            "Sponsor_name",
            "HAVING",
            "MAX",
            "(",
            "Player_ID",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "sponsor_name",
            "from",
            "player",
            "group",
            "by",
            "sponsor_name",
            "having",
            "max",
            "(",
            "player_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__player__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__player.sponsor_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__player.sponsor_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__player.player_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "riding_club",
        "query": "SELECT Gender FROM coach GROUP BY Gender HAVING MIN(Club_ID) = 3;",
        "question": "Select gender from coach grouped by gender with minimum club id equal to 3",
        "tables": [
            "club",
            "player",
            "coach",
            "match_result",
            "player_coach"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "gender",
            "from",
            "coach",
            "grouped",
            "by",
            "gender",
            "with",
            "minimum",
            "club",
            "id",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Gender",
            "FROM",
            "coach",
            "GROUP",
            "BY",
            "Gender",
            "HAVING",
            "MIN",
            "(",
            "Club_ID",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "gender",
            "from",
            "coach",
            "group",
            "by",
            "gender",
            "having",
            "min",
            "(",
            "club_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__coach__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__coach.gender__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__coach.gender__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__coach.club_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_card_transactions",
        "query": "SELECT card_type_code FROM Customers_Cards GROUP BY card_type_code HAVING MIN(card_id) = 10;",
        "question": "Select card type code from customers cards grouped by card type code with minimum card id equal to 10",
        "tables": [
            "Customers_Cards",
            "Customers",
            "Financial_Transactions",
            "Accounts"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "card",
            "type",
            "code",
            "from",
            "customers",
            "cards",
            "grouped",
            "by",
            "card",
            "type",
            "code",
            "with",
            "minimum",
            "card",
            "id",
            "equal",
            "to",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "card_type_code",
            "FROM",
            "Customers_Cards",
            "GROUP",
            "BY",
            "card_type_code",
            "HAVING",
            "MIN",
            "(",
            "card_id",
            ")",
            "=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "card_type_code",
            "from",
            "customers_cards",
            "group",
            "by",
            "card_type_code",
            "having",
            "min",
            "(",
            "card_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers_cards__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers_cards.card_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customers_cards.card_type_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__customers_cards.card_id__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_card_transactions",
        "query": "SELECT customer_address FROM Customers GROUP BY customer_address HAVING MIN(customer_id) = 4;",
        "question": "Select customer address from customers grouped by customer address with minimum customer id equal to 4",
        "tables": [
            "Customers_Cards",
            "Customers",
            "Financial_Transactions",
            "Accounts"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "customer",
            "address",
            "from",
            "customers",
            "grouped",
            "by",
            "customer",
            "address",
            "with",
            "minimum",
            "customer",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "customer_address",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "customer_address",
            "HAVING",
            "MIN",
            "(",
            "customer_id",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "customer_address",
            "from",
            "customers",
            "group",
            "by",
            "customer_address",
            "having",
            "min",
            "(",
            "customer_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_address__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customers.customer_address__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__customers.customer_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_card_transactions",
        "query": "SELECT other_transaction_details FROM Financial_Transactions GROUP BY other_transaction_details HAVING MAX(previous_transaction_id) = 885;",
        "question": "Select other transaction details from financial transactions grouped by other transaction details with maximum previous transaction id equal to 885",
        "tables": [
            "Customers_Cards",
            "Customers",
            "Financial_Transactions",
            "Accounts"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "other",
            "transaction",
            "details",
            "from",
            "financial",
            "transactions",
            "grouped",
            "by",
            "other",
            "transaction",
            "details",
            "with",
            "maximum",
            "previous",
            "transaction",
            "id",
            "equal",
            "to",
            "885"
        ],
        "query_toks": [
            "SELECT",
            "other_transaction_details",
            "FROM",
            "Financial_Transactions",
            "GROUP",
            "BY",
            "other_transaction_details",
            "HAVING",
            "MAX",
            "(",
            "previous_transaction_id",
            ")",
            "=",
            "885"
        ],
        "query_toks_no_value": [
            "select",
            "other_transaction_details",
            "from",
            "financial_transactions",
            "group",
            "by",
            "other_transaction_details",
            "having",
            "max",
            "(",
            "previous_transaction_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__financial_transactions__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__financial_transactions.other_transaction_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__financial_transactions.other_transaction_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__financial_transactions.previous_transaction_id__",
                            false
                        ],
                        null
                    ],
                    885.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_card_transactions",
        "query": "SELECT other_account_details FROM Accounts GROUP BY other_account_details HAVING MIN(customer_id) = 12;",
        "question": "Select other account details from accounts grouped by other account details with minimum customer id equal to 12",
        "tables": [
            "Customers_Cards",
            "Customers",
            "Financial_Transactions",
            "Accounts"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "other",
            "account",
            "details",
            "from",
            "accounts",
            "grouped",
            "by",
            "other",
            "account",
            "details",
            "with",
            "minimum",
            "customer",
            "id",
            "equal",
            "to",
            "12"
        ],
        "query_toks": [
            "SELECT",
            "other_account_details",
            "FROM",
            "Accounts",
            "GROUP",
            "BY",
            "other_account_details",
            "HAVING",
            "MIN",
            "(",
            "customer_id",
            ")",
            "=",
            "12"
        ],
        "query_toks_no_value": [
            "select",
            "other_account_details",
            "from",
            "accounts",
            "group",
            "by",
            "other_account_details",
            "having",
            "min",
            "(",
            "customer_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__accounts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__accounts.other_account_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__accounts.other_account_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__accounts.customer_id__",
                            false
                        ],
                        null
                    ],
                    12.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "county_public_safety",
        "query": "SELECT Police_force FROM county_public_safety GROUP BY Police_force HAVING MAX(County_ID) = 2;",
        "question": "Select police force from county public safety grouped by police force with maximum county id equal to 2",
        "tables": [
            "county_public_safety",
            "city"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "police",
            "force",
            "from",
            "county",
            "public",
            "safety",
            "grouped",
            "by",
            "police",
            "force",
            "with",
            "maximum",
            "county",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Police_force",
            "FROM",
            "county_public_safet",
            "(",
            "county_public_safet",
            ")",
            "GROUP",
            "BY",
            "Police_force",
            "HAVING",
            "MAX",
            "(",
            "County_ID",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "police_force",
            "from",
            "county_public_safet",
            "(",
            "county_public_safet",
            ")",
            "group",
            "by",
            "police_force",
            "having",
            "max",
            "(",
            "county_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__county_public_safety__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__county_public_safety.police_force__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__county_public_safety.police_force__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__county_public_safety.county_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "county_public_safety",
        "query": "SELECT Name FROM city GROUP BY Name HAVING MIN(Black) = 6.1;",
        "question": "Select name from city grouped by name with minimum black equal to 6.1",
        "tables": [
            "county_public_safety",
            "city"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "city",
            "grouped",
            "by",
            "name",
            "with",
            "minimum",
            "black",
            "equal",
            "to",
            "6.1"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "city",
            "GROUP",
            "BY",
            "Name",
            "HAVING",
            "MIN",
            "(",
            "Black",
            ")",
            "=",
            "6.1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "city",
            "group",
            "by",
            "name",
            "having",
            "min",
            "(",
            "black",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__city__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__city.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__city.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__city.black__",
                            false
                        ],
                        null
                    ],
                    6.1,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "performance_attendance",
        "query": "SELECT Date FROM performance GROUP BY Date HAVING MAX(Performance_ID) = 3.0;",
        "question": "Select date from performance grouped by date with maximum performance id equal to 3.0",
        "tables": [
            "member",
            "member_attendance",
            "performance"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "date",
            "from",
            "performance",
            "grouped",
            "by",
            "date",
            "with",
            "maximum",
            "performance",
            "id",
            "equal",
            "to",
            "3.0"
        ],
        "query_toks": [
            "SELECT",
            "Date",
            "FROM",
            "performance",
            "GROUP",
            "BY",
            "Date",
            "HAVING",
            "MAX",
            "(",
            "Performance_ID",
            ")",
            "=",
            "3.0"
        ],
        "query_toks_no_value": [
            "select",
            "date",
            "from",
            "performance",
            "group",
            "by",
            "date",
            "having",
            "max",
            "(",
            "performance_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__performance__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__performance.date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__performance.date__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__performance.performance_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "club_1",
        "query": "SELECT Fname FROM Student GROUP BY Fname HAVING MIN(Major) = 550;",
        "question": "Select first name from student grouped by first name with minimum major equal to 550",
        "tables": [
            "Student",
            "Member_of_club",
            "Club"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "first",
            "name",
            "from",
            "student",
            "grouped",
            "by",
            "first",
            "name",
            "with",
            "minimum",
            "major",
            "equal",
            "to",
            "550"
        ],
        "query_toks": [
            "SELECT",
            "Fname",
            "FROM",
            "Student",
            "GROUP",
            "BY",
            "Fname",
            "HAVING",
            "MIN",
            "(",
            "Major",
            ")",
            "=",
            "550"
        ],
        "query_toks_no_value": [
            "select",
            "fname",
            "from",
            "student",
            "group",
            "by",
            "fname",
            "having",
            "min",
            "(",
            "major",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.fname__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__student.fname__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__student.major__",
                            false
                        ],
                        null
                    ],
                    550.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "club_1",
        "query": "SELECT Position FROM Member_of_club GROUP BY Position HAVING MIN(StuID) = 1007;",
        "question": "Select position from member of club grouped by position with minimum student id equal to 1007",
        "tables": [
            "Student",
            "Member_of_club",
            "Club"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "position",
            "from",
            "member",
            "of",
            "club",
            "grouped",
            "by",
            "position",
            "with",
            "minimum",
            "student",
            "id",
            "equal",
            "to",
            "1007"
        ],
        "query_toks": [
            "SELECT",
            "Position",
            "FROM",
            "Member_of_club",
            "GROUP",
            "BY",
            "Position",
            "HAVING",
            "MIN",
            "(",
            "StuID",
            ")",
            "=",
            "1007"
        ],
        "query_toks_no_value": [
            "select",
            "position",
            "from",
            "member_of_club",
            "group",
            "by",
            "position",
            "having",
            "min",
            "(",
            "stuid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__member_of_club__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__member_of_club.position__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__member_of_club.position__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__member_of_club.stuid__",
                            false
                        ],
                        null
                    ],
                    1007.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "club_1",
        "query": "SELECT ClubLocation FROM Club GROUP BY ClubLocation HAVING MAX(ClubID) = 2;",
        "question": "Select club location from club grouped by club location with maximum club id equal to 2",
        "tables": [
            "Student",
            "Member_of_club",
            "Club"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "club",
            "location",
            "from",
            "club",
            "grouped",
            "by",
            "club",
            "location",
            "with",
            "maximum",
            "club",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "ClubLocation",
            "FROM",
            "Club",
            "GROUP",
            "BY",
            "ClubLocation",
            "HAVING",
            "MAX",
            "(",
            "ClubID",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "clublocation",
            "from",
            "club",
            "group",
            "by",
            "clublocation",
            "having",
            "max",
            "(",
            "clubid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__club__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__club.clublocation__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__club.clublocation__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__club.clubid__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "query": "SELECT Citizenship FROM singer GROUP BY Citizenship HAVING MAX(Singer_ID) = 4;",
        "question": "Select citizenship from singer grouped by citizenship with maximum singer id equal to 4",
        "tables": [
            "singer",
            "song"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "citizenship",
            "from",
            "singer",
            "grouped",
            "by",
            "citizenship",
            "with",
            "maximum",
            "singer",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Citizenship",
            "FROM",
            "singer",
            "GROUP",
            "BY",
            "Citizenship",
            "HAVING",
            "MAX",
            "(",
            "Singer_ID",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "citizenship",
            "from",
            "singer",
            "group",
            "by",
            "citizenship",
            "having",
            "max",
            "(",
            "singer_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__singer__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__singer.citizenship__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__singer.citizenship__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__singer.singer_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "query": "SELECT Title FROM song GROUP BY Title HAVING MAX(Singer_ID) = 5;",
        "question": "Select title from song grouped by title with maximum singer id equal to 5",
        "tables": [
            "singer",
            "song"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "title",
            "from",
            "song",
            "grouped",
            "by",
            "title",
            "with",
            "maximum",
            "singer",
            "id",
            "equal",
            "to",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "Title",
            "FROM",
            "song",
            "GROUP",
            "BY",
            "Title",
            "HAVING",
            "MAX",
            "(",
            "Singer_ID",
            ")",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "song",
            "group",
            "by",
            "title",
            "having",
            "max",
            "(",
            "singer_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__song__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__song.title__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__song.title__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__song.singer_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "culture_company",
        "query": "SELECT Director FROM movie GROUP BY Director HAVING MIN(movie_id) = 6;",
        "question": "Select director from movie grouped by director with minimum movie id equal to 6",
        "tables": [
            "movie",
            "book_club",
            "culture_company"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "director",
            "from",
            "movie",
            "grouped",
            "by",
            "director",
            "with",
            "minimum",
            "movie",
            "id",
            "equal",
            "to",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "Director",
            "FROM",
            "movie",
            "GROUP",
            "BY",
            "Director",
            "HAVING",
            "MIN",
            "(",
            "movie_id",
            ")",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "director",
            "from",
            "movie",
            "group",
            "by",
            "director",
            "having",
            "min",
            "(",
            "movie_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__movie__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__movie.director__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__movie.director__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__movie.movie_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "culture_company",
        "query": "SELECT Book_Title FROM book_club GROUP BY Book_Title HAVING MIN(book_club_id) = 10;",
        "question": "Select book title from book club grouped by book title with minimum book club id equal to 10",
        "tables": [
            "movie",
            "book_club",
            "culture_company"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "book",
            "title",
            "from",
            "book",
            "club",
            "grouped",
            "by",
            "book",
            "title",
            "with",
            "minimum",
            "book",
            "club",
            "id",
            "equal",
            "to",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "Book_Title",
            "FROM",
            "book_club",
            "GROUP",
            "BY",
            "Book_Title",
            "HAVING",
            "MIN",
            "(",
            "book_club_id",
            ")",
            "=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "book_title",
            "from",
            "book_club",
            "group",
            "by",
            "book_title",
            "having",
            "min",
            "(",
            "book_club_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__book_club__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__book_club.book_title__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__book_club.book_title__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__book_club.book_club_id__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "culture_company",
        "query": "SELECT Incorporated_in FROM culture_company GROUP BY Incorporated_in HAVING MAX(Group_Equity_Shareholding) = 100.0;",
        "question": "Select incorporated in from culture company grouped by incorporated in with maximum group equity shareholding equal to 100.0",
        "tables": [
            "movie",
            "book_club",
            "culture_company"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "incorporated",
            "in",
            "from",
            "culture",
            "company",
            "grouped",
            "by",
            "incorporated",
            "in",
            "with",
            "maximum",
            "group",
            "equity",
            "shareholding",
            "equal",
            "to",
            "100.0"
        ],
        "query_toks": [
            "SELECT",
            "Incorporated_in",
            "FROM",
            "culture_company",
            "GROUP",
            "BY",
            "Incorporated_in",
            "HAVING",
            "MAX",
            "(",
            "Group_Equity_Shareholding",
            ")",
            "=",
            "100.0"
        ],
        "query_toks_no_value": [
            "select",
            "incorporated_in",
            "from",
            "culture_company",
            "group",
            "by",
            "incorporated_in",
            "having",
            "max",
            "(",
            "group_equity_shareholding",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__culture_company__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__culture_company.incorporated_in__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__culture_company.incorporated_in__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__culture_company.group_equity_shareholding__",
                            false
                        ],
                        null
                    ],
                    100.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT Paragraph_Text FROM Paragraphs GROUP BY Paragraph_Text HAVING MAX(Paragraph_ID) = 1104059;",
        "question": "Select paragraph text from paragraphs grouped by paragraph text with maximum paragraph id equal to 1104059",
        "tables": [
            "Paragraphs",
            "Templates",
            "Ref_Template_Types",
            "Documents"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "paragraph",
            "text",
            "from",
            "paragraphs",
            "grouped",
            "by",
            "paragraph",
            "text",
            "with",
            "maximum",
            "paragraph",
            "id",
            "equal",
            "to",
            "1104059"
        ],
        "query_toks": [
            "SELECT",
            "Paragraph_Text",
            "FROM",
            "Paragraphs",
            "GROUP",
            "BY",
            "Paragraph_Text",
            "HAVING",
            "MAX",
            "(",
            "Paragraph_ID",
            ")",
            "=",
            "1104059"
        ],
        "query_toks_no_value": [
            "select",
            "paragraph_text",
            "from",
            "paragraphs",
            "group",
            "by",
            "paragraph_text",
            "having",
            "max",
            "(",
            "paragraph_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__paragraphs__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__paragraphs.paragraph_text__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__paragraphs.paragraph_text__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__paragraphs.paragraph_id__",
                            false
                        ],
                        null
                    ],
                    1104059.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING MIN(Version_Number) = 2;",
        "question": "Select template type code from templates grouped by template type code with minimum version number equal to 2",
        "tables": [
            "Paragraphs",
            "Templates",
            "Ref_Template_Types",
            "Documents"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "template",
            "type",
            "code",
            "from",
            "templates",
            "grouped",
            "by",
            "template",
            "type",
            "code",
            "with",
            "minimum",
            "version",
            "number",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Template_Type_Code",
            "FROM",
            "Templates",
            "GROUP",
            "BY",
            "Template_Type_Code",
            "HAVING",
            "MIN",
            "(",
            "Version_Number",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "template_type_code",
            "from",
            "templates",
            "group",
            "by",
            "template_type_code",
            "having",
            "min",
            "(",
            "version_number",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__templates__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__templates.template_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__templates.template_type_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__templates.version_number__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT Document_Description FROM Documents GROUP BY Document_Description HAVING MAX(Document_ID) = 0;",
        "question": "Select document description from documents grouped by document description with maximum document id equal to 0",
        "tables": [
            "Paragraphs",
            "Templates",
            "Ref_Template_Types",
            "Documents"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "document",
            "description",
            "from",
            "documents",
            "grouped",
            "by",
            "document",
            "description",
            "with",
            "maximum",
            "document",
            "id",
            "equal",
            "to",
            "0"
        ],
        "query_toks": [
            "SELECT",
            "Document_Description",
            "FROM",
            "Documents",
            "GROUP",
            "BY",
            "Document_Description",
            "HAVING",
            "MAX",
            "(",
            "Document_ID",
            ")",
            "=",
            "0"
        ],
        "query_toks_no_value": [
            "select",
            "document_description",
            "from",
            "documents",
            "group",
            "by",
            "document_description",
            "having",
            "max",
            "(",
            "document_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__documents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__documents.document_description__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__documents.document_description__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__documents.document_id__",
                            false
                        ],
                        null
                    ],
                    0.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "musical",
        "query": "SELECT Name FROM actor GROUP BY Name HAVING MAX(age) = 20;",
        "question": "Select name from actor grouped by name with maximum age equal to 20",
        "tables": [
            "actor",
            "musical"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "actor",
            "grouped",
            "by",
            "name",
            "with",
            "maximum",
            "age",
            "equal",
            "to",
            "20"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "actor",
            "GROUP",
            "BY",
            "Name",
            "HAVING",
            "MAX",
            "(",
            "age",
            ")",
            "=",
            "20"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "actor",
            "group",
            "by",
            "name",
            "having",
            "max",
            "(",
            "age",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__actor__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__actor.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__actor.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__actor.age__",
                            false
                        ],
                        null
                    ],
                    20.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "musical",
        "query": "SELECT Name FROM musical GROUP BY Name HAVING MIN(Musical_ID) = 3;",
        "question": "Select name from musical grouped by name with minimum musical id equal to 3",
        "tables": [
            "actor",
            "musical"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "musical",
            "grouped",
            "by",
            "name",
            "with",
            "minimum",
            "musical",
            "id",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "musical",
            "GROUP",
            "BY",
            "Name",
            "HAVING",
            "MIN",
            "(",
            "Musical_ID",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "musical",
            "group",
            "by",
            "name",
            "having",
            "min",
            "(",
            "musical_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__musical__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__musical.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__musical.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__musical.musical_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "query": "SELECT Language FROM countrylanguage GROUP BY Language HAVING MIN(Percentage) = 71.7;",
        "question": "Select language from countrylanguage grouped by language with minimum percentage equal to 71.7",
        "tables": [
            "sqlite_sequence",
            "countrylanguage",
            "city",
            "country"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "language",
            "from",
            "countrylanguage",
            "grouped",
            "by",
            "language",
            "with",
            "minimum",
            "percentage",
            "equal",
            "to",
            "71.7"
        ],
        "query_toks": [
            "SELECT",
            "Language",
            "FROM",
            "countrylanguag",
            "(",
            "countrylanguag",
            ")",
            "GROUP",
            "BY",
            "Language",
            "HAVING",
            "MIN",
            "(",
            "Percentage",
            ")",
            "=",
            "71.7"
        ],
        "query_toks_no_value": [
            "select",
            "language",
            "from",
            "countrylanguag",
            "(",
            "countrylanguag",
            ")",
            "group",
            "by",
            "language",
            "having",
            "min",
            "(",
            "percentage",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__countrylanguage__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__countrylanguage.language__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__countrylanguage.language__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__countrylanguage.percentage__",
                            false
                        ],
                        null
                    ],
                    71.7,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "query": "SELECT CountryCode FROM city GROUP BY CountryCode HAVING MAX(ID) = 1650;",
        "question": "Select country code from city grouped by country code with maximum id equal to 1650",
        "tables": [
            "sqlite_sequence",
            "countrylanguage",
            "city",
            "country"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "country",
            "code",
            "from",
            "city",
            "grouped",
            "by",
            "country",
            "code",
            "with",
            "maximum",
            "id",
            "equal",
            "to",
            "1650"
        ],
        "query_toks": [
            "SELECT",
            "CountryCod",
            "(",
            "CountryCod",
            ")",
            "FROM",
            "city",
            "GROUP",
            "BY",
            "CountryCod",
            "(",
            "CountryCod",
            ")",
            "HAVING",
            "MAX",
            "(",
            "ID",
            ")",
            "=",
            "1650"
        ],
        "query_toks_no_value": [
            "select",
            "countrycod",
            "(",
            "countrycod",
            ")",
            "from",
            "city",
            "group",
            "by",
            "countrycod",
            "(",
            "countrycod",
            ")",
            "having",
            "max",
            "(",
            "id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__city__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__city.countrycode__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__city.countrycode__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__city.id__",
                            false
                        ],
                        null
                    ],
                    1650.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "query": "SELECT Code2 FROM country GROUP BY Code2 HAVING MAX(LifeExpectancy) = 46.7;",
        "question": "Select code2 from country grouped by code2 with maximum life expectancy equal to 46.7",
        "tables": [
            "sqlite_sequence",
            "countrylanguage",
            "city",
            "country"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "code2",
            "from",
            "country",
            "grouped",
            "by",
            "code2",
            "with",
            "maximum",
            "life",
            "expectancy",
            "equal",
            "to",
            "46.7"
        ],
        "query_toks": [
            "SELECT",
            "Code2",
            "FROM",
            "countr",
            "(",
            "countr",
            ")",
            "GROUP",
            "BY",
            "Code2",
            "HAVING",
            "MAX",
            "(",
            "LifeExpectancy",
            ")",
            "=",
            "46.7"
        ],
        "query_toks_no_value": [
            "select",
            "code2",
            "from",
            "countr",
            "(",
            "countr",
            ")",
            "group",
            "by",
            "code2",
            "having",
            "max",
            "(",
            "lifeexpectancy",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__country__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__country.code2__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__country.code2__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__country.lifeexpectancy__",
                            false
                        ],
                        null
                    ],
                    46.7,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "device",
        "query": "SELECT Open_Date FROM shop GROUP BY Open_Date HAVING MAX(Open_Year) = 2013;",
        "question": "Select open date from shop grouped by open date with maximum open year equal to 2013",
        "tables": [
            "shop",
            "device",
            "stock"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "open",
            "date",
            "from",
            "shop",
            "grouped",
            "by",
            "open",
            "date",
            "with",
            "maximum",
            "open",
            "year",
            "equal",
            "to",
            "2013"
        ],
        "query_toks": [
            "SELECT",
            "Open_Date",
            "FROM",
            "shop",
            "GROUP",
            "BY",
            "Open_Date",
            "HAVING",
            "MAX",
            "(",
            "Open_Year",
            ")",
            "=",
            "2013"
        ],
        "query_toks_no_value": [
            "select",
            "open_date",
            "from",
            "shop",
            "group",
            "by",
            "open_date",
            "having",
            "max",
            "(",
            "open_year",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__shop__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__shop.open_date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__shop.open_date__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__shop.open_year__",
                            false
                        ],
                        null
                    ],
                    2013.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "device",
        "query": "SELECT Applications FROM device GROUP BY Applications HAVING MIN(Device_ID) = 5;",
        "question": "Select applications from device grouped by applications with minimum device id equal to 5",
        "tables": [
            "shop",
            "device",
            "stock"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "applications",
            "from",
            "device",
            "grouped",
            "by",
            "applications",
            "with",
            "minimum",
            "device",
            "id",
            "equal",
            "to",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "Applications",
            "FROM",
            "device",
            "GROUP",
            "BY",
            "Applications",
            "HAVING",
            "MIN",
            "(",
            "Device_ID",
            ")",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "applications",
            "from",
            "device",
            "group",
            "by",
            "applications",
            "having",
            "min",
            "(",
            "device_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__device__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__device.applications__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__device.applications__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__device.device_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_grants_for_research",
        "query": "SELECT project_details FROM Projects GROUP BY project_details HAVING MAX(project_id) = 11;",
        "question": "Select project details from projects grouped by project details with maximum project id equal to 11",
        "tables": [
            "Projects",
            "Research_Outcomes",
            "Documents",
            "Document_Types",
            "Organisations",
            "Project_Outcomes",
            "Organisation_Types",
            "Project_Staff",
            "Grants",
            "Tasks",
            "Staff_Roles",
            "Research_Staff"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "project",
            "details",
            "from",
            "projects",
            "grouped",
            "by",
            "project",
            "details",
            "with",
            "maximum",
            "project",
            "id",
            "equal",
            "to",
            "11"
        ],
        "query_toks": [
            "SELECT",
            "project_details",
            "FROM",
            "Projects",
            "GROUP",
            "BY",
            "project_details",
            "HAVING",
            "MAX",
            "(",
            "project_id",
            ")",
            "=",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "project_details",
            "from",
            "projects",
            "group",
            "by",
            "project_details",
            "having",
            "max",
            "(",
            "project_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__projects__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__projects.project_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__projects.project_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__projects.project_id__",
                            false
                        ],
                        null
                    ],
                    11.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_grants_for_research",
        "query": "SELECT other_details FROM Documents GROUP BY other_details HAVING MAX(grant_id) = 5;",
        "question": "Select other details from documents grouped by other details with maximum grant id equal to 5",
        "tables": [
            "Projects",
            "Research_Outcomes",
            "Documents",
            "Document_Types",
            "Organisations",
            "Project_Outcomes",
            "Organisation_Types",
            "Project_Staff",
            "Grants",
            "Tasks",
            "Staff_Roles",
            "Research_Staff"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "other",
            "details",
            "from",
            "documents",
            "grouped",
            "by",
            "other",
            "details",
            "with",
            "maximum",
            "grant",
            "id",
            "equal",
            "to",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "other_details",
            "FROM",
            "Documents",
            "GROUP",
            "BY",
            "other_details",
            "HAVING",
            "MAX",
            "(",
            "grant_id",
            ")",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            "from",
            "documents",
            "group",
            "by",
            "other_details",
            "having",
            "max",
            "(",
            "grant_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__documents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__documents.other_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__documents.other_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__documents.grant_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_grants_for_research",
        "query": "SELECT organisation_type FROM Organisations GROUP BY organisation_type HAVING MAX(organisation_id) = 2;",
        "question": "Select organisation type from organisations grouped by organisation type with maximum organisation id equal to 2",
        "tables": [
            "Projects",
            "Research_Outcomes",
            "Documents",
            "Document_Types",
            "Organisations",
            "Project_Outcomes",
            "Organisation_Types",
            "Project_Staff",
            "Grants",
            "Tasks",
            "Staff_Roles",
            "Research_Staff"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "organisation",
            "type",
            "from",
            "organisations",
            "grouped",
            "by",
            "organisation",
            "type",
            "with",
            "maximum",
            "organisation",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "organisation_type",
            "FROM",
            "Organisations",
            "GROUP",
            "BY",
            "organisation_type",
            "HAVING",
            "MAX",
            "(",
            "organisation_id",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "organisation_type",
            "from",
            "organisations",
            "group",
            "by",
            "organisation_type",
            "having",
            "max",
            "(",
            "organisation_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__organisations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__organisations.organisation_type__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__organisations.organisation_type__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__organisations.organisation_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_grants_for_research",
        "query": "SELECT outcome_code FROM Project_Outcomes GROUP BY outcome_code HAVING MIN(project_id) = 9;",
        "question": "Select outcome code from project outcomes grouped by outcome code with minimum project id equal to 9",
        "tables": [
            "Projects",
            "Research_Outcomes",
            "Documents",
            "Document_Types",
            "Organisations",
            "Project_Outcomes",
            "Organisation_Types",
            "Project_Staff",
            "Grants",
            "Tasks",
            "Staff_Roles",
            "Research_Staff"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "outcome",
            "code",
            "from",
            "project",
            "outcomes",
            "grouped",
            "by",
            "outcome",
            "code",
            "with",
            "minimum",
            "project",
            "id",
            "equal",
            "to",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "outcome_code",
            "FROM",
            "Project_Outcomes",
            "GROUP",
            "BY",
            "outcome_code",
            "HAVING",
            "MIN",
            "(",
            "project_id",
            ")",
            "=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "outcome_code",
            "from",
            "project_outcomes",
            "group",
            "by",
            "outcome_code",
            "having",
            "min",
            "(",
            "project_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__project_outcomes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__project_outcomes.outcome_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__project_outcomes.outcome_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__project_outcomes.project_id__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_grants_for_research",
        "query": "SELECT role_code FROM Project_Staff GROUP BY role_code HAVING MIN(project_id) = 3;",
        "question": "Select role code from project staff grouped by role code with minimum project id equal to 3",
        "tables": [
            "Projects",
            "Research_Outcomes",
            "Documents",
            "Document_Types",
            "Organisations",
            "Project_Outcomes",
            "Organisation_Types",
            "Project_Staff",
            "Grants",
            "Tasks",
            "Staff_Roles",
            "Research_Staff"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "role",
            "code",
            "from",
            "project",
            "staff",
            "grouped",
            "by",
            "role",
            "code",
            "with",
            "minimum",
            "project",
            "id",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "role_code",
            "FROM",
            "Project_Staff",
            "GROUP",
            "BY",
            "role_code",
            "HAVING",
            "MIN",
            "(",
            "project_id",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "role_code",
            "from",
            "project_staff",
            "group",
            "by",
            "role_code",
            "having",
            "min",
            "(",
            "project_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__project_staff__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__project_staff.role_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__project_staff.role_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__project_staff.project_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_grants_for_research",
        "query": "SELECT other_details FROM Grants GROUP BY other_details HAVING MIN(grant_amount) = 281.2446;",
        "question": "Select other details from grants grouped by other details with minimum grant amount equal to 281.2446",
        "tables": [
            "Projects",
            "Research_Outcomes",
            "Documents",
            "Document_Types",
            "Organisations",
            "Project_Outcomes",
            "Organisation_Types",
            "Project_Staff",
            "Grants",
            "Tasks",
            "Staff_Roles",
            "Research_Staff"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "other",
            "details",
            "from",
            "grants",
            "grouped",
            "by",
            "other",
            "details",
            "with",
            "minimum",
            "grant",
            "amount",
            "equal",
            "to",
            "281.2446"
        ],
        "query_toks": [
            "SELECT",
            "other_details",
            "FROM",
            "Grants",
            "GROUP",
            "BY",
            "other_details",
            "HAVING",
            "MIN",
            "(",
            "grant_amount",
            ")",
            "=",
            "281.2446"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            "from",
            "grants",
            "group",
            "by",
            "other_details",
            "having",
            "min",
            "(",
            "grant_amount",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__grants__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__grants.other_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__grants.other_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__grants.grant_amount__",
                            false
                        ],
                        null
                    ],
                    281.2446,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_grants_for_research",
        "query": "SELECT task_details FROM Tasks GROUP BY task_details HAVING MAX(task_id) = 14;",
        "question": "Select task details from tasks grouped by task details with maximum task id equal to 14",
        "tables": [
            "Projects",
            "Research_Outcomes",
            "Documents",
            "Document_Types",
            "Organisations",
            "Project_Outcomes",
            "Organisation_Types",
            "Project_Staff",
            "Grants",
            "Tasks",
            "Staff_Roles",
            "Research_Staff"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "task",
            "details",
            "from",
            "tasks",
            "grouped",
            "by",
            "task",
            "details",
            "with",
            "maximum",
            "task",
            "id",
            "equal",
            "to",
            "14"
        ],
        "query_toks": [
            "SELECT",
            "task_details",
            "FROM",
            "Tasks",
            "GROUP",
            "BY",
            "task_details",
            "HAVING",
            "MAX",
            "(",
            "task_id",
            ")",
            "=",
            "14"
        ],
        "query_toks_no_value": [
            "select",
            "task_details",
            "from",
            "tasks",
            "group",
            "by",
            "task_details",
            "having",
            "max",
            "(",
            "task_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__tasks__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__tasks.task_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__tasks.task_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__tasks.task_id__",
                            false
                        ],
                        null
                    ],
                    14.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_grants_for_research",
        "query": "SELECT staff_details FROM Research_Staff GROUP BY staff_details HAVING MIN(staff_id) = 13;",
        "question": "Select staff details from research staff grouped by staff details with minimum staff id equal to 13",
        "tables": [
            "Projects",
            "Research_Outcomes",
            "Documents",
            "Document_Types",
            "Organisations",
            "Project_Outcomes",
            "Organisation_Types",
            "Project_Staff",
            "Grants",
            "Tasks",
            "Staff_Roles",
            "Research_Staff"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "staff",
            "details",
            "from",
            "research",
            "staff",
            "grouped",
            "by",
            "staff",
            "details",
            "with",
            "minimum",
            "staff",
            "id",
            "equal",
            "to",
            "13"
        ],
        "query_toks": [
            "SELECT",
            "staff_details",
            "FROM",
            "Research_Staff",
            "GROUP",
            "BY",
            "staff_details",
            "HAVING",
            "MIN",
            "(",
            "staff_id",
            ")",
            "=",
            "13"
        ],
        "query_toks_no_value": [
            "select",
            "staff_details",
            "from",
            "research_staff",
            "group",
            "by",
            "staff_details",
            "having",
            "min",
            "(",
            "staff_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__research_staff__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__research_staff.staff_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__research_staff.staff_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__research_staff.staff_id__",
                            false
                        ],
                        null
                    ],
                    13.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT Start_from FROM hiring GROUP BY Start_from HAVING MAX(Shop_ID) = 4;",
        "question": "Select start from from hiring grouped by start from with maximum shop id equal to 4",
        "tables": [
            "hiring",
            "shop",
            "evaluation",
            "employee"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "start",
            "from",
            "from",
            "hiring",
            "grouped",
            "by",
            "start",
            "from",
            "with",
            "maximum",
            "shop",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Start_from",
            "FROM",
            "hiring",
            "GROUP",
            "BY",
            "Start_from",
            "HAVING",
            "MAX",
            "(",
            "Shop_ID",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "start_from",
            "from",
            "hiring",
            "group",
            "by",
            "start_from",
            "having",
            "max",
            "(",
            "shop_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__hiring__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__hiring.start_from__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__hiring.start_from__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__hiring.shop_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT Manager_name FROM shop GROUP BY Manager_name HAVING MAX(Number_products) = 5000;",
        "question": "Select manager name from shop grouped by manager name with maximum number products equal to 5000",
        "tables": [
            "hiring",
            "shop",
            "evaluation",
            "employee"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "manager",
            "name",
            "from",
            "shop",
            "grouped",
            "by",
            "manager",
            "name",
            "with",
            "maximum",
            "number",
            "products",
            "equal",
            "to",
            "5000"
        ],
        "query_toks": [
            "SELECT",
            "Manager_name",
            "FROM",
            "shop",
            "GROUP",
            "BY",
            "Manager_name",
            "HAVING",
            "MAX",
            "(",
            "Number_products",
            ")",
            "=",
            "5000"
        ],
        "query_toks_no_value": [
            "select",
            "manager_name",
            "from",
            "shop",
            "group",
            "by",
            "manager_name",
            "having",
            "max",
            "(",
            "number_products",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__shop__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__shop.manager_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__shop.manager_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__shop.number_products__",
                            false
                        ],
                        null
                    ],
                    5000.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT Year_awarded FROM evaluation GROUP BY Year_awarded HAVING MIN(Bonus) = 3200.0;",
        "question": "Select year awarded from evaluation grouped by year awarded with minimum bonus equal to 3200.0",
        "tables": [
            "hiring",
            "shop",
            "evaluation",
            "employee"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "year",
            "awarded",
            "from",
            "evaluation",
            "grouped",
            "by",
            "year",
            "awarded",
            "with",
            "minimum",
            "bonus",
            "equal",
            "to",
            "3200.0"
        ],
        "query_toks": [
            "SELECT",
            "Year_awarded",
            "FROM",
            "evaluation",
            "GROUP",
            "BY",
            "Year_awarded",
            "HAVING",
            "MIN",
            "(",
            "Bonus",
            ")",
            "=",
            "3200.0"
        ],
        "query_toks_no_value": [
            "select",
            "year_awarded",
            "from",
            "evaluation",
            "group",
            "by",
            "year_awarded",
            "having",
            "min",
            "(",
            "bonus",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__evaluation__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__evaluation.year_awarded__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__evaluation.year_awarded__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__evaluation.bonus__",
                            false
                        ],
                        null
                    ],
                    3200.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT City FROM employee GROUP BY City HAVING MAX(Age) = 23;",
        "question": "Select city from employee grouped by city with maximum age equal to 23",
        "tables": [
            "hiring",
            "shop",
            "evaluation",
            "employee"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "city",
            "from",
            "employee",
            "grouped",
            "by",
            "city",
            "with",
            "maximum",
            "age",
            "equal",
            "to",
            "23"
        ],
        "query_toks": [
            "SELECT",
            "City",
            "FROM",
            "employee",
            "GROUP",
            "BY",
            "City",
            "HAVING",
            "MAX",
            "(",
            "Age",
            ")",
            "=",
            "23"
        ],
        "query_toks_no_value": [
            "select",
            "city",
            "from",
            "employee",
            "group",
            "by",
            "city",
            "having",
            "max",
            "(",
            "age",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__employee__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__employee.city__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__employee.city__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__employee.age__",
                            false
                        ],
                        null
                    ],
                    23.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "movie_1",
        "query": "SELECT title FROM Movie GROUP BY title HAVING MAX(mID) = 101;",
        "question": "Select title from movie grouped by title with maximum movie id equal to 101",
        "tables": [
            "Rating",
            "Movie",
            "Reviewer"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "title",
            "from",
            "movie",
            "grouped",
            "by",
            "title",
            "with",
            "maximum",
            "movie",
            "id",
            "equal",
            "to",
            "101"
        ],
        "query_toks": [
            "SELECT",
            "title",
            "FROM",
            "Movie",
            "GROUP",
            "BY",
            "title",
            "HAVING",
            "MAX",
            "(",
            "mID",
            ")",
            "=",
            "101"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "movie",
            "group",
            "by",
            "title",
            "having",
            "max",
            "(",
            "mid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__movie__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__movie.title__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__movie.title__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__movie.mid__",
                            false
                        ],
                        null
                    ],
                    101.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "movie_1",
        "query": "SELECT name FROM Reviewer GROUP BY name HAVING MAX(rID) = 206;",
        "question": "Select name from reviewer grouped by name with maximum reviewer id equal to 206",
        "tables": [
            "Rating",
            "Movie",
            "Reviewer"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "reviewer",
            "grouped",
            "by",
            "name",
            "with",
            "maximum",
            "reviewer",
            "id",
            "equal",
            "to",
            "206"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "Reviewer",
            "GROUP",
            "BY",
            "name",
            "HAVING",
            "MAX",
            "(",
            "rID",
            ")",
            "=",
            "206"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "reviewer",
            "group",
            "by",
            "name",
            "having",
            "max",
            "(",
            "rid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__reviewer__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__reviewer.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__reviewer.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__reviewer.rid__",
                            false
                        ],
                        null
                    ],
                    206.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "query": "SELECT name FROM Highschooler GROUP BY name HAVING MIN(ID) = 1782;",
        "question": "Select name from high schooler grouped by name with minimum id equal to 1782",
        "tables": [
            "Highschooler",
            "Likes",
            "Friend"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "high",
            "schooler",
            "grouped",
            "by",
            "name",
            "with",
            "minimum",
            "id",
            "equal",
            "to",
            "1782"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "Highschooler",
            "GROUP",
            "BY",
            "name",
            "HAVING",
            "MIN",
            "(",
            "ID",
            ")",
            "=",
            "1782"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "highschooler",
            "group",
            "by",
            "name",
            "having",
            "min",
            "(",
            "id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__highschooler__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__highschooler.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__highschooler.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__highschooler.id__",
                            false
                        ],
                        null
                    ],
                    1782.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "query": "SELECT Birth_Date FROM people GROUP BY Birth_Date HAVING MIN(People_ID) = 6;",
        "question": "Select birth date from people grouped by birth date with minimum people id equal to 6",
        "tables": [
            "poker_player",
            "people"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "birth",
            "date",
            "from",
            "people",
            "grouped",
            "by",
            "birth",
            "date",
            "with",
            "minimum",
            "people",
            "id",
            "equal",
            "to",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "Birth_Date",
            "FROM",
            "people",
            "GROUP",
            "BY",
            "Birth_Date",
            "HAVING",
            "MIN",
            "(",
            "People_ID",
            ")",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "birth_date",
            "from",
            "people",
            "group",
            "by",
            "birth_date",
            "having",
            "min",
            "(",
            "people_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__people__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__people.birth_date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__people.birth_date__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__people.people_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "program_share",
        "query": "SELECT Origin FROM program GROUP BY Origin HAVING MIN(Launch) = 2005.0;",
        "question": "Select origin from program grouped by origin with minimum launch equal to 2005.0",
        "tables": [
            "program",
            "broadcast",
            "channel",
            "broadcast_share"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "origin",
            "from",
            "program",
            "grouped",
            "by",
            "origin",
            "with",
            "minimum",
            "launch",
            "equal",
            "to",
            "2005.0"
        ],
        "query_toks": [
            "SELECT",
            "Origin",
            "FROM",
            "program",
            "GROUP",
            "BY",
            "Origin",
            "HAVING",
            "MIN",
            "(",
            "Launch",
            ")",
            "=",
            "2005.0"
        ],
        "query_toks_no_value": [
            "select",
            "origin",
            "from",
            "program",
            "group",
            "by",
            "origin",
            "having",
            "min",
            "(",
            "launch",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__program__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__program.origin__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__program.origin__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__program.launch__",
                            false
                        ],
                        null
                    ],
                    2005.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "program_share",
        "query": "SELECT Time_of_day FROM broadcast GROUP BY Time_of_day HAVING MIN(Program_ID) = 4;",
        "question": "Select time of day from broadcast grouped by time of day with minimum program id equal to 4",
        "tables": [
            "program",
            "broadcast",
            "channel",
            "broadcast_share"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "time",
            "of",
            "day",
            "from",
            "broadcast",
            "grouped",
            "by",
            "time",
            "of",
            "day",
            "with",
            "minimum",
            "program",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Time_of_day",
            "FROM",
            "broadcast",
            "GROUP",
            "BY",
            "Time_of_day",
            "HAVING",
            "MIN",
            "(",
            "Program_ID",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "time_of_day",
            "from",
            "broadcast",
            "group",
            "by",
            "time_of_day",
            "having",
            "min",
            "(",
            "program_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__broadcast__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__broadcast.time_of_day__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__broadcast.time_of_day__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__broadcast.program_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "program_share",
        "query": "SELECT Name FROM channel GROUP BY Name HAVING MAX(Share_in_percent) = 2.86;",
        "question": "Select name from channel grouped by name with maximum share in percent equal to 2.86",
        "tables": [
            "program",
            "broadcast",
            "channel",
            "broadcast_share"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "channel",
            "grouped",
            "by",
            "name",
            "with",
            "maximum",
            "share",
            "in",
            "percent",
            "equal",
            "to",
            "2.86"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "channel",
            "GROUP",
            "BY",
            "Name",
            "HAVING",
            "MAX",
            "(",
            "Share_in_percent",
            ")",
            "=",
            "2.86"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "channel",
            "group",
            "by",
            "name",
            "having",
            "max",
            "(",
            "share_in_percent",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__channel__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__channel.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__channel.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__channel.share_in_percent__",
                            false
                        ],
                        null
                    ],
                    2.86,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "program_share",
        "query": "SELECT Date FROM broadcast_share GROUP BY Date HAVING MIN(Share_in_percent) = 1.1;",
        "question": "Select date from broadcast share grouped by date with minimum share in percent equal to 1.1",
        "tables": [
            "program",
            "broadcast",
            "channel",
            "broadcast_share"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "date",
            "from",
            "broadcast",
            "share",
            "grouped",
            "by",
            "date",
            "with",
            "minimum",
            "share",
            "in",
            "percent",
            "equal",
            "to",
            "1.1"
        ],
        "query_toks": [
            "SELECT",
            "Date",
            "FROM",
            "broadcast_share",
            "GROUP",
            "BY",
            "Date",
            "HAVING",
            "MIN",
            "(",
            "Share_in_percent",
            ")",
            "=",
            "1.1"
        ],
        "query_toks_no_value": [
            "select",
            "date",
            "from",
            "broadcast_share",
            "group",
            "by",
            "date",
            "having",
            "min",
            "(",
            "share_in_percent",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__broadcast_share__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__broadcast_share.date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__broadcast_share.date__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__broadcast_share.share_in_percent__",
                            false
                        ],
                        null
                    ],
                    1.1,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "aircraft",
        "query": "SELECT Airport_Name FROM airport GROUP BY Airport_Name HAVING MAX(Freight_Metric_Tonnes) = 197738.0;",
        "question": "Select airport name from airport grouped by airport name with maximum freight metric tonnes equal to 197738.0",
        "tables": [
            "airport",
            "match",
            "pilot",
            "airport_aircraft",
            "aircraft"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "airport",
            "name",
            "from",
            "airport",
            "grouped",
            "by",
            "airport",
            "name",
            "with",
            "maximum",
            "freight",
            "metric",
            "tonnes",
            "equal",
            "to",
            "197738.0"
        ],
        "query_toks": [
            "SELECT",
            "Airport_Name",
            "FROM",
            "airport",
            "GROUP",
            "BY",
            "Airport_Name",
            "HAVING",
            "MAX",
            "(",
            "Freight_Metric_Tonnes",
            ")",
            "=",
            "197738.0"
        ],
        "query_toks_no_value": [
            "select",
            "airport_name",
            "from",
            "airport",
            "group",
            "by",
            "airport_name",
            "having",
            "max",
            "(",
            "freight_metric_tonnes",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__airport__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__airport.airport_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__airport.airport_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__airport.freight_metric_tonnes__",
                            false
                        ],
                        null
                    ],
                    197738.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "aircraft",
        "query": "SELECT Country FROM match GROUP BY Country HAVING MIN(Round) = 4.0;",
        "question": "Select country from match grouped by country with minimum round equal to 4.0",
        "tables": [
            "airport",
            "match",
            "pilot",
            "airport_aircraft",
            "aircraft"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "country",
            "from",
            "match",
            "grouped",
            "by",
            "country",
            "with",
            "minimum",
            "round",
            "equal",
            "to",
            "4.0"
        ],
        "query_toks": [
            "SELECT",
            "Countr",
            "(",
            "Countr",
            ")",
            "FROM",
            "match",
            "GROUP",
            "BY",
            "Countr",
            "(",
            "Countr",
            ")",
            "HAVING",
            "MIN",
            "(",
            "Round",
            ")",
            "=",
            "4.0"
        ],
        "query_toks_no_value": [
            "select",
            "countr",
            "(",
            "countr",
            ")",
            "from",
            "match",
            "group",
            "by",
            "countr",
            "(",
            "countr",
            ")",
            "having",
            "min",
            "(",
            "round",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__match__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__match.country__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__match.country__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__match.round__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "aircraft",
        "query": "SELECT Name FROM pilot GROUP BY Name HAVING MIN(Age) = 37;",
        "question": "Select name from pilot grouped by name with minimum age equal to 37",
        "tables": [
            "airport",
            "match",
            "pilot",
            "airport_aircraft",
            "aircraft"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "pilot",
            "grouped",
            "by",
            "name",
            "with",
            "minimum",
            "age",
            "equal",
            "to",
            "37"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "pilot",
            "GROUP",
            "BY",
            "Name",
            "HAVING",
            "MIN",
            "(",
            "Age",
            ")",
            "=",
            "37"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "pilot",
            "group",
            "by",
            "name",
            "having",
            "min",
            "(",
            "age",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__pilot__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__pilot.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__pilot.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__pilot.age__",
                            false
                        ],
                        null
                    ],
                    37.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "aircraft",
        "query": "SELECT Aircraft FROM aircraft GROUP BY Aircraft HAVING MAX(Aircraft_ID) = 5;",
        "question": "Select aircraft from aircraft grouped by aircraft with maximum aircraft id equal to 5",
        "tables": [
            "airport",
            "match",
            "pilot",
            "airport_aircraft",
            "aircraft"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "aircraft",
            "from",
            "aircraft",
            "grouped",
            "by",
            "aircraft",
            "with",
            "maximum",
            "aircraft",
            "id",
            "equal",
            "to",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "Aircraft",
            "FROM",
            "aircraft",
            "GROUP",
            "BY",
            "Aircraft",
            "HAVING",
            "MAX",
            "(",
            "Aircraft_ID",
            ")",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "aircraft",
            "from",
            "aircraft",
            "group",
            "by",
            "aircraft",
            "having",
            "max",
            "(",
            "aircraft_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__aircraft__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__aircraft.aircraft__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__aircraft.aircraft__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__aircraft.aircraft_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "restaurant_1",
        "query": "SELECT ResTypeDescription FROM Restaurant_Type GROUP BY ResTypeDescription HAVING MIN(ResTypeID) = 2;",
        "question": "Select restaurant type description from restaurant type grouped by restaurant type description with minimum restaurant type id equal to 2",
        "tables": [
            "Restaurant_Type",
            "Student",
            "Type_Of_Restaurant",
            "Visits_Restaurant",
            "Restaurant"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "restaurant",
            "type",
            "description",
            "from",
            "restaurant",
            "type",
            "grouped",
            "by",
            "restaurant",
            "type",
            "description",
            "with",
            "minimum",
            "restaurant",
            "type",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "ResTypeDescription",
            "FROM",
            "Restaurant_Type",
            "GROUP",
            "BY",
            "ResTypeDescription",
            "HAVING",
            "MIN",
            "(",
            "ResTypeID",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "restypedescription",
            "from",
            "restaurant_type",
            "group",
            "by",
            "restypedescription",
            "having",
            "min",
            "(",
            "restypeid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__restaurant_type__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__restaurant_type.restypedescription__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__restaurant_type.restypedescription__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__restaurant_type.restypeid__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "restaurant_1",
        "query": "SELECT LName FROM Student GROUP BY LName HAVING MAX(Advisor) = 7792;",
        "question": "Select last name from student grouped by last name with maximum advisor equal to 7792",
        "tables": [
            "Restaurant_Type",
            "Student",
            "Type_Of_Restaurant",
            "Visits_Restaurant",
            "Restaurant"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "last",
            "name",
            "from",
            "student",
            "grouped",
            "by",
            "last",
            "name",
            "with",
            "maximum",
            "advisor",
            "equal",
            "to",
            "7792"
        ],
        "query_toks": [
            "SELECT",
            "LName",
            "FROM",
            "Student",
            "GROUP",
            "BY",
            "LName",
            "HAVING",
            "MAX",
            "(",
            "Advisor",
            ")",
            "=",
            "7792"
        ],
        "query_toks_no_value": [
            "select",
            "lname",
            "from",
            "student",
            "group",
            "by",
            "lname",
            "having",
            "max",
            "(",
            "advisor",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.lname__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__student.lname__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__student.advisor__",
                            false
                        ],
                        null
                    ],
                    7792.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "restaurant_1",
        "query": "SELECT Address FROM Restaurant GROUP BY Address HAVING MAX(ResID) = 1;",
        "question": "Select address from restaurant grouped by address with maximum restaurant id equal to 1",
        "tables": [
            "Restaurant_Type",
            "Student",
            "Type_Of_Restaurant",
            "Visits_Restaurant",
            "Restaurant"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "address",
            "from",
            "restaurant",
            "grouped",
            "by",
            "address",
            "with",
            "maximum",
            "restaurant",
            "id",
            "equal",
            "to",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Address",
            "FROM",
            "Restaurant",
            "GROUP",
            "BY",
            "Address",
            "HAVING",
            "MAX",
            "(",
            "ResID",
            ")",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "address",
            "from",
            "restaurant",
            "group",
            "by",
            "address",
            "having",
            "max",
            "(",
            "resid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__restaurant__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__restaurant.address__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__restaurant.address__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__restaurant.resid__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_invoices",
        "query": "SELECT product_name FROM Products GROUP BY product_name HAVING MIN(unit_price) = 469.71;",
        "question": "Select product name from products grouped by product name with minimum unit price equal to 469.71",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Accounts",
            "Customers",
            "Product_Categories",
            "Invoice_Line_Items",
            "Financial_Transactions",
            "Orders"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "product",
            "name",
            "from",
            "products",
            "grouped",
            "by",
            "product",
            "name",
            "with",
            "minimum",
            "unit",
            "price",
            "equal",
            "to",
            "469.71"
        ],
        "query_toks": [
            "SELECT",
            "product_name",
            "FROM",
            "Products",
            "GROUP",
            "BY",
            "product_name",
            "HAVING",
            "MIN",
            "(",
            "unit_price",
            ")",
            "=",
            "469.71"
        ],
        "query_toks_no_value": [
            "select",
            "product_name",
            "from",
            "products",
            "group",
            "by",
            "product_name",
            "having",
            "min",
            "(",
            "unit_price",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products.product_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__products.product_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__products.unit_price__",
                            false
                        ],
                        null
                    ],
                    469.71,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_invoices",
        "query": "SELECT other_order_item_details FROM Order_Items GROUP BY other_order_item_details HAVING MAX(product_id) = 9;",
        "question": "Select other order item details from order items grouped by other order item details with maximum product id equal to 9",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Accounts",
            "Customers",
            "Product_Categories",
            "Invoice_Line_Items",
            "Financial_Transactions",
            "Orders"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "other",
            "order",
            "item",
            "details",
            "from",
            "order",
            "items",
            "grouped",
            "by",
            "other",
            "order",
            "item",
            "details",
            "with",
            "maximum",
            "product",
            "id",
            "equal",
            "to",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "other_order_item_details",
            "FROM",
            "Order_Items",
            "GROUP",
            "BY",
            "other_order_item_details",
            "HAVING",
            "MAX",
            "(",
            "product_id",
            ")",
            "=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "other_order_item_details",
            "from",
            "order_items",
            "group",
            "by",
            "other_order_item_details",
            "having",
            "max",
            "(",
            "product_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__order_items__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__order_items.other_order_item_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__order_items.other_order_item_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__order_items.product_id__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_invoices",
        "query": "SELECT account_name FROM Accounts GROUP BY account_name HAVING MIN(customer_id) = 3;",
        "question": "Select account name from accounts grouped by account name with minimum customer id equal to 3",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Accounts",
            "Customers",
            "Product_Categories",
            "Invoice_Line_Items",
            "Financial_Transactions",
            "Orders"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "account",
            "name",
            "from",
            "accounts",
            "grouped",
            "by",
            "account",
            "name",
            "with",
            "minimum",
            "customer",
            "id",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "account_name",
            "FROM",
            "Accounts",
            "GROUP",
            "BY",
            "account_name",
            "HAVING",
            "MIN",
            "(",
            "customer_id",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "account_name",
            "from",
            "accounts",
            "group",
            "by",
            "account_name",
            "having",
            "min",
            "(",
            "customer_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__accounts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__accounts.account_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__accounts.account_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__accounts.customer_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_invoices",
        "query": "SELECT customer_middle_initial FROM Customers GROUP BY customer_middle_initial HAVING MAX(customer_id) = 4;",
        "question": "Select customer middle initial from customers grouped by customer middle initial with maximum customer id equal to 4",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Accounts",
            "Customers",
            "Product_Categories",
            "Invoice_Line_Items",
            "Financial_Transactions",
            "Orders"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "customer",
            "middle",
            "initial",
            "from",
            "customers",
            "grouped",
            "by",
            "customer",
            "middle",
            "initial",
            "with",
            "maximum",
            "customer",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "customer_middle_initial",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "customer_middle_initial",
            "HAVING",
            "MAX",
            "(",
            "customer_id",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "customer_middle_initial",
            "from",
            "customers",
            "group",
            "by",
            "customer_middle_initial",
            "having",
            "max",
            "(",
            "customer_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_middle_initial__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customers.customer_middle_initial__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__customers.customer_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_invoices",
        "query": "SELECT product_type_description FROM Product_Categories GROUP BY product_type_description HAVING MAX(vat_rating) = 11.4;",
        "question": "Select product type description from product categories grouped by product type description with maximum vat rating equal to 11.4",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Accounts",
            "Customers",
            "Product_Categories",
            "Invoice_Line_Items",
            "Financial_Transactions",
            "Orders"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "product",
            "type",
            "description",
            "from",
            "product",
            "categories",
            "grouped",
            "by",
            "product",
            "type",
            "description",
            "with",
            "maximum",
            "vat",
            "rating",
            "equal",
            "to",
            "11.4"
        ],
        "query_toks": [
            "SELECT",
            "product_type_description",
            "FROM",
            "Product_Categories",
            "GROUP",
            "BY",
            "product_type_description",
            "HAVING",
            "MAX",
            "(",
            "vat_rating",
            ")",
            "=",
            "11.4"
        ],
        "query_toks_no_value": [
            "select",
            "product_type_description",
            "from",
            "product_categories",
            "group",
            "by",
            "product_type_description",
            "having",
            "max",
            "(",
            "vat_rating",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__product_categories__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__product_categories.product_type_description__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__product_categories.product_type_description__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__product_categories.vat_rating__",
                            false
                        ],
                        null
                    ],
                    11.4,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_invoices",
        "query": "SELECT product_title FROM Invoice_Line_Items GROUP BY product_title HAVING MIN(order_item_id) = 11;",
        "question": "Select product title from invoice line items grouped by product title with minimum order item id equal to 11",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Accounts",
            "Customers",
            "Product_Categories",
            "Invoice_Line_Items",
            "Financial_Transactions",
            "Orders"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "product",
            "title",
            "from",
            "invoice",
            "line",
            "items",
            "grouped",
            "by",
            "product",
            "title",
            "with",
            "minimum",
            "order",
            "item",
            "id",
            "equal",
            "to",
            "11"
        ],
        "query_toks": [
            "SELECT",
            "product_title",
            "FROM",
            "Invoice_Line_Items",
            "GROUP",
            "BY",
            "product_title",
            "HAVING",
            "MIN",
            "(",
            "order_item_id",
            ")",
            "=",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "product_title",
            "from",
            "invoice_line_items",
            "group",
            "by",
            "product_title",
            "having",
            "min",
            "(",
            "order_item_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__invoice_line_items__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__invoice_line_items.product_title__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__invoice_line_items.product_title__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__invoice_line_items.order_item_id__",
                            false
                        ],
                        null
                    ],
                    11.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_invoices",
        "query": "SELECT transaction_type FROM Financial_Transactions GROUP BY transaction_type HAVING MIN(account_id) = 6;",
        "question": "Select transaction type from financial transactions grouped by transaction type with minimum account id equal to 6",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Accounts",
            "Customers",
            "Product_Categories",
            "Invoice_Line_Items",
            "Financial_Transactions",
            "Orders"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "transaction",
            "type",
            "from",
            "financial",
            "transactions",
            "grouped",
            "by",
            "transaction",
            "type",
            "with",
            "minimum",
            "account",
            "id",
            "equal",
            "to",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "transaction_type",
            "FROM",
            "Financial_Transactions",
            "GROUP",
            "BY",
            "transaction_type",
            "HAVING",
            "MIN",
            "(",
            "account_id",
            ")",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "transaction_type",
            "from",
            "financial_transactions",
            "group",
            "by",
            "transaction_type",
            "having",
            "min",
            "(",
            "account_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__financial_transactions__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__financial_transactions.transaction_type__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__financial_transactions.transaction_type__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__financial_transactions.account_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_invoices",
        "query": "SELECT order_details FROM Orders GROUP BY order_details HAVING MIN(customer_id) = 6;",
        "question": "Select order details from orders grouped by order details with minimum customer id equal to 6",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Accounts",
            "Customers",
            "Product_Categories",
            "Invoice_Line_Items",
            "Financial_Transactions",
            "Orders"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "order",
            "details",
            "from",
            "orders",
            "grouped",
            "by",
            "order",
            "details",
            "with",
            "minimum",
            "customer",
            "id",
            "equal",
            "to",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "order_details",
            "FROM",
            "Orders",
            "GROUP",
            "BY",
            "order_details",
            "HAVING",
            "MIN",
            "(",
            "customer_id",
            ")",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "order_details",
            "from",
            "orders",
            "group",
            "by",
            "order_details",
            "having",
            "min",
            "(",
            "customer_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__orders__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__orders.order_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__orders.order_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__orders.customer_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_and_eClaims",
        "query": "SELECT Staff_Details FROM Staff GROUP BY Staff_Details HAVING MAX(Staff_ID) = 986;",
        "question": "Select staff details from staff grouped by staff details with maximum staff id equal to 986",
        "tables": [
            "Staff",
            "Claim_Headers",
            "Claims_Processing",
            "Policies",
            "Customers",
            "Claims_Documents",
            "Claims_Processing_Stages"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "staff",
            "details",
            "from",
            "staff",
            "grouped",
            "by",
            "staff",
            "details",
            "with",
            "maximum",
            "staff",
            "id",
            "equal",
            "to",
            "986"
        ],
        "query_toks": [
            "SELECT",
            "Staff_Details",
            "FROM",
            "Staff",
            "GROUP",
            "BY",
            "Staff_Details",
            "HAVING",
            "MAX",
            "(",
            "Staff_ID",
            ")",
            "=",
            "986"
        ],
        "query_toks_no_value": [
            "select",
            "staff_details",
            "from",
            "staff",
            "group",
            "by",
            "staff_details",
            "having",
            "max",
            "(",
            "staff_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__staff__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__staff.staff_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__staff.staff_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__staff.staff_id__",
                            false
                        ],
                        null
                    ],
                    986.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_and_eClaims",
        "query": "SELECT Claim_Status_Code FROM Claim_Headers GROUP BY Claim_Status_Code HAVING MAX(Claim_Header_ID) = 28;",
        "question": "Select claim status code from claim headers grouped by claim status code with maximum claim header id equal to 28",
        "tables": [
            "Staff",
            "Claim_Headers",
            "Claims_Processing",
            "Policies",
            "Customers",
            "Claims_Documents",
            "Claims_Processing_Stages"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "claim",
            "status",
            "code",
            "from",
            "claim",
            "headers",
            "grouped",
            "by",
            "claim",
            "status",
            "code",
            "with",
            "maximum",
            "claim",
            "header",
            "id",
            "equal",
            "to",
            "28"
        ],
        "query_toks": [
            "SELECT",
            "Claim_Status_Code",
            "FROM",
            "Claim_Headers",
            "GROUP",
            "BY",
            "Claim_Status_Code",
            "HAVING",
            "MAX",
            "(",
            "Claim_Header_ID",
            ")",
            "=",
            "28"
        ],
        "query_toks_no_value": [
            "select",
            "claim_status_code",
            "from",
            "claim_headers",
            "group",
            "by",
            "claim_status_code",
            "having",
            "max",
            "(",
            "claim_header_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__claim_headers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__claim_headers.claim_status_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__claim_headers.claim_status_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__claim_headers.claim_header_id__",
                            false
                        ],
                        null
                    ],
                    28.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_and_eClaims",
        "query": "SELECT Claim_Outcome_Code FROM Claims_Processing GROUP BY Claim_Outcome_Code HAVING MIN(Claim_Processing_ID) = 145;",
        "question": "Select claim outcome code from claims processing grouped by claim outcome code with minimum claim processing id equal to 145",
        "tables": [
            "Staff",
            "Claim_Headers",
            "Claims_Processing",
            "Policies",
            "Customers",
            "Claims_Documents",
            "Claims_Processing_Stages"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "claim",
            "outcome",
            "code",
            "from",
            "claims",
            "processing",
            "grouped",
            "by",
            "claim",
            "outcome",
            "code",
            "with",
            "minimum",
            "claim",
            "processing",
            "id",
            "equal",
            "to",
            "145"
        ],
        "query_toks": [
            "SELECT",
            "Claim_Outcome_Code",
            "FROM",
            "Claims_Processing",
            "GROUP",
            "BY",
            "Claim_Outcome_Code",
            "HAVING",
            "MIN",
            "(",
            "Claim_Processing_ID",
            ")",
            "=",
            "145"
        ],
        "query_toks_no_value": [
            "select",
            "claim_outcome_code",
            "from",
            "claims_processing",
            "group",
            "by",
            "claim_outcome_code",
            "having",
            "min",
            "(",
            "claim_processing_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__claims_processing__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__claims_processing.claim_outcome_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__claims_processing.claim_outcome_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__claims_processing.claim_processing_id__",
                            false
                        ],
                        null
                    ],
                    145.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_and_eClaims",
        "query": "SELECT Policy_Type_Code FROM Policies GROUP BY Policy_Type_Code HAVING MAX(Customer_ID) = 435;",
        "question": "Select policy type code from policies grouped by policy type code with maximum customer id equal to 435",
        "tables": [
            "Staff",
            "Claim_Headers",
            "Claims_Processing",
            "Policies",
            "Customers",
            "Claims_Documents",
            "Claims_Processing_Stages"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "policy",
            "type",
            "code",
            "from",
            "policies",
            "grouped",
            "by",
            "policy",
            "type",
            "code",
            "with",
            "maximum",
            "customer",
            "id",
            "equal",
            "to",
            "435"
        ],
        "query_toks": [
            "SELECT",
            "Policy_Type_Code",
            "FROM",
            "Policies",
            "GROUP",
            "BY",
            "Policy_Type_Code",
            "HAVING",
            "MAX",
            "(",
            "Customer_ID",
            ")",
            "=",
            "435"
        ],
        "query_toks_no_value": [
            "select",
            "policy_type_code",
            "from",
            "policies",
            "group",
            "by",
            "policy_type_code",
            "having",
            "max",
            "(",
            "customer_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__policies__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__policies.policy_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__policies.policy_type_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__policies.customer_id__",
                            false
                        ],
                        null
                    ],
                    435.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_and_eClaims",
        "query": "SELECT Customer_Details FROM Customers GROUP BY Customer_Details HAVING MIN(Customer_ID) = 430;",
        "question": "Select customer details from customers grouped by customer details with minimum customer id equal to 430",
        "tables": [
            "Staff",
            "Claim_Headers",
            "Claims_Processing",
            "Policies",
            "Customers",
            "Claims_Documents",
            "Claims_Processing_Stages"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "customer",
            "details",
            "from",
            "customers",
            "grouped",
            "by",
            "customer",
            "details",
            "with",
            "minimum",
            "customer",
            "id",
            "equal",
            "to",
            "430"
        ],
        "query_toks": [
            "SELECT",
            "Customer_Details",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "Customer_Details",
            "HAVING",
            "MIN",
            "(",
            "Customer_ID",
            ")",
            "=",
            "430"
        ],
        "query_toks_no_value": [
            "select",
            "customer_details",
            "from",
            "customers",
            "group",
            "by",
            "customer_details",
            "having",
            "min",
            "(",
            "customer_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customers.customer_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__customers.customer_id__",
                            false
                        ],
                        null
                    ],
                    430.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_and_eClaims",
        "query": "SELECT Document_Type_Code FROM Claims_Documents GROUP BY Document_Type_Code HAVING MAX(Created_by_Staff_ID) = 673;",
        "question": "Select document type code from claims documents grouped by document type code with maximum created by staff id equal to 673",
        "tables": [
            "Staff",
            "Claim_Headers",
            "Claims_Processing",
            "Policies",
            "Customers",
            "Claims_Documents",
            "Claims_Processing_Stages"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "document",
            "type",
            "code",
            "from",
            "claims",
            "documents",
            "grouped",
            "by",
            "document",
            "type",
            "code",
            "with",
            "maximum",
            "created",
            "by",
            "staff",
            "id",
            "equal",
            "to",
            "673"
        ],
        "query_toks": [
            "SELECT",
            "Document_Type_Code",
            "FROM",
            "Claims_Documents",
            "GROUP",
            "BY",
            "Document_Type_Code",
            "HAVING",
            "MAX",
            "(",
            "Created_by_Staff_ID",
            ")",
            "=",
            "673"
        ],
        "query_toks_no_value": [
            "select",
            "document_type_code",
            "from",
            "claims_documents",
            "group",
            "by",
            "document_type_code",
            "having",
            "max",
            "(",
            "created_by_staff_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__claims_documents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__claims_documents.document_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__claims_documents.document_type_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__claims_documents.created_by_staff_id__",
                            false
                        ],
                        null
                    ],
                    673.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_and_eClaims",
        "query": "SELECT Claim_Status_Name FROM Claims_Processing_Stages GROUP BY Claim_Status_Name HAVING MAX(Claim_Stage_ID) = 1;",
        "question": "Select claim status name from claims processing stages grouped by claim status name with maximum claim stage id equal to 1",
        "tables": [
            "Staff",
            "Claim_Headers",
            "Claims_Processing",
            "Policies",
            "Customers",
            "Claims_Documents",
            "Claims_Processing_Stages"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "claim",
            "status",
            "name",
            "from",
            "claims",
            "processing",
            "stages",
            "grouped",
            "by",
            "claim",
            "status",
            "name",
            "with",
            "maximum",
            "claim",
            "stage",
            "id",
            "equal",
            "to",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Claim_Status_Name",
            "FROM",
            "Claims_Processing_Stages",
            "GROUP",
            "BY",
            "Claim_Status_Name",
            "HAVING",
            "MAX",
            "(",
            "Claim_Stage_ID",
            ")",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "claim_status_name",
            "from",
            "claims_processing_stages",
            "group",
            "by",
            "claim_status_name",
            "having",
            "max",
            "(",
            "claim_stage_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__claims_processing_stages__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__claims_processing_stages.claim_status_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__claims_processing_stages.claim_status_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__claims_processing_stages.claim_stage_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_1",
        "query": "SELECT DEPT_NAME FROM DEPARTMENT GROUP BY DEPT_NAME HAVING MIN(EMP_NUM) = 103;",
        "question": "Select department name from department grouped by department name with minimum employee number equal to 103",
        "tables": [
            "DEPARTMENT",
            "STUDENT",
            "PROFESSOR",
            "CLASS",
            "EMPLOYEE",
            "ENROLL",
            "COURSE"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "department",
            "name",
            "from",
            "department",
            "grouped",
            "by",
            "department",
            "name",
            "with",
            "minimum",
            "employee",
            "number",
            "equal",
            "to",
            "103"
        ],
        "query_toks": [
            "SELECT",
            "DEPT_NAME",
            "FROM",
            "DEPARTMENT",
            "GROUP",
            "BY",
            "DEPT_NAME",
            "HAVING",
            "MIN",
            "(",
            "EMP_NUM",
            ")",
            "=",
            "103"
        ],
        "query_toks_no_value": [
            "select",
            "dept_name",
            "from",
            "department",
            "group",
            "by",
            "dept_name",
            "having",
            "min",
            "(",
            "emp_num",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__department__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__department.dept_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__department.dept_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__department.emp_num__",
                            false
                        ],
                        null
                    ],
                    103.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_1",
        "query": "SELECT STU_INIT FROM STUDENT GROUP BY STU_INIT HAVING MAX(STU_GPA) = 2.84;",
        "question": "Select student init from student grouped by student init with maximum student gpa equal to 2.84",
        "tables": [
            "DEPARTMENT",
            "STUDENT",
            "PROFESSOR",
            "CLASS",
            "EMPLOYEE",
            "ENROLL",
            "COURSE"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "student",
            "init",
            "from",
            "student",
            "grouped",
            "by",
            "student",
            "init",
            "with",
            "maximum",
            "student",
            "gpa",
            "equal",
            "to",
            "2.84"
        ],
        "query_toks": [
            "SELECT",
            "STU_INIT",
            "FROM",
            "STUDENT",
            "GROUP",
            "BY",
            "STU_INIT",
            "HAVING",
            "MAX",
            "(",
            "STU_GPA",
            ")",
            "=",
            "2.84"
        ],
        "query_toks_no_value": [
            "select",
            "stu_init",
            "from",
            "student",
            "group",
            "by",
            "stu_init",
            "having",
            "max",
            "(",
            "stu_gpa",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.stu_init__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__student.stu_init__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__student.stu_gpa__",
                            false
                        ],
                        null
                    ],
                    2.84,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_1",
        "query": "SELECT PROF_OFFICE FROM PROFESSOR GROUP BY PROF_OFFICE HAVING MAX(EMP_NUM) = 435;",
        "question": "Select professor office from professor grouped by professor office with maximum employee number equal to 435",
        "tables": [
            "DEPARTMENT",
            "STUDENT",
            "PROFESSOR",
            "CLASS",
            "EMPLOYEE",
            "ENROLL",
            "COURSE"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "professor",
            "office",
            "from",
            "professor",
            "grouped",
            "by",
            "professor",
            "office",
            "with",
            "maximum",
            "employee",
            "number",
            "equal",
            "to",
            "435"
        ],
        "query_toks": [
            "SELECT",
            "PROF_OFFICE",
            "FROM",
            "PROFESSOR",
            "GROUP",
            "BY",
            "PROF_OFFICE",
            "HAVING",
            "MAX",
            "(",
            "EMP_NUM",
            ")",
            "=",
            "435"
        ],
        "query_toks_no_value": [
            "select",
            "prof_office",
            "from",
            "professor",
            "group",
            "by",
            "prof_office",
            "having",
            "max",
            "(",
            "emp_num",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__professor__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__professor.prof_office__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__professor.prof_office__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__professor.emp_num__",
                            false
                        ],
                        null
                    ],
                    435.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_1",
        "query": "SELECT CLASS_SECTION FROM CLASS GROUP BY CLASS_SECTION HAVING MAX(PROF_NUM) = 105;",
        "question": "Select class section from class grouped by class section with maximum professor employee number equal to 105",
        "tables": [
            "DEPARTMENT",
            "STUDENT",
            "PROFESSOR",
            "CLASS",
            "EMPLOYEE",
            "ENROLL",
            "COURSE"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "class",
            "section",
            "from",
            "class",
            "grouped",
            "by",
            "class",
            "section",
            "with",
            "maximum",
            "professor",
            "employee",
            "number",
            "equal",
            "to",
            "105"
        ],
        "query_toks": [
            "SELECT",
            "CLASS_SECTION",
            "FROM",
            "CLASS",
            "GROUP",
            "BY",
            "CLASS_SECTION",
            "HAVING",
            "MAX",
            "(",
            "PROF_NUM",
            ")",
            "=",
            "105"
        ],
        "query_toks_no_value": [
            "select",
            "class_section",
            "from",
            "class",
            "group",
            "by",
            "class_section",
            "having",
            "max",
            "(",
            "prof_num",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__class__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__class.class_section__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__class.class_section__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__class.prof_num__",
                            false
                        ],
                        null
                    ],
                    105.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_1",
        "query": "SELECT EMP_JOBCODE FROM EMPLOYEE GROUP BY EMP_JOBCODE HAVING MAX(EMP_NUM) = 160;",
        "question": "Select employee job code from employee grouped by employee job code with maximum employee number equal to 160",
        "tables": [
            "DEPARTMENT",
            "STUDENT",
            "PROFESSOR",
            "CLASS",
            "EMPLOYEE",
            "ENROLL",
            "COURSE"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "employee",
            "job",
            "code",
            "from",
            "employee",
            "grouped",
            "by",
            "employee",
            "job",
            "code",
            "with",
            "maximum",
            "employee",
            "number",
            "equal",
            "to",
            "160"
        ],
        "query_toks": [
            "SELECT",
            "EMP_JOBCODE",
            "FROM",
            "EMPLOYEE",
            "GROUP",
            "BY",
            "EMP_JOBCODE",
            "HAVING",
            "MAX",
            "(",
            "EMP_NUM",
            ")",
            "=",
            "160"
        ],
        "query_toks_no_value": [
            "select",
            "emp_jobcode",
            "from",
            "employee",
            "group",
            "by",
            "emp_jobcode",
            "having",
            "max",
            "(",
            "emp_num",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__employee__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__employee.emp_jobcode__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__employee.emp_jobcode__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__employee.emp_num__",
                            false
                        ],
                        null
                    ],
                    160.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_1",
        "query": "SELECT CLASS_CODE FROM ENROLL GROUP BY CLASS_CODE HAVING MAX(STU_NUM) = 321452;",
        "question": "Select class code from enroll grouped by class code with maximum student number equal to 321452",
        "tables": [
            "DEPARTMENT",
            "STUDENT",
            "PROFESSOR",
            "CLASS",
            "EMPLOYEE",
            "ENROLL",
            "COURSE"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "class",
            "code",
            "from",
            "enroll",
            "grouped",
            "by",
            "class",
            "code",
            "with",
            "maximum",
            "student",
            "number",
            "equal",
            "to",
            "321452"
        ],
        "query_toks": [
            "SELECT",
            "CLASS_CODE",
            "FROM",
            "ENROLL",
            "GROUP",
            "BY",
            "CLASS_CODE",
            "HAVING",
            "MAX",
            "(",
            "STU_NUM",
            ")",
            "=",
            "321452"
        ],
        "query_toks_no_value": [
            "select",
            "class_code",
            "from",
            "enroll",
            "group",
            "by",
            "class_code",
            "having",
            "max",
            "(",
            "stu_num",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__enroll__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__enroll.class_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__enroll.class_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__enroll.stu_num__",
                            false
                        ],
                        null
                    ],
                    321452.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_1",
        "query": "SELECT DEPT_CODE FROM COURSE GROUP BY DEPT_CODE HAVING MAX(CRS_CREDIT) = 3.0;",
        "question": "Select department code from course grouped by department code with maximum course credit equal to 3.0",
        "tables": [
            "DEPARTMENT",
            "STUDENT",
            "PROFESSOR",
            "CLASS",
            "EMPLOYEE",
            "ENROLL",
            "COURSE"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "department",
            "code",
            "from",
            "course",
            "grouped",
            "by",
            "department",
            "code",
            "with",
            "maximum",
            "course",
            "credit",
            "equal",
            "to",
            "3.0"
        ],
        "query_toks": [
            "SELECT",
            "DEPT_CODE",
            "FROM",
            "COURSE",
            "GROUP",
            "BY",
            "DEPT_CODE",
            "HAVING",
            "MAX",
            "(",
            "CRS_CREDIT",
            ")",
            "=",
            "3.0"
        ],
        "query_toks_no_value": [
            "select",
            "dept_code",
            "from",
            "course",
            "group",
            "by",
            "dept_code",
            "having",
            "max",
            "(",
            "crs_credit",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__course__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__course.dept_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__course.dept_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__course.crs_credit__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_mdm",
        "query": "SELECT cmi_details FROM Customer_Master_Index GROUP BY cmi_details HAVING MIN(master_customer_id) = 5;",
        "question": "Select cmi details from customer master index grouped by cmi details with minimum master customer id equal to 5",
        "tables": [
            "Customer_Master_Index",
            "Parking_Fines",
            "Benefits_Overpayments",
            "CMI_Cross_References",
            "Council_Tax",
            "Rent_Arrears",
            "Electoral_Register",
            "Business_Rates"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "cmi",
            "details",
            "from",
            "customer",
            "master",
            "index",
            "grouped",
            "by",
            "cmi",
            "details",
            "with",
            "minimum",
            "master",
            "customer",
            "id",
            "equal",
            "to",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "cmi_details",
            "FROM",
            "Customer_Master_Index",
            "GROUP",
            "BY",
            "cmi_details",
            "HAVING",
            "MIN",
            "(",
            "master_customer_id",
            ")",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "cmi_details",
            "from",
            "customer_master_index",
            "group",
            "by",
            "cmi_details",
            "having",
            "min",
            "(",
            "master_customer_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_master_index__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_master_index.cmi_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customer_master_index.cmi_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__customer_master_index.master_customer_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_mdm",
        "query": "SELECT source_system_code FROM CMI_Cross_References GROUP BY source_system_code HAVING MAX(master_customer_id) = 4;",
        "question": "Select source system code from cmi cross references grouped by source system code with maximum master customer id equal to 4",
        "tables": [
            "Customer_Master_Index",
            "Parking_Fines",
            "Benefits_Overpayments",
            "CMI_Cross_References",
            "Council_Tax",
            "Rent_Arrears",
            "Electoral_Register",
            "Business_Rates"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "source",
            "system",
            "code",
            "from",
            "cmi",
            "cross",
            "references",
            "grouped",
            "by",
            "source",
            "system",
            "code",
            "with",
            "maximum",
            "master",
            "customer",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "source_system_code",
            "FROM",
            "CMI_Cross_References",
            "GROUP",
            "BY",
            "source_system_code",
            "HAVING",
            "MAX",
            "(",
            "master_customer_id",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "source_system_code",
            "from",
            "cmi_cross_references",
            "group",
            "by",
            "source_system_code",
            "having",
            "max",
            "(",
            "master_customer_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__cmi_cross_references__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__cmi_cross_references.source_system_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__cmi_cross_references.source_system_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__cmi_cross_references.master_customer_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "book_2",
        "query": "SELECT Writer FROM book GROUP BY Writer HAVING MAX(Issues) = 1.0;",
        "question": "Select writer from book grouped by writer with maximum issues equal to 1.0",
        "tables": [
            "book",
            "publication"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "writer",
            "from",
            "book",
            "grouped",
            "by",
            "writer",
            "with",
            "maximum",
            "issues",
            "equal",
            "to",
            "1.0"
        ],
        "query_toks": [
            "SELECT",
            "Writer",
            "FROM",
            "book",
            "GROUP",
            "BY",
            "Writer",
            "HAVING",
            "MAX",
            "(",
            "Issues",
            ")",
            "=",
            "1.0"
        ],
        "query_toks_no_value": [
            "select",
            "writer",
            "from",
            "book",
            "group",
            "by",
            "writer",
            "having",
            "max",
            "(",
            "issues",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__book__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__book.writer__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__book.writer__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__book.issues__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "book_2",
        "query": "SELECT Publication_Date FROM publication GROUP BY Publication_Date HAVING MIN(Publication_ID) = 3;",
        "question": "Select publication date from publication grouped by publication date with minimum publication id equal to 3",
        "tables": [
            "book",
            "publication"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "publication",
            "date",
            "from",
            "publication",
            "grouped",
            "by",
            "publication",
            "date",
            "with",
            "minimum",
            "publication",
            "id",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Publication_Date",
            "FROM",
            "publication",
            "GROUP",
            "BY",
            "Publication_Date",
            "HAVING",
            "MIN",
            "(",
            "Publication_ID",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "publication_date",
            "from",
            "publication",
            "group",
            "by",
            "publication_date",
            "having",
            "min",
            "(",
            "publication_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__publication__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__publication.publication_date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__publication.publication_date__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__publication.publication_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hr_1",
        "query": "SELECT COUNTRY_ID FROM countries GROUP BY COUNTRY_ID HAVING MIN(REGION_ID) = 2;",
        "question": "Select country id from countries grouped by country id with minimum region id equal to 2",
        "tables": [
            "countries",
            "regions",
            "locations",
            "jobs",
            "job_history",
            "departments",
            "employees"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "country",
            "id",
            "from",
            "countries",
            "grouped",
            "by",
            "country",
            "id",
            "with",
            "minimum",
            "region",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "COUNTRY_I",
            "(",
            "COUNTRY_I",
            ")",
            "FROM",
            "countrie",
            "(",
            "countrie",
            ")",
            "GROUP",
            "BY",
            "COUNTRY_I",
            "(",
            "COUNTRY_I",
            ")",
            "HAVING",
            "MIN",
            "(",
            "REGION_ID",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "country_i",
            "(",
            "country_i",
            ")",
            "from",
            "countrie",
            "(",
            "countrie",
            ")",
            "group",
            "by",
            "country_i",
            "(",
            "country_i",
            ")",
            "having",
            "min",
            "(",
            "region_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__countries__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__countries.country_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__countries.country_id__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__countries.region_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hr_1",
        "query": "SELECT REGION_NAME FROM regions GROUP BY REGION_NAME HAVING MAX(REGION_ID) = 4;",
        "question": "Select region name from regions grouped by region name with maximum region id equal to 4",
        "tables": [
            "countries",
            "regions",
            "locations",
            "jobs",
            "job_history",
            "departments",
            "employees"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "region",
            "name",
            "from",
            "regions",
            "grouped",
            "by",
            "region",
            "name",
            "with",
            "maximum",
            "region",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "REGION_NAME",
            "FROM",
            "regions",
            "GROUP",
            "BY",
            "REGION_NAME",
            "HAVING",
            "MAX",
            "(",
            "REGION_ID",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "region_name",
            "from",
            "regions",
            "group",
            "by",
            "region_name",
            "having",
            "max",
            "(",
            "region_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__regions__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__regions.region_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__regions.region_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__regions.region_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hr_1",
        "query": "SELECT STREET_ADDRESS FROM locations GROUP BY STREET_ADDRESS HAVING MIN(LOCATION_ID) = 1900;",
        "question": "Select street address from locations grouped by street address with minimum location id equal to 1900",
        "tables": [
            "countries",
            "regions",
            "locations",
            "jobs",
            "job_history",
            "departments",
            "employees"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "street",
            "address",
            "from",
            "locations",
            "grouped",
            "by",
            "street",
            "address",
            "with",
            "minimum",
            "location",
            "id",
            "equal",
            "to",
            "1900"
        ],
        "query_toks": [
            "SELECT",
            "STREET_ADDRESS",
            "FROM",
            "locations",
            "GROUP",
            "BY",
            "STREET_ADDRESS",
            "HAVING",
            "MIN",
            "(",
            "LOCATION_ID",
            ")",
            "=",
            "1900"
        ],
        "query_toks_no_value": [
            "select",
            "street_address",
            "from",
            "locations",
            "group",
            "by",
            "street_address",
            "having",
            "min",
            "(",
            "location_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__locations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__locations.street_address__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__locations.street_address__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__locations.location_id__",
                            false
                        ],
                        null
                    ],
                    1900.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hr_1",
        "query": "SELECT JOB_ID FROM jobs GROUP BY JOB_ID HAVING MIN(MAX_SALARY) = 8500;",
        "question": "Select job id from jobs grouped by job id with minimum max salary equal to 8500",
        "tables": [
            "countries",
            "regions",
            "locations",
            "jobs",
            "job_history",
            "departments",
            "employees"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "job",
            "id",
            "from",
            "jobs",
            "grouped",
            "by",
            "job",
            "id",
            "with",
            "minimum",
            "max",
            "salary",
            "equal",
            "to",
            "8500"
        ],
        "query_toks": [
            "SELECT",
            "JOB_ID",
            "FROM",
            "jobs",
            "GROUP",
            "BY",
            "JOB_ID",
            "HAVING",
            "MIN",
            "(",
            "MAX_SALARY",
            ")",
            "=",
            "8500"
        ],
        "query_toks_no_value": [
            "select",
            "job_id",
            "from",
            "jobs",
            "group",
            "by",
            "job_id",
            "having",
            "min",
            "(",
            "max_salary",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__jobs__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__jobs.job_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__jobs.job_id__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__jobs.max_salary__",
                            false
                        ],
                        null
                    ],
                    8500.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hr_1",
        "query": "SELECT JOB_ID FROM job_history GROUP BY JOB_ID HAVING MAX(DEPARTMENT_ID) = 90;",
        "question": "Select job id from job history grouped by job id with maximum department id equal to 90",
        "tables": [
            "countries",
            "regions",
            "locations",
            "jobs",
            "job_history",
            "departments",
            "employees"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "job",
            "id",
            "from",
            "job",
            "history",
            "grouped",
            "by",
            "job",
            "id",
            "with",
            "maximum",
            "department",
            "id",
            "equal",
            "to",
            "90"
        ],
        "query_toks": [
            "SELECT",
            "JOB_ID",
            "FROM",
            "job_history",
            "GROUP",
            "BY",
            "JOB_ID",
            "HAVING",
            "MAX",
            "(",
            "DEPARTMENT_ID",
            ")",
            "=",
            "90"
        ],
        "query_toks_no_value": [
            "select",
            "job_id",
            "from",
            "job_history",
            "group",
            "by",
            "job_id",
            "having",
            "max",
            "(",
            "department_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__job_history__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__job_history.job_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__job_history.job_id__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__job_history.department_id__",
                            false
                        ],
                        null
                    ],
                    90.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hr_1",
        "query": "SELECT DEPARTMENT_NAME FROM departments GROUP BY DEPARTMENT_NAME HAVING MAX(LOCATION_ID) = 1400;",
        "question": "Select department name from departments grouped by department name with maximum location id equal to 1400",
        "tables": [
            "countries",
            "regions",
            "locations",
            "jobs",
            "job_history",
            "departments",
            "employees"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "department",
            "name",
            "from",
            "departments",
            "grouped",
            "by",
            "department",
            "name",
            "with",
            "maximum",
            "location",
            "id",
            "equal",
            "to",
            "1400"
        ],
        "query_toks": [
            "SELECT",
            "DEPARTMENT_NAME",
            "FROM",
            "departments",
            "GROUP",
            "BY",
            "DEPARTMENT_NAME",
            "HAVING",
            "MAX",
            "(",
            "LOCATION_ID",
            ")",
            "=",
            "1400"
        ],
        "query_toks_no_value": [
            "select",
            "department_name",
            "from",
            "departments",
            "group",
            "by",
            "department_name",
            "having",
            "max",
            "(",
            "location_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__departments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__departments.department_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__departments.department_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__departments.location_id__",
                            false
                        ],
                        null
                    ],
                    1400.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hr_1",
        "query": "SELECT JOB_ID FROM employees GROUP BY JOB_ID HAVING MIN(DEPARTMENT_ID) = 30;",
        "question": "Select job id from employees grouped by job id with minimum department id equal to 30",
        "tables": [
            "countries",
            "regions",
            "locations",
            "jobs",
            "job_history",
            "departments",
            "employees"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "job",
            "id",
            "from",
            "employees",
            "grouped",
            "by",
            "job",
            "id",
            "with",
            "minimum",
            "department",
            "id",
            "equal",
            "to",
            "30"
        ],
        "query_toks": [
            "SELECT",
            "JOB_ID",
            "FROM",
            "employees",
            "GROUP",
            "BY",
            "JOB_ID",
            "HAVING",
            "MIN",
            "(",
            "DEPARTMENT_ID",
            ")",
            "=",
            "30"
        ],
        "query_toks_no_value": [
            "select",
            "job_id",
            "from",
            "employees",
            "group",
            "by",
            "job_id",
            "having",
            "min",
            "(",
            "department_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__employees__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__employees.job_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__employees.job_id__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__employees.department_id__",
                            false
                        ],
                        null
                    ],
                    30.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_1",
        "query": "SELECT attacking_work_rate FROM Player_Attributes GROUP BY attacking_work_rate HAVING MIN(penalties) = 66;",
        "question": "Select attacking work rate from player attributes grouped by attacking work rate with minimum penalties equal to 66",
        "tables": [
            "sqlite_sequence",
            "Player_Attributes",
            "League",
            "Team_Attributes",
            "Player",
            "Team",
            "Country"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "attacking",
            "work",
            "rate",
            "from",
            "player",
            "attributes",
            "grouped",
            "by",
            "attacking",
            "work",
            "rate",
            "with",
            "minimum",
            "penalties",
            "equal",
            "to",
            "66"
        ],
        "query_toks": [
            "SELECT",
            "attacking_work_rate",
            "FROM",
            "Player_Attributes",
            "GROUP",
            "BY",
            "attacking_work_rate",
            "HAVING",
            "MIN",
            "(",
            "penalties",
            ")",
            "=",
            "66"
        ],
        "query_toks_no_value": [
            "select",
            "attacking_work_rate",
            "from",
            "player_attributes",
            "group",
            "by",
            "attacking_work_rate",
            "having",
            "min",
            "(",
            "penalties",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__player_attributes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__player_attributes.attacking_work_rate__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__player_attributes.attacking_work_rate__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__player_attributes.penalties__",
                            false
                        ],
                        null
                    ],
                    66.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_1",
        "query": "SELECT name FROM League GROUP BY name HAVING MIN(id) = 13274;",
        "question": "Select name from league grouped by name with minimum id equal to 13274",
        "tables": [
            "sqlite_sequence",
            "Player_Attributes",
            "League",
            "Team_Attributes",
            "Player",
            "Team",
            "Country"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "league",
            "grouped",
            "by",
            "name",
            "with",
            "minimum",
            "id",
            "equal",
            "to",
            "13274"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "League",
            "GROUP",
            "BY",
            "name",
            "HAVING",
            "MIN",
            "(",
            "id",
            ")",
            "=",
            "13274"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "league",
            "group",
            "by",
            "name",
            "having",
            "min",
            "(",
            "id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__league__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__league.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__league.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__league.id__",
                            false
                        ],
                        null
                    ],
                    13274.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_1",
        "query": "SELECT defenceDefenderLineClass FROM Team_Attributes GROUP BY defenceDefenderLineClass HAVING MIN(defenceAggression) = 51;",
        "question": "Select defence defender line class from team attributes grouped by defence defender line class with minimum defence aggression equal to 51",
        "tables": [
            "sqlite_sequence",
            "Player_Attributes",
            "League",
            "Team_Attributes",
            "Player",
            "Team",
            "Country"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "defence",
            "defender",
            "line",
            "class",
            "from",
            "team",
            "attributes",
            "grouped",
            "by",
            "defence",
            "defender",
            "line",
            "class",
            "with",
            "minimum",
            "defence",
            "aggression",
            "equal",
            "to",
            "51"
        ],
        "query_toks": [
            "SELECT",
            "defenceDefenderLineClass",
            "FROM",
            "Team_Attributes",
            "GROUP",
            "BY",
            "defenceDefenderLineClass",
            "HAVING",
            "MIN",
            "(",
            "defenceAggression",
            ")",
            "=",
            "51"
        ],
        "query_toks_no_value": [
            "select",
            "defencedefenderlineclass",
            "from",
            "team_attributes",
            "group",
            "by",
            "defencedefenderlineclass",
            "having",
            "min",
            "(",
            "defenceaggression",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__team_attributes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__team_attributes.defencedefenderlineclass__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__team_attributes.defencedefenderlineclass__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__team_attributes.defenceaggression__",
                            false
                        ],
                        null
                    ],
                    51.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_1",
        "query": "SELECT player_name FROM Player GROUP BY player_name HAVING MAX(player_fifa_api_id) = 46065;",
        "question": "Select player name from player grouped by player name with maximum player fifa api id equal to 46065",
        "tables": [
            "sqlite_sequence",
            "Player_Attributes",
            "League",
            "Team_Attributes",
            "Player",
            "Team",
            "Country"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "player",
            "name",
            "from",
            "player",
            "grouped",
            "by",
            "player",
            "name",
            "with",
            "maximum",
            "player",
            "fifa",
            "api",
            "id",
            "equal",
            "to",
            "46065"
        ],
        "query_toks": [
            "SELECT",
            "player_name",
            "FROM",
            "Player",
            "GROUP",
            "BY",
            "player_name",
            "HAVING",
            "MAX",
            "(",
            "player_fifa_api_id",
            ")",
            "=",
            "46065"
        ],
        "query_toks_no_value": [
            "select",
            "player_name",
            "from",
            "player",
            "group",
            "by",
            "player_name",
            "having",
            "max",
            "(",
            "player_fifa_api_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__player__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__player.player_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__player.player_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__player.player_fifa_api_id__",
                            false
                        ],
                        null
                    ],
                    46065.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_1",
        "query": "SELECT team_long_name FROM Team GROUP BY team_long_name HAVING MAX(id) = 35293;",
        "question": "Select team long name from team grouped by team long name with maximum id equal to 35293",
        "tables": [
            "sqlite_sequence",
            "Player_Attributes",
            "League",
            "Team_Attributes",
            "Player",
            "Team",
            "Country"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "team",
            "long",
            "name",
            "from",
            "team",
            "grouped",
            "by",
            "team",
            "long",
            "name",
            "with",
            "maximum",
            "id",
            "equal",
            "to",
            "35293"
        ],
        "query_toks": [
            "SELECT",
            "team_long_name",
            "FROM",
            "Team",
            "GROUP",
            "BY",
            "team_long_name",
            "HAVING",
            "MAX",
            "(",
            "id",
            ")",
            "=",
            "35293"
        ],
        "query_toks_no_value": [
            "select",
            "team_long_name",
            "from",
            "team",
            "group",
            "by",
            "team_long_name",
            "having",
            "max",
            "(",
            "id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__team__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__team.team_long_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__team.team_long_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__team.id__",
                            false
                        ],
                        null
                    ],
                    35293.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_1",
        "query": "SELECT name FROM Country GROUP BY name HAVING MAX(id) = 15722;",
        "question": "Select name from country grouped by name with maximum id equal to 15722",
        "tables": [
            "sqlite_sequence",
            "Player_Attributes",
            "League",
            "Team_Attributes",
            "Player",
            "Team",
            "Country"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "country",
            "grouped",
            "by",
            "name",
            "with",
            "maximum",
            "id",
            "equal",
            "to",
            "15722"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "Countr",
            "(",
            "Countr",
            ")",
            "GROUP",
            "BY",
            "name",
            "HAVING",
            "MAX",
            "(",
            "id",
            ")",
            "=",
            "15722"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "countr",
            "(",
            "countr",
            ")",
            "group",
            "by",
            "name",
            "having",
            "max",
            "(",
            "id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__country__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__country.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__country.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__country.id__",
                            false
                        ],
                        null
                    ],
                    15722.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT city FROM city GROUP BY city HAVING MIN(country_id) = 84;",
        "question": "Select city from city grouped by city with minimum country id equal to 84",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "city",
            "from",
            "city",
            "grouped",
            "by",
            "city",
            "with",
            "minimum",
            "country",
            "id",
            "equal",
            "to",
            "84"
        ],
        "query_toks": [
            "SELECT",
            "city",
            "FROM",
            "city",
            "GROUP",
            "BY",
            "city",
            "HAVING",
            "MIN",
            "(",
            "country_id",
            ")",
            "=",
            "84"
        ],
        "query_toks_no_value": [
            "select",
            "city",
            "from",
            "city",
            "group",
            "by",
            "city",
            "having",
            "min",
            "(",
            "country_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__city__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__city.city__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__city.city__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__city.country_id__",
                            false
                        ],
                        null
                    ],
                    84.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT special_features FROM film GROUP BY special_features HAVING MAX(film_id) = 645;",
        "question": "Select special features from film grouped by special features with maximum film id equal to 645",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "special",
            "features",
            "from",
            "film",
            "grouped",
            "by",
            "special",
            "features",
            "with",
            "maximum",
            "film",
            "id",
            "equal",
            "to",
            "645"
        ],
        "query_toks": [
            "SELECT",
            "special_features",
            "FROM",
            "film",
            "GROUP",
            "BY",
            "special_features",
            "HAVING",
            "MAX",
            "(",
            "film_id",
            ")",
            "=",
            "645"
        ],
        "query_toks_no_value": [
            "select",
            "special_features",
            "from",
            "film",
            "group",
            "by",
            "special_features",
            "having",
            "max",
            "(",
            "film_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__film__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__film.special_features__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__film.special_features__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__film.film_id__",
                            false
                        ],
                        null
                    ],
                    645.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT address2 FROM address GROUP BY address2 HAVING MIN(city_id) = 55;",
        "question": "Select address2 from address grouped by address2 with minimum city id equal to 55",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "address2",
            "from",
            "address",
            "grouped",
            "by",
            "address2",
            "with",
            "minimum",
            "city",
            "id",
            "equal",
            "to",
            "55"
        ],
        "query_toks": [
            "SELECT",
            "address2",
            "FROM",
            "address",
            "GROUP",
            "BY",
            "address2",
            "HAVING",
            "MIN",
            "(",
            "city_id",
            ")",
            "=",
            "55"
        ],
        "query_toks_no_value": [
            "select",
            "address2",
            "from",
            "address",
            "group",
            "by",
            "address2",
            "having",
            "min",
            "(",
            "city_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__address__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__address.address2__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__address.address2__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__address.city_id__",
                            false
                        ],
                        null
                    ],
                    55.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT name FROM category GROUP BY name HAVING MIN(category_id) = 12;",
        "question": "Select name from category grouped by name with minimum category id equal to 12",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "category",
            "grouped",
            "by",
            "name",
            "with",
            "minimum",
            "category",
            "id",
            "equal",
            "to",
            "12"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "category",
            "GROUP",
            "BY",
            "name",
            "HAVING",
            "MIN",
            "(",
            "category_id",
            ")",
            "=",
            "12"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "category",
            "group",
            "by",
            "name",
            "having",
            "min",
            "(",
            "category_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__category__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__category.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__category.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__category.category_id__",
                            false
                        ],
                        null
                    ],
                    12.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT last_name FROM actor GROUP BY last_name HAVING MIN(actor_id) = 161;",
        "question": "Select last name from actor grouped by last name with minimum actor id equal to 161",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "last",
            "name",
            "from",
            "actor",
            "grouped",
            "by",
            "last",
            "name",
            "with",
            "minimum",
            "actor",
            "id",
            "equal",
            "to",
            "161"
        ],
        "query_toks": [
            "SELECT",
            "last_name",
            "FROM",
            "actor",
            "GROUP",
            "BY",
            "last_name",
            "HAVING",
            "MIN",
            "(",
            "actor_id",
            ")",
            "=",
            "161"
        ],
        "query_toks_no_value": [
            "select",
            "last_name",
            "from",
            "actor",
            "group",
            "by",
            "last_name",
            "having",
            "min",
            "(",
            "actor_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__actor__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__actor.last_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__actor.last_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__actor.actor_id__",
                            false
                        ],
                        null
                    ],
                    161.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT last_name FROM customer GROUP BY last_name HAVING MAX(address_id) = 210;",
        "question": "Select last name from customer grouped by last name with maximum address id equal to 210",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "last",
            "name",
            "from",
            "customer",
            "grouped",
            "by",
            "last",
            "name",
            "with",
            "maximum",
            "address",
            "id",
            "equal",
            "to",
            "210"
        ],
        "query_toks": [
            "SELECT",
            "last_name",
            "FROM",
            "customer",
            "GROUP",
            "BY",
            "last_name",
            "HAVING",
            "MAX",
            "(",
            "address_id",
            ")",
            "=",
            "210"
        ],
        "query_toks_no_value": [
            "select",
            "last_name",
            "from",
            "customer",
            "group",
            "by",
            "last_name",
            "having",
            "max",
            "(",
            "address_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer.last_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customer.last_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__customer.address_id__",
                            false
                        ],
                        null
                    ],
                    210.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT country FROM country GROUP BY country HAVING MIN(country_id) = 63;",
        "question": "Select country from country grouped by country with minimum country id equal to 63",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "country",
            "from",
            "country",
            "grouped",
            "by",
            "country",
            "with",
            "minimum",
            "country",
            "id",
            "equal",
            "to",
            "63"
        ],
        "query_toks": [
            "SELECT",
            "countr",
            "(",
            "countr",
            ")",
            "FROM",
            "countr",
            "(",
            "countr",
            ")",
            "GROUP",
            "BY",
            "countr",
            "(",
            "countr",
            ")",
            "HAVING",
            "MIN",
            "(",
            "country_id",
            ")",
            "=",
            "63"
        ],
        "query_toks_no_value": [
            "select",
            "countr",
            "(",
            "countr",
            ")",
            "from",
            "countr",
            "(",
            "countr",
            ")",
            "group",
            "by",
            "countr",
            "(",
            "countr",
            ")",
            "having",
            "min",
            "(",
            "country_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__country__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__country.country__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__country.country__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__country.country_id__",
                            false
                        ],
                        null
                    ],
                    63.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "real_estate_properties",
        "query": "SELECT property_feature_description FROM Other_Property_Features GROUP BY property_feature_description HAVING MAX(property_id) = 4;",
        "question": "Select property feature description from other property features grouped by property feature description with maximum property id equal to 4",
        "tables": [
            "Ref_Feature_Types",
            "Ref_Property_Types",
            "Other_Property_Features",
            "Properties",
            "Other_Available_Features"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "property",
            "feature",
            "description",
            "from",
            "other",
            "property",
            "features",
            "grouped",
            "by",
            "property",
            "feature",
            "description",
            "with",
            "maximum",
            "property",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "property_feature_description",
            "FROM",
            "Other_Property_Features",
            "GROUP",
            "BY",
            "property_feature_description",
            "HAVING",
            "MAX",
            "(",
            "property_id",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "property_feature_description",
            "from",
            "other_property_features",
            "group",
            "by",
            "property_feature_description",
            "having",
            "max",
            "(",
            "property_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__other_property_features__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__other_property_features.property_feature_description__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__other_property_features.property_feature_description__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__other_property_features.property_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "real_estate_properties",
        "query": "SELECT property_address FROM Properties GROUP BY property_address HAVING MIN(vendor_requested_price) = 2198735.095;",
        "question": "Select property address from properties grouped by property address with minimum vendor requested price equal to 2198735.095",
        "tables": [
            "Ref_Feature_Types",
            "Ref_Property_Types",
            "Other_Property_Features",
            "Properties",
            "Other_Available_Features"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "property",
            "address",
            "from",
            "properties",
            "grouped",
            "by",
            "property",
            "address",
            "with",
            "minimum",
            "vendor",
            "requested",
            "price",
            "equal",
            "to",
            "2198735.095"
        ],
        "query_toks": [
            "SELECT",
            "property_address",
            "FROM",
            "Properties",
            "GROUP",
            "BY",
            "property_address",
            "HAVING",
            "MIN",
            "(",
            "vendor_requested_price",
            ")",
            "=",
            "2198735.095"
        ],
        "query_toks_no_value": [
            "select",
            "property_address",
            "from",
            "properties",
            "group",
            "by",
            "property_address",
            "having",
            "min",
            "(",
            "vendor_requested_price",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__properties__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__properties.property_address__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__properties.property_address__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__properties.vendor_requested_price__",
                            false
                        ],
                        null
                    ],
                    2198735.095,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "real_estate_properties",
        "query": "SELECT feature_description FROM Other_Available_Features GROUP BY feature_description HAVING MAX(feature_id) = 4;",
        "question": "Select feature description from other available features grouped by feature description with maximum feature id equal to 4",
        "tables": [
            "Ref_Feature_Types",
            "Ref_Property_Types",
            "Other_Property_Features",
            "Properties",
            "Other_Available_Features"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "feature",
            "description",
            "from",
            "other",
            "available",
            "features",
            "grouped",
            "by",
            "feature",
            "description",
            "with",
            "maximum",
            "feature",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "feature_description",
            "FROM",
            "Other_Available_Features",
            "GROUP",
            "BY",
            "feature_description",
            "HAVING",
            "MAX",
            "(",
            "feature_id",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "feature_description",
            "from",
            "other_available_features",
            "group",
            "by",
            "feature_description",
            "having",
            "max",
            "(",
            "feature_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__other_available_features__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__other_available_features.feature_description__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__other_available_features.feature_description__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__other_available_features.feature_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_3",
        "query": "SELECT Room FROM Department GROUP BY Room HAVING MIN(DPhone) = 7347;",
        "question": "Select room from department grouped by room with minimum department phone equal to 7347",
        "tables": [
            "Minor_in",
            "Department",
            "Student",
            "Enrolled_in",
            "Gradeconversion",
            "Member_of",
            "Faculty",
            "Course"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "room",
            "from",
            "department",
            "grouped",
            "by",
            "room",
            "with",
            "minimum",
            "department",
            "phone",
            "equal",
            "to",
            "7347"
        ],
        "query_toks": [
            "SELECT",
            "Room",
            "FROM",
            "Department",
            "GROUP",
            "BY",
            "Room",
            "HAVING",
            "MIN",
            "(",
            "DPhone",
            ")",
            "=",
            "7347"
        ],
        "query_toks_no_value": [
            "select",
            "room",
            "from",
            "department",
            "group",
            "by",
            "room",
            "having",
            "min",
            "(",
            "dphone",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__department__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__department.room__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__department.room__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__department.dphone__",
                            false
                        ],
                        null
                    ],
                    7347.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_3",
        "query": "SELECT LName FROM Student GROUP BY LName HAVING MAX(Age) = 21;",
        "question": "Select last name from student grouped by last name with maximum age equal to 21",
        "tables": [
            "Minor_in",
            "Department",
            "Student",
            "Enrolled_in",
            "Gradeconversion",
            "Member_of",
            "Faculty",
            "Course"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "last",
            "name",
            "from",
            "student",
            "grouped",
            "by",
            "last",
            "name",
            "with",
            "maximum",
            "age",
            "equal",
            "to",
            "21"
        ],
        "query_toks": [
            "SELECT",
            "LName",
            "FROM",
            "Student",
            "GROUP",
            "BY",
            "LName",
            "HAVING",
            "MAX",
            "(",
            "Age",
            ")",
            "=",
            "21"
        ],
        "query_toks_no_value": [
            "select",
            "lname",
            "from",
            "student",
            "group",
            "by",
            "lname",
            "having",
            "max",
            "(",
            "age",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.lname__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__student.lname__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__student.age__",
                            false
                        ],
                        null
                    ],
                    21.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_3",
        "query": "SELECT CID FROM Enrolled_in GROUP BY CID HAVING MIN(StuID) = 1033;",
        "question": "Select course id from enrolled in grouped by course id with minimum student id equal to 1033",
        "tables": [
            "Minor_in",
            "Department",
            "Student",
            "Enrolled_in",
            "Gradeconversion",
            "Member_of",
            "Faculty",
            "Course"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "course",
            "id",
            "from",
            "enrolled",
            "in",
            "grouped",
            "by",
            "course",
            "id",
            "with",
            "minimum",
            "student",
            "id",
            "equal",
            "to",
            "1033"
        ],
        "query_toks": [
            "SELECT",
            "CID",
            "FROM",
            "Enrolled_in",
            "GROUP",
            "BY",
            "CID",
            "HAVING",
            "MIN",
            "(",
            "StuID",
            ")",
            "=",
            "1033"
        ],
        "query_toks_no_value": [
            "select",
            "cid",
            "from",
            "enrolled_in",
            "group",
            "by",
            "cid",
            "having",
            "min",
            "(",
            "stuid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__enrolled_in__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__enrolled_in.cid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__enrolled_in.cid__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__enrolled_in.stuid__",
                            false
                        ],
                        null
                    ],
                    1033.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_3",
        "query": "SELECT lettergrade FROM Gradeconversion GROUP BY lettergrade HAVING MAX(gradepoint) = 2.0;",
        "question": "Select letter grade from grade conversion grouped by letter grade with maximum grade point equal to 2.0",
        "tables": [
            "Minor_in",
            "Department",
            "Student",
            "Enrolled_in",
            "Gradeconversion",
            "Member_of",
            "Faculty",
            "Course"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "letter",
            "grade",
            "from",
            "grade",
            "conversion",
            "grouped",
            "by",
            "letter",
            "grade",
            "with",
            "maximum",
            "grade",
            "point",
            "equal",
            "to",
            "2.0"
        ],
        "query_toks": [
            "SELECT",
            "lettergrade",
            "FROM",
            "Gradeconversion",
            "GROUP",
            "BY",
            "lettergrade",
            "HAVING",
            "MAX",
            "(",
            "gradepoint",
            ")",
            "=",
            "2.0"
        ],
        "query_toks_no_value": [
            "select",
            "lettergrade",
            "from",
            "gradeconversion",
            "group",
            "by",
            "lettergrade",
            "having",
            "max",
            "(",
            "gradepoint",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__gradeconversion__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__gradeconversion.lettergrade__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__gradeconversion.lettergrade__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__gradeconversion.gradepoint__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_3",
        "query": "SELECT Appt_Type FROM Member_of GROUP BY Appt_Type HAVING MAX(DNO) = 50;",
        "question": "Select appt type from member of grouped by appt type with maximum department number equal to 50",
        "tables": [
            "Minor_in",
            "Department",
            "Student",
            "Enrolled_in",
            "Gradeconversion",
            "Member_of",
            "Faculty",
            "Course"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "appt",
            "type",
            "from",
            "member",
            "of",
            "grouped",
            "by",
            "appt",
            "type",
            "with",
            "maximum",
            "department",
            "number",
            "equal",
            "to",
            "50"
        ],
        "query_toks": [
            "SELECT",
            "Appt_Type",
            "FROM",
            "Member_of",
            "GROUP",
            "BY",
            "Appt_Type",
            "HAVING",
            "MAX",
            "(",
            "DNO",
            ")",
            "=",
            "50"
        ],
        "query_toks_no_value": [
            "select",
            "appt_type",
            "from",
            "member_of",
            "group",
            "by",
            "appt_type",
            "having",
            "max",
            "(",
            "dno",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__member_of__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__member_of.appt_type__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__member_of.appt_type__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__member_of.dno__",
                            false
                        ],
                        null
                    ],
                    50.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_3",
        "query": "SELECT Sex FROM Faculty GROUP BY Sex HAVING MAX(Phone) = 1914;",
        "question": "Select sex from faculty grouped by sex with maximum phone equal to 1914",
        "tables": [
            "Minor_in",
            "Department",
            "Student",
            "Enrolled_in",
            "Gradeconversion",
            "Member_of",
            "Faculty",
            "Course"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "sex",
            "from",
            "faculty",
            "grouped",
            "by",
            "sex",
            "with",
            "maximum",
            "phone",
            "equal",
            "to",
            "1914"
        ],
        "query_toks": [
            "SELECT",
            "Sex",
            "FROM",
            "Faculty",
            "GROUP",
            "BY",
            "Sex",
            "HAVING",
            "MAX",
            "(",
            "Phone",
            ")",
            "=",
            "1914"
        ],
        "query_toks_no_value": [
            "select",
            "sex",
            "from",
            "faculty",
            "group",
            "by",
            "sex",
            "having",
            "max",
            "(",
            "phone",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__faculty__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__faculty.sex__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__faculty.sex__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__faculty.phone__",
                            false
                        ],
                        null
                    ],
                    1914.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_3",
        "query": "SELECT CID FROM Course GROUP BY CID HAVING MIN(DNO) = 600;",
        "question": "Select course id from course grouped by course id with minimum department number equal to 600",
        "tables": [
            "Minor_in",
            "Department",
            "Student",
            "Enrolled_in",
            "Gradeconversion",
            "Member_of",
            "Faculty",
            "Course"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "course",
            "id",
            "from",
            "course",
            "grouped",
            "by",
            "course",
            "id",
            "with",
            "minimum",
            "department",
            "number",
            "equal",
            "to",
            "600"
        ],
        "query_toks": [
            "SELECT",
            "CID",
            "FROM",
            "Course",
            "GROUP",
            "BY",
            "CID",
            "HAVING",
            "MIN",
            "(",
            "DNO",
            ")",
            "=",
            "600"
        ],
        "query_toks_no_value": [
            "select",
            "cid",
            "from",
            "course",
            "group",
            "by",
            "cid",
            "having",
            "min",
            "(",
            "dno",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__course__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__course.cid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__course.cid__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__course.dno__",
                            false
                        ],
                        null
                    ],
                    600.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Name FROM teacher GROUP BY Name HAVING MAX(Teacher_ID) = 3;",
        "question": "Select name from teacher grouped by name with maximum teacher id equal to 3",
        "tables": [
            "course_arrange",
            "teacher",
            "course"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "teacher",
            "grouped",
            "by",
            "name",
            "with",
            "maximum",
            "teacher",
            "id",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "teacher",
            "GROUP",
            "BY",
            "Name",
            "HAVING",
            "MAX",
            "(",
            "Teacher_ID",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "teacher",
            "group",
            "by",
            "name",
            "having",
            "max",
            "(",
            "teacher_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__teacher__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__teacher.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__teacher.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__teacher.teacher_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Course FROM course GROUP BY Course HAVING MIN(Course_ID) = 4;",
        "question": "Select course from course grouped by course with minimum course id equal to 4",
        "tables": [
            "course_arrange",
            "teacher",
            "course"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "course",
            "from",
            "course",
            "grouped",
            "by",
            "course",
            "with",
            "minimum",
            "course",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Course",
            "FROM",
            "course",
            "GROUP",
            "BY",
            "Course",
            "HAVING",
            "MIN",
            "(",
            "Course_ID",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "course",
            "from",
            "course",
            "group",
            "by",
            "course",
            "having",
            "min",
            "(",
            "course_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__course__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__course.course__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__course.course__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__course.course_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "roller_coaster",
        "query": "SELECT Opened FROM roller_coaster GROUP BY Opened HAVING MIN(Roller_Coaster_ID) = 2;",
        "question": "Select opened from roller coaster grouped by opened with minimum roller coaster id equal to 2",
        "tables": [
            "roller_coaster",
            "country"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "opened",
            "from",
            "roller",
            "coaster",
            "grouped",
            "by",
            "opened",
            "with",
            "minimum",
            "roller",
            "coaster",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Opened",
            "FROM",
            "roller_coaster",
            "GROUP",
            "BY",
            "Opened",
            "HAVING",
            "MIN",
            "(",
            "Roller_Coaster_ID",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "opened",
            "from",
            "roller_coaster",
            "group",
            "by",
            "opened",
            "having",
            "min",
            "(",
            "roller_coaster_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__roller_coaster__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__roller_coaster.opened__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__roller_coaster.opened__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__roller_coaster.roller_coaster_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "roller_coaster",
        "query": "SELECT Name FROM country GROUP BY Name HAVING MIN(Population) = 8206524;",
        "question": "Select name from country grouped by name with minimum population equal to 8206524",
        "tables": [
            "roller_coaster",
            "country"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "country",
            "grouped",
            "by",
            "name",
            "with",
            "minimum",
            "population",
            "equal",
            "to",
            "8206524"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "countr",
            "(",
            "countr",
            ")",
            "GROUP",
            "BY",
            "Name",
            "HAVING",
            "MIN",
            "(",
            "Population",
            ")",
            "=",
            "8206524"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "countr",
            "(",
            "countr",
            ")",
            "group",
            "by",
            "name",
            "having",
            "min",
            "(",
            "population",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__country__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__country.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__country.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__country.population__",
                            false
                        ],
                        null
                    ],
                    8206524.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT order_status_code FROM Actual_Orders GROUP BY order_status_code HAVING MIN(actual_order_id) = 10;",
        "question": "Select order status code from actual orders grouped by order status code with minimum actual order id equal to 10",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "order",
            "status",
            "code",
            "from",
            "actual",
            "orders",
            "grouped",
            "by",
            "order",
            "status",
            "code",
            "with",
            "minimum",
            "actual",
            "order",
            "id",
            "equal",
            "to",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "order_status_code",
            "FROM",
            "Actual_Orders",
            "GROUP",
            "BY",
            "order_status_code",
            "HAVING",
            "MIN",
            "(",
            "actual_order_id",
            ")",
            "=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "order_status_code",
            "from",
            "actual_orders",
            "group",
            "by",
            "order_status_code",
            "having",
            "min",
            "(",
            "actual_order_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__actual_orders__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__actual_orders.order_status_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__actual_orders.order_status_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__actual_orders.actual_order_id__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT product_description FROM Products GROUP BY product_description HAVING MIN(product_price) = 7111.68;",
        "question": "Select product description from products grouped by product description with minimum product price equal to 7111.68",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "product",
            "description",
            "from",
            "products",
            "grouped",
            "by",
            "product",
            "description",
            "with",
            "minimum",
            "product",
            "price",
            "equal",
            "to",
            "7111.68"
        ],
        "query_toks": [
            "SELECT",
            "product_description",
            "FROM",
            "Products",
            "GROUP",
            "BY",
            "product_description",
            "HAVING",
            "MIN",
            "(",
            "product_price",
            ")",
            "=",
            "7111.68"
        ],
        "query_toks_no_value": [
            "select",
            "product_description",
            "from",
            "products",
            "group",
            "by",
            "product_description",
            "having",
            "min",
            "(",
            "product_price",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products.product_description__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__products.product_description__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__products.product_price__",
                            false
                        ],
                        null
                    ],
                    7111.68,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT other_route_details FROM Delivery_Routes GROUP BY other_route_details HAVING MIN(route_id) = 2;",
        "question": "Select other route details from delivery routes grouped by other route details with minimum route id equal to 2",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "other",
            "route",
            "details",
            "from",
            "delivery",
            "routes",
            "grouped",
            "by",
            "other",
            "route",
            "details",
            "with",
            "minimum",
            "route",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "other_route_details",
            "FROM",
            "Delivery_Routes",
            "GROUP",
            "BY",
            "other_route_details",
            "HAVING",
            "MIN",
            "(",
            "route_id",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "other_route_details",
            "from",
            "delivery_routes",
            "group",
            "by",
            "other_route_details",
            "having",
            "min",
            "(",
            "route_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__delivery_routes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__delivery_routes.other_route_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__delivery_routes.other_route_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__delivery_routes.route_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT address_details FROM Addresses GROUP BY address_details HAVING MIN(address_id) = 10;",
        "question": "Select address details from addresses grouped by address details with minimum address id equal to 10",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "address",
            "details",
            "from",
            "addresses",
            "grouped",
            "by",
            "address",
            "details",
            "with",
            "minimum",
            "address",
            "id",
            "equal",
            "to",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "address_details",
            "FROM",
            "Addresses",
            "GROUP",
            "BY",
            "address_details",
            "HAVING",
            "MIN",
            "(",
            "address_id",
            ")",
            "=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "address_details",
            "from",
            "addresses",
            "group",
            "by",
            "address_details",
            "having",
            "min",
            "(",
            "address_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__addresses.address_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__addresses.address_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__addresses.address_id__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT location_code FROM Delivery_Route_Locations GROUP BY location_code HAVING MAX(location_address_id) = 2;",
        "question": "Select location code from delivery route locations grouped by location code with maximum location address id equal to 2",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "location",
            "code",
            "from",
            "delivery",
            "route",
            "locations",
            "grouped",
            "by",
            "location",
            "code",
            "with",
            "maximum",
            "location",
            "address",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "location_code",
            "FROM",
            "Delivery_Route_Locations",
            "GROUP",
            "BY",
            "location_code",
            "HAVING",
            "MAX",
            "(",
            "location_address_id",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "location_code",
            "from",
            "delivery_route_locations",
            "group",
            "by",
            "location_code",
            "having",
            "max",
            "(",
            "location_address_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__delivery_route_locations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__delivery_route_locations.location_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__delivery_route_locations.location_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__delivery_route_locations.location_address_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT address_type FROM Customer_Addresses GROUP BY address_type HAVING MAX(address_id) = 6;",
        "question": "Select address type from customer addresses grouped by address type with maximum address id equal to 6",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "address",
            "type",
            "from",
            "customer",
            "addresses",
            "grouped",
            "by",
            "address",
            "type",
            "with",
            "maximum",
            "address",
            "id",
            "equal",
            "to",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "address_type",
            "FROM",
            "Customer_Addresses",
            "GROUP",
            "BY",
            "address_type",
            "HAVING",
            "MAX",
            "(",
            "address_id",
            ")",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "address_type",
            "from",
            "customer_addresses",
            "group",
            "by",
            "address_type",
            "having",
            "max",
            "(",
            "address_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_addresses.address_type__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customer_addresses.address_type__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__customer_addresses.address_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT customer_name FROM Customers GROUP BY customer_name HAVING MAX(customer_id) = 8;",
        "question": "Select customer name from customers grouped by customer name with maximum customer id equal to 8",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "customer",
            "name",
            "from",
            "customers",
            "grouped",
            "by",
            "customer",
            "name",
            "with",
            "maximum",
            "customer",
            "id",
            "equal",
            "to",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "customer_name",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "customer_name",
            "HAVING",
            "MAX",
            "(",
            "customer_id",
            ")",
            "=",
            "8"
        ],
        "query_toks_no_value": [
            "select",
            "customer_name",
            "from",
            "customers",
            "group",
            "by",
            "customer_name",
            "having",
            "max",
            "(",
            "customer_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customers.customer_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__customers.customer_id__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT location_code FROM Order_Deliveries GROUP BY location_code HAVING MAX(driver_employee_id) = 11;",
        "question": "Select location code from order deliveries grouped by location code with maximum driver employee id equal to 11",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "location",
            "code",
            "from",
            "order",
            "deliveries",
            "grouped",
            "by",
            "location",
            "code",
            "with",
            "maximum",
            "driver",
            "employee",
            "id",
            "equal",
            "to",
            "11"
        ],
        "query_toks": [
            "SELECT",
            "location_code",
            "FROM",
            "Order_Deliveries",
            "GROUP",
            "BY",
            "location_code",
            "HAVING",
            "MAX",
            "(",
            "driver_employee_id",
            ")",
            "=",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "location_code",
            "from",
            "order_deliveries",
            "group",
            "by",
            "location_code",
            "having",
            "max",
            "(",
            "driver_employee_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__order_deliveries__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__order_deliveries.location_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__order_deliveries.location_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__order_deliveries.driver_employee_id__",
                            false
                        ],
                        null
                    ],
                    11.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT truck_licence_number FROM Trucks GROUP BY truck_licence_number HAVING MAX(truck_id) = 1;",
        "question": "Select truck licence number from trucks grouped by truck licence number with maximum truck id equal to 1",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "truck",
            "licence",
            "number",
            "from",
            "trucks",
            "grouped",
            "by",
            "truck",
            "licence",
            "number",
            "with",
            "maximum",
            "truck",
            "id",
            "equal",
            "to",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "truck_licence_number",
            "FROM",
            "Trucks",
            "GROUP",
            "BY",
            "truck_licence_number",
            "HAVING",
            "MAX",
            "(",
            "truck_id",
            ")",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "truck_licence_number",
            "from",
            "trucks",
            "group",
            "by",
            "truck_licence_number",
            "having",
            "max",
            "(",
            "truck_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__trucks__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__trucks.truck_licence_number__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__trucks.truck_licence_number__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__trucks.truck_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT employee_phone FROM Employees GROUP BY employee_phone HAVING MIN(employee_address_id) = 5;",
        "question": "Select employee phone from employees grouped by employee phone with minimum employee address id equal to 5",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "employee",
            "phone",
            "from",
            "employees",
            "grouped",
            "by",
            "employee",
            "phone",
            "with",
            "minimum",
            "employee",
            "address",
            "id",
            "equal",
            "to",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "employee_phone",
            "FROM",
            "Employees",
            "GROUP",
            "BY",
            "employee_phone",
            "HAVING",
            "MIN",
            "(",
            "employee_address_id",
            ")",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "employee_phone",
            "from",
            "employees",
            "group",
            "by",
            "employee_phone",
            "having",
            "min",
            "(",
            "employee_address_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__employees__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__employees.employee_phone__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__employees.employee_phone__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__employees.employee_address_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "game_injury",
        "query": "SELECT Number_of_matches FROM injury_accident GROUP BY Number_of_matches HAVING MAX(id) = 11;",
        "question": "Select number of matches from injury accident grouped by number of matches with maximum id equal to 11",
        "tables": [
            "injury_accident",
            "stadium",
            "game"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "number",
            "of",
            "matches",
            "from",
            "injury",
            "accident",
            "grouped",
            "by",
            "number",
            "of",
            "matches",
            "with",
            "maximum",
            "id",
            "equal",
            "to",
            "11"
        ],
        "query_toks": [
            "SELECT",
            "Number_of_matches",
            "FROM",
            "injury_accident",
            "GROUP",
            "BY",
            "Number_of_matches",
            "HAVING",
            "MAX",
            "(",
            "id",
            ")",
            "=",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "number_of_matches",
            "from",
            "injury_accident",
            "group",
            "by",
            "number_of_matches",
            "having",
            "max",
            "(",
            "id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__injury_accident__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__injury_accident.number_of_matches__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__injury_accident.number_of_matches__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__injury_accident.id__",
                            false
                        ],
                        null
                    ],
                    11.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "game_injury",
        "query": "SELECT name FROM stadium GROUP BY name HAVING MIN(Home_Games) = 8;",
        "question": "Select name from stadium grouped by name with minimum home games equal to 8",
        "tables": [
            "injury_accident",
            "stadium",
            "game"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "stadium",
            "grouped",
            "by",
            "name",
            "with",
            "minimum",
            "home",
            "games",
            "equal",
            "to",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "stadium",
            "GROUP",
            "BY",
            "name",
            "HAVING",
            "MIN",
            "(",
            "Home_Games",
            ")",
            "=",
            "8"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "stadium",
            "group",
            "by",
            "name",
            "having",
            "min",
            "(",
            "home_games",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__stadium__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__stadium.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__stadium.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__stadium.home_games__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "game_injury",
        "query": "SELECT Away_team FROM game GROUP BY Away_team HAVING MIN(id) = 1;",
        "question": "Select away team from game grouped by away team with minimum id equal to 1",
        "tables": [
            "injury_accident",
            "stadium",
            "game"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "away",
            "team",
            "from",
            "game",
            "grouped",
            "by",
            "away",
            "team",
            "with",
            "minimum",
            "id",
            "equal",
            "to",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Away_team",
            "FROM",
            "game",
            "GROUP",
            "BY",
            "Away_team",
            "HAVING",
            "MIN",
            "(",
            "id",
            ")",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "away_team",
            "from",
            "game",
            "group",
            "by",
            "away_team",
            "having",
            "min",
            "(",
            "id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__game__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__game.away_team__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__game.away_team__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__game.id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "school_finance",
        "query": "SELECT Budget_invested_percent FROM budget GROUP BY Budget_invested_percent HAVING MAX(total_budget_percent_invested) = 2.7;",
        "question": "Select budget invested percent from budget grouped by budget invested percent with maximum total budget percent invested equal to 2.7",
        "tables": [
            "budget",
            "School",
            "endowment"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "budget",
            "invested",
            "percent",
            "from",
            "budget",
            "grouped",
            "by",
            "budget",
            "invested",
            "percent",
            "with",
            "maximum",
            "total",
            "budget",
            "percent",
            "invested",
            "equal",
            "to",
            "2.7"
        ],
        "query_toks": [
            "SELECT",
            "Budget_invested_percent",
            "FROM",
            "budget",
            "GROUP",
            "BY",
            "Budget_invested_percent",
            "HAVING",
            "MAX",
            "(",
            "total_budget_percent_invested",
            ")",
            "=",
            "2.7"
        ],
        "query_toks_no_value": [
            "select",
            "budget_invested_percent",
            "from",
            "budget",
            "group",
            "by",
            "budget_invested_percent",
            "having",
            "max",
            "(",
            "total_budget_percent_invested",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__budget__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__budget.budget_invested_percent__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__budget.budget_invested_percent__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__budget.total_budget_percent_invested__",
                            false
                        ],
                        null
                    ],
                    2.7,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "school_finance",
        "query": "SELECT IHSAA_Football_Class FROM School GROUP BY IHSAA_Football_Class HAVING MIN(Enrollment) = 852;",
        "question": "Select ihsaa football class from school grouped by ihsaa football class with minimum enrollment equal to 852",
        "tables": [
            "budget",
            "School",
            "endowment"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "ihsaa",
            "football",
            "class",
            "from",
            "school",
            "grouped",
            "by",
            "ihsaa",
            "football",
            "class",
            "with",
            "minimum",
            "enrollment",
            "equal",
            "to",
            "852"
        ],
        "query_toks": [
            "SELECT",
            "IHSAA_Football_Class",
            "FROM",
            "School",
            "GROUP",
            "BY",
            "IHSAA_Football_Class",
            "HAVING",
            "MIN",
            "(",
            "Enrollment",
            ")",
            "=",
            "852"
        ],
        "query_toks_no_value": [
            "select",
            "ihsaa_football_class",
            "from",
            "school",
            "group",
            "by",
            "ihsaa_football_class",
            "having",
            "min",
            "(",
            "enrollment",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__school__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__school.ihsaa_football_class__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__school.ihsaa_football_class__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__school.enrollment__",
                            false
                        ],
                        null
                    ],
                    852.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "school_finance",
        "query": "SELECT donator_name FROM endowment GROUP BY donator_name HAVING MAX(amount) = 9.51;",
        "question": "Select donator name from endowment grouped by donator name with maximum amount equal to 9.51",
        "tables": [
            "budget",
            "School",
            "endowment"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "donator",
            "name",
            "from",
            "endowment",
            "grouped",
            "by",
            "donator",
            "name",
            "with",
            "maximum",
            "amount",
            "equal",
            "to",
            "9.51"
        ],
        "query_toks": [
            "SELECT",
            "donator_name",
            "FROM",
            "endowment",
            "GROUP",
            "BY",
            "donator_name",
            "HAVING",
            "MAX",
            "(",
            "amount",
            ")",
            "=",
            "9.51"
        ],
        "query_toks_no_value": [
            "select",
            "donator_name",
            "from",
            "endowment",
            "group",
            "by",
            "donator_name",
            "having",
            "max",
            "(",
            "amount",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__endowment__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__endowment.donator_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__endowment.donator_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__endowment.amount__",
                            false
                        ],
                        null
                    ],
                    9.51,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_1",
        "query": "SELECT contestant_name FROM CONTESTANTS GROUP BY contestant_name HAVING MAX(contestant_number) = 5;",
        "question": "Select contestant name from contestants grouped by contestant name with maximum contestant number equal to 5",
        "tables": [
            "CONTESTANTS",
            "VOTES",
            "AREA_CODE_STATE"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "contestant",
            "name",
            "from",
            "contestants",
            "grouped",
            "by",
            "contestant",
            "name",
            "with",
            "maximum",
            "contestant",
            "number",
            "equal",
            "to",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "contestant_name",
            "FROM",
            "CONTESTANTS",
            "GROUP",
            "BY",
            "contestant_name",
            "HAVING",
            "MAX",
            "(",
            "contestant_number",
            ")",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "contestant_name",
            "from",
            "contestants",
            "group",
            "by",
            "contestant_name",
            "having",
            "max",
            "(",
            "contestant_number",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__contestants__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__contestants.contestant_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__contestants.contestant_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__contestants.contestant_number__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_1",
        "query": "SELECT state FROM VOTES GROUP BY state HAVING MIN(vote_id) = 2;",
        "question": "Select state from votes grouped by state with minimum vote id equal to 2",
        "tables": [
            "CONTESTANTS",
            "VOTES",
            "AREA_CODE_STATE"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "state",
            "from",
            "votes",
            "grouped",
            "by",
            "state",
            "with",
            "minimum",
            "vote",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "state",
            "FROM",
            "VOTES",
            "GROUP",
            "BY",
            "state",
            "HAVING",
            "MIN",
            "(",
            "vote_id",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "state",
            "from",
            "votes",
            "group",
            "by",
            "state",
            "having",
            "min",
            "(",
            "vote_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__votes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__votes.state__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__votes.state__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__votes.vote_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_1",
        "query": "SELECT state FROM AREA_CODE_STATE GROUP BY state HAVING MIN(area_code) = 313;",
        "question": "Select state from area code state grouped by state with minimum area code equal to 313",
        "tables": [
            "CONTESTANTS",
            "VOTES",
            "AREA_CODE_STATE"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "state",
            "from",
            "area",
            "code",
            "state",
            "grouped",
            "by",
            "state",
            "with",
            "minimum",
            "area",
            "code",
            "equal",
            "to",
            "313"
        ],
        "query_toks": [
            "SELECT",
            "state",
            "FROM",
            "AREA_CODE_STATE",
            "GROUP",
            "BY",
            "state",
            "HAVING",
            "MIN",
            "(",
            "area_code",
            ")",
            "=",
            "313"
        ],
        "query_toks_no_value": [
            "select",
            "state",
            "from",
            "area_code_state",
            "group",
            "by",
            "state",
            "having",
            "min",
            "(",
            "area_code",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__area_code_state__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__area_code_state.state__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__area_code_state.state__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__area_code_state.area_code__",
                            false
                        ],
                        null
                    ],
                    313.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "match_season",
        "query": "SELECT Years_Played FROM player GROUP BY Years_Played HAVING MAX(Team) = 2;",
        "question": "Select years played from player grouped by years played with maximum team equal to 2",
        "tables": [
            "player",
            "match_season",
            "team",
            "country"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "years",
            "played",
            "from",
            "player",
            "grouped",
            "by",
            "years",
            "played",
            "with",
            "maximum",
            "team",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Years_Played",
            "FROM",
            "player",
            "GROUP",
            "BY",
            "Years_Played",
            "HAVING",
            "MAX",
            "(",
            "Team",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "years_played",
            "from",
            "player",
            "group",
            "by",
            "years_played",
            "having",
            "max",
            "(",
            "team",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__player__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__player.years_played__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__player.years_played__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__player.team__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "match_season",
        "query": "SELECT Player FROM match_season GROUP BY Player HAVING MAX(Country) = 1;",
        "question": "Select player from match season grouped by player with maximum country equal to 1",
        "tables": [
            "player",
            "match_season",
            "team",
            "country"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "player",
            "from",
            "match",
            "season",
            "grouped",
            "by",
            "player",
            "with",
            "maximum",
            "country",
            "equal",
            "to",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Player",
            "FROM",
            "match_season",
            "GROUP",
            "BY",
            "Player",
            "HAVING",
            "MAX",
            "(",
            "Country",
            ")",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "player",
            "from",
            "match_season",
            "group",
            "by",
            "player",
            "having",
            "max",
            "(",
            "country",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__match_season__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__match_season.player__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__match_season.player__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__match_season.country__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "match_season",
        "query": "SELECT Name FROM team GROUP BY Name HAVING MAX(Team_id) = 2;",
        "question": "Select name from team grouped by name with maximum team id equal to 2",
        "tables": [
            "player",
            "match_season",
            "team",
            "country"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "team",
            "grouped",
            "by",
            "name",
            "with",
            "maximum",
            "team",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "team",
            "GROUP",
            "BY",
            "Name",
            "HAVING",
            "MAX",
            "(",
            "Team_id",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "team",
            "group",
            "by",
            "name",
            "having",
            "max",
            "(",
            "team_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__team__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__team.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__team.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__team.team_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "match_season",
        "query": "SELECT Capital FROM country GROUP BY Capital HAVING MAX(Country_id) = 4;",
        "question": "Select capital from country grouped by capital with maximum country id equal to 4",
        "tables": [
            "player",
            "match_season",
            "team",
            "country"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "capital",
            "from",
            "country",
            "grouped",
            "by",
            "capital",
            "with",
            "maximum",
            "country",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Capital",
            "FROM",
            "countr",
            "(",
            "countr",
            ")",
            "GROUP",
            "BY",
            "Capital",
            "HAVING",
            "MAX",
            "(",
            "Country_id",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "capital",
            "from",
            "countr",
            "(",
            "countr",
            ")",
            "group",
            "by",
            "capital",
            "having",
            "max",
            "(",
            "country_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__country__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__country.capital__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__country.capital__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__country.country_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "small_bank_1",
        "query": "SELECT name FROM ACCOUNTS GROUP BY name HAVING MAX(custid) = 7;",
        "question": "Select name from accounts grouped by name with maximum customer id equal to 7",
        "tables": [
            "SAVINGS",
            "CHECKING",
            "ACCOUNTS"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "accounts",
            "grouped",
            "by",
            "name",
            "with",
            "maximum",
            "customer",
            "id",
            "equal",
            "to",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "ACCOUNTS",
            "GROUP",
            "BY",
            "name",
            "HAVING",
            "MAX",
            "(",
            "custid",
            ")",
            "=",
            "7"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "accounts",
            "group",
            "by",
            "name",
            "having",
            "max",
            "(",
            "custid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__accounts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__accounts.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__accounts.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__accounts.custid__",
                            false
                        ],
                        null
                    ],
                    7.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "query": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING MAX(best_of) = 3;",
        "question": "Select tourney name from matches grouped by tourney name with maximum best of equal to 3",
        "tables": [
            "matches",
            "players",
            "rankings"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "tourney",
            "name",
            "from",
            "matches",
            "grouped",
            "by",
            "tourney",
            "name",
            "with",
            "maximum",
            "best",
            "of",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "tourney_name",
            "FROM",
            "matches",
            "GROUP",
            "BY",
            "tourney_name",
            "HAVING",
            "MAX",
            "(",
            "best_of",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "tourney_name",
            "from",
            "matches",
            "group",
            "by",
            "tourney_name",
            "having",
            "max",
            "(",
            "best_of",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__matches__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__matches.tourney_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__matches.tourney_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__matches.best_of__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "query": "SELECT country_code FROM players GROUP BY country_code HAVING MIN(player_id) = 205360;",
        "question": "Select country code from players grouped by country code with minimum player id equal to 205360",
        "tables": [
            "matches",
            "players",
            "rankings"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "country",
            "code",
            "from",
            "players",
            "grouped",
            "by",
            "country",
            "code",
            "with",
            "minimum",
            "player",
            "id",
            "equal",
            "to",
            "205360"
        ],
        "query_toks": [
            "SELECT",
            "country_cod",
            "(",
            "country_cod",
            ")",
            "FROM",
            "players",
            "GROUP",
            "BY",
            "country_cod",
            "(",
            "country_cod",
            ")",
            "HAVING",
            "MIN",
            "(",
            "player_id",
            ")",
            "=",
            "205360"
        ],
        "query_toks_no_value": [
            "select",
            "country_cod",
            "(",
            "country_cod",
            ")",
            "from",
            "players",
            "group",
            "by",
            "country_cod",
            "(",
            "country_cod",
            ")",
            "having",
            "min",
            "(",
            "player_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__players__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__players.country_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__players.country_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__players.player_id__",
                            false
                        ],
                        null
                    ],
                    205360.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_1",
        "query": "SELECT FirstName FROM list GROUP BY FirstName HAVING MIN(Grade) = 6;",
        "question": "Select first name from list grouped by first name with minimum grade equal to 6",
        "tables": [
            "list",
            "teachers"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "first",
            "name",
            "from",
            "list",
            "grouped",
            "by",
            "first",
            "name",
            "with",
            "minimum",
            "grade",
            "equal",
            "to",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "FirstName",
            "FROM",
            "list",
            "GROUP",
            "BY",
            "FirstName",
            "HAVING",
            "MIN",
            "(",
            "Grade",
            ")",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "firstname",
            "from",
            "list",
            "group",
            "by",
            "firstname",
            "having",
            "min",
            "(",
            "grade",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__list__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__list.firstname__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__list.firstname__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__list.grade__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_1",
        "query": "SELECT FirstName FROM teachers GROUP BY FirstName HAVING MAX(Classroom) = 112;",
        "question": "Select first name from teachers grouped by first name with maximum class room equal to 112",
        "tables": [
            "list",
            "teachers"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "first",
            "name",
            "from",
            "teachers",
            "grouped",
            "by",
            "first",
            "name",
            "with",
            "maximum",
            "class",
            "room",
            "equal",
            "to",
            "112"
        ],
        "query_toks": [
            "SELECT",
            "FirstName",
            "FROM",
            "teachers",
            "GROUP",
            "BY",
            "FirstName",
            "HAVING",
            "MAX",
            "(",
            "Classroom",
            ")",
            "=",
            "112"
        ],
        "query_toks_no_value": [
            "select",
            "firstname",
            "from",
            "teachers",
            "group",
            "by",
            "firstname",
            "having",
            "max",
            "(",
            "classroom",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__teachers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__teachers.firstname__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__teachers.firstname__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__teachers.classroom__",
                            false
                        ],
                        null
                    ],
                    112.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "manufacturer",
        "query": "SELECT Name FROM manufacturer GROUP BY Name HAVING MAX(Num_of_Shops) = 4;",
        "question": "Select name from manufacturer grouped by name with maximum num of shops equal to 4",
        "tables": [
            "manufacturer",
            "furniture",
            "furniture_manufacte"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "manufacturer",
            "grouped",
            "by",
            "name",
            "with",
            "maximum",
            "num",
            "of",
            "shops",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "manufacturer",
            "GROUP",
            "BY",
            "Name",
            "HAVING",
            "MAX",
            "(",
            "Num_of_Shops",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "manufacturer",
            "group",
            "by",
            "name",
            "having",
            "max",
            "(",
            "num_of_shops",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__manufacturer__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__manufacturer.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__manufacturer.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__manufacturer.num_of_shops__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "manufacturer",
        "query": "SELECT Name FROM furniture GROUP BY Name HAVING MIN(Furniture_ID) = 5;",
        "question": "Select name from furniture grouped by name with minimum furniture id equal to 5",
        "tables": [
            "manufacturer",
            "furniture",
            "furniture_manufacte"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "furniture",
            "grouped",
            "by",
            "name",
            "with",
            "minimum",
            "furniture",
            "id",
            "equal",
            "to",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "furniture",
            "GROUP",
            "BY",
            "Name",
            "HAVING",
            "MIN",
            "(",
            "Furniture_ID",
            ")",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "furniture",
            "group",
            "by",
            "name",
            "having",
            "min",
            "(",
            "furniture_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__furniture__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__furniture.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__furniture.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__furniture.furniture_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT name FROM artists GROUP BY name HAVING MIN(id) = 76;",
        "question": "Select seq from sqlite sequence grouped by seq with minimum name equal to 76",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "seq",
            "from",
            "sqlite",
            "sequence",
            "grouped",
            "by",
            "seq",
            "with",
            "minimum",
            "name",
            "equal",
            "to",
            "76"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "artists",
            "GROUP",
            "BY",
            "name",
            "HAVING",
            "MIN",
            "(",
            "id",
            ")",
            "=",
            "76"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "artists",
            "group",
            "by",
            "name",
            "having",
            "min",
            "(",
            "id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__artists__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__artists.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__artists.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__artists.id__",
                            false
                        ],
                        null
                    ],
                    76.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT name FROM genres GROUP BY name HAVING MIN(id) = 16;",
        "question": "Select name from genres grouped by name with minimum id equal to 16",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "genres",
            "grouped",
            "by",
            "name",
            "with",
            "minimum",
            "id",
            "equal",
            "to",
            "16"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "genres",
            "GROUP",
            "BY",
            "name",
            "HAVING",
            "MIN",
            "(",
            "id",
            ")",
            "=",
            "16"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "genres",
            "group",
            "by",
            "name",
            "having",
            "min",
            "(",
            "id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__genres__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__genres.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__genres.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__genres.id__",
                            false
                        ],
                        null
                    ],
                    16.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT name FROM media_types GROUP BY name HAVING MAX(id) = 1;",
        "question": "Select name from media types grouped by name with maximum id equal to 1",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "media",
            "types",
            "grouped",
            "by",
            "name",
            "with",
            "maximum",
            "id",
            "equal",
            "to",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "media_types",
            "GROUP",
            "BY",
            "name",
            "HAVING",
            "MAX",
            "(",
            "id",
            ")",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "media_types",
            "group",
            "by",
            "name",
            "having",
            "max",
            "(",
            "id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__media_types__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__media_types.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__media_types.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__media_types.id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT billing_country FROM invoices GROUP BY billing_country HAVING MIN(id) = 270;",
        "question": "Select billing country from invoices grouped by billing country with minimum id equal to 270",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "billing",
            "country",
            "from",
            "invoices",
            "grouped",
            "by",
            "billing",
            "country",
            "with",
            "minimum",
            "id",
            "equal",
            "to",
            "270"
        ],
        "query_toks": [
            "SELECT",
            "billing_country",
            "FROM",
            "invoices",
            "GROUP",
            "BY",
            "billing_country",
            "HAVING",
            "MIN",
            "(",
            "id",
            ")",
            "=",
            "270"
        ],
        "query_toks_no_value": [
            "select",
            "billing_country",
            "from",
            "invoices",
            "group",
            "by",
            "billing_country",
            "having",
            "min",
            "(",
            "id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__invoices__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__invoices.billing_country__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__invoices.billing_country__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__invoices.id__",
                            false
                        ],
                        null
                    ],
                    270.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT name FROM playlists GROUP BY name HAVING MIN(id) = 14;",
        "question": "Select name from playlists grouped by name with minimum id equal to 14",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "playlists",
            "grouped",
            "by",
            "name",
            "with",
            "minimum",
            "id",
            "equal",
            "to",
            "14"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "playlists",
            "GROUP",
            "BY",
            "name",
            "HAVING",
            "MIN",
            "(",
            "id",
            ")",
            "=",
            "14"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "playlists",
            "group",
            "by",
            "name",
            "having",
            "min",
            "(",
            "id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__playlists__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__playlists.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__playlists.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__playlists.id__",
                            false
                        ],
                        null
                    ],
                    14.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT postal_code FROM customers GROUP BY postal_code HAVING MAX(id) = 4;",
        "question": "Select postal code from customers grouped by postal code with maximum id equal to 4",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "postal",
            "code",
            "from",
            "customers",
            "grouped",
            "by",
            "postal",
            "code",
            "with",
            "maximum",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "postal_code",
            "FROM",
            "customers",
            "GROUP",
            "BY",
            "postal_code",
            "HAVING",
            "MAX",
            "(",
            "id",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "postal_code",
            "from",
            "customers",
            "group",
            "by",
            "postal_code",
            "having",
            "max",
            "(",
            "id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.postal_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customers.postal_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__customers.id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT title FROM albums GROUP BY title HAVING MAX(artist_id) = 246;",
        "question": "Select title from albums grouped by title with maximum artist id equal to 246",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "title",
            "from",
            "albums",
            "grouped",
            "by",
            "title",
            "with",
            "maximum",
            "artist",
            "id",
            "equal",
            "to",
            "246"
        ],
        "query_toks": [
            "SELECT",
            "title",
            "FROM",
            "albums",
            "GROUP",
            "BY",
            "title",
            "HAVING",
            "MAX",
            "(",
            "artist_id",
            ")",
            "=",
            "246"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "albums",
            "group",
            "by",
            "title",
            "having",
            "max",
            "(",
            "artist_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__albums__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__albums.title__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__albums.title__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__albums.artist_id__",
                            false
                        ],
                        null
                    ],
                    246.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT name FROM tracks GROUP BY name HAVING MAX(bytes) = 5789945;",
        "question": "Select name from tracks grouped by name with maximum bytes equal to 5789945",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "tracks",
            "grouped",
            "by",
            "name",
            "with",
            "maximum",
            "bytes",
            "equal",
            "to",
            "5789945"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "tracks",
            "GROUP",
            "BY",
            "name",
            "HAVING",
            "MAX",
            "(",
            "bytes",
            ")",
            "=",
            "5789945"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "tracks",
            "group",
            "by",
            "name",
            "having",
            "max",
            "(",
            "bytes",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__tracks__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__tracks.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__tracks.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__tracks.bytes__",
                            false
                        ],
                        null
                    ],
                    5789945.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT state FROM employees GROUP BY state HAVING MAX(id) = 4;",
        "question": "Select state from employees grouped by state with maximum id equal to 4",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "state",
            "from",
            "employees",
            "grouped",
            "by",
            "state",
            "with",
            "maximum",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "state",
            "FROM",
            "employees",
            "GROUP",
            "BY",
            "state",
            "HAVING",
            "MAX",
            "(",
            "id",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "state",
            "from",
            "employees",
            "group",
            "by",
            "state",
            "having",
            "max",
            "(",
            "id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__employees__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__employees.state__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__employees.state__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__employees.id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "train_station",
        "query": "SELECT Service FROM train GROUP BY Service HAVING MIN(Train_ID) = 7;",
        "question": "Select service from train grouped by service with minimum train id equal to 7",
        "tables": [
            "train_station",
            "train",
            "station"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "service",
            "from",
            "train",
            "grouped",
            "by",
            "service",
            "with",
            "minimum",
            "train",
            "id",
            "equal",
            "to",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "Service",
            "FROM",
            "train",
            "GROUP",
            "BY",
            "Service",
            "HAVING",
            "MIN",
            "(",
            "Train_ID",
            ")",
            "=",
            "7"
        ],
        "query_toks_no_value": [
            "select",
            "service",
            "from",
            "train",
            "group",
            "by",
            "service",
            "having",
            "min",
            "(",
            "train_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__train__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__train.service__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__train.service__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__train.train_id__",
                            false
                        ],
                        null
                    ],
                    7.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "train_station",
        "query": "SELECT Main_Services FROM station GROUP BY Main_Services HAVING MIN(Station_ID) = 6;",
        "question": "Select main services from station grouped by main services with minimum station id equal to 6",
        "tables": [
            "train_station",
            "train",
            "station"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "main",
            "services",
            "from",
            "station",
            "grouped",
            "by",
            "main",
            "services",
            "with",
            "minimum",
            "station",
            "id",
            "equal",
            "to",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "Main_Services",
            "FROM",
            "station",
            "GROUP",
            "BY",
            "Main_Services",
            "HAVING",
            "MIN",
            "(",
            "Station_ID",
            ")",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "main_services",
            "from",
            "station",
            "group",
            "by",
            "main_services",
            "having",
            "min",
            "(",
            "station_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__station__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__station.main_services__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__station.main_services__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__station.station_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "document_management",
        "query": "SELECT document_name FROM Documents GROUP BY document_name HAVING MIN(access_count) = 9948;",
        "question": "Select document name from documents grouped by document name with minimum access count equal to 9948",
        "tables": [
            "Roles",
            "Functional_Areas",
            "Documents",
            "Document_Sections",
            "Document_Sections_Images",
            "Images",
            "Users",
            "Document_Functional_Areas",
            "Document_Structures"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "document",
            "name",
            "from",
            "documents",
            "grouped",
            "by",
            "document",
            "name",
            "with",
            "minimum",
            "access",
            "count",
            "equal",
            "to",
            "9948"
        ],
        "query_toks": [
            "SELECT",
            "document_name",
            "FROM",
            "Documents",
            "GROUP",
            "BY",
            "document_name",
            "HAVING",
            "MIN",
            "(",
            "access_count",
            ")",
            "=",
            "9948"
        ],
        "query_toks_no_value": [
            "select",
            "document_name",
            "from",
            "documents",
            "group",
            "by",
            "document_name",
            "having",
            "min",
            "(",
            "access_count",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__documents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__documents.document_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__documents.document_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__documents.access_count__",
                            false
                        ],
                        null
                    ],
                    9948.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "document_management",
        "query": "SELECT document_code FROM Document_Sections GROUP BY document_code HAVING MIN(section_id) = 93;",
        "question": "Select document code from document sections grouped by document code with minimum section id equal to 93",
        "tables": [
            "Roles",
            "Functional_Areas",
            "Documents",
            "Document_Sections",
            "Document_Sections_Images",
            "Images",
            "Users",
            "Document_Functional_Areas",
            "Document_Structures"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "document",
            "code",
            "from",
            "document",
            "sections",
            "grouped",
            "by",
            "document",
            "code",
            "with",
            "minimum",
            "section",
            "id",
            "equal",
            "to",
            "93"
        ],
        "query_toks": [
            "SELECT",
            "document_code",
            "FROM",
            "Document_Sections",
            "GROUP",
            "BY",
            "document_code",
            "HAVING",
            "MIN",
            "(",
            "section_id",
            ")",
            "=",
            "93"
        ],
        "query_toks_no_value": [
            "select",
            "document_code",
            "from",
            "document_sections",
            "group",
            "by",
            "document_code",
            "having",
            "min",
            "(",
            "section_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__document_sections__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__document_sections.document_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__document_sections.document_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__document_sections.section_id__",
                            false
                        ],
                        null
                    ],
                    93.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "document_management",
        "query": "SELECT image_alt_text FROM Images GROUP BY image_alt_text HAVING MAX(image_id) = 10;",
        "question": "Select image alt text from images grouped by image alt text with maximum image id equal to 10",
        "tables": [
            "Roles",
            "Functional_Areas",
            "Documents",
            "Document_Sections",
            "Document_Sections_Images",
            "Images",
            "Users",
            "Document_Functional_Areas",
            "Document_Structures"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "image",
            "alt",
            "text",
            "from",
            "images",
            "grouped",
            "by",
            "image",
            "alt",
            "text",
            "with",
            "maximum",
            "image",
            "id",
            "equal",
            "to",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "image_alt_text",
            "FROM",
            "Images",
            "GROUP",
            "BY",
            "image_alt_text",
            "HAVING",
            "MAX",
            "(",
            "image_id",
            ")",
            "=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "image_alt_text",
            "from",
            "images",
            "group",
            "by",
            "image_alt_text",
            "having",
            "max",
            "(",
            "image_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__images__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__images.image_alt_text__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__images.image_alt_text__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__images.image_id__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "document_management",
        "query": "SELECT role_code FROM Users GROUP BY role_code HAVING MIN(user_id) = 8;",
        "question": "Select role code from users grouped by role code with minimum user id equal to 8",
        "tables": [
            "Roles",
            "Functional_Areas",
            "Documents",
            "Document_Sections",
            "Document_Sections_Images",
            "Images",
            "Users",
            "Document_Functional_Areas",
            "Document_Structures"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "role",
            "code",
            "from",
            "users",
            "grouped",
            "by",
            "role",
            "code",
            "with",
            "minimum",
            "user",
            "id",
            "equal",
            "to",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "role_code",
            "FROM",
            "Users",
            "GROUP",
            "BY",
            "role_code",
            "HAVING",
            "MIN",
            "(",
            "user_id",
            ")",
            "=",
            "8"
        ],
        "query_toks_no_value": [
            "select",
            "role_code",
            "from",
            "users",
            "group",
            "by",
            "role_code",
            "having",
            "min",
            "(",
            "user_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__users__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__users.role_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__users.role_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__users.user_id__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT nationality FROM constructors GROUP BY nationality HAVING MIN(constructorId) = 130;",
        "question": "Select nationality from constructors grouped by nationality with minimum constructor id equal to 130",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "nationality",
            "from",
            "constructors",
            "grouped",
            "by",
            "nationality",
            "with",
            "minimum",
            "constructor",
            "id",
            "equal",
            "to",
            "130"
        ],
        "query_toks": [
            "SELECT",
            "nationality",
            "FROM",
            "constructors",
            "GROUP",
            "BY",
            "nationality",
            "HAVING",
            "MIN",
            "(",
            "constructorId",
            ")",
            "=",
            "130"
        ],
        "query_toks_no_value": [
            "select",
            "nationality",
            "from",
            "constructors",
            "group",
            "by",
            "nationality",
            "having",
            "min",
            "(",
            "constructorid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__constructors__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__constructors.nationality__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__constructors.nationality__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__constructors.constructorid__",
                            false
                        ],
                        null
                    ],
                    130.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT url FROM seasons GROUP BY url HAVING MIN(year) = 1956;",
        "question": "Select url from seasons grouped by url with minimum year equal to 1956",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "url",
            "from",
            "seasons",
            "grouped",
            "by",
            "url",
            "with",
            "minimum",
            "year",
            "equal",
            "to",
            "1956"
        ],
        "query_toks": [
            "SELECT",
            "url",
            "FROM",
            "seasons",
            "GROUP",
            "BY",
            "url",
            "HAVING",
            "MIN",
            "(",
            "year",
            ")",
            "=",
            "1956"
        ],
        "query_toks_no_value": [
            "select",
            "url",
            "from",
            "seasons",
            "group",
            "by",
            "url",
            "having",
            "min",
            "(",
            "year",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__seasons__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__seasons.url__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__seasons.url__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__seasons.year__",
                            false
                        ],
                        null
                    ],
                    1956.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT q1 FROM qualifying GROUP BY q1 HAVING MIN(qualifyId) = 1278;",
        "question": "Select q1 from qualifying grouped by q1 with minimum qualify id equal to 1278",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "q1",
            "from",
            "qualifying",
            "grouped",
            "by",
            "q1",
            "with",
            "minimum",
            "qualify",
            "id",
            "equal",
            "to",
            "1278"
        ],
        "query_toks": [
            "SELECT",
            "q1",
            "FROM",
            "qualifying",
            "GROUP",
            "BY",
            "q1",
            "HAVING",
            "MIN",
            "(",
            "qualifyId",
            ")",
            "=",
            "1278"
        ],
        "query_toks_no_value": [
            "select",
            "q1",
            "from",
            "qualifying",
            "group",
            "by",
            "q1",
            "having",
            "min",
            "(",
            "qualifyid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__qualifying__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__qualifying.q1__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__qualifying.q1__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__qualifying.qualifyid__",
                            false
                        ],
                        null
                    ],
                    1278.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT positionText FROM driverStandings GROUP BY positionText HAVING MAX(driverStandingsId) = 5054;",
        "question": "Select position text from driver standings grouped by position text with maximum driver standings id equal to 5054",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "position",
            "text",
            "from",
            "driver",
            "standings",
            "grouped",
            "by",
            "position",
            "text",
            "with",
            "maximum",
            "driver",
            "standings",
            "id",
            "equal",
            "to",
            "5054"
        ],
        "query_toks": [
            "SELECT",
            "positionText",
            "FROM",
            "driverStandings",
            "GROUP",
            "BY",
            "positionText",
            "HAVING",
            "MAX",
            "(",
            "driverStandingsId",
            ")",
            "=",
            "5054"
        ],
        "query_toks_no_value": [
            "select",
            "positiontext",
            "from",
            "driverstandings",
            "group",
            "by",
            "positiontext",
            "having",
            "max",
            "(",
            "driverstandingsid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__driverstandings__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__driverstandings.positiontext__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__driverstandings.positiontext__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__driverstandings.driverstandingsid__",
                            false
                        ],
                        null
                    ],
                    5054.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT positionText FROM constructorStandings GROUP BY positionText HAVING MAX(wins) = 4;",
        "question": "Select position text from constructor standings grouped by position text with maximum wins equal to 4",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "position",
            "text",
            "from",
            "constructor",
            "standings",
            "grouped",
            "by",
            "position",
            "text",
            "with",
            "maximum",
            "wins",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "positionText",
            "FROM",
            "constructorStandings",
            "GROUP",
            "BY",
            "positionText",
            "HAVING",
            "MAX",
            "(",
            "wins",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "positiontext",
            "from",
            "constructorstandings",
            "group",
            "by",
            "positiontext",
            "having",
            "max",
            "(",
            "wins",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__constructorstandings__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__constructorstandings.positiontext__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__constructorstandings.positiontext__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__constructorstandings.wins__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT forename FROM drivers GROUP BY forename HAVING MAX(number) = 31;",
        "question": "Select forename from drivers grouped by forename with maximum number equal to 31",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "forename",
            "from",
            "drivers",
            "grouped",
            "by",
            "forename",
            "with",
            "maximum",
            "number",
            "equal",
            "to",
            "31"
        ],
        "query_toks": [
            "SELECT",
            "forename",
            "FROM",
            "drivers",
            "GROUP",
            "BY",
            "forename",
            "HAVING",
            "MAX",
            "(",
            "number",
            ")",
            "=",
            "31"
        ],
        "query_toks_no_value": [
            "select",
            "forename",
            "from",
            "drivers",
            "group",
            "by",
            "forename",
            "having",
            "max",
            "(",
            "number",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__drivers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__drivers.forename__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__drivers.forename__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__drivers.number__",
                            false
                        ],
                        null
                    ],
                    31.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT fastestLapTime FROM results GROUP BY fastestLapTime HAVING MIN(constructorId) = 187;",
        "question": "Select fastest lap time from results grouped by fastest lap time with minimum constructor id equal to 187",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "fastest",
            "lap",
            "time",
            "from",
            "results",
            "grouped",
            "by",
            "fastest",
            "lap",
            "time",
            "with",
            "minimum",
            "constructor",
            "id",
            "equal",
            "to",
            "187"
        ],
        "query_toks": [
            "SELECT",
            "fastestLapTime",
            "FROM",
            "results",
            "GROUP",
            "BY",
            "fastestLapTime",
            "HAVING",
            "MIN",
            "(",
            "constructorId",
            ")",
            "=",
            "187"
        ],
        "query_toks_no_value": [
            "select",
            "fastestlaptime",
            "from",
            "results",
            "group",
            "by",
            "fastestlaptime",
            "having",
            "min",
            "(",
            "constructorid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__results__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__results.fastestlaptime__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__results.fastestlaptime__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__results.constructorid__",
                            false
                        ],
                        null
                    ],
                    187.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT time FROM races GROUP BY time HAVING MIN(raceId) = 745;",
        "question": "Select time from races grouped by time with minimum race id equal to 745",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "time",
            "from",
            "races",
            "grouped",
            "by",
            "time",
            "with",
            "minimum",
            "race",
            "id",
            "equal",
            "to",
            "745"
        ],
        "query_toks": [
            "SELECT",
            "time",
            "FROM",
            "races",
            "GROUP",
            "BY",
            "time",
            "HAVING",
            "MIN",
            "(",
            "raceId",
            ")",
            "=",
            "745"
        ],
        "query_toks_no_value": [
            "select",
            "time",
            "from",
            "races",
            "group",
            "by",
            "time",
            "having",
            "min",
            "(",
            "raceid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__races__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__races.time__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__races.time__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__races.raceid__",
                            false
                        ],
                        null
                    ],
                    745.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT status FROM status GROUP BY status HAVING MAX(statusId) = 30;",
        "question": "Select status from status grouped by status with maximum status id equal to 30",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "status",
            "from",
            "status",
            "grouped",
            "by",
            "status",
            "with",
            "maximum",
            "status",
            "id",
            "equal",
            "to",
            "30"
        ],
        "query_toks": [
            "SELECT",
            "status",
            "FROM",
            "status",
            "GROUP",
            "BY",
            "status",
            "HAVING",
            "MAX",
            "(",
            "statusId",
            ")",
            "=",
            "30"
        ],
        "query_toks_no_value": [
            "select",
            "status",
            "from",
            "status",
            "group",
            "by",
            "status",
            "having",
            "max",
            "(",
            "statusid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__status__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__status.status__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__status.status__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__status.statusid__",
                            false
                        ],
                        null
                    ],
                    30.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "game_1",
        "query": "SELECT OnScholarship FROM SportsInfo GROUP BY OnScholarship HAVING MIN(HoursPerWeek) = 2;",
        "question": "Select on scholarship from sports info grouped by on scholarship with minimum hours per week equal to 2",
        "tables": [
            "SportsInfo",
            "Student",
            "Video_Games",
            "Plays_Games"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "on",
            "scholarship",
            "from",
            "sports",
            "info",
            "grouped",
            "by",
            "on",
            "scholarship",
            "with",
            "minimum",
            "hours",
            "per",
            "week",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "OnScholarship",
            "FROM",
            "SportsInfo",
            "GROUP",
            "BY",
            "OnScholarship",
            "HAVING",
            "MIN",
            "(",
            "HoursPerWeek",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "onscholarship",
            "from",
            "sportsinfo",
            "group",
            "by",
            "onscholarship",
            "having",
            "min",
            "(",
            "hoursperweek",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__sportsinfo__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__sportsinfo.onscholarship__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__sportsinfo.onscholarship__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__sportsinfo.hoursperweek__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "game_1",
        "query": "SELECT Fname FROM Student GROUP BY Fname HAVING MAX(Major) = 100;",
        "question": "Select first name from student grouped by first name with maximum major equal to 100",
        "tables": [
            "SportsInfo",
            "Student",
            "Video_Games",
            "Plays_Games"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "first",
            "name",
            "from",
            "student",
            "grouped",
            "by",
            "first",
            "name",
            "with",
            "maximum",
            "major",
            "equal",
            "to",
            "100"
        ],
        "query_toks": [
            "SELECT",
            "Fname",
            "FROM",
            "Student",
            "GROUP",
            "BY",
            "Fname",
            "HAVING",
            "MAX",
            "(",
            "Major",
            ")",
            "=",
            "100"
        ],
        "query_toks_no_value": [
            "select",
            "fname",
            "from",
            "student",
            "group",
            "by",
            "fname",
            "having",
            "max",
            "(",
            "major",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.fname__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__student.fname__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__student.major__",
                            false
                        ],
                        null
                    ],
                    100.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "game_1",
        "query": "SELECT GType FROM Video_Games GROUP BY GType HAVING MAX(GameID) = 6;",
        "question": "Select game type from video games grouped by game type with maximum game id equal to 6",
        "tables": [
            "SportsInfo",
            "Student",
            "Video_Games",
            "Plays_Games"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "game",
            "type",
            "from",
            "video",
            "games",
            "grouped",
            "by",
            "game",
            "type",
            "with",
            "maximum",
            "game",
            "id",
            "equal",
            "to",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "GType",
            "FROM",
            "Video_Games",
            "GROUP",
            "BY",
            "GType",
            "HAVING",
            "MAX",
            "(",
            "GameID",
            ")",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "gtype",
            "from",
            "video_games",
            "group",
            "by",
            "gtype",
            "having",
            "max",
            "(",
            "gameid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__video_games__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__video_games.gtype__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__video_games.gtype__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__video_games.gameid__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "loan_1",
        "query": "SELECT cust_name FROM customer GROUP BY cust_name HAVING MIN(branch_ID) = 2;",
        "question": "Select customer name from customer grouped by customer name with minimum branch id equal to 2",
        "tables": [
            "customer",
            "loan",
            "bank"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "customer",
            "name",
            "from",
            "customer",
            "grouped",
            "by",
            "customer",
            "name",
            "with",
            "minimum",
            "branch",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "cust_name",
            "FROM",
            "customer",
            "GROUP",
            "BY",
            "cust_name",
            "HAVING",
            "MIN",
            "(",
            "branch_ID",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "cust_name",
            "from",
            "customer",
            "group",
            "by",
            "cust_name",
            "having",
            "min",
            "(",
            "branch_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer.cust_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customer.cust_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__customer.branch_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "loan_1",
        "query": "SELECT loan_type FROM loan GROUP BY loan_type HAVING MIN(amount) = 2050;",
        "question": "Select loan type from loan grouped by loan type with minimum amount equal to 2050",
        "tables": [
            "customer",
            "loan",
            "bank"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "loan",
            "type",
            "from",
            "loan",
            "grouped",
            "by",
            "loan",
            "type",
            "with",
            "minimum",
            "amount",
            "equal",
            "to",
            "2050"
        ],
        "query_toks": [
            "SELECT",
            "loan_type",
            "FROM",
            "loan",
            "GROUP",
            "BY",
            "loan_type",
            "HAVING",
            "MIN",
            "(",
            "amount",
            ")",
            "=",
            "2050"
        ],
        "query_toks_no_value": [
            "select",
            "loan_type",
            "from",
            "loan",
            "group",
            "by",
            "loan_type",
            "having",
            "min",
            "(",
            "amount",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__loan__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__loan.loan_type__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__loan.loan_type__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__loan.amount__",
                            false
                        ],
                        null
                    ],
                    2050.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "loan_1",
        "query": "SELECT state FROM bank GROUP BY state HAVING MIN(branch_ID) = 3;",
        "question": "Select state from bank grouped by state with minimum branch id equal to 3",
        "tables": [
            "customer",
            "loan",
            "bank"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "state",
            "from",
            "bank",
            "grouped",
            "by",
            "state",
            "with",
            "minimum",
            "branch",
            "id",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "state",
            "FROM",
            "bank",
            "GROUP",
            "BY",
            "state",
            "HAVING",
            "MIN",
            "(",
            "branch_ID",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "state",
            "from",
            "bank",
            "group",
            "by",
            "state",
            "having",
            "min",
            "(",
            "branch_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__bank__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__bank.state__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__bank.state__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__bank.branch_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "bike_1",
        "query": "SELECT time FROM status GROUP BY time HAVING MAX(station_id) = 46;",
        "question": "Select time from status grouped by time with maximum station id equal to 46",
        "tables": [
            "status",
            "weather",
            "trip",
            "station"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "time",
            "from",
            "status",
            "grouped",
            "by",
            "time",
            "with",
            "maximum",
            "station",
            "id",
            "equal",
            "to",
            "46"
        ],
        "query_toks": [
            "SELECT",
            "time",
            "FROM",
            "status",
            "GROUP",
            "BY",
            "time",
            "HAVING",
            "MAX",
            "(",
            "station_id",
            ")",
            "=",
            "46"
        ],
        "query_toks_no_value": [
            "select",
            "time",
            "from",
            "status",
            "group",
            "by",
            "time",
            "having",
            "max",
            "(",
            "station_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__status__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__status.time__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__status.time__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__status.station_id__",
                            false
                        ],
                        null
                    ],
                    46.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "bike_1",
        "query": "SELECT events FROM weather GROUP BY events HAVING MIN(max_dew_point_f) = 65;",
        "question": "Select events from weather grouped by events with minimum max dew point f equal to 65",
        "tables": [
            "status",
            "weather",
            "trip",
            "station"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "events",
            "from",
            "weather",
            "grouped",
            "by",
            "events",
            "with",
            "minimum",
            "max",
            "dew",
            "point",
            "f",
            "equal",
            "to",
            "65"
        ],
        "query_toks": [
            "SELECT",
            "events",
            "FROM",
            "weather",
            "GROUP",
            "BY",
            "events",
            "HAVING",
            "MIN",
            "(",
            "max_dew_point_f",
            ")",
            "=",
            "65"
        ],
        "query_toks_no_value": [
            "select",
            "events",
            "from",
            "weather",
            "group",
            "by",
            "events",
            "having",
            "min",
            "(",
            "max_dew_point_f",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__weather__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__weather.events__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__weather.events__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__weather.max_dew_point_f__",
                            false
                        ],
                        null
                    ],
                    65.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "bike_1",
        "query": "SELECT start_station_name FROM trip GROUP BY start_station_name HAVING MAX(end_station_id) = 11;",
        "question": "Select start station name from trip grouped by start station name with maximum end station id equal to 11",
        "tables": [
            "status",
            "weather",
            "trip",
            "station"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "start",
            "station",
            "name",
            "from",
            "trip",
            "grouped",
            "by",
            "start",
            "station",
            "name",
            "with",
            "maximum",
            "end",
            "station",
            "id",
            "equal",
            "to",
            "11"
        ],
        "query_toks": [
            "SELECT",
            "start_station_name",
            "FROM",
            "trip",
            "GROUP",
            "BY",
            "start_station_name",
            "HAVING",
            "MAX",
            "(",
            "end_station_id",
            ")",
            "=",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "start_station_name",
            "from",
            "trip",
            "group",
            "by",
            "start_station_name",
            "having",
            "max",
            "(",
            "end_station_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__trip__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__trip.start_station_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__trip.start_station_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__trip.end_station_id__",
                            false
                        ],
                        null
                    ],
                    11.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "bike_1",
        "query": "SELECT installation_date FROM station GROUP BY installation_date HAVING MAX(long) = -122.223492;",
        "question": "Select installation date from station grouped by installation date with maximum longitude equal to -122.223492",
        "tables": [
            "status",
            "weather",
            "trip",
            "station"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "installation",
            "date",
            "from",
            "station",
            "grouped",
            "by",
            "installation",
            "date",
            "with",
            "maximum",
            "longitude",
            "equal",
            "to",
            "-122.223492"
        ],
        "query_toks": [
            "SELECT",
            "installation_date",
            "FROM",
            "station",
            "GROUP",
            "BY",
            "installation_date",
            "HAVING",
            "MAX",
            "(",
            "long",
            ")",
            "=",
            "-122.223492"
        ],
        "query_toks_no_value": [
            "select",
            "installation_date",
            "from",
            "station",
            "group",
            "by",
            "installation_date",
            "having",
            "max",
            "(",
            "long",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__station__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__station.installation_date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__station.installation_date__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__station.long__",
                            false
                        ],
                        null
                    ],
                    -122.223492,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "entrepreneur",
        "query": "SELECT Investor FROM entrepreneur GROUP BY Investor HAVING MIN(People_ID) = 3;",
        "question": "Select investor from entrepreneur grouped by investor with minimum people id equal to 3",
        "tables": [
            "entrepreneur",
            "people"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "investor",
            "from",
            "entrepreneur",
            "grouped",
            "by",
            "investor",
            "with",
            "minimum",
            "people",
            "id",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Investor",
            "FROM",
            "entrepreneur",
            "GROUP",
            "BY",
            "Investor",
            "HAVING",
            "MIN",
            "(",
            "People_ID",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "investor",
            "from",
            "entrepreneur",
            "group",
            "by",
            "investor",
            "having",
            "min",
            "(",
            "people_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__entrepreneur__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__entrepreneur.investor__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__entrepreneur.investor__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__entrepreneur.people_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "entrepreneur",
        "query": "SELECT Date_of_Birth FROM people GROUP BY Date_of_Birth HAVING MIN(People_ID) = 6;",
        "question": "Select date of birth from people grouped by date of birth with minimum people id equal to 6",
        "tables": [
            "entrepreneur",
            "people"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "date",
            "of",
            "birth",
            "from",
            "people",
            "grouped",
            "by",
            "date",
            "of",
            "birth",
            "with",
            "minimum",
            "people",
            "id",
            "equal",
            "to",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "Date_of_Birth",
            "FROM",
            "people",
            "GROUP",
            "BY",
            "Date_of_Birth",
            "HAVING",
            "MIN",
            "(",
            "People_ID",
            ")",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "date_of_birth",
            "from",
            "people",
            "group",
            "by",
            "date_of_birth",
            "having",
            "min",
            "(",
            "people_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__people__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__people.date_of_birth__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__people.date_of_birth__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__people.people_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format HAVING MIN(Orchestra_ID) = 2;",
        "question": "Select major record format from orchestra grouped by major record format with minimum orchestra id equal to 2",
        "tables": [
            "orchestra",
            "show",
            "conductor",
            "performance"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "major",
            "record",
            "format",
            "from",
            "orchestra",
            "grouped",
            "by",
            "major",
            "record",
            "format",
            "with",
            "minimum",
            "orchestra",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Major_Record_Format",
            "FROM",
            "orchestra",
            "GROUP",
            "BY",
            "Major_Record_Format",
            "HAVING",
            "MIN",
            "(",
            "Orchestra_ID",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "major_record_format",
            "from",
            "orchestra",
            "group",
            "by",
            "major_record_format",
            "having",
            "min",
            "(",
            "orchestra_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__orchestra__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__orchestra.major_record_format__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__orchestra.major_record_format__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__orchestra.orchestra_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Result FROM show GROUP BY Result HAVING MAX(Attendance) = 695.0;",
        "question": "Select result from show grouped by result with maximum attendance equal to 695.0",
        "tables": [
            "orchestra",
            "show",
            "conductor",
            "performance"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "result",
            "from",
            "show",
            "grouped",
            "by",
            "result",
            "with",
            "maximum",
            "attendance",
            "equal",
            "to",
            "695.0"
        ],
        "query_toks": [
            "SELECT",
            "Result",
            "FROM",
            "show",
            "GROUP",
            "BY",
            "Result",
            "HAVING",
            "MAX",
            "(",
            "Attendance",
            ")",
            "=",
            "695.0"
        ],
        "query_toks_no_value": [
            "select",
            "result",
            "from",
            "show",
            "group",
            "by",
            "result",
            "having",
            "max",
            "(",
            "attendance",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__show__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__show.result__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__show.result__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__show.attendance__",
                            false
                        ],
                        null
                    ],
                    695.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Nationality FROM conductor GROUP BY Nationality HAVING MIN(Age) = 41;",
        "question": "Select nationality from conductor grouped by nationality with minimum age equal to 41",
        "tables": [
            "orchestra",
            "show",
            "conductor",
            "performance"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "nationality",
            "from",
            "conductor",
            "grouped",
            "by",
            "nationality",
            "with",
            "minimum",
            "age",
            "equal",
            "to",
            "41"
        ],
        "query_toks": [
            "SELECT",
            "Nationality",
            "FROM",
            "conductor",
            "GROUP",
            "BY",
            "Nationality",
            "HAVING",
            "MIN",
            "(",
            "Age",
            ")",
            "=",
            "41"
        ],
        "query_toks_no_value": [
            "select",
            "nationality",
            "from",
            "conductor",
            "group",
            "by",
            "nationality",
            "having",
            "min",
            "(",
            "age",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__conductor__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__conductor.nationality__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__conductor.nationality__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__conductor.age__",
                            false
                        ],
                        null
                    ],
                    41.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Share FROM performance GROUP BY Share HAVING MAX(Orchestra_ID) = 9;",
        "question": "Select share from performance grouped by share with maximum orchestra id equal to 9",
        "tables": [
            "orchestra",
            "show",
            "conductor",
            "performance"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "share",
            "from",
            "performance",
            "grouped",
            "by",
            "share",
            "with",
            "maximum",
            "orchestra",
            "id",
            "equal",
            "to",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "Share",
            "FROM",
            "performance",
            "GROUP",
            "BY",
            "Share",
            "HAVING",
            "MAX",
            "(",
            "Orchestra_ID",
            ")",
            "=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "share",
            "from",
            "performance",
            "group",
            "by",
            "share",
            "having",
            "max",
            "(",
            "orchestra_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__performance__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__performance.share__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__performance.share__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__performance.orchestra_id__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Customer_Name FROM Performers GROUP BY Customer_Name HAVING MIN(Address_ID) = 314;",
        "question": "Select customer name from performers grouped by customer name with minimum address id equal to 314",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "customer",
            "name",
            "from",
            "performers",
            "grouped",
            "by",
            "customer",
            "name",
            "with",
            "minimum",
            "address",
            "id",
            "equal",
            "to",
            "314"
        ],
        "query_toks": [
            "SELECT",
            "Customer_Name",
            "FROM",
            "Performers",
            "GROUP",
            "BY",
            "Customer_Name",
            "HAVING",
            "MIN",
            "(",
            "Address_ID",
            ")",
            "=",
            "314"
        ],
        "query_toks_no_value": [
            "select",
            "customer_name",
            "from",
            "performers",
            "group",
            "by",
            "customer_name",
            "having",
            "min",
            "(",
            "address_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__performers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__performers.customer_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__performers.customer_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__performers.address_id__",
                            false
                        ],
                        null
                    ],
                    314.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Product_Description FROM Products GROUP BY Product_Description HAVING MIN(Product_Price) = 1432324;",
        "question": "Select product description from products grouped by product description with minimum product price equal to 1432324",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "product",
            "description",
            "from",
            "products",
            "grouped",
            "by",
            "product",
            "description",
            "with",
            "minimum",
            "product",
            "price",
            "equal",
            "to",
            "1432324"
        ],
        "query_toks": [
            "SELECT",
            "Product_Description",
            "FROM",
            "Products",
            "GROUP",
            "BY",
            "Product_Description",
            "HAVING",
            "MIN",
            "(",
            "Product_Price",
            ")",
            "=",
            "1432324"
        ],
        "query_toks_no_value": [
            "select",
            "product_description",
            "from",
            "products",
            "group",
            "by",
            "product_description",
            "having",
            "min",
            "(",
            "product_price",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products.product_description__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__products.product_description__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__products.product_price__",
                            false
                        ],
                        null
                    ],
                    1432324.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Currency_Code FROM Drama_Workshop_Groups GROUP BY Currency_Code HAVING MAX(Workshop_Group_ID) = 431;",
        "question": "Select currency code from drama workshop groups grouped by currency code with maximum workshop group id equal to 431",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "currency",
            "code",
            "from",
            "drama",
            "workshop",
            "groups",
            "grouped",
            "by",
            "currency",
            "code",
            "with",
            "maximum",
            "workshop",
            "group",
            "id",
            "equal",
            "to",
            "431"
        ],
        "query_toks": [
            "SELECT",
            "Currency_Code",
            "FROM",
            "Drama_Workshop_Groups",
            "GROUP",
            "BY",
            "Currency_Code",
            "HAVING",
            "MAX",
            "(",
            "Workshop_Group_ID",
            ")",
            "=",
            "431"
        ],
        "query_toks_no_value": [
            "select",
            "currency_code",
            "from",
            "drama_workshop_groups",
            "group",
            "by",
            "currency_code",
            "having",
            "max",
            "(",
            "workshop_group_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__drama_workshop_groups__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__drama_workshop_groups.currency_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__drama_workshop_groups.currency_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__drama_workshop_groups.workshop_group_id__",
                            false
                        ],
                        null
                    ],
                    431.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Other_Item_Details FROM Order_Items GROUP BY Other_Item_Details HAVING MIN(Order_ID) = 6;",
        "question": "Select other item details from order items grouped by other item details with minimum order id equal to 6",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "other",
            "item",
            "details",
            "from",
            "order",
            "items",
            "grouped",
            "by",
            "other",
            "item",
            "details",
            "with",
            "minimum",
            "order",
            "id",
            "equal",
            "to",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "Other_Item_Details",
            "FROM",
            "Order_Items",
            "GROUP",
            "BY",
            "Other_Item_Details",
            "HAVING",
            "MIN",
            "(",
            "Order_ID",
            ")",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "other_item_details",
            "from",
            "order_items",
            "group",
            "by",
            "other_item_details",
            "having",
            "min",
            "(",
            "order_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__order_items__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__order_items.other_item_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__order_items.other_item_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__order_items.order_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Order_Quantity FROM Invoices GROUP BY Order_Quantity HAVING MAX(Order_Item_ID) = 9;",
        "question": "Select order quantity from invoices grouped by order quantity with maximum order item id equal to 9",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "order",
            "quantity",
            "from",
            "invoices",
            "grouped",
            "by",
            "order",
            "quantity",
            "with",
            "maximum",
            "order",
            "item",
            "id",
            "equal",
            "to",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "Order_Quantity",
            "FROM",
            "Invoices",
            "GROUP",
            "BY",
            "Order_Quantity",
            "HAVING",
            "MAX",
            "(",
            "Order_Item_ID",
            ")",
            "=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "order_quantity",
            "from",
            "invoices",
            "group",
            "by",
            "order_quantity",
            "having",
            "max",
            "(",
            "order_item_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__invoices__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__invoices.order_quantity__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__invoices.order_quantity__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__invoices.order_item_id__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Other_Order_Details FROM Customer_Orders GROUP BY Other_Order_Details HAVING MIN(Store_ID) = 229;",
        "question": "Select other order details from customer orders grouped by other order details with minimum store id equal to 229",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "other",
            "order",
            "details",
            "from",
            "customer",
            "orders",
            "grouped",
            "by",
            "other",
            "order",
            "details",
            "with",
            "minimum",
            "store",
            "id",
            "equal",
            "to",
            "229"
        ],
        "query_toks": [
            "SELECT",
            "Other_Order_Details",
            "FROM",
            "Customer_Orders",
            "GROUP",
            "BY",
            "Other_Order_Details",
            "HAVING",
            "MIN",
            "(",
            "Store_ID",
            ")",
            "=",
            "229"
        ],
        "query_toks_no_value": [
            "select",
            "other_order_details",
            "from",
            "customer_orders",
            "group",
            "by",
            "other_order_details",
            "having",
            "min",
            "(",
            "store_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_orders__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_orders.other_order_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customer_orders.other_order_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__customer_orders.store_id__",
                            false
                        ],
                        null
                    ],
                    229.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Service_Type_Code FROM Services GROUP BY Service_Type_Code HAVING MIN(Service_ID) = 414;",
        "question": "Select service type code from services grouped by service type code with minimum service id equal to 414",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "service",
            "type",
            "code",
            "from",
            "services",
            "grouped",
            "by",
            "service",
            "type",
            "code",
            "with",
            "minimum",
            "service",
            "id",
            "equal",
            "to",
            "414"
        ],
        "query_toks": [
            "SELECT",
            "Service_Type_Code",
            "FROM",
            "Services",
            "GROUP",
            "BY",
            "Service_Type_Code",
            "HAVING",
            "MIN",
            "(",
            "Service_ID",
            ")",
            "=",
            "414"
        ],
        "query_toks_no_value": [
            "select",
            "service_type_code",
            "from",
            "services",
            "group",
            "by",
            "service_type_code",
            "having",
            "min",
            "(",
            "service_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__services__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__services.service_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__services.service_type_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__services.service_id__",
                            false
                        ],
                        null
                    ],
                    414.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Other_Item_Details FROM Invoice_Items GROUP BY Other_Item_Details HAVING MIN(Invoice_Item_ID) = 2;",
        "question": "Select other item details from invoice items grouped by other item details with minimum invoice item id equal to 2",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "other",
            "item",
            "details",
            "from",
            "invoice",
            "items",
            "grouped",
            "by",
            "other",
            "item",
            "details",
            "with",
            "minimum",
            "invoice",
            "item",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Other_Item_Details",
            "FROM",
            "Invoice_Items",
            "GROUP",
            "BY",
            "Other_Item_Details",
            "HAVING",
            "MIN",
            "(",
            "Invoice_Item_ID",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "other_item_details",
            "from",
            "invoice_items",
            "group",
            "by",
            "other_item_details",
            "having",
            "min",
            "(",
            "invoice_item_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__invoice_items__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__invoice_items.other_item_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__invoice_items.other_item_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__invoice_items.invoice_item_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Customer_Name FROM Customers GROUP BY Customer_Name HAVING MAX(Address_ID) = 180;",
        "question": "Select customer name from customers grouped by customer name with maximum address id equal to 180",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "customer",
            "name",
            "from",
            "customers",
            "grouped",
            "by",
            "customer",
            "name",
            "with",
            "maximum",
            "address",
            "id",
            "equal",
            "to",
            "180"
        ],
        "query_toks": [
            "SELECT",
            "Customer_Name",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "Customer_Name",
            "HAVING",
            "MAX",
            "(",
            "Address_ID",
            ")",
            "=",
            "180"
        ],
        "query_toks_no_value": [
            "select",
            "customer_name",
            "from",
            "customers",
            "group",
            "by",
            "customer_name",
            "having",
            "max",
            "(",
            "address_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customers.customer_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__customers.address_id__",
                            false
                        ],
                        null
                    ],
                    180.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Marketing_Region_Code FROM Stores GROUP BY Marketing_Region_Code HAVING MAX(Address_ID) = 369;",
        "question": "Select marketing region code from stores grouped by marketing region code with maximum address id equal to 369",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "marketing",
            "region",
            "code",
            "from",
            "stores",
            "grouped",
            "by",
            "marketing",
            "region",
            "code",
            "with",
            "maximum",
            "address",
            "id",
            "equal",
            "to",
            "369"
        ],
        "query_toks": [
            "SELECT",
            "Marketing_Region_Code",
            "FROM",
            "Stores",
            "GROUP",
            "BY",
            "Marketing_Region_Code",
            "HAVING",
            "MAX",
            "(",
            "Address_ID",
            ")",
            "=",
            "369"
        ],
        "query_toks_no_value": [
            "select",
            "marketing_region_code",
            "from",
            "stores",
            "group",
            "by",
            "marketing_region_code",
            "having",
            "max",
            "(",
            "address_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__stores__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__stores.marketing_region_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__stores.marketing_region_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__stores.address_id__",
                            false
                        ],
                        null
                    ],
                    369.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Customer_Name FROM Clients GROUP BY Customer_Name HAVING MAX(Address_ID) = 180;",
        "question": "Select customer name from clients grouped by customer name with maximum address id equal to 180",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "customer",
            "name",
            "from",
            "clients",
            "grouped",
            "by",
            "customer",
            "name",
            "with",
            "maximum",
            "address",
            "id",
            "equal",
            "to",
            "180"
        ],
        "query_toks": [
            "SELECT",
            "Customer_Name",
            "FROM",
            "Clients",
            "GROUP",
            "BY",
            "Customer_Name",
            "HAVING",
            "MAX",
            "(",
            "Address_ID",
            ")",
            "=",
            "180"
        ],
        "query_toks_no_value": [
            "select",
            "customer_name",
            "from",
            "clients",
            "group",
            "by",
            "customer_name",
            "having",
            "max",
            "(",
            "address_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__clients__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__clients.customer_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__clients.customer_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__clients.address_id__",
                            false
                        ],
                        null
                    ],
                    180.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Status_Code FROM Bookings GROUP BY Status_Code HAVING MIN(Customer_ID) = 423;",
        "question": "Select status code from bookings grouped by status code with minimum customer id equal to 423",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "status",
            "code",
            "from",
            "bookings",
            "grouped",
            "by",
            "status",
            "code",
            "with",
            "minimum",
            "customer",
            "id",
            "equal",
            "to",
            "423"
        ],
        "query_toks": [
            "SELECT",
            "Status_Code",
            "FROM",
            "Bookings",
            "GROUP",
            "BY",
            "Status_Code",
            "HAVING",
            "MIN",
            "(",
            "Customer_ID",
            ")",
            "=",
            "423"
        ],
        "query_toks_no_value": [
            "select",
            "status_code",
            "from",
            "bookings",
            "group",
            "by",
            "status_code",
            "having",
            "min",
            "(",
            "customer_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__bookings__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__bookings.status_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__bookings.status_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__bookings.customer_id__",
                            false
                        ],
                        null
                    ],
                    423.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "query": "SELECT Country FROM car_makers GROUP BY Country HAVING MIN(Id) = 6;",
        "question": "Select country from car makers grouped by country with minimum id equal to 6",
        "tables": [
            "car_makers",
            "car_names",
            "countries",
            "model_list",
            "cars_data",
            "continents"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "country",
            "from",
            "car",
            "makers",
            "grouped",
            "by",
            "country",
            "with",
            "minimum",
            "id",
            "equal",
            "to",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "Countr",
            "(",
            "Countr",
            ")",
            "FROM",
            "car_makers",
            "GROUP",
            "BY",
            "Countr",
            "(",
            "Countr",
            ")",
            "HAVING",
            "MIN",
            "(",
            "Id",
            ")",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "countr",
            "(",
            "countr",
            ")",
            "from",
            "car_makers",
            "group",
            "by",
            "countr",
            "(",
            "countr",
            ")",
            "having",
            "min",
            "(",
            "id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__car_makers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__car_makers.country__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__car_makers.country__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__car_makers.id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "query": "SELECT Make FROM car_names GROUP BY Make HAVING MIN(MakeId) = 181;",
        "question": "Select make from car names grouped by make with minimum make id equal to 181",
        "tables": [
            "car_makers",
            "car_names",
            "countries",
            "model_list",
            "cars_data",
            "continents"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "make",
            "from",
            "car",
            "names",
            "grouped",
            "by",
            "make",
            "with",
            "minimum",
            "make",
            "id",
            "equal",
            "to",
            "181"
        ],
        "query_toks": [
            "SELECT",
            "Make",
            "FROM",
            "car_names",
            "GROUP",
            "BY",
            "Make",
            "HAVING",
            "MIN",
            "(",
            "MakeId",
            ")",
            "=",
            "181"
        ],
        "query_toks_no_value": [
            "select",
            "make",
            "from",
            "car_names",
            "group",
            "by",
            "make",
            "having",
            "min",
            "(",
            "makeid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__car_names__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__car_names.make__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__car_names.make__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__car_names.makeid__",
                            false
                        ],
                        null
                    ],
                    181.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "query": "SELECT CountryName FROM countries GROUP BY CountryName HAVING MIN(CountryId) = 14;",
        "question": "Select country name from countries grouped by country name with minimum country id equal to 14",
        "tables": [
            "car_makers",
            "car_names",
            "countries",
            "model_list",
            "cars_data",
            "continents"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "country",
            "name",
            "from",
            "countries",
            "grouped",
            "by",
            "country",
            "name",
            "with",
            "minimum",
            "country",
            "id",
            "equal",
            "to",
            "14"
        ],
        "query_toks": [
            "SELECT",
            "CountryNam",
            "(",
            "CountryNam",
            ")",
            "FROM",
            "countrie",
            "(",
            "countrie",
            ")",
            "GROUP",
            "BY",
            "CountryNam",
            "(",
            "CountryNam",
            ")",
            "HAVING",
            "MIN",
            "(",
            "CountryId",
            ")",
            "=",
            "14"
        ],
        "query_toks_no_value": [
            "select",
            "countrynam",
            "(",
            "countrynam",
            ")",
            "from",
            "countrie",
            "(",
            "countrie",
            ")",
            "group",
            "by",
            "countrynam",
            "(",
            "countrynam",
            ")",
            "having",
            "min",
            "(",
            "countryid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__countries__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__countries.countryname__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__countries.countryname__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__countries.countryid__",
                            false
                        ],
                        null
                    ],
                    14.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "query": "SELECT Model FROM model_list GROUP BY Model HAVING MAX(Maker) = 3;",
        "question": "Select model from model list grouped by model with maximum maker equal to 3",
        "tables": [
            "car_makers",
            "car_names",
            "countries",
            "model_list",
            "cars_data",
            "continents"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "model",
            "from",
            "model",
            "list",
            "grouped",
            "by",
            "model",
            "with",
            "maximum",
            "maker",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Model",
            "FROM",
            "model_list",
            "GROUP",
            "BY",
            "Model",
            "HAVING",
            "MAX",
            "(",
            "Maker",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "model",
            "from",
            "model_list",
            "group",
            "by",
            "model",
            "having",
            "max",
            "(",
            "maker",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__model_list__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__model_list.model__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__model_list.model__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__model_list.maker__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "query": "SELECT MPG FROM cars_data GROUP BY MPG HAVING MAX(Accelerate) = 19.5;",
        "question": "Select mpg from cars data grouped by mpg with maximum accelerate equal to 19.5",
        "tables": [
            "car_makers",
            "car_names",
            "countries",
            "model_list",
            "cars_data",
            "continents"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "mpg",
            "from",
            "cars",
            "data",
            "grouped",
            "by",
            "mpg",
            "with",
            "maximum",
            "accelerate",
            "equal",
            "to",
            "19.5"
        ],
        "query_toks": [
            "SELECT",
            "MPG",
            "FROM",
            "cars_data",
            "GROUP",
            "BY",
            "MPG",
            "HAVING",
            "MAX",
            "(",
            "Accelerate",
            ")",
            "=",
            "19.5"
        ],
        "query_toks_no_value": [
            "select",
            "mpg",
            "from",
            "cars_data",
            "group",
            "by",
            "mpg",
            "having",
            "max",
            "(",
            "accelerate",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__cars_data__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__cars_data.mpg__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__cars_data.mpg__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__cars_data.accelerate__",
                            false
                        ],
                        null
                    ],
                    19.5,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "query": "SELECT Continent FROM continents GROUP BY Continent HAVING MIN(ContId) = 3;",
        "question": "Select continent from continents grouped by continent with minimum cont id equal to 3",
        "tables": [
            "car_makers",
            "car_names",
            "countries",
            "model_list",
            "cars_data",
            "continents"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "continent",
            "from",
            "continents",
            "grouped",
            "by",
            "continent",
            "with",
            "minimum",
            "cont",
            "id",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Continent",
            "FROM",
            "continents",
            "GROUP",
            "BY",
            "Continent",
            "HAVING",
            "MIN",
            "(",
            "ContId",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "continent",
            "from",
            "continents",
            "group",
            "by",
            "continent",
            "having",
            "min",
            "(",
            "contid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__continents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__continents.continent__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__continents.continent__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__continents.contid__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "behavior_monitoring",
        "query": "SELECT gender FROM Teachers GROUP BY gender HAVING MAX(teacher_id) = 2;",
        "question": "Select gender from teachers grouped by gender with maximum teacher id equal to 2",
        "tables": [
            "Ref_Detention_Type",
            "Teachers",
            "Students",
            "Addresses",
            "Assessment_Notes",
            "Detention",
            "Students_in_Detention",
            "Student_Addresses",
            "Ref_Incident_Type",
            "Behavior_Incident",
            "Ref_Address_Types"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "gender",
            "from",
            "teachers",
            "grouped",
            "by",
            "gender",
            "with",
            "maximum",
            "teacher",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "gender",
            "FROM",
            "Teachers",
            "GROUP",
            "BY",
            "gender",
            "HAVING",
            "MAX",
            "(",
            "teacher_id",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "gender",
            "from",
            "teachers",
            "group",
            "by",
            "gender",
            "having",
            "max",
            "(",
            "teacher_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__teachers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__teachers.gender__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__teachers.gender__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__teachers.teacher_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "behavior_monitoring",
        "query": "SELECT last_name FROM Students GROUP BY last_name HAVING MIN(address_id) = 20;",
        "question": "Select last name from students grouped by last name with minimum address id equal to 20",
        "tables": [
            "Ref_Detention_Type",
            "Teachers",
            "Students",
            "Addresses",
            "Assessment_Notes",
            "Detention",
            "Students_in_Detention",
            "Student_Addresses",
            "Ref_Incident_Type",
            "Behavior_Incident",
            "Ref_Address_Types"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "last",
            "name",
            "from",
            "students",
            "grouped",
            "by",
            "last",
            "name",
            "with",
            "minimum",
            "address",
            "id",
            "equal",
            "to",
            "20"
        ],
        "query_toks": [
            "SELECT",
            "last_name",
            "FROM",
            "Students",
            "GROUP",
            "BY",
            "last_name",
            "HAVING",
            "MIN",
            "(",
            "address_id",
            ")",
            "=",
            "20"
        ],
        "query_toks_no_value": [
            "select",
            "last_name",
            "from",
            "students",
            "group",
            "by",
            "last_name",
            "having",
            "min",
            "(",
            "address_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__students__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__students.last_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__students.last_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__students.address_id__",
                            false
                        ],
                        null
                    ],
                    20.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "behavior_monitoring",
        "query": "SELECT state_province_county FROM Addresses GROUP BY state_province_county HAVING MAX(address_id) = 13;",
        "question": "Select state province county from addresses grouped by state province county with maximum address id equal to 13",
        "tables": [
            "Ref_Detention_Type",
            "Teachers",
            "Students",
            "Addresses",
            "Assessment_Notes",
            "Detention",
            "Students_in_Detention",
            "Student_Addresses",
            "Ref_Incident_Type",
            "Behavior_Incident",
            "Ref_Address_Types"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "state",
            "province",
            "county",
            "from",
            "addresses",
            "grouped",
            "by",
            "state",
            "province",
            "county",
            "with",
            "maximum",
            "address",
            "id",
            "equal",
            "to",
            "13"
        ],
        "query_toks": [
            "SELECT",
            "state_province_county",
            "FROM",
            "Addresses",
            "GROUP",
            "BY",
            "state_province_county",
            "HAVING",
            "MAX",
            "(",
            "address_id",
            ")",
            "=",
            "13"
        ],
        "query_toks_no_value": [
            "select",
            "state_province_county",
            "from",
            "addresses",
            "group",
            "by",
            "state_province_county",
            "having",
            "max",
            "(",
            "address_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__addresses.state_province_county__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__addresses.state_province_county__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__addresses.address_id__",
                            false
                        ],
                        null
                    ],
                    13.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "behavior_monitoring",
        "query": "SELECT text_of_notes FROM Assessment_Notes GROUP BY text_of_notes HAVING MAX(teacher_id) = 10;",
        "question": "Select text of notes from assessment notes grouped by text of notes with maximum teacher id equal to 10",
        "tables": [
            "Ref_Detention_Type",
            "Teachers",
            "Students",
            "Addresses",
            "Assessment_Notes",
            "Detention",
            "Students_in_Detention",
            "Student_Addresses",
            "Ref_Incident_Type",
            "Behavior_Incident",
            "Ref_Address_Types"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "text",
            "of",
            "notes",
            "from",
            "assessment",
            "notes",
            "grouped",
            "by",
            "text",
            "of",
            "notes",
            "with",
            "maximum",
            "teacher",
            "id",
            "equal",
            "to",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "text_of_notes",
            "FROM",
            "Assessment_Notes",
            "GROUP",
            "BY",
            "text_of_notes",
            "HAVING",
            "MAX",
            "(",
            "teacher_id",
            ")",
            "=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "text_of_notes",
            "from",
            "assessment_notes",
            "group",
            "by",
            "text_of_notes",
            "having",
            "max",
            "(",
            "teacher_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__assessment_notes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__assessment_notes.text_of_notes__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__assessment_notes.text_of_notes__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__assessment_notes.teacher_id__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "behavior_monitoring",
        "query": "SELECT other_details FROM Detention GROUP BY other_details HAVING MAX(detention_id) = 3;",
        "question": "Select other details from detention grouped by other details with maximum detention id equal to 3",
        "tables": [
            "Ref_Detention_Type",
            "Teachers",
            "Students",
            "Addresses",
            "Assessment_Notes",
            "Detention",
            "Students_in_Detention",
            "Student_Addresses",
            "Ref_Incident_Type",
            "Behavior_Incident",
            "Ref_Address_Types"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "other",
            "details",
            "from",
            "detention",
            "grouped",
            "by",
            "other",
            "details",
            "with",
            "maximum",
            "detention",
            "id",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "other_details",
            "FROM",
            "Detention",
            "GROUP",
            "BY",
            "other_details",
            "HAVING",
            "MAX",
            "(",
            "detention_id",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            "from",
            "detention",
            "group",
            "by",
            "other_details",
            "having",
            "max",
            "(",
            "detention_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__detention__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__detention.other_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__detention.other_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__detention.detention_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "behavior_monitoring",
        "query": "SELECT other_details FROM Student_Addresses GROUP BY other_details HAVING MIN(monthly_rental) = 1032.9782;",
        "question": "Select other details from student addresses grouped by other details with minimum monthly rental equal to 1032.9782",
        "tables": [
            "Ref_Detention_Type",
            "Teachers",
            "Students",
            "Addresses",
            "Assessment_Notes",
            "Detention",
            "Students_in_Detention",
            "Student_Addresses",
            "Ref_Incident_Type",
            "Behavior_Incident",
            "Ref_Address_Types"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "other",
            "details",
            "from",
            "student",
            "addresses",
            "grouped",
            "by",
            "other",
            "details",
            "with",
            "minimum",
            "monthly",
            "rental",
            "equal",
            "to",
            "1032.9782"
        ],
        "query_toks": [
            "SELECT",
            "other_details",
            "FROM",
            "Student_Addresses",
            "GROUP",
            "BY",
            "other_details",
            "HAVING",
            "MIN",
            "(",
            "monthly_rental",
            ")",
            "=",
            "1032.9782"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            "from",
            "student_addresses",
            "group",
            "by",
            "other_details",
            "having",
            "min",
            "(",
            "monthly_rental",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student_addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student_addresses.other_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__student_addresses.other_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__student_addresses.monthly_rental__",
                            false
                        ],
                        null
                    ],
                    1032.9782,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "behavior_monitoring",
        "query": "SELECT incident_summary FROM Behavior_Incident GROUP BY incident_summary HAVING MAX(incident_id) = 9;",
        "question": "Select incident summary from behavior incident grouped by incident summary with maximum incident id equal to 9",
        "tables": [
            "Ref_Detention_Type",
            "Teachers",
            "Students",
            "Addresses",
            "Assessment_Notes",
            "Detention",
            "Students_in_Detention",
            "Student_Addresses",
            "Ref_Incident_Type",
            "Behavior_Incident",
            "Ref_Address_Types"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "incident",
            "summary",
            "from",
            "behavior",
            "incident",
            "grouped",
            "by",
            "incident",
            "summary",
            "with",
            "maximum",
            "incident",
            "id",
            "equal",
            "to",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "incident_summary",
            "FROM",
            "Behavior_Incident",
            "GROUP",
            "BY",
            "incident_summary",
            "HAVING",
            "MAX",
            "(",
            "incident_id",
            ")",
            "=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "incident_summary",
            "from",
            "behavior_incident",
            "group",
            "by",
            "incident_summary",
            "having",
            "max",
            "(",
            "incident_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__behavior_incident__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__behavior_incident.incident_summary__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__behavior_incident.incident_summary__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__behavior_incident.incident_id__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "query": "SELECT Other_Details FROM Documents_to_be_Destroyed GROUP BY Other_Details HAVING MIN(Document_ID) = 99;",
        "question": "Select other details from documents to be destroyed grouped by other details with minimum document id equal to 99",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Calendar",
            "Documents_to_be_Destroyed",
            "Document_Locations",
            "All_Documents",
            "Ref_Locations",
            "Employees"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "other",
            "details",
            "from",
            "documents",
            "to",
            "be",
            "destroyed",
            "grouped",
            "by",
            "other",
            "details",
            "with",
            "minimum",
            "document",
            "id",
            "equal",
            "to",
            "99"
        ],
        "query_toks": [
            "SELECT",
            "Other_Details",
            "FROM",
            "Documents_to_be_Destroyed",
            "GROUP",
            "BY",
            "Other_Details",
            "HAVING",
            "MIN",
            "(",
            "Document_ID",
            ")",
            "=",
            "99"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            "from",
            "documents_to_be_destroyed",
            "group",
            "by",
            "other_details",
            "having",
            "min",
            "(",
            "document_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__documents_to_be_destroyed__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__documents_to_be_destroyed.other_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__documents_to_be_destroyed.other_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__documents_to_be_destroyed.document_id__",
                            false
                        ],
                        null
                    ],
                    99.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "query": "SELECT Location_Code FROM Document_Locations GROUP BY Location_Code HAVING MIN(Document_ID) = 252;",
        "question": "Select location code from document locations grouped by location code with minimum document id equal to 252",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Calendar",
            "Documents_to_be_Destroyed",
            "Document_Locations",
            "All_Documents",
            "Ref_Locations",
            "Employees"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "location",
            "code",
            "from",
            "document",
            "locations",
            "grouped",
            "by",
            "location",
            "code",
            "with",
            "minimum",
            "document",
            "id",
            "equal",
            "to",
            "252"
        ],
        "query_toks": [
            "SELECT",
            "Location_Code",
            "FROM",
            "Document_Locations",
            "GROUP",
            "BY",
            "Location_Code",
            "HAVING",
            "MIN",
            "(",
            "Document_ID",
            ")",
            "=",
            "252"
        ],
        "query_toks_no_value": [
            "select",
            "location_code",
            "from",
            "document_locations",
            "group",
            "by",
            "location_code",
            "having",
            "min",
            "(",
            "document_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__document_locations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__document_locations.location_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__document_locations.location_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__document_locations.document_id__",
                            false
                        ],
                        null
                    ],
                    252.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "query": "SELECT Other_Details FROM All_Documents GROUP BY Other_Details HAVING MIN(Document_ID) = 260;",
        "question": "Select other details from all documents grouped by other details with minimum document id equal to 260",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Calendar",
            "Documents_to_be_Destroyed",
            "Document_Locations",
            "All_Documents",
            "Ref_Locations",
            "Employees"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "other",
            "details",
            "from",
            "all",
            "documents",
            "grouped",
            "by",
            "other",
            "details",
            "with",
            "minimum",
            "document",
            "id",
            "equal",
            "to",
            "260"
        ],
        "query_toks": [
            "SELECT",
            "Other_Details",
            "FROM",
            "All_Documents",
            "GROUP",
            "BY",
            "Other_Details",
            "HAVING",
            "MIN",
            "(",
            "Document_ID",
            ")",
            "=",
            "260"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            "from",
            "all_documents",
            "group",
            "by",
            "other_details",
            "having",
            "min",
            "(",
            "document_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__all_documents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all_documents.other_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__all_documents.other_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__all_documents.document_id__",
                            false
                        ],
                        null
                    ],
                    260.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "query": "SELECT Role_Code FROM Employees GROUP BY Role_Code HAVING MAX(Employee_ID) = 30;",
        "question": "Select role code from employees grouped by role code with maximum employee id equal to 30",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Calendar",
            "Documents_to_be_Destroyed",
            "Document_Locations",
            "All_Documents",
            "Ref_Locations",
            "Employees"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "role",
            "code",
            "from",
            "employees",
            "grouped",
            "by",
            "role",
            "code",
            "with",
            "maximum",
            "employee",
            "id",
            "equal",
            "to",
            "30"
        ],
        "query_toks": [
            "SELECT",
            "Role_Code",
            "FROM",
            "Employees",
            "GROUP",
            "BY",
            "Role_Code",
            "HAVING",
            "MAX",
            "(",
            "Employee_ID",
            ")",
            "=",
            "30"
        ],
        "query_toks_no_value": [
            "select",
            "role_code",
            "from",
            "employees",
            "group",
            "by",
            "role_code",
            "having",
            "max",
            "(",
            "employee_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__employees__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__employees.role_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__employees.role_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__employees.employee_id__",
                            false
                        ],
                        null
                    ],
                    30.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "university_basketball",
        "query": "SELECT ACC_Home FROM basketball_match GROUP BY ACC_Home HAVING MIN(All_Games_Percent) = 0.6;",
        "question": "Select acc home from basketball match grouped by acc home with minimum all games percent equal to 0.6",
        "tables": [
            "basketball_match",
            "university"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "acc",
            "home",
            "from",
            "basketball",
            "match",
            "grouped",
            "by",
            "acc",
            "home",
            "with",
            "minimum",
            "all",
            "games",
            "percent",
            "equal",
            "to",
            "0.6"
        ],
        "query_toks": [
            "SELECT",
            "ACC_Home",
            "FROM",
            "basketball_match",
            "GROUP",
            "BY",
            "ACC_Home",
            "HAVING",
            "MIN",
            "(",
            "All_Games_Percent",
            ")",
            "=",
            "0.6"
        ],
        "query_toks_no_value": [
            "select",
            "acc_home",
            "from",
            "basketball_match",
            "group",
            "by",
            "acc_home",
            "having",
            "min",
            "(",
            "all_games_percent",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__basketball_match__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__basketball_match.acc_home__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__basketball_match.acc_home__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__basketball_match.all_games_percent__",
                            false
                        ],
                        null
                    ],
                    0.6,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "university_basketball",
        "query": "SELECT Primary_conference FROM university GROUP BY Primary_conference HAVING MAX(Enrollment) = 2100.0;",
        "question": "Select primary conference from university grouped by primary conference with maximum enrollment equal to 2100.0",
        "tables": [
            "basketball_match",
            "university"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "primary",
            "conference",
            "from",
            "university",
            "grouped",
            "by",
            "primary",
            "conference",
            "with",
            "maximum",
            "enrollment",
            "equal",
            "to",
            "2100.0"
        ],
        "query_toks": [
            "SELECT",
            "Primary_conference",
            "FROM",
            "university",
            "GROUP",
            "BY",
            "Primary_conference",
            "HAVING",
            "MAX",
            "(",
            "Enrollment",
            ")",
            "=",
            "2100.0"
        ],
        "query_toks_no_value": [
            "select",
            "primary_conference",
            "from",
            "university",
            "group",
            "by",
            "primary_conference",
            "having",
            "max",
            "(",
            "enrollment",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__university__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__university.primary_conference__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__university.primary_conference__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__university.enrollment__",
                            false
                        ],
                        null
                    ],
                    2100.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_2",
        "query": "SELECT decision FROM Tryout GROUP BY decision HAVING MAX(pID) = 10001;",
        "question": "Select decision from tryout grouped by decision with maximum player id equal to 10001",
        "tables": [
            "Tryout",
            "Player",
            "College"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "decision",
            "from",
            "tryout",
            "grouped",
            "by",
            "decision",
            "with",
            "maximum",
            "player",
            "id",
            "equal",
            "to",
            "10001"
        ],
        "query_toks": [
            "SELECT",
            "decision",
            "FROM",
            "Tryout",
            "GROUP",
            "BY",
            "decision",
            "HAVING",
            "MAX",
            "(",
            "pID",
            ")",
            "=",
            "10001"
        ],
        "query_toks_no_value": [
            "select",
            "decision",
            "from",
            "tryout",
            "group",
            "by",
            "decision",
            "having",
            "max",
            "(",
            "pid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__tryout__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__tryout.decision__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__tryout.decision__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__tryout.pid__",
                            false
                        ],
                        null
                    ],
                    10001.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_2",
        "query": "SELECT pName FROM Player GROUP BY pName HAVING MAX(pID) = 20002;",
        "question": "Select player name from player grouped by player name with maximum player id equal to 20002",
        "tables": [
            "Tryout",
            "Player",
            "College"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "player",
            "name",
            "from",
            "player",
            "grouped",
            "by",
            "player",
            "name",
            "with",
            "maximum",
            "player",
            "id",
            "equal",
            "to",
            "20002"
        ],
        "query_toks": [
            "SELECT",
            "pName",
            "FROM",
            "Player",
            "GROUP",
            "BY",
            "pName",
            "HAVING",
            "MAX",
            "(",
            "pID",
            ")",
            "=",
            "20002"
        ],
        "query_toks_no_value": [
            "select",
            "pname",
            "from",
            "player",
            "group",
            "by",
            "pname",
            "having",
            "max",
            "(",
            "pid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__player__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__player.pname__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__player.pname__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__player.pid__",
                            false
                        ],
                        null
                    ],
                    20002.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_2",
        "query": "SELECT state FROM College GROUP BY state HAVING MIN(enr) = 18000;",
        "question": "Select state from college grouped by state with minimum enrollment equal to 18000",
        "tables": [
            "Tryout",
            "Player",
            "College"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "state",
            "from",
            "college",
            "grouped",
            "by",
            "state",
            "with",
            "minimum",
            "enrollment",
            "equal",
            "to",
            "18000"
        ],
        "query_toks": [
            "SELECT",
            "state",
            "FROM",
            "College",
            "GROUP",
            "BY",
            "state",
            "HAVING",
            "MIN",
            "(",
            "enr",
            ")",
            "=",
            "18000"
        ],
        "query_toks_no_value": [
            "select",
            "state",
            "from",
            "college",
            "group",
            "by",
            "state",
            "having",
            "min",
            "(",
            "enr",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__college__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__college.state__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__college.state__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__college.enr__",
                            false
                        ],
                        null
                    ],
                    18000.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "activity_1",
        "query": "SELECT LName FROM Student GROUP BY LName HAVING MAX(Advisor) = 8772;",
        "question": "Select last name from student grouped by last name with maximum advisor equal to 8772",
        "tables": [
            "Student",
            "Faculty_Participates_in",
            "Activity",
            "Faculty",
            "Participates_in"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "last",
            "name",
            "from",
            "student",
            "grouped",
            "by",
            "last",
            "name",
            "with",
            "maximum",
            "advisor",
            "equal",
            "to",
            "8772"
        ],
        "query_toks": [
            "SELECT",
            "LName",
            "FROM",
            "Student",
            "GROUP",
            "BY",
            "LName",
            "HAVING",
            "MAX",
            "(",
            "Advisor",
            ")",
            "=",
            "8772"
        ],
        "query_toks_no_value": [
            "select",
            "lname",
            "from",
            "student",
            "group",
            "by",
            "lname",
            "having",
            "max",
            "(",
            "advisor",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.lname__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__student.lname__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__student.advisor__",
                            false
                        ],
                        null
                    ],
                    8772.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "activity_1",
        "query": "SELECT activity_name FROM Activity GROUP BY activity_name HAVING MIN(actid) = 779;",
        "question": "Select activity name from activity grouped by activity name with minimum activity id equal to 779",
        "tables": [
            "Student",
            "Faculty_Participates_in",
            "Activity",
            "Faculty",
            "Participates_in"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "activity",
            "name",
            "from",
            "activity",
            "grouped",
            "by",
            "activity",
            "name",
            "with",
            "minimum",
            "activity",
            "id",
            "equal",
            "to",
            "779"
        ],
        "query_toks": [
            "SELECT",
            "activity_name",
            "FROM",
            "Activity",
            "GROUP",
            "BY",
            "activity_name",
            "HAVING",
            "MIN",
            "(",
            "actid",
            ")",
            "=",
            "779"
        ],
        "query_toks_no_value": [
            "select",
            "activity_name",
            "from",
            "activity",
            "group",
            "by",
            "activity_name",
            "having",
            "min",
            "(",
            "actid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__activity__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__activity.activity_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__activity.activity_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__activity.actid__",
                            false
                        ],
                        null
                    ],
                    779.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "activity_1",
        "query": "SELECT Room FROM Faculty GROUP BY Room HAVING MAX(Phone) = 5106;",
        "question": "Select room from faculty grouped by room with maximum phone equal to 5106",
        "tables": [
            "Student",
            "Faculty_Participates_in",
            "Activity",
            "Faculty",
            "Participates_in"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "room",
            "from",
            "faculty",
            "grouped",
            "by",
            "room",
            "with",
            "maximum",
            "phone",
            "equal",
            "to",
            "5106"
        ],
        "query_toks": [
            "SELECT",
            "Room",
            "FROM",
            "Faculty",
            "GROUP",
            "BY",
            "Room",
            "HAVING",
            "MAX",
            "(",
            "Phone",
            ")",
            "=",
            "5106"
        ],
        "query_toks_no_value": [
            "select",
            "room",
            "from",
            "faculty",
            "group",
            "by",
            "room",
            "having",
            "max",
            "(",
            "phone",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__faculty__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__faculty.room__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__faculty.room__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__faculty.phone__",
                            false
                        ],
                        null
                    ],
                    5106.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Name FROM Staff GROUP BY Name HAVING MAX(Staff_ID) = 170;",
        "question": "Select name from staff grouped by name with maximum staff id equal to 170",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "staff",
            "grouped",
            "by",
            "name",
            "with",
            "maximum",
            "staff",
            "id",
            "equal",
            "to",
            "170"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "Staff",
            "GROUP",
            "BY",
            "Name",
            "HAVING",
            "MAX",
            "(",
            "Staff_ID",
            ")",
            "=",
            "170"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "staff",
            "group",
            "by",
            "name",
            "having",
            "max",
            "(",
            "staff_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__staff__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__staff.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__staff.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__staff.staff_id__",
                            false
                        ],
                        null
                    ],
                    170.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Visit_Details FROM Visits GROUP BY Visit_Details HAVING MAX(Tourist_Attraction_ID) = 6852;",
        "question": "Select visit details from visits grouped by visit details with maximum tourist attraction id equal to 6852",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "visit",
            "details",
            "from",
            "visits",
            "grouped",
            "by",
            "visit",
            "details",
            "with",
            "maximum",
            "tourist",
            "attraction",
            "id",
            "equal",
            "to",
            "6852"
        ],
        "query_toks": [
            "SELECT",
            "Visit_Details",
            "FROM",
            "Visits",
            "GROUP",
            "BY",
            "Visit_Details",
            "HAVING",
            "MAX",
            "(",
            "Tourist_Attraction_ID",
            ")",
            "=",
            "6852"
        ],
        "query_toks_no_value": [
            "select",
            "visit_details",
            "from",
            "visits",
            "group",
            "by",
            "visit_details",
            "having",
            "max",
            "(",
            "tourist_attraction_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__visits__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__visits.visit_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__visits.visit_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__visits.tourist_attraction_id__",
                            false
                        ],
                        null
                    ],
                    6852.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Feature_Details FROM Features GROUP BY Feature_Details HAVING MIN(Feature_ID) = 523;",
        "question": "Select feature details from features grouped by feature details with minimum feature id equal to 523",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "feature",
            "details",
            "from",
            "features",
            "grouped",
            "by",
            "feature",
            "details",
            "with",
            "minimum",
            "feature",
            "id",
            "equal",
            "to",
            "523"
        ],
        "query_toks": [
            "SELECT",
            "Feature_Details",
            "FROM",
            "Features",
            "GROUP",
            "BY",
            "Feature_Details",
            "HAVING",
            "MIN",
            "(",
            "Feature_ID",
            ")",
            "=",
            "523"
        ],
        "query_toks_no_value": [
            "select",
            "feature_details",
            "from",
            "features",
            "group",
            "by",
            "feature_details",
            "having",
            "min",
            "(",
            "feature_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__features__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__features.feature_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__features.feature_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__features.feature_id__",
                            false
                        ],
                        null
                    ],
                    523.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Royal_Family_Details FROM Royal_Family GROUP BY Royal_Family_Details HAVING MIN(Royal_Family_ID) = 9561;",
        "question": "Select royal family details from royal family grouped by royal family details with minimum royal family id equal to 9561",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "royal",
            "family",
            "details",
            "from",
            "royal",
            "family",
            "grouped",
            "by",
            "royal",
            "family",
            "details",
            "with",
            "minimum",
            "royal",
            "family",
            "id",
            "equal",
            "to",
            "9561"
        ],
        "query_toks": [
            "SELECT",
            "Royal_Family_Details",
            "FROM",
            "Royal_Family",
            "GROUP",
            "BY",
            "Royal_Family_Details",
            "HAVING",
            "MIN",
            "(",
            "Royal_Family_ID",
            ")",
            "=",
            "9561"
        ],
        "query_toks_no_value": [
            "select",
            "royal_family_details",
            "from",
            "royal_family",
            "group",
            "by",
            "royal_family_details",
            "having",
            "min",
            "(",
            "royal_family_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__royal_family__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__royal_family.royal_family_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__royal_family.royal_family_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__royal_family.royal_family_id__",
                            false
                        ],
                        null
                    ],
                    9561.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT star_rating_code FROM Hotels GROUP BY star_rating_code HAVING MAX(price_range) = 17012.682586009;",
        "question": "Select star rating code from hotels grouped by star rating code with maximum price range equal to 17012.682586009",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "star",
            "rating",
            "code",
            "from",
            "hotels",
            "grouped",
            "by",
            "star",
            "rating",
            "code",
            "with",
            "maximum",
            "price",
            "range",
            "equal",
            "to",
            "17012.682586009"
        ],
        "query_toks": [
            "SELECT",
            "star_rating_code",
            "FROM",
            "Hotels",
            "GROUP",
            "BY",
            "star_rating_code",
            "HAVING",
            "MAX",
            "(",
            "price_range",
            ")",
            "=",
            "17012.682586009"
        ],
        "query_toks_no_value": [
            "select",
            "star_rating_code",
            "from",
            "hotels",
            "group",
            "by",
            "star_rating_code",
            "having",
            "max",
            "(",
            "price_range",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__hotels__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__hotels.star_rating_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__hotels.star_rating_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__hotels.price_range__",
                            false
                        ],
                        null
                    ],
                    17012.682586009,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Market_Details FROM Street_Markets GROUP BY Market_Details HAVING MIN(Market_ID) = 6852;",
        "question": "Select market details from street markets grouped by market details with minimum market id equal to 6852",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "market",
            "details",
            "from",
            "street",
            "markets",
            "grouped",
            "by",
            "market",
            "details",
            "with",
            "minimum",
            "market",
            "id",
            "equal",
            "to",
            "6852"
        ],
        "query_toks": [
            "SELECT",
            "Market_Details",
            "FROM",
            "Street_Markets",
            "GROUP",
            "BY",
            "Market_Details",
            "HAVING",
            "MIN",
            "(",
            "Market_ID",
            ")",
            "=",
            "6852"
        ],
        "query_toks_no_value": [
            "select",
            "market_details",
            "from",
            "street_markets",
            "group",
            "by",
            "market_details",
            "having",
            "min",
            "(",
            "market_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__street_markets__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__street_markets.market_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__street_markets.market_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__street_markets.market_id__",
                            false
                        ],
                        null
                    ],
                    6852.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Tourist_Details FROM Visitors GROUP BY Tourist_Details HAVING MAX(Tourist_ID) = 241;",
        "question": "Select tourist details from visitors grouped by tourist details with maximum tourist id equal to 241",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "tourist",
            "details",
            "from",
            "visitors",
            "grouped",
            "by",
            "tourist",
            "details",
            "with",
            "maximum",
            "tourist",
            "id",
            "equal",
            "to",
            "241"
        ],
        "query_toks": [
            "SELECT",
            "Tourist_Details",
            "FROM",
            "Visitors",
            "GROUP",
            "BY",
            "Tourist_Details",
            "HAVING",
            "MAX",
            "(",
            "Tourist_ID",
            ")",
            "=",
            "241"
        ],
        "query_toks_no_value": [
            "select",
            "tourist_details",
            "from",
            "visitors",
            "group",
            "by",
            "tourist_details",
            "having",
            "max",
            "(",
            "tourist_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__visitors__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__visitors.tourist_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__visitors.tourist_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__visitors.tourist_id__",
                            false
                        ],
                        null
                    ],
                    241.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Museum_Details FROM Museums GROUP BY Museum_Details HAVING MAX(Museum_ID) = 5076;",
        "question": "Select museum details from museums grouped by museum details with maximum museum id equal to 5076",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "museum",
            "details",
            "from",
            "museums",
            "grouped",
            "by",
            "museum",
            "details",
            "with",
            "maximum",
            "museum",
            "id",
            "equal",
            "to",
            "5076"
        ],
        "query_toks": [
            "SELECT",
            "Museum_Details",
            "FROM",
            "Museums",
            "GROUP",
            "BY",
            "Museum_Details",
            "HAVING",
            "MAX",
            "(",
            "Museum_ID",
            ")",
            "=",
            "5076"
        ],
        "query_toks_no_value": [
            "select",
            "museum_details",
            "from",
            "museums",
            "group",
            "by",
            "museum_details",
            "having",
            "max",
            "(",
            "museum_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__museums__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__museums.museum_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__museums.museum_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__museums.museum_id__",
                            false
                        ],
                        null
                    ],
                    5076.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Other_Details FROM Photos GROUP BY Other_Details HAVING MIN(Photo_ID) = 537;",
        "question": "Select other details from photos grouped by other details with minimum photo id equal to 537",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "other",
            "details",
            "from",
            "photos",
            "grouped",
            "by",
            "other",
            "details",
            "with",
            "minimum",
            "photo",
            "id",
            "equal",
            "to",
            "537"
        ],
        "query_toks": [
            "SELECT",
            "Other_Details",
            "FROM",
            "Photos",
            "GROUP",
            "BY",
            "Other_Details",
            "HAVING",
            "MIN",
            "(",
            "Photo_ID",
            ")",
            "=",
            "537"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            "from",
            "photos",
            "group",
            "by",
            "other_details",
            "having",
            "min",
            "(",
            "photo_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__photos__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__photos.other_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__photos.other_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__photos.photo_id__",
                            false
                        ],
                        null
                    ],
                    537.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Shop_Details FROM Shops GROUP BY Shop_Details HAVING MAX(Shop_ID) = 8429;",
        "question": "Select shop details from shops grouped by shop details with maximum shop id equal to 8429",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "shop",
            "details",
            "from",
            "shops",
            "grouped",
            "by",
            "shop",
            "details",
            "with",
            "maximum",
            "shop",
            "id",
            "equal",
            "to",
            "8429"
        ],
        "query_toks": [
            "SELECT",
            "Shop_Details",
            "FROM",
            "Shops",
            "GROUP",
            "BY",
            "Shop_Details",
            "HAVING",
            "MAX",
            "(",
            "Shop_ID",
            ")",
            "=",
            "8429"
        ],
        "query_toks_no_value": [
            "select",
            "shop_details",
            "from",
            "shops",
            "group",
            "by",
            "shop_details",
            "having",
            "max",
            "(",
            "shop_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__shops__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__shops.shop_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__shops.shop_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__shops.shop_id__",
                            false
                        ],
                        null
                    ],
                    8429.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Address FROM Locations GROUP BY Address HAVING MIN(Location_ID) = 603;",
        "question": "Select address from locations grouped by address with minimum location id equal to 603",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "address",
            "from",
            "locations",
            "grouped",
            "by",
            "address",
            "with",
            "minimum",
            "location",
            "id",
            "equal",
            "to",
            "603"
        ],
        "query_toks": [
            "SELECT",
            "Address",
            "FROM",
            "Locations",
            "GROUP",
            "BY",
            "Address",
            "HAVING",
            "MIN",
            "(",
            "Location_ID",
            ")",
            "=",
            "603"
        ],
        "query_toks_no_value": [
            "select",
            "address",
            "from",
            "locations",
            "group",
            "by",
            "address",
            "having",
            "min",
            "(",
            "location_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__locations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__locations.address__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__locations.address__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__locations.location_id__",
                            false
                        ],
                        null
                    ],
                    603.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Theme_Park_Details FROM Theme_Parks GROUP BY Theme_Park_Details HAVING MIN(Theme_Park_ID) = 6476;",
        "question": "Select theme park details from theme parks grouped by theme park details with minimum theme park id equal to 6476",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "theme",
            "park",
            "details",
            "from",
            "theme",
            "parks",
            "grouped",
            "by",
            "theme",
            "park",
            "details",
            "with",
            "minimum",
            "theme",
            "park",
            "id",
            "equal",
            "to",
            "6476"
        ],
        "query_toks": [
            "SELECT",
            "Theme_Park_Details",
            "FROM",
            "Theme_Parks",
            "GROUP",
            "BY",
            "Theme_Park_Details",
            "HAVING",
            "MIN",
            "(",
            "Theme_Park_ID",
            ")",
            "=",
            "6476"
        ],
        "query_toks_no_value": [
            "select",
            "theme_park_details",
            "from",
            "theme_parks",
            "group",
            "by",
            "theme_park_details",
            "having",
            "min",
            "(",
            "theme_park_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__theme_parks__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__theme_parks.theme_park_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__theme_parks.theme_park_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__theme_parks.theme_park_id__",
                            false
                        ],
                        null
                    ],
                    6476.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Name FROM Tourist_Attractions GROUP BY Name HAVING MIN(Location_ID) = 661;",
        "question": "Select name from tourist attractions grouped by name with minimum location id equal to 661",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "tourist",
            "attractions",
            "grouped",
            "by",
            "name",
            "with",
            "minimum",
            "location",
            "id",
            "equal",
            "to",
            "661"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "Tourist_Attractions",
            "GROUP",
            "BY",
            "Name",
            "HAVING",
            "MIN",
            "(",
            "Location_ID",
            ")",
            "=",
            "661"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "tourist_attractions",
            "group",
            "by",
            "name",
            "having",
            "min",
            "(",
            "location_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__tourist_attractions__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__tourist_attractions.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__tourist_attractions.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__tourist_attractions.location_id__",
                            false
                        ],
                        null
                    ],
                    661.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "twitter_1",
        "query": "SELECT name FROM user_profiles GROUP BY name HAVING MIN(uid) = 2;",
        "question": "Select name from user profiles grouped by name with minimum uid equal to 2",
        "tables": [
            "user_profiles",
            "follows",
            "tweets"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "user",
            "profiles",
            "grouped",
            "by",
            "name",
            "with",
            "minimum",
            "uid",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "user_profiles",
            "GROUP",
            "BY",
            "name",
            "HAVING",
            "MIN",
            "(",
            "uid",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "user_profiles",
            "group",
            "by",
            "name",
            "having",
            "min",
            "(",
            "uid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__user_profiles__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__user_profiles.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__user_profiles.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__user_profiles.uid__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "twitter_1",
        "query": "SELECT text FROM tweets GROUP BY text HAVING MIN(uid) = 5;",
        "question": "Select text from tweets grouped by text with minimum user id equal to 5",
        "tables": [
            "user_profiles",
            "follows",
            "tweets"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "text",
            "from",
            "tweets",
            "grouped",
            "by",
            "text",
            "with",
            "minimum",
            "user",
            "id",
            "equal",
            "to",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "text",
            "FROM",
            "tweets",
            "GROUP",
            "BY",
            "text",
            "HAVING",
            "MIN",
            "(",
            "uid",
            ")",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "text",
            "from",
            "tweets",
            "group",
            "by",
            "text",
            "having",
            "min",
            "(",
            "uid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__tweets__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__tweets.text__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__tweets.text__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__tweets.uid__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "election_representative",
        "query": "SELECT Date FROM election GROUP BY Date HAVING MIN(Vote_Percent) = 18.5;",
        "question": "Select date from election grouped by date with minimum vote percent equal to 18.5",
        "tables": [
            "election",
            "representative"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "date",
            "from",
            "election",
            "grouped",
            "by",
            "date",
            "with",
            "minimum",
            "vote",
            "percent",
            "equal",
            "to",
            "18.5"
        ],
        "query_toks": [
            "SELECT",
            "Date",
            "FROM",
            "election",
            "GROUP",
            "BY",
            "Date",
            "HAVING",
            "MIN",
            "(",
            "Vote_Percent",
            ")",
            "=",
            "18.5"
        ],
        "query_toks_no_value": [
            "select",
            "date",
            "from",
            "election",
            "group",
            "by",
            "date",
            "having",
            "min",
            "(",
            "vote_percent",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__election__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__election.date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__election.date__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__election.vote_percent__",
                            false
                        ],
                        null
                    ],
                    18.5,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "election_representative",
        "query": "SELECT Lifespan FROM representative GROUP BY Lifespan HAVING MIN(Representative_ID) = 6;",
        "question": "Select lifespan from representative grouped by lifespan with minimum representative id equal to 6",
        "tables": [
            "election",
            "representative"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "lifespan",
            "from",
            "representative",
            "grouped",
            "by",
            "lifespan",
            "with",
            "minimum",
            "representative",
            "id",
            "equal",
            "to",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "Lifespan",
            "FROM",
            "representative",
            "GROUP",
            "BY",
            "Lifespan",
            "HAVING",
            "MIN",
            "(",
            "Representative_ID",
            ")",
            "=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "lifespan",
            "from",
            "representative",
            "group",
            "by",
            "lifespan",
            "having",
            "min",
            "(",
            "representative_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__representative__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__representative.lifespan__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__representative.lifespan__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__representative.representative_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_2",
        "query": "SELECT Fname FROM Student GROUP BY Fname HAVING MIN(Advisor) = 8722;",
        "question": "Select first name from student grouped by first name with minimum advisor equal to 8722",
        "tables": [
            "Student",
            "Voting_record"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "first",
            "name",
            "from",
            "student",
            "grouped",
            "by",
            "first",
            "name",
            "with",
            "minimum",
            "advisor",
            "equal",
            "to",
            "8722"
        ],
        "query_toks": [
            "SELECT",
            "Fname",
            "FROM",
            "Student",
            "GROUP",
            "BY",
            "Fname",
            "HAVING",
            "MIN",
            "(",
            "Advisor",
            ")",
            "=",
            "8722"
        ],
        "query_toks_no_value": [
            "select",
            "fname",
            "from",
            "student",
            "group",
            "by",
            "fname",
            "having",
            "min",
            "(",
            "advisor",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.fname__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__student.fname__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__student.advisor__",
                            false
                        ],
                        null
                    ],
                    8722.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_2",
        "query": "SELECT Registration_Date FROM Voting_record GROUP BY Registration_Date HAVING MAX(StuID) = 1002;",
        "question": "Select registration date from voting record grouped by registration date with maximum student id equal to 1002",
        "tables": [
            "Student",
            "Voting_record"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "registration",
            "date",
            "from",
            "voting",
            "record",
            "grouped",
            "by",
            "registration",
            "date",
            "with",
            "maximum",
            "student",
            "id",
            "equal",
            "to",
            "1002"
        ],
        "query_toks": [
            "SELECT",
            "Registration_Date",
            "FROM",
            "Voting_record",
            "GROUP",
            "BY",
            "Registration_Date",
            "HAVING",
            "MAX",
            "(",
            "StuID",
            ")",
            "=",
            "1002"
        ],
        "query_toks_no_value": [
            "select",
            "registration_date",
            "from",
            "voting_record",
            "group",
            "by",
            "registration_date",
            "having",
            "max",
            "(",
            "stuid",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__voting_record__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__voting_record.registration_date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__voting_record.registration_date__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__voting_record.stuid__",
                            false
                        ],
                        null
                    ],
                    1002.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wedding",
        "query": "SELECT Continuation_of FROM church GROUP BY Continuation_of HAVING MAX(Open_Date) = 1832;",
        "question": "Select continuation of from church grouped by continuation of with maximum open date equal to 1832",
        "tables": [
            "church",
            "wedding",
            "people"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "continuation",
            "of",
            "from",
            "church",
            "grouped",
            "by",
            "continuation",
            "of",
            "with",
            "maximum",
            "open",
            "date",
            "equal",
            "to",
            "1832"
        ],
        "query_toks": [
            "SELECT",
            "Continuation_of",
            "FROM",
            "church",
            "GROUP",
            "BY",
            "Continuation_of",
            "HAVING",
            "MAX",
            "(",
            "Open_Date",
            ")",
            "=",
            "1832"
        ],
        "query_toks_no_value": [
            "select",
            "continuation_of",
            "from",
            "church",
            "group",
            "by",
            "continuation_of",
            "having",
            "max",
            "(",
            "open_date",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__church__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__church.continuation_of__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__church.continuation_of__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__church.open_date__",
                            false
                        ],
                        null
                    ],
                    1832.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wedding",
        "query": "SELECT Country FROM people GROUP BY Country HAVING MAX(Age) = 36;",
        "question": "Select country from people grouped by country with maximum age equal to 36",
        "tables": [
            "church",
            "wedding",
            "people"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "country",
            "from",
            "people",
            "grouped",
            "by",
            "country",
            "with",
            "maximum",
            "age",
            "equal",
            "to",
            "36"
        ],
        "query_toks": [
            "SELECT",
            "Countr",
            "(",
            "Countr",
            ")",
            "FROM",
            "people",
            "GROUP",
            "BY",
            "Countr",
            "(",
            "Countr",
            ")",
            "HAVING",
            "MAX",
            "(",
            "Age",
            ")",
            "=",
            "36"
        ],
        "query_toks_no_value": [
            "select",
            "countr",
            "(",
            "countr",
            ")",
            "from",
            "people",
            "group",
            "by",
            "countr",
            "(",
            "countr",
            ")",
            "having",
            "max",
            "(",
            "age",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__people__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__people.country__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__people.country__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__people.age__",
                            false
                        ],
                        null
                    ],
                    36.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "news_report",
        "query": "SELECT Date FROM event GROUP BY Date HAVING MIN(Event_Attendance) = 369;",
        "question": "Select date from event grouped by date with minimum event attendance equal to 369",
        "tables": [
            "event",
            "journalist",
            "news_report"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "date",
            "from",
            "event",
            "grouped",
            "by",
            "date",
            "with",
            "minimum",
            "event",
            "attendance",
            "equal",
            "to",
            "369"
        ],
        "query_toks": [
            "SELECT",
            "Date",
            "FROM",
            "event",
            "GROUP",
            "BY",
            "Date",
            "HAVING",
            "MIN",
            "(",
            "Event_Attendance",
            ")",
            "=",
            "369"
        ],
        "query_toks_no_value": [
            "select",
            "date",
            "from",
            "event",
            "group",
            "by",
            "date",
            "having",
            "min",
            "(",
            "event_attendance",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__event__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__event.date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__event.date__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__event.event_attendance__",
                            false
                        ],
                        null
                    ],
                    369.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "news_report",
        "query": "SELECT Nationality FROM journalist GROUP BY Nationality HAVING MIN(journalist_ID) = 5;",
        "question": "Select nationality from journalist grouped by nationality with minimum journalist id equal to 5",
        "tables": [
            "event",
            "journalist",
            "news_report"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "nationality",
            "from",
            "journalist",
            "grouped",
            "by",
            "nationality",
            "with",
            "minimum",
            "journalist",
            "id",
            "equal",
            "to",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "Nationality",
            "FROM",
            "journalist",
            "GROUP",
            "BY",
            "Nationality",
            "HAVING",
            "MIN",
            "(",
            "journalist_ID",
            ")",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "nationality",
            "from",
            "journalist",
            "group",
            "by",
            "nationality",
            "having",
            "min",
            "(",
            "journalist_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__journalist__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__journalist.nationality__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__journalist.nationality__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__journalist.journalist_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "news_report",
        "query": "SELECT Work_Type FROM news_report GROUP BY Work_Type HAVING MAX(journalist_ID) = 7;",
        "question": "Select work type from news report grouped by work type with maximum journalist id equal to 7",
        "tables": [
            "event",
            "journalist",
            "news_report"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "work",
            "type",
            "from",
            "news",
            "report",
            "grouped",
            "by",
            "work",
            "type",
            "with",
            "maximum",
            "journalist",
            "id",
            "equal",
            "to",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "Work_Type",
            "FROM",
            "news_report",
            "GROUP",
            "BY",
            "Work_Type",
            "HAVING",
            "MAX",
            "(",
            "journalist_ID",
            ")",
            "=",
            "7"
        ],
        "query_toks_no_value": [
            "select",
            "work_type",
            "from",
            "news_report",
            "group",
            "by",
            "work_type",
            "having",
            "max",
            "(",
            "journalist_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__news_report__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__news_report.work_type__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__news_report.work_type__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__news_report.journalist_id__",
                            false
                        ],
                        null
                    ],
                    7.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wine_1",
        "query": "SELECT Grape FROM wine GROUP BY Grape HAVING MAX(Year) = 2009;",
        "question": "Select grape from wine grouped by grape with maximum year equal to 2009",
        "tables": [
            "wine",
            "grapes",
            "appellations"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "grape",
            "from",
            "wine",
            "grouped",
            "by",
            "grape",
            "with",
            "maximum",
            "year",
            "equal",
            "to",
            "2009"
        ],
        "query_toks": [
            "SELECT",
            "Grape",
            "FROM",
            "wine",
            "GROUP",
            "BY",
            "Grape",
            "HAVING",
            "MAX",
            "(",
            "Year",
            ")",
            "=",
            "2009"
        ],
        "query_toks_no_value": [
            "select",
            "grape",
            "from",
            "wine",
            "group",
            "by",
            "grape",
            "having",
            "max",
            "(",
            "year",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__wine__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__wine.grape__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__wine.grape__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__wine.year__",
                            false
                        ],
                        null
                    ],
                    2009.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wine_1",
        "query": "SELECT Color FROM grapes GROUP BY Color HAVING MIN(ID) = 19;",
        "question": "Select color from grapes grouped by color with minimum id equal to 19",
        "tables": [
            "wine",
            "grapes",
            "appellations"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "color",
            "from",
            "grapes",
            "grouped",
            "by",
            "color",
            "with",
            "minimum",
            "id",
            "equal",
            "to",
            "19"
        ],
        "query_toks": [
            "SELECT",
            "Color",
            "FROM",
            "grapes",
            "GROUP",
            "BY",
            "Color",
            "HAVING",
            "MIN",
            "(",
            "ID",
            ")",
            "=",
            "19"
        ],
        "query_toks_no_value": [
            "select",
            "color",
            "from",
            "grapes",
            "group",
            "by",
            "color",
            "having",
            "min",
            "(",
            "id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__grapes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__grapes.color__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__grapes.color__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__grapes.id__",
                            false
                        ],
                        null
                    ],
                    19.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wine_1",
        "query": "SELECT isAVA FROM appellations GROUP BY isAVA HAVING MIN(No) = 39;",
        "question": "Select isava from appellations grouped by isava with minimum no equal to 39",
        "tables": [
            "wine",
            "grapes",
            "appellations"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "isava",
            "from",
            "appellations",
            "grouped",
            "by",
            "isava",
            "with",
            "minimum",
            "no",
            "equal",
            "to",
            "39"
        ],
        "query_toks": [
            "SELECT",
            "isAVA",
            "FROM",
            "appellations",
            "GROUP",
            "BY",
            "isAVA",
            "HAVING",
            "MIN",
            "(",
            "No",
            ")",
            "=",
            "39"
        ],
        "query_toks_no_value": [
            "select",
            "isava",
            "from",
            "appellations",
            "group",
            "by",
            "isava",
            "having",
            "min",
            "(",
            "no",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__appellations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__appellations.isava__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__appellations.isava__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__appellations.no__",
                            false
                        ],
                        null
                    ],
                    39.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_addresses",
        "query": "SELECT contact_number FROM Customer_Contact_Channels GROUP BY contact_number HAVING MAX(customer_id) = 5;",
        "question": "Select contact number from customer contact channels grouped by contact number with maximum customer id equal to 5",
        "tables": [
            "Customer_Contact_Channels",
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "contact",
            "number",
            "from",
            "customer",
            "contact",
            "channels",
            "grouped",
            "by",
            "contact",
            "number",
            "with",
            "maximum",
            "customer",
            "id",
            "equal",
            "to",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "contact_number",
            "FROM",
            "Customer_Contact_Channels",
            "GROUP",
            "BY",
            "contact_number",
            "HAVING",
            "MAX",
            "(",
            "customer_id",
            ")",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "contact_number",
            "from",
            "customer_contact_channels",
            "group",
            "by",
            "contact_number",
            "having",
            "max",
            "(",
            "customer_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_contact_channels__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_contact_channels.contact_number__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customer_contact_channels.contact_number__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__customer_contact_channels.customer_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_addresses",
        "query": "SELECT product_details FROM Products GROUP BY product_details HAVING MAX(product_id) = 2;",
        "question": "Select product details from products grouped by product details with maximum product id equal to 2",
        "tables": [
            "Customer_Contact_Channels",
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "product",
            "details",
            "from",
            "products",
            "grouped",
            "by",
            "product",
            "details",
            "with",
            "maximum",
            "product",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "product_details",
            "FROM",
            "Products",
            "GROUP",
            "BY",
            "product_details",
            "HAVING",
            "MAX",
            "(",
            "product_id",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "product_details",
            "from",
            "products",
            "group",
            "by",
            "product_details",
            "having",
            "max",
            "(",
            "product_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products.product_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__products.product_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__products.product_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_addresses",
        "query": "SELECT order_quantity FROM Order_Items GROUP BY order_quantity HAVING MAX(product_id) = 1;",
        "question": "Select order quantity from order items grouped by order quantity with maximum product id equal to 1",
        "tables": [
            "Customer_Contact_Channels",
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "order",
            "quantity",
            "from",
            "order",
            "items",
            "grouped",
            "by",
            "order",
            "quantity",
            "with",
            "maximum",
            "product",
            "id",
            "equal",
            "to",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "order_quantity",
            "FROM",
            "Order_Items",
            "GROUP",
            "BY",
            "order_quantity",
            "HAVING",
            "MAX",
            "(",
            "product_id",
            ")",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "order_quantity",
            "from",
            "order_items",
            "group",
            "by",
            "order_quantity",
            "having",
            "max",
            "(",
            "product_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__order_items__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__order_items.order_quantity__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__order_items.order_quantity__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__order_items.product_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_addresses",
        "query": "SELECT zip_postcode FROM Addresses GROUP BY zip_postcode HAVING MAX(address_id) = 7;",
        "question": "Select zip postcode from addresses grouped by zip postcode with maximum address id equal to 7",
        "tables": [
            "Customer_Contact_Channels",
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "zip",
            "postcode",
            "from",
            "addresses",
            "grouped",
            "by",
            "zip",
            "postcode",
            "with",
            "maximum",
            "address",
            "id",
            "equal",
            "to",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "zip_postcode",
            "FROM",
            "Addresses",
            "GROUP",
            "BY",
            "zip_postcode",
            "HAVING",
            "MAX",
            "(",
            "address_id",
            ")",
            "=",
            "7"
        ],
        "query_toks_no_value": [
            "select",
            "zip_postcode",
            "from",
            "addresses",
            "group",
            "by",
            "zip_postcode",
            "having",
            "max",
            "(",
            "address_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__addresses.zip_postcode__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__addresses.zip_postcode__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__addresses.address_id__",
                            false
                        ],
                        null
                    ],
                    7.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_addresses",
        "query": "SELECT order_status FROM Customer_Orders GROUP BY order_status HAVING MIN(customer_id) = 3;",
        "question": "Select order status from customer orders grouped by order status with minimum customer id equal to 3",
        "tables": [
            "Customer_Contact_Channels",
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "order",
            "status",
            "from",
            "customer",
            "orders",
            "grouped",
            "by",
            "order",
            "status",
            "with",
            "minimum",
            "customer",
            "id",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "order_status",
            "FROM",
            "Customer_Orders",
            "GROUP",
            "BY",
            "order_status",
            "HAVING",
            "MIN",
            "(",
            "customer_id",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "order_status",
            "from",
            "customer_orders",
            "group",
            "by",
            "order_status",
            "having",
            "min",
            "(",
            "customer_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_orders__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_orders.order_status__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customer_orders.order_status__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__customer_orders.customer_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_addresses",
        "query": "SELECT address_type FROM Customer_Addresses GROUP BY address_type HAVING MAX(customer_id) = 2;",
        "question": "Select address type from customer addresses grouped by address type with maximum customer id equal to 2",
        "tables": [
            "Customer_Contact_Channels",
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "address",
            "type",
            "from",
            "customer",
            "addresses",
            "grouped",
            "by",
            "address",
            "type",
            "with",
            "maximum",
            "customer",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "address_type",
            "FROM",
            "Customer_Addresses",
            "GROUP",
            "BY",
            "address_type",
            "HAVING",
            "MAX",
            "(",
            "customer_id",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "address_type",
            "from",
            "customer_addresses",
            "group",
            "by",
            "address_type",
            "having",
            "max",
            "(",
            "customer_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_addresses.address_type__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customer_addresses.address_type__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__customer_addresses.customer_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_addresses",
        "query": "SELECT other_customer_details FROM Customers GROUP BY other_customer_details HAVING MIN(customer_id) = 14;",
        "question": "Select other customer details from customers grouped by other customer details with minimum customer id equal to 14",
        "tables": [
            "Customer_Contact_Channels",
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "other",
            "customer",
            "details",
            "from",
            "customers",
            "grouped",
            "by",
            "other",
            "customer",
            "details",
            "with",
            "minimum",
            "customer",
            "id",
            "equal",
            "to",
            "14"
        ],
        "query_toks": [
            "SELECT",
            "other_customer_details",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "other_customer_details",
            "HAVING",
            "MIN",
            "(",
            "customer_id",
            ")",
            "=",
            "14"
        ],
        "query_toks_no_value": [
            "select",
            "other_customer_details",
            "from",
            "customers",
            "group",
            "by",
            "other_customer_details",
            "having",
            "min",
            "(",
            "customer_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.other_customer_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customers.other_customer_details__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__customers.customer_id__",
                            false
                        ],
                        null
                    ],
                    14.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "protein_institute",
        "query": "SELECT building_id FROM building GROUP BY building_id HAVING MIN(Floors) = 12;",
        "question": "Select building id from building grouped by building id with minimum floors equal to 12",
        "tables": [
            "building",
            "protein",
            "Institution"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "building",
            "id",
            "from",
            "building",
            "grouped",
            "by",
            "building",
            "id",
            "with",
            "minimum",
            "floors",
            "equal",
            "to",
            "12"
        ],
        "query_toks": [
            "SELECT",
            "building_id",
            "FROM",
            "building",
            "GROUP",
            "BY",
            "building_id",
            "HAVING",
            "MIN",
            "(",
            "Floors",
            ")",
            "=",
            "12"
        ],
        "query_toks_no_value": [
            "select",
            "building_id",
            "from",
            "building",
            "group",
            "by",
            "building_id",
            "having",
            "min",
            "(",
            "floors",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__building__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__building.building_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__building.building_id__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__building.floors__",
                            false
                        ],
                        null
                    ],
                    12.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "protein_institute",
        "query": "SELECT sequence_identity_to_human_protein FROM protein GROUP BY sequence_identity_to_human_protein HAVING MAX(sequence_length) = 2086.0;",
        "question": "Select sequence identity to human protein from protein grouped by sequence identity to human protein with maximum sequence length equal to 2086.0",
        "tables": [
            "building",
            "protein",
            "Institution"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "sequence",
            "identity",
            "to",
            "human",
            "protein",
            "from",
            "protein",
            "grouped",
            "by",
            "sequence",
            "identity",
            "to",
            "human",
            "protein",
            "with",
            "maximum",
            "sequence",
            "length",
            "equal",
            "to",
            "2086.0"
        ],
        "query_toks": [
            "SELECT",
            "sequence_identity_to_human_protein",
            "FROM",
            "protein",
            "GROUP",
            "BY",
            "sequence_identity_to_human_protein",
            "HAVING",
            "MAX",
            "(",
            "sequence_length",
            ")",
            "=",
            "2086.0"
        ],
        "query_toks_no_value": [
            "select",
            "sequence_identity_to_human_protein",
            "from",
            "protein",
            "group",
            "by",
            "sequence_identity_to_human_protein",
            "having",
            "max",
            "(",
            "sequence_length",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__protein__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__protein.sequence_identity_to_human_protein__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__protein.sequence_identity_to_human_protein__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__protein.sequence_length__",
                            false
                        ],
                        null
                    ],
                    2086.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "protein_institute",
        "query": "SELECT Institution_id FROM Institution GROUP BY Institution_id HAVING MAX(Enrollment) = 3102;",
        "question": "Select institution id from institution grouped by institution id with maximum enrollment equal to 3102",
        "tables": [
            "building",
            "protein",
            "Institution"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "institution",
            "id",
            "from",
            "institution",
            "grouped",
            "by",
            "institution",
            "id",
            "with",
            "maximum",
            "enrollment",
            "equal",
            "to",
            "3102"
        ],
        "query_toks": [
            "SELECT",
            "Institution_id",
            "FROM",
            "Institution",
            "GROUP",
            "BY",
            "Institution_id",
            "HAVING",
            "MAX",
            "(",
            "Enrollment",
            ")",
            "=",
            "3102"
        ],
        "query_toks_no_value": [
            "select",
            "institution_id",
            "from",
            "institution",
            "group",
            "by",
            "institution_id",
            "having",
            "max",
            "(",
            "enrollment",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__institution__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__institution.institution_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__institution.institution_id__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__institution.enrollment__",
                            false
                        ],
                        null
                    ],
                    3102.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "school_player",
        "query": "SELECT School_Year FROM school_performance GROUP BY School_Year HAVING MIN(School_Id) = 3;",
        "question": "Select school year from school performance grouped by school year with minimum school id equal to 3",
        "tables": [
            "school_performance",
            "school",
            "player",
            "school_details"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "school",
            "year",
            "from",
            "school",
            "performance",
            "grouped",
            "by",
            "school",
            "year",
            "with",
            "minimum",
            "school",
            "id",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "School_Year",
            "FROM",
            "school_performance",
            "GROUP",
            "BY",
            "School_Year",
            "HAVING",
            "MIN",
            "(",
            "School_Id",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "school_year",
            "from",
            "school_performance",
            "group",
            "by",
            "school_year",
            "having",
            "min",
            "(",
            "school_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__school_performance__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__school_performance.school_year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__school_performance.school_year__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__school_performance.school_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "school_player",
        "query": "SELECT Denomination FROM school GROUP BY Denomination HAVING MAX(School_ID) = 5;",
        "question": "Select denomination from school grouped by denomination with maximum school id equal to 5",
        "tables": [
            "school_performance",
            "school",
            "player",
            "school_details"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "denomination",
            "from",
            "school",
            "grouped",
            "by",
            "denomination",
            "with",
            "maximum",
            "school",
            "id",
            "equal",
            "to",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "Denomination",
            "FROM",
            "school",
            "GROUP",
            "BY",
            "Denomination",
            "HAVING",
            "MAX",
            "(",
            "School_ID",
            ")",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "denomination",
            "from",
            "school",
            "group",
            "by",
            "denomination",
            "having",
            "max",
            "(",
            "school_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__school__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__school.denomination__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__school.denomination__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__school.school_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "school_player",
        "query": "SELECT Player FROM player GROUP BY Player HAVING MIN(Age) = 15;",
        "question": "Select player from player grouped by player with minimum age equal to 15",
        "tables": [
            "school_performance",
            "school",
            "player",
            "school_details"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "player",
            "from",
            "player",
            "grouped",
            "by",
            "player",
            "with",
            "minimum",
            "age",
            "equal",
            "to",
            "15"
        ],
        "query_toks": [
            "SELECT",
            "Player",
            "FROM",
            "player",
            "GROUP",
            "BY",
            "Player",
            "HAVING",
            "MIN",
            "(",
            "Age",
            ")",
            "=",
            "15"
        ],
        "query_toks_no_value": [
            "select",
            "player",
            "from",
            "player",
            "group",
            "by",
            "player",
            "having",
            "min",
            "(",
            "age",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__player__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__player.player__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__player.player__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__player.age__",
                            false
                        ],
                        null
                    ],
                    15.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "school_player",
        "query": "SELECT Division FROM school_details GROUP BY Division HAVING MIN(School_ID) = 4;",
        "question": "Select division from school details grouped by division with minimum school id equal to 4",
        "tables": [
            "school_performance",
            "school",
            "player",
            "school_details"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "division",
            "from",
            "school",
            "details",
            "grouped",
            "by",
            "division",
            "with",
            "minimum",
            "school",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Division",
            "FROM",
            "school_details",
            "GROUP",
            "BY",
            "Division",
            "HAVING",
            "MIN",
            "(",
            "School_ID",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "division",
            "from",
            "school_details",
            "group",
            "by",
            "division",
            "having",
            "min",
            "(",
            "school_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__school_details__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__school_details.division__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__school_details.division__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__school_details.school_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "phone_1",
        "query": "SELECT Type FROM screen_mode GROUP BY Type HAVING MIN(Hardware_colours) = 8.0;",
        "question": "Select type from screen mode grouped by type with minimum hardware colours equal to 8.0",
        "tables": [
            "screen_mode",
            "chip_model",
            "phone"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "type",
            "from",
            "screen",
            "mode",
            "grouped",
            "by",
            "type",
            "with",
            "minimum",
            "hardware",
            "colours",
            "equal",
            "to",
            "8.0"
        ],
        "query_toks": [
            "SELECT",
            "Type",
            "FROM",
            "screen_mode",
            "GROUP",
            "BY",
            "Type",
            "HAVING",
            "MIN",
            "(",
            "Hardware_colours",
            ")",
            "=",
            "8.0"
        ],
        "query_toks_no_value": [
            "select",
            "type",
            "from",
            "screen_mode",
            "group",
            "by",
            "type",
            "having",
            "min",
            "(",
            "hardware_colours",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__screen_mode__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__screen_mode.type__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__screen_mode.type__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__screen_mode.hardware_colours__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "phone_1",
        "query": "SELECT WiFi FROM chip_model GROUP BY WiFi HAVING MAX(ROM_MiB) = 32.0;",
        "question": "Select wifi from chip model grouped by wifi with maximum rom mib equal to 32.0",
        "tables": [
            "screen_mode",
            "chip_model",
            "phone"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "wifi",
            "from",
            "chip",
            "model",
            "grouped",
            "by",
            "wifi",
            "with",
            "maximum",
            "rom",
            "mib",
            "equal",
            "to",
            "32.0"
        ],
        "query_toks": [
            "SELECT",
            "WiFi",
            "FROM",
            "chip_model",
            "GROUP",
            "BY",
            "WiFi",
            "HAVING",
            "MAX",
            "(",
            "ROM_MiB",
            ")",
            "=",
            "32.0"
        ],
        "query_toks_no_value": [
            "select",
            "wifi",
            "from",
            "chip_model",
            "group",
            "by",
            "wifi",
            "having",
            "max",
            "(",
            "rom_mib",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__chip_model__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__chip_model.wifi__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__chip_model.wifi__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__chip_model.rom_mib__",
                            false
                        ],
                        null
                    ],
                    32.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "query": "SELECT Channel FROM Cartoon GROUP BY Channel HAVING MIN(id) = 8.0;",
        "question": "Select channel from cartoon grouped by channel with minimum id equal to 8.0",
        "tables": [
            "Cartoon",
            "TV_Channel",
            "TV_series"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "channel",
            "from",
            "cartoon",
            "grouped",
            "by",
            "channel",
            "with",
            "minimum",
            "id",
            "equal",
            "to",
            "8.0"
        ],
        "query_toks": [
            "SELECT",
            "Channel",
            "FROM",
            "Cartoon",
            "GROUP",
            "BY",
            "Channel",
            "HAVING",
            "MIN",
            "(",
            "id",
            ")",
            "=",
            "8.0"
        ],
        "query_toks_no_value": [
            "select",
            "channel",
            "from",
            "cartoon",
            "group",
            "by",
            "channel",
            "having",
            "min",
            "(",
            "id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__cartoon__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__cartoon.channel__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__cartoon.channel__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__cartoon.id__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "query": "SELECT Episode FROM TV_series GROUP BY Episode HAVING MAX(Weekly_Rank) = 62.0;",
        "question": "Select episode from tv series grouped by episode with maximum weekly rank equal to 62.0",
        "tables": [
            "Cartoon",
            "TV_Channel",
            "TV_series"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "episode",
            "from",
            "tv",
            "series",
            "grouped",
            "by",
            "episode",
            "with",
            "maximum",
            "weekly",
            "rank",
            "equal",
            "to",
            "62.0"
        ],
        "query_toks": [
            "SELECT",
            "Episode",
            "FROM",
            "TV_series",
            "GROUP",
            "BY",
            "Episode",
            "HAVING",
            "MAX",
            "(",
            "Weekly_Rank",
            ")",
            "=",
            "62.0"
        ],
        "query_toks_no_value": [
            "select",
            "episode",
            "from",
            "tv_series",
            "group",
            "by",
            "episode",
            "having",
            "max",
            "(",
            "weekly_rank",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__tv_series__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__tv_series.episode__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__tv_series.episode__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__tv_series.weekly_rank__",
                            false
                        ],
                        null
                    ],
                    62.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wrestler",
        "query": "SELECT Reign FROM wrestler GROUP BY Reign HAVING MIN(Wrestler_ID) = 9;",
        "question": "Select reign from wrestler grouped by reign with minimum wrestler id equal to 9",
        "tables": [
            "Elimination",
            "wrestler"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "reign",
            "from",
            "wrestler",
            "grouped",
            "by",
            "reign",
            "with",
            "minimum",
            "wrestler",
            "id",
            "equal",
            "to",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "Reign",
            "FROM",
            "wrestler",
            "GROUP",
            "BY",
            "Reign",
            "HAVING",
            "MIN",
            "(",
            "Wrestler_ID",
            ")",
            "=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "reign",
            "from",
            "wrestler",
            "group",
            "by",
            "reign",
            "having",
            "min",
            "(",
            "wrestler_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__wrestler__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__wrestler.reign__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__wrestler.reign__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__wrestler.wrestler_id__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_complaints",
        "query": "SELECT phone_number FROM Staff GROUP BY phone_number HAVING MIN(staff_id) = 116;",
        "question": "Select phone number from staff grouped by phone number with minimum staff id equal to 116",
        "tables": [
            "Staff",
            "Complaints",
            "Products",
            "Customers"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "phone",
            "number",
            "from",
            "staff",
            "grouped",
            "by",
            "phone",
            "number",
            "with",
            "minimum",
            "staff",
            "id",
            "equal",
            "to",
            "116"
        ],
        "query_toks": [
            "SELECT",
            "phone_number",
            "FROM",
            "Staff",
            "GROUP",
            "BY",
            "phone_number",
            "HAVING",
            "MIN",
            "(",
            "staff_id",
            ")",
            "=",
            "116"
        ],
        "query_toks_no_value": [
            "select",
            "phone_number",
            "from",
            "staff",
            "group",
            "by",
            "phone_number",
            "having",
            "min",
            "(",
            "staff_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__staff__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__staff.phone_number__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__staff.phone_number__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__staff.staff_id__",
                            false
                        ],
                        null
                    ],
                    116.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_complaints",
        "query": "SELECT complaint_status_code FROM Complaints GROUP BY complaint_status_code HAVING MIN(staff_id) = 114;",
        "question": "Select complaint status code from complaints grouped by complaint status code with minimum staff id equal to 114",
        "tables": [
            "Staff",
            "Complaints",
            "Products",
            "Customers"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "complaint",
            "status",
            "code",
            "from",
            "complaints",
            "grouped",
            "by",
            "complaint",
            "status",
            "code",
            "with",
            "minimum",
            "staff",
            "id",
            "equal",
            "to",
            "114"
        ],
        "query_toks": [
            "SELECT",
            "complaint_status_code",
            "FROM",
            "Complaints",
            "GROUP",
            "BY",
            "complaint_status_code",
            "HAVING",
            "MIN",
            "(",
            "staff_id",
            ")",
            "=",
            "114"
        ],
        "query_toks_no_value": [
            "select",
            "complaint_status_code",
            "from",
            "complaints",
            "group",
            "by",
            "complaint_status_code",
            "having",
            "min",
            "(",
            "staff_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__complaints__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__complaints.complaint_status_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__complaints.complaint_status_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__complaints.staff_id__",
                            false
                        ],
                        null
                    ],
                    114.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_complaints",
        "query": "SELECT product_category_code FROM Products GROUP BY product_category_code HAVING MIN(product_id) = 117;",
        "question": "Select product category code from products grouped by product category code with minimum product id equal to 117",
        "tables": [
            "Staff",
            "Complaints",
            "Products",
            "Customers"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "product",
            "category",
            "code",
            "from",
            "products",
            "grouped",
            "by",
            "product",
            "category",
            "code",
            "with",
            "minimum",
            "product",
            "id",
            "equal",
            "to",
            "117"
        ],
        "query_toks": [
            "SELECT",
            "product_category_code",
            "FROM",
            "Products",
            "GROUP",
            "BY",
            "product_category_code",
            "HAVING",
            "MIN",
            "(",
            "product_id",
            ")",
            "=",
            "117"
        ],
        "query_toks_no_value": [
            "select",
            "product_category_code",
            "from",
            "products",
            "group",
            "by",
            "product_category_code",
            "having",
            "min",
            "(",
            "product_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products.product_category_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__products.product_category_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__products.product_id__",
                            false
                        ],
                        null
                    ],
                    117.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_complaints",
        "query": "SELECT state FROM Customers GROUP BY state HAVING MIN(customer_id) = 117;",
        "question": "Select state from customers grouped by state with minimum customer id equal to 117",
        "tables": [
            "Staff",
            "Complaints",
            "Products",
            "Customers"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "state",
            "from",
            "customers",
            "grouped",
            "by",
            "state",
            "with",
            "minimum",
            "customer",
            "id",
            "equal",
            "to",
            "117"
        ],
        "query_toks": [
            "SELECT",
            "state",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "state",
            "HAVING",
            "MIN",
            "(",
            "customer_id",
            ")",
            "=",
            "117"
        ],
        "query_toks_no_value": [
            "select",
            "state",
            "from",
            "customers",
            "group",
            "by",
            "state",
            "having",
            "min",
            "(",
            "customer_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.state__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customers.state__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__customers.customer_id__",
                            false
                        ],
                        null
                    ],
                    117.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_management",
        "query": "SELECT temporary_acting FROM management GROUP BY temporary_acting HAVING MAX(head_ID) = 3;",
        "question": "Select temporary acting from management grouped by temporary acting with maximum head id equal to 3",
        "tables": [
            "management",
            "department",
            "head"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "temporary",
            "acting",
            "from",
            "management",
            "grouped",
            "by",
            "temporary",
            "acting",
            "with",
            "maximum",
            "head",
            "id",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "temporary_acting",
            "FROM",
            "management",
            "GROUP",
            "BY",
            "temporary_acting",
            "HAVING",
            "MAX",
            "(",
            "head_ID",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "temporary_acting",
            "from",
            "management",
            "group",
            "by",
            "temporary_acting",
            "having",
            "max",
            "(",
            "head_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__management__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__management.temporary_acting__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__management.temporary_acting__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__management.head_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_management",
        "query": "SELECT Creation FROM department GROUP BY Creation HAVING MIN(Budget_in_Billions) = 59.7;",
        "question": "Select creation from department grouped by creation with minimum budget in billions equal to 59.7",
        "tables": [
            "management",
            "department",
            "head"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "creation",
            "from",
            "department",
            "grouped",
            "by",
            "creation",
            "with",
            "minimum",
            "budget",
            "in",
            "billions",
            "equal",
            "to",
            "59.7"
        ],
        "query_toks": [
            "SELECT",
            "Creation",
            "FROM",
            "department",
            "GROUP",
            "BY",
            "Creation",
            "HAVING",
            "MIN",
            "(",
            "Budget_in_Billions",
            ")",
            "=",
            "59.7"
        ],
        "query_toks_no_value": [
            "select",
            "creation",
            "from",
            "department",
            "group",
            "by",
            "creation",
            "having",
            "min",
            "(",
            "budget_in_billions",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__department__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__department.creation__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__department.creation__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__department.budget_in_billions__",
                            false
                        ],
                        null
                    ],
                    59.7,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_management",
        "query": "SELECT born_state FROM head GROUP BY born_state HAVING MIN(age) = 50.0;",
        "question": "Select born state from head grouped by born state with minimum age equal to 50.0",
        "tables": [
            "management",
            "department",
            "head"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "born",
            "state",
            "from",
            "head",
            "grouped",
            "by",
            "born",
            "state",
            "with",
            "minimum",
            "age",
            "equal",
            "to",
            "50.0"
        ],
        "query_toks": [
            "SELECT",
            "born_state",
            "FROM",
            "head",
            "GROUP",
            "BY",
            "born_state",
            "HAVING",
            "MIN",
            "(",
            "age",
            ")",
            "=",
            "50.0"
        ],
        "query_toks_no_value": [
            "select",
            "born_state",
            "from",
            "head",
            "group",
            "by",
            "born_state",
            "having",
            "min",
            "(",
            "age",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__head__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__head.born_state__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__head.born_state__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__head.age__",
                            false
                        ],
                        null
                    ],
                    50.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_products_contacts",
        "query": "SELECT product_name FROM Products GROUP BY product_name HAVING MIN(product_price) = 4446237.9177554;",
        "question": "Select product name from products grouped by product name with minimum product price equal to 4446237.9177554",
        "tables": [
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Address_History",
            "Customer_Orders",
            "Customers",
            "Contacts"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "product",
            "name",
            "from",
            "products",
            "grouped",
            "by",
            "product",
            "name",
            "with",
            "minimum",
            "product",
            "price",
            "equal",
            "to",
            "4446237.9177554"
        ],
        "query_toks": [
            "SELECT",
            "product_name",
            "FROM",
            "Products",
            "GROUP",
            "BY",
            "product_name",
            "HAVING",
            "MIN",
            "(",
            "product_price",
            ")",
            "=",
            "4446237.9177554"
        ],
        "query_toks_no_value": [
            "select",
            "product_name",
            "from",
            "products",
            "group",
            "by",
            "product_name",
            "having",
            "min",
            "(",
            "product_price",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products.product_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__products.product_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__products.product_price__",
                            false
                        ],
                        null
                    ],
                    4446237.9177554,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_products_contacts",
        "query": "SELECT order_quantity FROM Order_Items GROUP BY order_quantity HAVING MAX(order_id) = 11;",
        "question": "Select order quantity from order items grouped by order quantity with maximum order id equal to 11",
        "tables": [
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Address_History",
            "Customer_Orders",
            "Customers",
            "Contacts"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "order",
            "quantity",
            "from",
            "order",
            "items",
            "grouped",
            "by",
            "order",
            "quantity",
            "with",
            "maximum",
            "order",
            "id",
            "equal",
            "to",
            "11"
        ],
        "query_toks": [
            "SELECT",
            "order_quantity",
            "FROM",
            "Order_Items",
            "GROUP",
            "BY",
            "order_quantity",
            "HAVING",
            "MAX",
            "(",
            "order_id",
            ")",
            "=",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "order_quantity",
            "from",
            "order_items",
            "group",
            "by",
            "order_quantity",
            "having",
            "max",
            "(",
            "order_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__order_items__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__order_items.order_quantity__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__order_items.order_quantity__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__order_items.order_id__",
                            false
                        ],
                        null
                    ],
                    11.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_products_contacts",
        "query": "SELECT country FROM Addresses GROUP BY country HAVING MIN(address_id) = 4;",
        "question": "Select country from addresses grouped by country with minimum address id equal to 4",
        "tables": [
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Address_History",
            "Customer_Orders",
            "Customers",
            "Contacts"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "country",
            "from",
            "addresses",
            "grouped",
            "by",
            "country",
            "with",
            "minimum",
            "address",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "countr",
            "(",
            "countr",
            ")",
            "FROM",
            "Addresses",
            "GROUP",
            "BY",
            "countr",
            "(",
            "countr",
            ")",
            "HAVING",
            "MIN",
            "(",
            "address_id",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "countr",
            "(",
            "countr",
            ")",
            "from",
            "addresses",
            "group",
            "by",
            "countr",
            "(",
            "countr",
            ")",
            "having",
            "min",
            "(",
            "address_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__addresses.country__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__addresses.country__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__addresses.address_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_products_contacts",
        "query": "SELECT order_status_code FROM Customer_Orders GROUP BY order_status_code HAVING MIN(customer_id) = 13;",
        "question": "Select order status code from customer orders grouped by order status code with minimum customer id equal to 13",
        "tables": [
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Address_History",
            "Customer_Orders",
            "Customers",
            "Contacts"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "order",
            "status",
            "code",
            "from",
            "customer",
            "orders",
            "grouped",
            "by",
            "order",
            "status",
            "code",
            "with",
            "minimum",
            "customer",
            "id",
            "equal",
            "to",
            "13"
        ],
        "query_toks": [
            "SELECT",
            "order_status_code",
            "FROM",
            "Customer_Orders",
            "GROUP",
            "BY",
            "order_status_code",
            "HAVING",
            "MIN",
            "(",
            "customer_id",
            ")",
            "=",
            "13"
        ],
        "query_toks_no_value": [
            "select",
            "order_status_code",
            "from",
            "customer_orders",
            "group",
            "by",
            "order_status_code",
            "having",
            "min",
            "(",
            "customer_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_orders__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_orders.order_status_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customer_orders.order_status_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__customer_orders.customer_id__",
                            false
                        ],
                        null
                    ],
                    13.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_products_contacts",
        "query": "SELECT payment_method_code FROM Customers GROUP BY payment_method_code HAVING MIN(customer_id) = 8;",
        "question": "Select payment method code from customers grouped by payment method code with minimum customer id equal to 8",
        "tables": [
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Address_History",
            "Customer_Orders",
            "Customers",
            "Contacts"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "payment",
            "method",
            "code",
            "from",
            "customers",
            "grouped",
            "by",
            "payment",
            "method",
            "code",
            "with",
            "minimum",
            "customer",
            "id",
            "equal",
            "to",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "payment_method_code",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "payment_method_code",
            "HAVING",
            "MIN",
            "(",
            "customer_id",
            ")",
            "=",
            "8"
        ],
        "query_toks_no_value": [
            "select",
            "payment_method_code",
            "from",
            "customers",
            "group",
            "by",
            "payment_method_code",
            "having",
            "min",
            "(",
            "customer_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.payment_method_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customers.payment_method_code__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__customers.customer_id__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_products_contacts",
        "query": "SELECT contact_phone FROM Contacts GROUP BY contact_phone HAVING MAX(contact_id) = 3;",
        "question": "Select contact phone from contacts grouped by contact phone with maximum contact id equal to 3",
        "tables": [
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Address_History",
            "Customer_Orders",
            "Customers",
            "Contacts"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "contact",
            "phone",
            "from",
            "contacts",
            "grouped",
            "by",
            "contact",
            "phone",
            "with",
            "maximum",
            "contact",
            "id",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "contact_phone",
            "FROM",
            "Contacts",
            "GROUP",
            "BY",
            "contact_phone",
            "HAVING",
            "MAX",
            "(",
            "contact_id",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "contact_phone",
            "from",
            "contacts",
            "group",
            "by",
            "contact_phone",
            "having",
            "max",
            "(",
            "contact_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__contacts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__contacts.contact_phone__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__contacts.contact_phone__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__contacts.contact_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_1",
        "query": "SELECT Dlocation FROM dept_locations GROUP BY Dlocation HAVING MAX(Dnumber) = 4;",
        "question": "Select department location from department locations grouped by department location with maximum department number equal to 4",
        "tables": [
            "works_on",
            "dept_locations",
            "dependent",
            "department",
            "project",
            "employee"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "department",
            "location",
            "from",
            "department",
            "locations",
            "grouped",
            "by",
            "department",
            "location",
            "with",
            "maximum",
            "department",
            "number",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Dlocation",
            "FROM",
            "dept_locations",
            "GROUP",
            "BY",
            "Dlocation",
            "HAVING",
            "MAX",
            "(",
            "Dnumber",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "dlocation",
            "from",
            "dept_locations",
            "group",
            "by",
            "dlocation",
            "having",
            "max",
            "(",
            "dnumber",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__dept_locations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__dept_locations.dlocation__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__dept_locations.dlocation__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__dept_locations.dnumber__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_1",
        "query": "SELECT Bdate FROM dependent GROUP BY Bdate HAVING MAX(Essn) = 987654321;",
        "question": "Select birth date from dependent grouped by birth date with maximum employee ssn equal to 987654321",
        "tables": [
            "works_on",
            "dept_locations",
            "dependent",
            "department",
            "project",
            "employee"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "birth",
            "date",
            "from",
            "dependent",
            "grouped",
            "by",
            "birth",
            "date",
            "with",
            "maximum",
            "employee",
            "ssn",
            "equal",
            "to",
            "987654321"
        ],
        "query_toks": [
            "SELECT",
            "Bdate",
            "FROM",
            "dependent",
            "GROUP",
            "BY",
            "Bdate",
            "HAVING",
            "MAX",
            "(",
            "Essn",
            ")",
            "=",
            "987654321"
        ],
        "query_toks_no_value": [
            "select",
            "bdate",
            "from",
            "dependent",
            "group",
            "by",
            "bdate",
            "having",
            "max",
            "(",
            "essn",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__dependent__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__dependent.bdate__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__dependent.bdate__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__dependent.essn__",
                            false
                        ],
                        null
                    ],
                    987654321.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_1",
        "query": "SELECT Mgr_start_date FROM department GROUP BY Mgr_start_date HAVING MIN(Dnumber) = 4;",
        "question": "Select manager start date from department grouped by manager start date with minimum department number equal to 4",
        "tables": [
            "works_on",
            "dept_locations",
            "dependent",
            "department",
            "project",
            "employee"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "manager",
            "start",
            "date",
            "from",
            "department",
            "grouped",
            "by",
            "manager",
            "start",
            "date",
            "with",
            "minimum",
            "department",
            "number",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Mgr_start_date",
            "FROM",
            "department",
            "GROUP",
            "BY",
            "Mgr_start_date",
            "HAVING",
            "MIN",
            "(",
            "Dnumber",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "mgr_start_date",
            "from",
            "department",
            "group",
            "by",
            "mgr_start_date",
            "having",
            "min",
            "(",
            "dnumber",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__department__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__department.mgr_start_date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__department.mgr_start_date__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__department.dnumber__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_1",
        "query": "SELECT Plocation FROM project GROUP BY Plocation HAVING MIN(Dnum) = 5;",
        "question": "Select dependent location from project grouped by dependent location with minimum department number equal to 5",
        "tables": [
            "works_on",
            "dept_locations",
            "dependent",
            "department",
            "project",
            "employee"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "dependent",
            "location",
            "from",
            "project",
            "grouped",
            "by",
            "dependent",
            "location",
            "with",
            "minimum",
            "department",
            "number",
            "equal",
            "to",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "Plocation",
            "FROM",
            "project",
            "GROUP",
            "BY",
            "Plocation",
            "HAVING",
            "MIN",
            "(",
            "Dnum",
            ")",
            "=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "plocation",
            "from",
            "project",
            "group",
            "by",
            "plocation",
            "having",
            "min",
            "(",
            "dnum",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__project__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__project.plocation__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__project.plocation__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__project.dnum__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "workshop_paper",
        "query": "SELECT Result FROM Acceptance GROUP BY Result HAVING MIN(Workshop_ID) = 1;",
        "question": "Select result from acceptance grouped by result with minimum workshop id equal to 1",
        "tables": [
            "Acceptance",
            "submission",
            "workshop"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "result",
            "from",
            "acceptance",
            "grouped",
            "by",
            "result",
            "with",
            "minimum",
            "workshop",
            "id",
            "equal",
            "to",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Result",
            "FROM",
            "Acceptance",
            "GROUP",
            "BY",
            "Result",
            "HAVING",
            "MIN",
            "(",
            "Workshop_ID",
            ")",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "result",
            "from",
            "acceptance",
            "group",
            "by",
            "result",
            "having",
            "min",
            "(",
            "workshop_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__acceptance__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__acceptance.result__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__acceptance.result__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__acceptance.workshop_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "workshop_paper",
        "query": "SELECT College FROM submission GROUP BY College HAVING MIN(Scores) = 92.0;",
        "question": "Select college from submission grouped by college with minimum scores equal to 92.0",
        "tables": [
            "Acceptance",
            "submission",
            "workshop"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "college",
            "from",
            "submission",
            "grouped",
            "by",
            "college",
            "with",
            "minimum",
            "scores",
            "equal",
            "to",
            "92.0"
        ],
        "query_toks": [
            "SELECT",
            "College",
            "FROM",
            "submission",
            "GROUP",
            "BY",
            "College",
            "HAVING",
            "MIN",
            "(",
            "Scores",
            ")",
            "=",
            "92.0"
        ],
        "query_toks_no_value": [
            "select",
            "college",
            "from",
            "submission",
            "group",
            "by",
            "college",
            "having",
            "min",
            "(",
            "scores",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__submission__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__submission.college__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__submission.college__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__submission.scores__",
                            false
                        ],
                        null
                    ],
                    92.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "workshop_paper",
        "query": "SELECT Date FROM workshop GROUP BY Date HAVING MIN(Workshop_ID) = 3;",
        "question": "Select date from workshop grouped by date with minimum workshop id equal to 3",
        "tables": [
            "Acceptance",
            "submission",
            "workshop"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "date",
            "from",
            "workshop",
            "grouped",
            "by",
            "date",
            "with",
            "minimum",
            "workshop",
            "id",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Date",
            "FROM",
            "workshop",
            "GROUP",
            "BY",
            "Date",
            "HAVING",
            "MIN",
            "(",
            "Workshop_ID",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "date",
            "from",
            "workshop",
            "group",
            "by",
            "date",
            "having",
            "min",
            "(",
            "workshop_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__workshop__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__workshop.date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__workshop.date__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__workshop.workshop_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "epinions_1",
        "query": "SELECT title FROM item GROUP BY title HAVING MIN(i_id) = 2;",
        "question": "Select title from item grouped by title with minimum item id equal to 2",
        "tables": [
            "item",
            "review",
            "useracct",
            "trust"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "title",
            "from",
            "item",
            "grouped",
            "by",
            "title",
            "with",
            "minimum",
            "item",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "title",
            "FROM",
            "item",
            "GROUP",
            "BY",
            "title",
            "HAVING",
            "MIN",
            "(",
            "i_id",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            "from",
            "item",
            "group",
            "by",
            "title",
            "having",
            "min",
            "(",
            "i_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__item__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__item.title__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__item.title__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__item.i_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "epinions_1",
        "query": "SELECT name FROM useracct GROUP BY name HAVING MIN(u_id) = 1;",
        "question": "Select name from useracct grouped by name with minimum user id equal to 1",
        "tables": [
            "item",
            "review",
            "useracct",
            "trust"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "name",
            "from",
            "useracct",
            "grouped",
            "by",
            "name",
            "with",
            "minimum",
            "user",
            "id",
            "equal",
            "to",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "useracct",
            "GROUP",
            "BY",
            "name",
            "HAVING",
            "MIN",
            "(",
            "u_id",
            ")",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "useracct",
            "group",
            "by",
            "name",
            "having",
            "min",
            "(",
            "u_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__useracct__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__useracct.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__useracct.name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__useracct.u_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "party_host",
        "query": "SELECT Nationality FROM host GROUP BY Nationality HAVING MIN(Host_ID) = 4;",
        "question": "Select nationality from host grouped by nationality with minimum host id equal to 4",
        "tables": [
            "host",
            "party",
            "party_host"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "nationality",
            "from",
            "host",
            "grouped",
            "by",
            "nationality",
            "with",
            "minimum",
            "host",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Nationality",
            "FROM",
            "host",
            "GROUP",
            "BY",
            "Nationality",
            "HAVING",
            "MIN",
            "(",
            "Host_ID",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "nationality",
            "from",
            "host",
            "group",
            "by",
            "nationality",
            "having",
            "min",
            "(",
            "host_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__host__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__host.nationality__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__host.nationality__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__host.host_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "party_host",
        "query": "SELECT First_year FROM party GROUP BY First_year HAVING MIN(Number_of_hosts) = 18;",
        "question": "Select first year from party grouped by first year with minimum number of hosts equal to 18",
        "tables": [
            "host",
            "party",
            "party_host"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "first",
            "year",
            "from",
            "party",
            "grouped",
            "by",
            "first",
            "year",
            "with",
            "minimum",
            "number",
            "of",
            "hosts",
            "equal",
            "to",
            "18"
        ],
        "query_toks": [
            "SELECT",
            "First_year",
            "FROM",
            "party",
            "GROUP",
            "BY",
            "First_year",
            "HAVING",
            "MIN",
            "(",
            "Number_of_hosts",
            ")",
            "=",
            "18"
        ],
        "query_toks_no_value": [
            "select",
            "first_year",
            "from",
            "party",
            "group",
            "by",
            "first_year",
            "having",
            "min",
            "(",
            "number_of_hosts",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__party__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__party.first_year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__party.first_year__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__party.number_of_hosts__",
                            false
                        ],
                        null
                    ],
                    18.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "product_catalog",
        "query": "SELECT catalog_entry_name FROM Catalog_Contents GROUP BY catalog_entry_name HAVING MAX(parent_entry_id) = 4;",
        "question": "Select catalog entry name from catalog contents grouped by catalog entry name with maximum parent entry id equal to 4",
        "tables": [
            "Catalog_Contents",
            "Catalogs",
            "Attribute_Definitions",
            "Catalog_Contents_Additional_Attributes",
            "Catalog_Structure"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "catalog",
            "entry",
            "name",
            "from",
            "catalog",
            "contents",
            "grouped",
            "by",
            "catalog",
            "entry",
            "name",
            "with",
            "maximum",
            "parent",
            "entry",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "catalog_entry_name",
            "FROM",
            "Catalog_Contents",
            "GROUP",
            "BY",
            "catalog_entry_name",
            "HAVING",
            "MAX",
            "(",
            "parent_entry_id",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "catalog_entry_name",
            "from",
            "catalog_contents",
            "group",
            "by",
            "catalog_entry_name",
            "having",
            "max",
            "(",
            "parent_entry_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__catalog_contents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__catalog_contents.catalog_entry_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__catalog_contents.catalog_entry_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__catalog_contents.parent_entry_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "product_catalog",
        "query": "SELECT catalog_publisher FROM Catalogs GROUP BY catalog_publisher HAVING MAX(catalog_id) = 3;",
        "question": "Select catalog publisher from catalogs grouped by catalog publisher with maximum catalog id equal to 3",
        "tables": [
            "Catalog_Contents",
            "Catalogs",
            "Attribute_Definitions",
            "Catalog_Contents_Additional_Attributes",
            "Catalog_Structure"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "catalog",
            "publisher",
            "from",
            "catalogs",
            "grouped",
            "by",
            "catalog",
            "publisher",
            "with",
            "maximum",
            "catalog",
            "id",
            "equal",
            "to",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "catalog_publisher",
            "FROM",
            "Catalogs",
            "GROUP",
            "BY",
            "catalog_publisher",
            "HAVING",
            "MAX",
            "(",
            "catalog_id",
            ")",
            "=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "catalog_publisher",
            "from",
            "catalogs",
            "group",
            "by",
            "catalog_publisher",
            "having",
            "max",
            "(",
            "catalog_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__catalogs__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__catalogs.catalog_publisher__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__catalogs.catalog_publisher__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__catalogs.catalog_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "product_catalog",
        "query": "SELECT attribute_name FROM Attribute_Definitions GROUP BY attribute_name HAVING MIN(attribute_id) = 4;",
        "question": "Select attribute name from attribute definitions grouped by attribute name with minimum attribute id equal to 4",
        "tables": [
            "Catalog_Contents",
            "Catalogs",
            "Attribute_Definitions",
            "Catalog_Contents_Additional_Attributes",
            "Catalog_Structure"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "attribute",
            "name",
            "from",
            "attribute",
            "definitions",
            "grouped",
            "by",
            "attribute",
            "name",
            "with",
            "minimum",
            "attribute",
            "id",
            "equal",
            "to",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "attribute_name",
            "FROM",
            "Attribute_Definitions",
            "GROUP",
            "BY",
            "attribute_name",
            "HAVING",
            "MIN",
            "(",
            "attribute_id",
            ")",
            "=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "attribute_name",
            "from",
            "attribute_definitions",
            "group",
            "by",
            "attribute_name",
            "having",
            "min",
            "(",
            "attribute_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__attribute_definitions__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__attribute_definitions.attribute_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__attribute_definitions.attribute_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__attribute_definitions.attribute_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "product_catalog",
        "query": "SELECT attribute_value FROM Catalog_Contents_Additional_Attributes GROUP BY attribute_value HAVING MAX(catalog_entry_id) = 1;",
        "question": "Select attribute value from catalog contents additional attributes grouped by attribute value with maximum catalog entry id equal to 1",
        "tables": [
            "Catalog_Contents",
            "Catalogs",
            "Attribute_Definitions",
            "Catalog_Contents_Additional_Attributes",
            "Catalog_Structure"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "attribute",
            "value",
            "from",
            "catalog",
            "contents",
            "additional",
            "attributes",
            "grouped",
            "by",
            "attribute",
            "value",
            "with",
            "maximum",
            "catalog",
            "entry",
            "id",
            "equal",
            "to",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "attribute_value",
            "FROM",
            "Catalog_Contents_Additional_Attributes",
            "GROUP",
            "BY",
            "attribute_value",
            "HAVING",
            "MAX",
            "(",
            "catalog_entry_id",
            ")",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "attribute_value",
            "from",
            "catalog_contents_additional_attributes",
            "group",
            "by",
            "attribute_value",
            "having",
            "max",
            "(",
            "catalog_entry_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__catalog_contents_additional_attributes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__catalog_contents_additional_attributes.attribute_value__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__catalog_contents_additional_attributes.attribute_value__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            1,
                            "__catalog_contents_additional_attributes.catalog_entry_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "product_catalog",
        "query": "SELECT catalog_level_name FROM Catalog_Structure GROUP BY catalog_level_name HAVING MIN(catalog_id) = 2;",
        "question": "Select catalog level name from catalog structure grouped by catalog level name with minimum catalog id equal to 2",
        "tables": [
            "Catalog_Contents",
            "Catalogs",
            "Attribute_Definitions",
            "Catalog_Contents_Additional_Attributes",
            "Catalog_Structure"
        ],
        "rule": "having",
        "question_toks": [
            "Select",
            "catalog",
            "level",
            "name",
            "from",
            "catalog",
            "structure",
            "grouped",
            "by",
            "catalog",
            "level",
            "name",
            "with",
            "minimum",
            "catalog",
            "id",
            "equal",
            "to",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "catalog_level_name",
            "FROM",
            "Catalog_Structure",
            "GROUP",
            "BY",
            "catalog_level_name",
            "HAVING",
            "MIN",
            "(",
            "catalog_id",
            ")",
            "=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "catalog_level_name",
            "from",
            "catalog_structure",
            "group",
            "by",
            "catalog_level_name",
            "having",
            "min",
            "(",
            "catalog_id",
            ")",
            "=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__catalog_structure__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__catalog_structure.catalog_level_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__catalog_structure.catalog_level_name__",
                    false
                ]
            ],
            "having": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            2,
                            "__catalog_structure.catalog_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    }
]