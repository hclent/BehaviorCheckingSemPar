[
    {
        "db_id": "perpetrator",
        "query": "SELECT Name, MIN(Height) FROM people GROUP BY Name;",
        "question": "Select name and minimum height from people grouped by name ",
        "tables": [
            "people",
            "perpetrator"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "minimum",
            "height",
            "from",
            "people",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "MIN",
            "(",
            "Height",
            ")",
            "FROM",
            "people",
            "GROUP",
            "BY",
            "Name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "min",
            "(",
            "height",
            ")",
            "from",
            "people",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__people__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__people.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__people.height__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__people.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "perpetrator",
        "query": "SELECT Country, MAX(Perpetrator_ID) FROM perpetrator GROUP BY Country;",
        "question": "Select country and maximum perpetrator id from perpetrator grouped by country ",
        "tables": [
            "people",
            "perpetrator"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "country",
            "and",
            "maximum",
            "perpetrator",
            "id",
            "from",
            "perpetrator",
            "grouped",
            "by",
            "country"
        ],
        "query_toks": [
            "SELECT",
            "Country",
            "(",
            "Country",
            ")",
            "MAX",
            "(",
            "Perpetrator_ID",
            ")",
            "FROM",
            "perpetrator",
            "GROUP",
            "BY",
            "Country",
            "(",
            "Country",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            "(",
            "country",
            ")",
            "max",
            "(",
            "perpetrator_id",
            ")",
            "from",
            "perpetrator",
            "group",
            "by",
            "country",
            "(",
            "country",
            ")"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__perpetrator__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__perpetrator.country__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__perpetrator.perpetrator_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__perpetrator.country__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT building, MIN(budget) FROM department GROUP BY building;",
        "question": "Select building and minimum budget from department grouped by building ",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "building",
            "and",
            "minimum",
            "budget",
            "from",
            "department",
            "grouped",
            "by",
            "building"
        ],
        "query_toks": [
            "SELECT",
            "building",
            ",",
            "MIN",
            "(",
            "budget",
            ")",
            "FROM",
            "department",
            "GROUP",
            "BY",
            "building"
        ],
        "query_toks_no_value": [
            "select",
            "building",
            ",",
            "min",
            "(",
            "budget",
            ")",
            "from",
            "department",
            "group",
            "by",
            "building"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__department__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__department.building__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__department.budget__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__department.building__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT ID, MAX(tot_cred) FROM student GROUP BY ID;",
        "question": "Select id and maximum total credits from student grouped by id ",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "id",
            "and",
            "maximum",
            "total",
            "credits",
            "from",
            "student",
            "grouped",
            "by",
            "id"
        ],
        "query_toks": [
            "SELECT",
            "ID",
            ",",
            "MAX",
            "(",
            "tot_cred",
            ")",
            "FROM",
            "student",
            "GROUP",
            "BY",
            "ID"
        ],
        "query_toks_no_value": [
            "select",
            "id",
            ",",
            "max",
            "(",
            "tot_cred",
            ")",
            "from",
            "student",
            "group",
            "by",
            "id"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.id__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__student.tot_cred__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__student.id__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT room_number, MAX(capacity) FROM classroom GROUP BY room_number;",
        "question": "Select room number and maximum capacity from classroom grouped by room number ",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "room",
            "number",
            "and",
            "maximum",
            "capacity",
            "from",
            "classroom",
            "grouped",
            "by",
            "room",
            "number"
        ],
        "query_toks": [
            "SELECT",
            "room_number",
            ",",
            "MAX",
            "(",
            "capacity",
            ")",
            "FROM",
            "classroom",
            "GROUP",
            "BY",
            "room_number"
        ],
        "query_toks_no_value": [
            "select",
            "room_number",
            ",",
            "max",
            "(",
            "capacity",
            ")",
            "from",
            "classroom",
            "group",
            "by",
            "room_number"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__classroom__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__classroom.room_number__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__classroom.capacity__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__classroom.room_number__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT semester, MIN(year) FROM teaches GROUP BY semester;",
        "question": "Select semester and minimum year from teaches grouped by semester ",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "semester",
            "and",
            "minimum",
            "year",
            "from",
            "teaches",
            "grouped",
            "by",
            "semester"
        ],
        "query_toks": [
            "SELECT",
            "semester",
            ",",
            "MIN",
            "(",
            "year",
            ")",
            "FROM",
            "teaches",
            "GROUP",
            "BY",
            "semester"
        ],
        "query_toks_no_value": [
            "select",
            "semester",
            ",",
            "min",
            "(",
            "year",
            ")",
            "from",
            "teaches",
            "group",
            "by",
            "semester"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__teaches__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__teaches.semester__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__teaches.year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__teaches.semester__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT sec_id, MAX(year) FROM takes GROUP BY sec_id;",
        "question": "Select section id and maximum year from takes classes grouped by section id ",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "section",
            "id",
            "and",
            "maximum",
            "year",
            "from",
            "takes",
            "classes",
            "grouped",
            "by",
            "section",
            "id"
        ],
        "query_toks": [
            "SELECT",
            "sec_id",
            ",",
            "MAX",
            "(",
            "year",
            ")",
            "FROM",
            "takes",
            "GROUP",
            "BY",
            "sec_id"
        ],
        "query_toks_no_value": [
            "select",
            "sec_id",
            ",",
            "max",
            "(",
            "year",
            ")",
            "from",
            "takes",
            "group",
            "by",
            "sec_id"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__takes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__takes.sec_id__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__takes.year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__takes.sec_id__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT building, MIN(year) FROM section GROUP BY building;",
        "question": "Select building and minimum year from section grouped by building ",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "building",
            "and",
            "minimum",
            "year",
            "from",
            "section",
            "grouped",
            "by",
            "building"
        ],
        "query_toks": [
            "SELECT",
            "building",
            ",",
            "MIN",
            "(",
            "year",
            ")",
            "FROM",
            "section",
            "GROUP",
            "BY",
            "building"
        ],
        "query_toks_no_value": [
            "select",
            "building",
            ",",
            "min",
            "(",
            "year",
            ")",
            "from",
            "section",
            "group",
            "by",
            "building"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__section__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__section.building__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__section.year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__section.building__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT ID, MIN(salary) FROM instructor GROUP BY ID;",
        "question": "Select id and minimum salary from instructor grouped by id ",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "id",
            "and",
            "minimum",
            "salary",
            "from",
            "instructor",
            "grouped",
            "by",
            "id"
        ],
        "query_toks": [
            "SELECT",
            "ID",
            ",",
            "MIN",
            "(",
            "salary",
            ")",
            "FROM",
            "instructor",
            "GROUP",
            "BY",
            "ID"
        ],
        "query_toks_no_value": [
            "select",
            "id",
            ",",
            "min",
            "(",
            "salary",
            ")",
            "from",
            "instructor",
            "group",
            "by",
            "id"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__instructor__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__instructor.id__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__instructor.salary__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__instructor.id__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT dept_name, MAX(credits) FROM course GROUP BY dept_name;",
        "question": "Select department name and maximum credits from course grouped by department name ",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "department",
            "name",
            "and",
            "maximum",
            "credits",
            "from",
            "course",
            "grouped",
            "by",
            "department",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "dept_name",
            ",",
            "MAX",
            "(",
            "credits",
            ")",
            "FROM",
            "course",
            "GROUP",
            "BY",
            "dept_name"
        ],
        "query_toks_no_value": [
            "select",
            "dept_name",
            ",",
            "max",
            "(",
            "credits",
            ")",
            "from",
            "course",
            "group",
            "by",
            "dept_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__course__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__course.dept_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__course.credits__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__course.dept_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT time_slot_id, MIN(end_min) FROM time_slot GROUP BY time_slot_id;",
        "question": "Select time slot id and minimum end minute from time slot grouped by time slot id ",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "time",
            "slot",
            "id",
            "and",
            "minimum",
            "end",
            "minute",
            "from",
            "time",
            "slot",
            "grouped",
            "by",
            "time",
            "slot",
            "id"
        ],
        "query_toks": [
            "SELECT",
            "time_slot_id",
            ",",
            "MIN",
            "(",
            "end_min",
            ")",
            "FROM",
            "time_slot",
            "GROUP",
            "BY",
            "time_slot_id"
        ],
        "query_toks_no_value": [
            "select",
            "time_slot_id",
            ",",
            "min",
            "(",
            "end_min",
            ")",
            "from",
            "time_slot",
            "group",
            "by",
            "time_slot_id"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__time_slot__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__time_slot.time_slot_id__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__time_slot.end_min__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__time_slot.time_slot_id__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_company",
        "query": "SELECT ICAO, MAX(id) FROM airport GROUP BY ICAO;",
        "question": "Select icao and maximum id from airport grouped by icao ",
        "tables": [
            "airport",
            "operate_company",
            "flight"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "icao",
            "and",
            "maximum",
            "id",
            "from",
            "airport",
            "grouped",
            "by",
            "icao"
        ],
        "query_toks": [
            "SELECT",
            "ICAO",
            ",",
            "MAX",
            "(",
            "id",
            ")",
            "FROM",
            "airport",
            "GROUP",
            "BY",
            "ICAO"
        ],
        "query_toks_no_value": [
            "select",
            "icao",
            ",",
            "max",
            "(",
            "id",
            ")",
            "from",
            "airport",
            "group",
            "by",
            "icao"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__airport__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__airport.icao__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__airport.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__airport.icao__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_company",
        "query": "SELECT name, MIN(id) FROM operate_company GROUP BY name;",
        "question": "Select name and minimum id from operate company grouped by name ",
        "tables": [
            "airport",
            "operate_company",
            "flight"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "minimum",
            "id",
            "from",
            "operate",
            "company",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "MIN",
            "(",
            "id",
            ")",
            "FROM",
            "operate_company",
            "GROUP",
            "BY",
            "name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "min",
            "(",
            "id",
            ")",
            "from",
            "operate_company",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__operate_company__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__operate_company.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__operate_company.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__operate_company.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_company",
        "query": "SELECT Date, MAX(id) FROM flight GROUP BY Date;",
        "question": "Select date and maximum id from flight grouped by date ",
        "tables": [
            "airport",
            "operate_company",
            "flight"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "date",
            "and",
            "maximum",
            "id",
            "from",
            "flight",
            "grouped",
            "by",
            "date"
        ],
        "query_toks": [
            "SELECT",
            "Date",
            ",",
            "MAX",
            "(",
            "id",
            ")",
            "FROM",
            "flight",
            "GROUP",
            "BY",
            "Date"
        ],
        "query_toks_no_value": [
            "select",
            "date",
            ",",
            "max",
            "(",
            "id",
            ")",
            "from",
            "flight",
            "group",
            "by",
            "date"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__flight__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__flight.date__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__flight.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__flight.date__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "icfp_1",
        "query": "SELECT title, MIN(paperID) FROM Papers GROUP BY title;",
        "question": "Select title and minimum paper id from papers grouped by title ",
        "tables": [
            "Authorship",
            "Papers",
            "Inst",
            "Authors"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "title",
            "and",
            "minimum",
            "paper",
            "id",
            "from",
            "papers",
            "grouped",
            "by",
            "title"
        ],
        "query_toks": [
            "SELECT",
            "title",
            ",",
            "MIN",
            "(",
            "paperID",
            ")",
            "FROM",
            "Papers",
            "GROUP",
            "BY",
            "title"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            ",",
            "min",
            "(",
            "paperid",
            ")",
            "from",
            "papers",
            "group",
            "by",
            "title"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__papers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__papers.title__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__papers.paperid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__papers.title__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "icfp_1",
        "query": "SELECT country, MAX(instID) FROM Inst GROUP BY country;",
        "question": "Select country and maximum institution id from institution grouped by country ",
        "tables": [
            "Authorship",
            "Papers",
            "Inst",
            "Authors"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "country",
            "and",
            "maximum",
            "institution",
            "id",
            "from",
            "institution",
            "grouped",
            "by",
            "country"
        ],
        "query_toks": [
            "SELECT",
            "country",
            "(",
            "country",
            ")",
            "MAX",
            "(",
            "instID",
            ")",
            "FROM",
            "Inst",
            "GROUP",
            "BY",
            "country",
            "(",
            "country",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            "(",
            "country",
            ")",
            "max",
            "(",
            "instid",
            ")",
            "from",
            "inst",
            "group",
            "by",
            "country",
            "(",
            "country",
            ")"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__inst__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__inst.country__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__inst.instid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__inst.country__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "icfp_1",
        "query": "SELECT lname, MAX(authID) FROM Authors GROUP BY lname;",
        "question": "Select last name and maximum author id from authors grouped by last name ",
        "tables": [
            "Authorship",
            "Papers",
            "Inst",
            "Authors"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "last",
            "name",
            "and",
            "maximum",
            "author",
            "id",
            "from",
            "authors",
            "grouped",
            "by",
            "last",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "lname",
            ",",
            "MAX",
            "(",
            "authID",
            ")",
            "FROM",
            "Authors",
            "GROUP",
            "BY",
            "lname"
        ],
        "query_toks_no_value": [
            "select",
            "lname",
            ",",
            "max",
            "(",
            "authid",
            ")",
            "from",
            "authors",
            "group",
            "by",
            "lname"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__authors__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__authors.lname__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__authors.authid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__authors.lname__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "body_builder",
        "query": "SELECT Birth_Date, MAX(People_ID) FROM people GROUP BY Birth_Date;",
        "question": "Select birth date and maximum people id from people grouped by birth date ",
        "tables": [
            "people",
            "body_builder"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "birth",
            "date",
            "and",
            "maximum",
            "people",
            "id",
            "from",
            "people",
            "grouped",
            "by",
            "birth",
            "date"
        ],
        "query_toks": [
            "SELECT",
            "Birth_Date",
            ",",
            "MAX",
            "(",
            "People_ID",
            ")",
            "FROM",
            "people",
            "GROUP",
            "BY",
            "Birth_Date"
        ],
        "query_toks_no_value": [
            "select",
            "birth_date",
            ",",
            "max",
            "(",
            "people_id",
            ")",
            "from",
            "people",
            "group",
            "by",
            "birth_date"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__people__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__people.birth_date__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__people.people_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__people.birth_date__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "storm_record",
        "query": "SELECT Name, MAX(Damage_millions_USD) FROM storm GROUP BY Name;",
        "question": "Select name and maximum damage millions usd from storm grouped by name ",
        "tables": [
            "storm",
            "affected_region",
            "region"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "maximum",
            "damage",
            "millions",
            "usd",
            "from",
            "storm",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "MAX",
            "(",
            "Damage_millions_USD",
            ")",
            "FROM",
            "storm",
            "GROUP",
            "BY",
            "Name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "max",
            "(",
            "damage_millions_usd",
            ")",
            "from",
            "storm",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__storm__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__storm.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__storm.damage_millions_usd__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__storm.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "storm_record",
        "query": "SELECT Region_code, MAX(Region_id) FROM region GROUP BY Region_code;",
        "question": "Select region code and maximum region id from region grouped by region code ",
        "tables": [
            "storm",
            "affected_region",
            "region"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "region",
            "code",
            "and",
            "maximum",
            "region",
            "id",
            "from",
            "region",
            "grouped",
            "by",
            "region",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "Region_code",
            ",",
            "MAX",
            "(",
            "Region_id",
            ")",
            "FROM",
            "region",
            "GROUP",
            "BY",
            "Region_code"
        ],
        "query_toks_no_value": [
            "select",
            "region_code",
            ",",
            "max",
            "(",
            "region_id",
            ")",
            "from",
            "region",
            "group",
            "by",
            "region_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__region__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__region.region_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__region.region_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__region.region_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pilot_record",
        "query": "SELECT Position, MIN(Rank) FROM pilot GROUP BY Position;",
        "question": "Select position and minimum rank from pilot grouped by position ",
        "tables": [
            "pilot",
            "aircraft",
            "pilot_record"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "position",
            "and",
            "minimum",
            "rank",
            "from",
            "pilot",
            "grouped",
            "by",
            "position"
        ],
        "query_toks": [
            "SELECT",
            "Position",
            ",",
            "MIN",
            "(",
            "Rank",
            ")",
            "FROM",
            "pilot",
            "GROUP",
            "BY",
            "Position"
        ],
        "query_toks_no_value": [
            "select",
            "position",
            ",",
            "min",
            "(",
            "rank",
            ")",
            "from",
            "pilot",
            "group",
            "by",
            "position"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__pilot__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__pilot.position__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__pilot.rank__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__pilot.position__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pilot_record",
        "query": "SELECT Fleet_Series, MIN(Aircraft_ID) FROM aircraft GROUP BY Fleet_Series;",
        "question": "Select fleet series and minimum aircraft id from aircraft grouped by fleet series ",
        "tables": [
            "pilot",
            "aircraft",
            "pilot_record"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "fleet",
            "series",
            "and",
            "minimum",
            "aircraft",
            "id",
            "from",
            "aircraft",
            "grouped",
            "by",
            "fleet",
            "series"
        ],
        "query_toks": [
            "SELECT",
            "Fleet_Series",
            ",",
            "MIN",
            "(",
            "Aircraft_ID",
            ")",
            "FROM",
            "aircraft",
            "GROUP",
            "BY",
            "Fleet_Series"
        ],
        "query_toks_no_value": [
            "select",
            "fleet_series",
            ",",
            "min",
            "(",
            "aircraft_id",
            ")",
            "from",
            "aircraft",
            "group",
            "by",
            "fleet_series"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__aircraft__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__aircraft.fleet_series__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__aircraft.aircraft_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__aircraft.fleet_series__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pilot_record",
        "query": "SELECT Date, MAX(Aircraft_ID) FROM pilot_record GROUP BY Date;",
        "question": "Select date and maximum aircraft id from pilot record grouped by date ",
        "tables": [
            "pilot",
            "aircraft",
            "pilot_record"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "date",
            "and",
            "maximum",
            "aircraft",
            "id",
            "from",
            "pilot",
            "record",
            "grouped",
            "by",
            "date"
        ],
        "query_toks": [
            "SELECT",
            "Date",
            ",",
            "MAX",
            "(",
            "Aircraft_ID",
            ")",
            "FROM",
            "pilot_record",
            "GROUP",
            "BY",
            "Date"
        ],
        "query_toks_no_value": [
            "select",
            "date",
            ",",
            "max",
            "(",
            "aircraft_id",
            ")",
            "from",
            "pilot_record",
            "group",
            "by",
            "date"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__pilot_record__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__pilot_record.date__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__pilot_record.aircraft_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__pilot_record.date__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "race_track",
        "query": "SELECT Date, MAX(Race_ID) FROM race GROUP BY Date;",
        "question": "Select date and maximum race id from race grouped by date ",
        "tables": [
            "race",
            "track"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "date",
            "and",
            "maximum",
            "race",
            "id",
            "from",
            "race",
            "grouped",
            "by",
            "date"
        ],
        "query_toks": [
            "SELECT",
            "Date",
            ",",
            "MAX",
            "(",
            "Race_ID",
            ")",
            "FROM",
            "race",
            "GROUP",
            "BY",
            "Date"
        ],
        "query_toks_no_value": [
            "select",
            "date",
            ",",
            "max",
            "(",
            "race_id",
            ")",
            "from",
            "race",
            "group",
            "by",
            "date"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__race__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__race.date__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__race.race_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__race.date__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "race_track",
        "query": "SELECT Name, MAX(Track_ID) FROM track GROUP BY Name;",
        "question": "Select name and maximum track id from track grouped by name ",
        "tables": [
            "race",
            "track"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "maximum",
            "track",
            "id",
            "from",
            "track",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "MAX",
            "(",
            "Track_ID",
            ")",
            "FROM",
            "track",
            "GROUP",
            "BY",
            "Name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "max",
            "(",
            "track_id",
            ")",
            "from",
            "track",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__track__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__track.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__track.track_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__track.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "academic",
        "query": "SELECT homepage, MAX(aid) FROM author GROUP BY homepage;",
        "question": "Select homepage and maximum aid from author grouped by homepage ",
        "tables": [
            "author",
            "domain",
            "writes",
            "publication",
            "domain_publication",
            "conference",
            "organization",
            "cite",
            "keyword",
            "domain_author",
            "journal",
            "domain_conference",
            "domain_keyword",
            "publication_keyword",
            "domain_journal"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "homepage",
            "and",
            "maximum",
            "aid",
            "from",
            "author",
            "grouped",
            "by",
            "homepage"
        ],
        "query_toks": [
            "SELECT",
            "homepage",
            ",",
            "MAX",
            "(",
            "aid",
            ")",
            "FROM",
            "author",
            "GROUP",
            "BY",
            "homepage"
        ],
        "query_toks_no_value": [
            "select",
            "homepage",
            ",",
            "max",
            "(",
            "aid",
            ")",
            "from",
            "author",
            "group",
            "by",
            "homepage"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__author__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__author.homepage__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__author.aid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__author.homepage__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "academic",
        "query": "SELECT name, MIN(did) FROM domain GROUP BY name;",
        "question": "Select name and minimum did from domain grouped by name ",
        "tables": [
            "author",
            "domain",
            "writes",
            "publication",
            "domain_publication",
            "conference",
            "organization",
            "cite",
            "keyword",
            "domain_author",
            "journal",
            "domain_conference",
            "domain_keyword",
            "publication_keyword",
            "domain_journal"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "minimum",
            "did",
            "from",
            "domain",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "MIN",
            "(",
            "did",
            ")",
            "FROM",
            "domain",
            "GROUP",
            "BY",
            "name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "min",
            "(",
            "did",
            ")",
            "from",
            "domain",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__domain__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__domain.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__domain.did__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__domain.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "academic",
        "query": "SELECT title, MAX(reference_num) FROM publication GROUP BY title;",
        "question": "Select title and maximum reference num from publication grouped by title ",
        "tables": [
            "author",
            "domain",
            "writes",
            "publication",
            "domain_publication",
            "conference",
            "organization",
            "cite",
            "keyword",
            "domain_author",
            "journal",
            "domain_conference",
            "domain_keyword",
            "publication_keyword",
            "domain_journal"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "title",
            "and",
            "maximum",
            "reference",
            "num",
            "from",
            "publication",
            "grouped",
            "by",
            "title"
        ],
        "query_toks": [
            "SELECT",
            "title",
            ",",
            "MAX",
            "(",
            "reference_num",
            ")",
            "FROM",
            "publication",
            "GROUP",
            "BY",
            "title"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            ",",
            "max",
            "(",
            "reference_num",
            ")",
            "from",
            "publication",
            "group",
            "by",
            "title"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__publication__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__publication.title__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__publication.reference_num__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__publication.title__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "academic",
        "query": "SELECT name, MAX(cid) FROM conference GROUP BY name;",
        "question": "Select name and maximum cid from conference grouped by name ",
        "tables": [
            "author",
            "domain",
            "writes",
            "publication",
            "domain_publication",
            "conference",
            "organization",
            "cite",
            "keyword",
            "domain_author",
            "journal",
            "domain_conference",
            "domain_keyword",
            "publication_keyword",
            "domain_journal"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "maximum",
            "cid",
            "from",
            "conference",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "MAX",
            "(",
            "cid",
            ")",
            "FROM",
            "conference",
            "GROUP",
            "BY",
            "name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "max",
            "(",
            "cid",
            ")",
            "from",
            "conference",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__conference__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__conference.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__conference.cid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__conference.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "academic",
        "query": "SELECT name, MAX(oid) FROM organization GROUP BY name;",
        "question": "Select name and maximum oid from organization grouped by name ",
        "tables": [
            "author",
            "domain",
            "writes",
            "publication",
            "domain_publication",
            "conference",
            "organization",
            "cite",
            "keyword",
            "domain_author",
            "journal",
            "domain_conference",
            "domain_keyword",
            "publication_keyword",
            "domain_journal"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "maximum",
            "oid",
            "from",
            "organization",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "MAX",
            "(",
            "oid",
            ")",
            "FROM",
            "organization",
            "GROUP",
            "BY",
            "name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "max",
            "(",
            "oid",
            ")",
            "from",
            "organization",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__organization__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__organization.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__organization.oid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__organization.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "academic",
        "query": "SELECT keyword, MAX(kid) FROM keyword GROUP BY keyword;",
        "question": "Select keyword and maximum kid from keyword grouped by keyword ",
        "tables": [
            "author",
            "domain",
            "writes",
            "publication",
            "domain_publication",
            "conference",
            "organization",
            "cite",
            "keyword",
            "domain_author",
            "journal",
            "domain_conference",
            "domain_keyword",
            "publication_keyword",
            "domain_journal"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "keyword",
            "and",
            "maximum",
            "kid",
            "from",
            "keyword",
            "grouped",
            "by",
            "keyword"
        ],
        "query_toks": [
            "SELECT",
            "keyword",
            ",",
            "MAX",
            "(",
            "kid",
            ")",
            "FROM",
            "keyword",
            "GROUP",
            "BY",
            "keyword"
        ],
        "query_toks_no_value": [
            "select",
            "keyword",
            ",",
            "max",
            "(",
            "kid",
            ")",
            "from",
            "keyword",
            "group",
            "by",
            "keyword"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__keyword__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__keyword.keyword__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__keyword.kid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__keyword.keyword__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "academic",
        "query": "SELECT name, MAX(jid) FROM journal GROUP BY name;",
        "question": "Select name and maximum jid from journal grouped by name ",
        "tables": [
            "author",
            "domain",
            "writes",
            "publication",
            "domain_publication",
            "conference",
            "organization",
            "cite",
            "keyword",
            "domain_author",
            "journal",
            "domain_conference",
            "domain_keyword",
            "publication_keyword",
            "domain_journal"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "maximum",
            "jid",
            "from",
            "journal",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "MAX",
            "(",
            "jid",
            ")",
            "FROM",
            "journal",
            "GROUP",
            "BY",
            "name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "max",
            "(",
            "jid",
            ")",
            "from",
            "journal",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__journal__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__journal.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__journal.jid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__journal.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT staff_name, MIN(staff_id) FROM Staff GROUP BY staff_name;",
        "question": "Select staff name and minimum staff id from staff grouped by staff name ",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "staff",
            "name",
            "and",
            "minimum",
            "staff",
            "id",
            "from",
            "staff",
            "grouped",
            "by",
            "staff",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "staff_name",
            ",",
            "MIN",
            "(",
            "staff_id",
            ")",
            "FROM",
            "Staff",
            "GROUP",
            "BY",
            "staff_name"
        ],
        "query_toks_no_value": [
            "select",
            "staff_name",
            ",",
            "min",
            "(",
            "staff_id",
            ")",
            "from",
            "staff",
            "group",
            "by",
            "staff_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__staff__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__staff.staff_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__staff.staff_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__staff.staff_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT product_name, MAX(product_id) FROM Products GROUP BY product_name;",
        "question": "Select product name and maximum product id from products grouped by product name ",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "product",
            "name",
            "and",
            "maximum",
            "product",
            "id",
            "from",
            "products",
            "grouped",
            "by",
            "product",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "product_name",
            ",",
            "MAX",
            "(",
            "product_id",
            ")",
            "FROM",
            "Products",
            "GROUP",
            "BY",
            "product_name"
        ],
        "query_toks_no_value": [
            "select",
            "product_name",
            ",",
            "max",
            "(",
            "product_id",
            ")",
            "from",
            "products",
            "group",
            "by",
            "product_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products.product_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__products.product_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__products.product_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT supplier_name, MAX(supplier_id) FROM Suppliers GROUP BY supplier_name;",
        "question": "Select supplier name and maximum supplier id from suppliers grouped by supplier name ",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "supplier",
            "name",
            "and",
            "maximum",
            "supplier",
            "id",
            "from",
            "suppliers",
            "grouped",
            "by",
            "supplier",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "supplier_name",
            ",",
            "MAX",
            "(",
            "supplier_id",
            ")",
            "FROM",
            "Suppliers",
            "GROUP",
            "BY",
            "supplier_name"
        ],
        "query_toks_no_value": [
            "select",
            "supplier_name",
            ",",
            "max",
            "(",
            "supplier_id",
            ")",
            "from",
            "suppliers",
            "group",
            "by",
            "supplier_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__suppliers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__suppliers.supplier_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__suppliers.supplier_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__suppliers.supplier_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT job_title_code, MAX(staff_id) FROM Staff_Department_Assignments GROUP BY job_title_code;",
        "question": "Select job title code and maximum staff id from staff department assignments grouped by job title code ",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "job",
            "title",
            "code",
            "and",
            "maximum",
            "staff",
            "id",
            "from",
            "staff",
            "department",
            "assignments",
            "grouped",
            "by",
            "job",
            "title",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "job_title_code",
            ",",
            "MAX",
            "(",
            "staff_id",
            ")",
            "FROM",
            "Staff_Department_Assignments",
            "GROUP",
            "BY",
            "job_title_code"
        ],
        "query_toks_no_value": [
            "select",
            "job_title_code",
            ",",
            "max",
            "(",
            "staff_id",
            ")",
            "from",
            "staff_department_assignments",
            "group",
            "by",
            "job_title_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__staff_department_assignments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__staff_department_assignments.job_title_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__staff_department_assignments.staff_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__staff_department_assignments.job_title_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT address_details, MAX(address_id) FROM Addresses GROUP BY address_details;",
        "question": "Select address details and maximum address id from addresses grouped by address details ",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "address",
            "details",
            "and",
            "maximum",
            "address",
            "id",
            "from",
            "addresses",
            "grouped",
            "by",
            "address",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "address_details",
            ",",
            "MAX",
            "(",
            "address_id",
            ")",
            "FROM",
            "Addresses",
            "GROUP",
            "BY",
            "address_details"
        ],
        "query_toks_no_value": [
            "select",
            "address_details",
            ",",
            "max",
            "(",
            "address_id",
            ")",
            "from",
            "addresses",
            "group",
            "by",
            "address_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__addresses.address_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__addresses.address_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__addresses.address_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT order_status_code, MIN(customer_id) FROM Customer_Orders GROUP BY order_status_code;",
        "question": "Select order status code and minimum customer id from customer orders grouped by order status code ",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "order",
            "status",
            "code",
            "and",
            "minimum",
            "customer",
            "id",
            "from",
            "customer",
            "orders",
            "grouped",
            "by",
            "order",
            "status",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "order_status_code",
            ",",
            "MIN",
            "(",
            "customer_id",
            ")",
            "FROM",
            "Customer_Orders",
            "GROUP",
            "BY",
            "order_status_code"
        ],
        "query_toks_no_value": [
            "select",
            "order_status_code",
            ",",
            "min",
            "(",
            "customer_id",
            ")",
            "from",
            "customer_orders",
            "group",
            "by",
            "order_status_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_orders__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_orders.order_status_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__customer_orders.customer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customer_orders.order_status_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT store_email, MAX(dept_store_chain_id) FROM Department_Stores GROUP BY store_email;",
        "question": "Select store email and maximum department store chain id from department stores grouped by store email ",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "store",
            "email",
            "and",
            "maximum",
            "department",
            "store",
            "chain",
            "id",
            "from",
            "department",
            "stores",
            "grouped",
            "by",
            "store",
            "email"
        ],
        "query_toks": [
            "SELECT",
            "store_email",
            ",",
            "MAX",
            "(",
            "dept_store_chain_id",
            ")",
            "FROM",
            "Department_Stores",
            "GROUP",
            "BY",
            "store_email"
        ],
        "query_toks_no_value": [
            "select",
            "store_email",
            ",",
            "max",
            "(",
            "dept_store_chain_id",
            ")",
            "from",
            "department_stores",
            "group",
            "by",
            "store_email"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__department_stores__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__department_stores.store_email__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__department_stores.dept_store_chain_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__department_stores.store_email__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT department_name, MIN(department_id) FROM Departments GROUP BY department_name;",
        "question": "Select department name and minimum department id from departments grouped by department name ",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "department",
            "name",
            "and",
            "minimum",
            "department",
            "id",
            "from",
            "departments",
            "grouped",
            "by",
            "department",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "department_name",
            ",",
            "MIN",
            "(",
            "department_id",
            ")",
            "FROM",
            "Departments",
            "GROUP",
            "BY",
            "department_name"
        ],
        "query_toks_no_value": [
            "select",
            "department_name",
            ",",
            "min",
            "(",
            "department_id",
            ")",
            "from",
            "departments",
            "group",
            "by",
            "department_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__departments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__departments.department_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__departments.department_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__departments.department_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT customer_phone, MAX(customer_id) FROM Customers GROUP BY customer_phone;",
        "question": "Select customer phone and maximum customer id from customers grouped by customer phone ",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "customer",
            "phone",
            "and",
            "maximum",
            "customer",
            "id",
            "from",
            "customers",
            "grouped",
            "by",
            "customer",
            "phone"
        ],
        "query_toks": [
            "SELECT",
            "customer_phone",
            ",",
            "MAX",
            "(",
            "customer_id",
            ")",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "customer_phone"
        ],
        "query_toks_no_value": [
            "select",
            "customer_phone",
            ",",
            "max",
            "(",
            "customer_id",
            ")",
            "from",
            "customers",
            "group",
            "by",
            "customer_phone"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_phone__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customers.customer_phone__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT dept_store_chain_name, MAX(dept_store_chain_id) FROM Department_Store_Chain GROUP BY dept_store_chain_name;",
        "question": "Select department store chain name and maximum department store chain id from department store chain grouped by department store chain name ",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "department",
            "store",
            "chain",
            "name",
            "and",
            "maximum",
            "department",
            "store",
            "chain",
            "id",
            "from",
            "department",
            "store",
            "chain",
            "grouped",
            "by",
            "department",
            "store",
            "chain",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "dept_store_chain_name",
            ",",
            "MAX",
            "(",
            "dept_store_chain_id",
            ")",
            "FROM",
            "Department_Store_Chain",
            "GROUP",
            "BY",
            "dept_store_chain_name"
        ],
        "query_toks_no_value": [
            "select",
            "dept_store_chain_name",
            ",",
            "max",
            "(",
            "dept_store_chain_id",
            ")",
            "from",
            "department_store_chain",
            "group",
            "by",
            "dept_store_chain_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__department_store_chain__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__department_store_chain.dept_store_chain_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__department_store_chain.dept_store_chain_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__department_store_chain.dept_store_chain_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT total_amount_purchased, MAX(product_id) FROM Product_Suppliers GROUP BY total_amount_purchased;",
        "question": "Select total amount purchased and maximum product id from product suppliers grouped by total amount purchased ",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "total",
            "amount",
            "purchased",
            "and",
            "maximum",
            "product",
            "id",
            "from",
            "product",
            "suppliers",
            "grouped",
            "by",
            "total",
            "amount",
            "purchased"
        ],
        "query_toks": [
            "SELECT",
            "total_amount_purchased",
            ",",
            "MAX",
            "(",
            "product_id",
            ")",
            "FROM",
            "Product_Suppliers",
            "GROUP",
            "BY",
            "total_amount_purchased"
        ],
        "query_toks_no_value": [
            "select",
            "total_amount_purchased",
            ",",
            "max",
            "(",
            "product_id",
            ")",
            "from",
            "product_suppliers",
            "group",
            "by",
            "total_amount_purchased"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__product_suppliers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__product_suppliers.total_amount_purchased__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__product_suppliers.product_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__product_suppliers.total_amount_purchased__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "music_4",
        "query": "SELECT Artist, MAX(Age) FROM artist GROUP BY Artist;",
        "question": "Select artist and maximum age from artist grouped by artist ",
        "tables": [
            "artist",
            "music_festival",
            "volume"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "artist",
            "and",
            "maximum",
            "age",
            "from",
            "artist",
            "grouped",
            "by",
            "artist"
        ],
        "query_toks": [
            "SELECT",
            "Artist",
            ",",
            "MAX",
            "(",
            "Age",
            ")",
            "FROM",
            "artist",
            "GROUP",
            "BY",
            "Artist"
        ],
        "query_toks_no_value": [
            "select",
            "artist",
            ",",
            "max",
            "(",
            "age",
            ")",
            "from",
            "artist",
            "group",
            "by",
            "artist"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__artist__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__artist.artist__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__artist.age__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__artist.artist__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "music_4",
        "query": "SELECT Date_of_ceremony, MAX(Volume) FROM music_festival GROUP BY Date_of_ceremony;",
        "question": "Select date of ceremony and maximum volume from music festival grouped by date of ceremony ",
        "tables": [
            "artist",
            "music_festival",
            "volume"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "date",
            "of",
            "ceremony",
            "and",
            "maximum",
            "volume",
            "from",
            "music",
            "festival",
            "grouped",
            "by",
            "date",
            "of",
            "ceremony"
        ],
        "query_toks": [
            "SELECT",
            "Date_of_ceremony",
            ",",
            "MAX",
            "(",
            "Volume",
            ")",
            "FROM",
            "music_festival",
            "GROUP",
            "BY",
            "Date_of_ceremony"
        ],
        "query_toks_no_value": [
            "select",
            "date_of_ceremony",
            ",",
            "max",
            "(",
            "volume",
            ")",
            "from",
            "music_festival",
            "group",
            "by",
            "date_of_ceremony"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__music_festival__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__music_festival.date_of_ceremony__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__music_festival.volume__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__music_festival.date_of_ceremony__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "music_4",
        "query": "SELECT Issue_Date, MAX(Weeks_on_Top) FROM volume GROUP BY Issue_Date;",
        "question": "Select issue date and maximum weeks on top from volume grouped by issue date ",
        "tables": [
            "artist",
            "music_festival",
            "volume"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "issue",
            "date",
            "and",
            "maximum",
            "weeks",
            "on",
            "top",
            "from",
            "volume",
            "grouped",
            "by",
            "issue",
            "date"
        ],
        "query_toks": [
            "SELECT",
            "Issue_Date",
            ",",
            "MAX",
            "(",
            "Weeks_on_Top",
            ")",
            "FROM",
            "volume",
            "GROUP",
            "BY",
            "Issue_Date"
        ],
        "query_toks_no_value": [
            "select",
            "issue_date",
            ",",
            "max",
            "(",
            "weeks_on_top",
            ")",
            "from",
            "volume",
            "group",
            "by",
            "issue_date"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__volume__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__volume.issue_date__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__volume.weeks_on_top__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__volume.issue_date__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_fnol",
        "query": "SELECT Service_name, MIN(Service_ID) FROM Services GROUP BY Service_name;",
        "question": "Select service name and minimum service id from services grouped by service name ",
        "tables": [
            "Settlements",
            "Claims",
            "Services",
            "First_Notification_of_Loss",
            "Customers_Policies",
            "Customers",
            "Available_Policies"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "service",
            "name",
            "and",
            "minimum",
            "service",
            "id",
            "from",
            "services",
            "grouped",
            "by",
            "service",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Service_name",
            ",",
            "MIN",
            "(",
            "Service_ID",
            ")",
            "FROM",
            "Services",
            "GROUP",
            "BY",
            "Service_name"
        ],
        "query_toks_no_value": [
            "select",
            "service_name",
            ",",
            "min",
            "(",
            "service_id",
            ")",
            "from",
            "services",
            "group",
            "by",
            "service_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__services__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__services.service_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__services.service_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__services.service_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_fnol",
        "query": "SELECT Customer_name, MAX(Customer_ID) FROM Customers GROUP BY Customer_name;",
        "question": "Select customer name and maximum customer id from customers grouped by customer name ",
        "tables": [
            "Settlements",
            "Claims",
            "Services",
            "First_Notification_of_Loss",
            "Customers_Policies",
            "Customers",
            "Available_Policies"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "customer",
            "name",
            "and",
            "maximum",
            "customer",
            "id",
            "from",
            "customers",
            "grouped",
            "by",
            "customer",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Customer_name",
            ",",
            "MAX",
            "(",
            "Customer_ID",
            ")",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "Customer_name"
        ],
        "query_toks_no_value": [
            "select",
            "customer_name",
            ",",
            "max",
            "(",
            "customer_id",
            ")",
            "from",
            "customers",
            "group",
            "by",
            "customer_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customers.customer_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_fnol",
        "query": "SELECT Customer_Phone, MIN(Policy_ID) FROM Available_Policies GROUP BY Customer_Phone;",
        "question": "Select customer phone and minimum policy id from available policies grouped by customer phone ",
        "tables": [
            "Settlements",
            "Claims",
            "Services",
            "First_Notification_of_Loss",
            "Customers_Policies",
            "Customers",
            "Available_Policies"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "customer",
            "phone",
            "and",
            "minimum",
            "policy",
            "id",
            "from",
            "available",
            "policies",
            "grouped",
            "by",
            "customer",
            "phone"
        ],
        "query_toks": [
            "SELECT",
            "Customer_Phone",
            ",",
            "MIN",
            "(",
            "Policy_ID",
            ")",
            "FROM",
            "Available_Policies",
            "GROUP",
            "BY",
            "Customer_Phone"
        ],
        "query_toks_no_value": [
            "select",
            "customer_phone",
            ",",
            "min",
            "(",
            "policy_id",
            ")",
            "from",
            "available_policies",
            "group",
            "by",
            "customer_phone"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__available_policies__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__available_policies.customer_phone__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__available_policies.policy_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__available_policies.customer_phone__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cinema",
        "query": "SELECT Title, MAX(Number_in_season) FROM film GROUP BY Title;",
        "question": "Select title and maximum number in season from film grouped by title ",
        "tables": [
            "film",
            "cinema",
            "schedule"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "title",
            "and",
            "maximum",
            "number",
            "in",
            "season",
            "from",
            "film",
            "grouped",
            "by",
            "title"
        ],
        "query_toks": [
            "SELECT",
            "Title",
            ",",
            "MAX",
            "(",
            "Number_in_season",
            ")",
            "FROM",
            "film",
            "GROUP",
            "BY",
            "Title"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            ",",
            "max",
            "(",
            "number_in_season",
            ")",
            "from",
            "film",
            "group",
            "by",
            "title"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__film__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__film.title__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__film.number_in_season__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__film.title__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cinema",
        "query": "SELECT Location, MAX(Cinema_ID) FROM cinema GROUP BY Location;",
        "question": "Select location and maximum cinema id from cinema grouped by location ",
        "tables": [
            "film",
            "cinema",
            "schedule"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "location",
            "and",
            "maximum",
            "cinema",
            "id",
            "from",
            "cinema",
            "grouped",
            "by",
            "location"
        ],
        "query_toks": [
            "SELECT",
            "Location",
            ",",
            "MAX",
            "(",
            "Cinema_ID",
            ")",
            "FROM",
            "cinema",
            "GROUP",
            "BY",
            "Location"
        ],
        "query_toks_no_value": [
            "select",
            "location",
            ",",
            "max",
            "(",
            "cinema_id",
            ")",
            "from",
            "cinema",
            "group",
            "by",
            "location"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__cinema__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__cinema.location__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__cinema.cinema_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__cinema.location__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cinema",
        "query": "SELECT Date, MAX(Show_times_per_day) FROM schedule GROUP BY Date;",
        "question": "Select date and maximum show times per day from schedule grouped by date ",
        "tables": [
            "film",
            "cinema",
            "schedule"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "date",
            "and",
            "maximum",
            "show",
            "times",
            "per",
            "day",
            "from",
            "schedule",
            "grouped",
            "by",
            "date"
        ],
        "query_toks": [
            "SELECT",
            "Date",
            ",",
            "MAX",
            "(",
            "Show_times_per_day",
            ")",
            "FROM",
            "schedule",
            "GROUP",
            "BY",
            "Date"
        ],
        "query_toks_no_value": [
            "select",
            "date",
            ",",
            "max",
            "(",
            "show_times_per_day",
            ")",
            "from",
            "schedule",
            "group",
            "by",
            "date"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__schedule__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__schedule.date__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__schedule.show_times_per_day__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__schedule.date__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "decoration_competition",
        "query": "SELECT Name, MAX(College_ID) FROM member GROUP BY Name;",
        "question": "Select name and maximum college id from member grouped by name ",
        "tables": [
            "member",
            "round",
            "college"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "maximum",
            "college",
            "id",
            "from",
            "member",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "MAX",
            "(",
            "College_ID",
            ")",
            "FROM",
            "member",
            "GROUP",
            "BY",
            "Name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "max",
            "(",
            "college_id",
            ")",
            "from",
            "member",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__member__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__member.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__member.college_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__member.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "decoration_competition",
        "query": "SELECT Decoration_Theme, MAX(Member_ID) FROM round GROUP BY Decoration_Theme;",
        "question": "Select decoration theme and maximum member id from round grouped by decoration theme ",
        "tables": [
            "member",
            "round",
            "college"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "decoration",
            "theme",
            "and",
            "maximum",
            "member",
            "id",
            "from",
            "round",
            "grouped",
            "by",
            "decoration",
            "theme"
        ],
        "query_toks": [
            "SELECT",
            "Decoration_Theme",
            ",",
            "MAX",
            "(",
            "Member_ID",
            ")",
            "FROM",
            "round",
            "GROUP",
            "BY",
            "Decoration_Theme"
        ],
        "query_toks_no_value": [
            "select",
            "decoration_theme",
            ",",
            "max",
            "(",
            "member_id",
            ")",
            "from",
            "round",
            "group",
            "by",
            "decoration_theme"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__round__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__round.decoration_theme__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__round.member_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__round.decoration_theme__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "decoration_competition",
        "query": "SELECT Leader_Name, MAX(College_ID) FROM college GROUP BY Leader_Name;",
        "question": "Select leader name and maximum college id from college grouped by leader name ",
        "tables": [
            "member",
            "round",
            "college"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "leader",
            "name",
            "and",
            "maximum",
            "college",
            "id",
            "from",
            "college",
            "grouped",
            "by",
            "leader",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Leader_Name",
            ",",
            "MAX",
            "(",
            "College_ID",
            ")",
            "FROM",
            "college",
            "GROUP",
            "BY",
            "Leader_Name"
        ],
        "query_toks_no_value": [
            "select",
            "leader_name",
            ",",
            "max",
            "(",
            "college_id",
            ")",
            "from",
            "college",
            "group",
            "by",
            "leader_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__college__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__college.leader_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__college.college_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__college.leader_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "phone_market",
        "query": "SELECT Phone_ID, MIN(Num_of_stock) FROM phone_market GROUP BY Phone_ID;",
        "question": "Select phone id and minimum num of stock from phone market grouped by phone id ",
        "tables": [
            "phone_market",
            "market",
            "phone"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "phone",
            "id",
            "and",
            "minimum",
            "num",
            "of",
            "stock",
            "from",
            "phone",
            "market",
            "grouped",
            "by",
            "phone",
            "id"
        ],
        "query_toks": [
            "SELECT",
            "Phone_ID",
            ",",
            "MIN",
            "(",
            "Num_of_stock",
            ")",
            "FROM",
            "phone_market",
            "GROUP",
            "BY",
            "Phone_ID"
        ],
        "query_toks_no_value": [
            "select",
            "phone_id",
            ",",
            "min",
            "(",
            "num_of_stock",
            ")",
            "from",
            "phone_market",
            "group",
            "by",
            "phone_id"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__phone_market__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__phone_market.phone_id__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__phone_market.num_of_stock__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__phone_market.phone_id__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "phone_market",
        "query": "SELECT District, MAX(Ranking) FROM market GROUP BY District;",
        "question": "Select district and maximum ranking from market grouped by district ",
        "tables": [
            "phone_market",
            "market",
            "phone"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "district",
            "and",
            "maximum",
            "ranking",
            "from",
            "market",
            "grouped",
            "by",
            "district"
        ],
        "query_toks": [
            "SELECT",
            "District",
            ",",
            "MAX",
            "(",
            "Ranking",
            ")",
            "FROM",
            "market",
            "GROUP",
            "BY",
            "District"
        ],
        "query_toks_no_value": [
            "select",
            "district",
            ",",
            "max",
            "(",
            "ranking",
            ")",
            "from",
            "market",
            "group",
            "by",
            "district"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__market__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__market.district__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__market.ranking__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__market.district__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "phone_market",
        "query": "SELECT Carrier, MIN(Phone_ID) FROM phone GROUP BY Carrier;",
        "question": "Select carrier and minimum phone id from phone grouped by carrier ",
        "tables": [
            "phone_market",
            "market",
            "phone"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "carrier",
            "and",
            "minimum",
            "phone",
            "id",
            "from",
            "phone",
            "grouped",
            "by",
            "carrier"
        ],
        "query_toks": [
            "SELECT",
            "Carrier",
            ",",
            "MIN",
            "(",
            "Phone_ID",
            ")",
            "FROM",
            "phone",
            "GROUP",
            "BY",
            "Carrier"
        ],
        "query_toks_no_value": [
            "select",
            "carrier",
            ",",
            "min",
            "(",
            "phone_id",
            ")",
            "from",
            "phone",
            "group",
            "by",
            "carrier"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__phone__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__phone.carrier__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__phone.phone_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__phone.carrier__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_product",
        "query": "SELECT max_page_size, MIN(dpi) FROM product GROUP BY max_page_size;",
        "question": "Select max page size and minimum dpi from product grouped by max page size ",
        "tables": [
            "product",
            "store",
            "store_district",
            "district",
            "store_product"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "max",
            "page",
            "size",
            "and",
            "minimum",
            "dpi",
            "from",
            "product",
            "grouped",
            "by",
            "max",
            "page",
            "size"
        ],
        "query_toks": [
            "SELECT",
            "max_page_size",
            "(",
            "max_page_size",
            ")",
            "MIN",
            "(",
            "dpi",
            ")",
            "FROM",
            "product",
            "GROUP",
            "BY",
            "max_page_size",
            "(",
            "max_page_size",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "max_page_size",
            "(",
            "max_page_size",
            ")",
            "min",
            "(",
            "dpi",
            ")",
            "from",
            "product",
            "group",
            "by",
            "max_page_size",
            "(",
            "max_page_size",
            ")"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__product__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__product.max_page_size__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__product.dpi__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__product.max_page_size__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_product",
        "query": "SELECT Store_Name, MAX(Area_size) FROM store GROUP BY Store_Name;",
        "question": "Select store name and maximum area size from store grouped by store name ",
        "tables": [
            "product",
            "store",
            "store_district",
            "district",
            "store_product"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "store",
            "name",
            "and",
            "maximum",
            "area",
            "size",
            "from",
            "store",
            "grouped",
            "by",
            "store",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Store_Name",
            ",",
            "MAX",
            "(",
            "Area_size",
            ")",
            "FROM",
            "store",
            "GROUP",
            "BY",
            "Store_Name"
        ],
        "query_toks_no_value": [
            "select",
            "store_name",
            ",",
            "max",
            "(",
            "area_size",
            ")",
            "from",
            "store",
            "group",
            "by",
            "store_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__store__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__store.store_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__store.area_size__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__store.store_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_product",
        "query": "SELECT Headquartered_City, MAX(City_Area) FROM district GROUP BY Headquartered_City;",
        "question": "Select headquartered city and maximum city area from district grouped by headquartered city ",
        "tables": [
            "product",
            "store",
            "store_district",
            "district",
            "store_product"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "headquartered",
            "city",
            "and",
            "maximum",
            "city",
            "area",
            "from",
            "district",
            "grouped",
            "by",
            "headquartered",
            "city"
        ],
        "query_toks": [
            "SELECT",
            "Headquartered_City",
            ",",
            "MAX",
            "(",
            "City_Area",
            ")",
            "FROM",
            "district",
            "GROUP",
            "BY",
            "Headquartered_City"
        ],
        "query_toks_no_value": [
            "select",
            "headquartered_city",
            ",",
            "max",
            "(",
            "city_area",
            ")",
            "from",
            "district",
            "group",
            "by",
            "headquartered_city"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__district__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__district.headquartered_city__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__district.city_area__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__district.headquartered_city__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT gender, MAX(staff_id) FROM Staff GROUP BY gender;",
        "question": "Select gender and maximum staff id from staff grouped by gender ",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "gender",
            "and",
            "maximum",
            "staff",
            "id",
            "from",
            "staff",
            "grouped",
            "by",
            "gender"
        ],
        "query_toks": [
            "SELECT",
            "gender",
            ",",
            "MAX",
            "(",
            "staff_id",
            ")",
            "FROM",
            "Staff",
            "GROUP",
            "BY",
            "gender"
        ],
        "query_toks_no_value": [
            "select",
            "gender",
            ",",
            "max",
            "(",
            "staff_id",
            ")",
            "from",
            "staff",
            "group",
            "by",
            "gender"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__staff__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__staff.gender__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__staff.staff_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__staff.gender__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT part_name, MAX(part_id) FROM Parts GROUP BY part_name;",
        "question": "Select part name and maximum part id from parts grouped by part name ",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "part",
            "name",
            "and",
            "maximum",
            "part",
            "id",
            "from",
            "parts",
            "grouped",
            "by",
            "part",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "part_name",
            ",",
            "MAX",
            "(",
            "part_id",
            ")",
            "FROM",
            "Parts",
            "GROUP",
            "BY",
            "part_name"
        ],
        "query_toks_no_value": [
            "select",
            "part_name",
            ",",
            "max",
            "(",
            "part_id",
            ")",
            "from",
            "parts",
            "group",
            "by",
            "part_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__parts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__parts.part_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__parts.part_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__parts.part_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT other_asset_details, MAX(asset_id) FROM Assets GROUP BY other_asset_details;",
        "question": "Select other asset details and maximum asset id from assets grouped by other asset details ",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "other",
            "asset",
            "details",
            "and",
            "maximum",
            "asset",
            "id",
            "from",
            "assets",
            "grouped",
            "by",
            "other",
            "asset",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "other_asset_details",
            ",",
            "MAX",
            "(",
            "asset_id",
            ")",
            "FROM",
            "Assets",
            "GROUP",
            "BY",
            "other_asset_details"
        ],
        "query_toks_no_value": [
            "select",
            "other_asset_details",
            ",",
            "max",
            "(",
            "asset_id",
            ")",
            "from",
            "assets",
            "group",
            "by",
            "other_asset_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__assets__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__assets.other_asset_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__assets.asset_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__assets.other_asset_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT fault_description, MAX(part_fault_id) FROM Part_Faults GROUP BY fault_description;",
        "question": "Select fault description and maximum part fault id from part faults grouped by fault description ",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "fault",
            "description",
            "and",
            "maximum",
            "part",
            "fault",
            "id",
            "from",
            "part",
            "faults",
            "grouped",
            "by",
            "fault",
            "description"
        ],
        "query_toks": [
            "SELECT",
            "fault_description",
            ",",
            "MAX",
            "(",
            "part_fault_id",
            ")",
            "FROM",
            "Part_Faults",
            "GROUP",
            "BY",
            "fault_description"
        ],
        "query_toks_no_value": [
            "select",
            "fault_description",
            ",",
            "max",
            "(",
            "part_fault_id",
            ")",
            "from",
            "part_faults",
            "group",
            "by",
            "fault_description"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__part_faults__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__part_faults.fault_description__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__part_faults.part_fault_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__part_faults.fault_description__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT fault_status, MAX(engineer_id) FROM Engineer_Visits GROUP BY fault_status;",
        "question": "Select fault status and maximum engineer id from engineer visits grouped by fault status ",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "fault",
            "status",
            "and",
            "maximum",
            "engineer",
            "id",
            "from",
            "engineer",
            "visits",
            "grouped",
            "by",
            "fault",
            "status"
        ],
        "query_toks": [
            "SELECT",
            "fault_status",
            ",",
            "MAX",
            "(",
            "engineer_id",
            ")",
            "FROM",
            "Engineer_Visits",
            "GROUP",
            "BY",
            "fault_status"
        ],
        "query_toks_no_value": [
            "select",
            "fault_status",
            ",",
            "max",
            "(",
            "engineer_id",
            ")",
            "from",
            "engineer_visits",
            "group",
            "by",
            "fault_status"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__engineer_visits__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__engineer_visits.fault_status__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__engineer_visits.engineer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__engineer_visits.fault_status__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT other_contract_details, MAX(maintenance_contract_id) FROM Maintenance_Contracts GROUP BY other_contract_details;",
        "question": "Select other contract details and maximum maintenance contract id from maintenance contracts grouped by other contract details ",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "other",
            "contract",
            "details",
            "and",
            "maximum",
            "maintenance",
            "contract",
            "id",
            "from",
            "maintenance",
            "contracts",
            "grouped",
            "by",
            "other",
            "contract",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "other_contract_details",
            ",",
            "MAX",
            "(",
            "maintenance_contract_id",
            ")",
            "FROM",
            "Maintenance_Contracts",
            "GROUP",
            "BY",
            "other_contract_details"
        ],
        "query_toks_no_value": [
            "select",
            "other_contract_details",
            ",",
            "max",
            "(",
            "maintenance_contract_id",
            ")",
            "from",
            "maintenance_contracts",
            "group",
            "by",
            "other_contract_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__maintenance_contracts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__maintenance_contracts.other_contract_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__maintenance_contracts.maintenance_contract_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__maintenance_contracts.other_contract_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT skill_code, MAX(skill_id) FROM Skills GROUP BY skill_code;",
        "question": "Select skill code and maximum skill id from skills grouped by skill code ",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "skill",
            "code",
            "and",
            "maximum",
            "skill",
            "id",
            "from",
            "skills",
            "grouped",
            "by",
            "skill",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "skill_code",
            ",",
            "MAX",
            "(",
            "skill_id",
            ")",
            "FROM",
            "Skills",
            "GROUP",
            "BY",
            "skill_code"
        ],
        "query_toks_no_value": [
            "select",
            "skill_code",
            ",",
            "max",
            "(",
            "skill_id",
            ")",
            "from",
            "skills",
            "group",
            "by",
            "skill_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__skills__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__skills.skill_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__skills.skill_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__skills.skill_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT last_name, MAX(company_id) FROM Maintenance_Engineers GROUP BY last_name;",
        "question": "Select last name and maximum company id from maintenance engineers grouped by last name ",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "last",
            "name",
            "and",
            "maximum",
            "company",
            "id",
            "from",
            "maintenance",
            "engineers",
            "grouped",
            "by",
            "last",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "last_name",
            ",",
            "MAX",
            "(",
            "company_id",
            ")",
            "FROM",
            "Maintenance_Engineers",
            "GROUP",
            "BY",
            "last_name"
        ],
        "query_toks_no_value": [
            "select",
            "last_name",
            ",",
            "max",
            "(",
            "company_id",
            ")",
            "from",
            "maintenance_engineers",
            "group",
            "by",
            "last_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__maintenance_engineers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__maintenance_engineers.last_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__maintenance_engineers.company_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__maintenance_engineers.last_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT company_name, MIN(company_id) FROM Third_Party_Companies GROUP BY company_name;",
        "question": "Select company name and minimum company id from third party companies grouped by company name ",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "company",
            "name",
            "and",
            "minimum",
            "company",
            "id",
            "from",
            "third",
            "party",
            "companies",
            "grouped",
            "by",
            "company",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "company_name",
            ",",
            "MIN",
            "(",
            "company_id",
            ")",
            "FROM",
            "Third_Party_Companies",
            "GROUP",
            "BY",
            "company_name"
        ],
        "query_toks_no_value": [
            "select",
            "company_name",
            ",",
            "min",
            "(",
            "company_id",
            ")",
            "from",
            "third_party_companies",
            "group",
            "by",
            "company_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__third_party_companies__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__third_party_companies.company_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__third_party_companies.company_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__third_party_companies.company_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT other_fault_details, MAX(asset_id) FROM Fault_Log GROUP BY other_fault_details;",
        "question": "Select other fault details and maximum asset id from fault log grouped by other fault details ",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "other",
            "fault",
            "details",
            "and",
            "maximum",
            "asset",
            "id",
            "from",
            "fault",
            "log",
            "grouped",
            "by",
            "other",
            "fault",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "other_fault_details",
            ",",
            "MAX",
            "(",
            "asset_id",
            ")",
            "FROM",
            "Fault_Log",
            "GROUP",
            "BY",
            "other_fault_details"
        ],
        "query_toks_no_value": [
            "select",
            "other_fault_details",
            ",",
            "max",
            "(",
            "asset_id",
            ")",
            "from",
            "fault_log",
            "group",
            "by",
            "other_fault_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__fault_log__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__fault_log.other_fault_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__fault_log.asset_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__fault_log.other_fault_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT fault_status, MIN(fault_log_entry_id) FROM Fault_Log_Parts GROUP BY fault_status;",
        "question": "Select fault status and minimum fault log entry id from fault log parts grouped by fault status ",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "fault",
            "status",
            "and",
            "minimum",
            "fault",
            "log",
            "entry",
            "id",
            "from",
            "fault",
            "log",
            "parts",
            "grouped",
            "by",
            "fault",
            "status"
        ],
        "query_toks": [
            "SELECT",
            "fault_status",
            ",",
            "MIN",
            "(",
            "fault_log_entry_id",
            ")",
            "FROM",
            "Fault_Log_Parts",
            "GROUP",
            "BY",
            "fault_status"
        ],
        "query_toks_no_value": [
            "select",
            "fault_status",
            ",",
            "min",
            "(",
            "fault_log_entry_id",
            ")",
            "from",
            "fault_log_parts",
            "group",
            "by",
            "fault_status"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__fault_log_parts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__fault_log_parts.fault_status__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__fault_log_parts.fault_log_entry_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__fault_log_parts.fault_status__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_assessment",
        "query": "SELECT student_details, MAX(student_id) FROM Students GROUP BY student_details;",
        "question": "Select student details and maximum student id from students grouped by student details ",
        "tables": [
            "Courses",
            "Students",
            "Candidates",
            "Addresses",
            "People_Addresses",
            "Student_Course_Registrations",
            "People",
            "Candidate_Assessments",
            "Student_Course_Attendance"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "student",
            "details",
            "and",
            "maximum",
            "student",
            "id",
            "from",
            "students",
            "grouped",
            "by",
            "student",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "student_details",
            ",",
            "MAX",
            "(",
            "student_id",
            ")",
            "FROM",
            "Students",
            "GROUP",
            "BY",
            "student_details"
        ],
        "query_toks_no_value": [
            "select",
            "student_details",
            ",",
            "max",
            "(",
            "student_id",
            ")",
            "from",
            "students",
            "group",
            "by",
            "student_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__students__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__students.student_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__students.student_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__students.student_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_assessment",
        "query": "SELECT candidate_details, MAX(candidate_id) FROM Candidates GROUP BY candidate_details;",
        "question": "Select candidate details and maximum candidate id from candidates grouped by candidate details ",
        "tables": [
            "Courses",
            "Students",
            "Candidates",
            "Addresses",
            "People_Addresses",
            "Student_Course_Registrations",
            "People",
            "Candidate_Assessments",
            "Student_Course_Attendance"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "candidate",
            "details",
            "and",
            "maximum",
            "candidate",
            "id",
            "from",
            "candidates",
            "grouped",
            "by",
            "candidate",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "candidate_details",
            ",",
            "MAX",
            "(",
            "candidate_id",
            ")",
            "FROM",
            "Candidates",
            "GROUP",
            "BY",
            "candidate_details"
        ],
        "query_toks_no_value": [
            "select",
            "candidate_details",
            ",",
            "max",
            "(",
            "candidate_id",
            ")",
            "from",
            "candidates",
            "group",
            "by",
            "candidate_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__candidates__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__candidates.candidate_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__candidates.candidate_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__candidates.candidate_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_assessment",
        "query": "SELECT city, MIN(address_id) FROM Addresses GROUP BY city;",
        "question": "Select city and minimum address id from addresses grouped by city ",
        "tables": [
            "Courses",
            "Students",
            "Candidates",
            "Addresses",
            "People_Addresses",
            "Student_Course_Registrations",
            "People",
            "Candidate_Assessments",
            "Student_Course_Attendance"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "city",
            "and",
            "minimum",
            "address",
            "id",
            "from",
            "addresses",
            "grouped",
            "by",
            "city"
        ],
        "query_toks": [
            "SELECT",
            "city",
            ",",
            "MIN",
            "(",
            "address_id",
            ")",
            "FROM",
            "Addresses",
            "GROUP",
            "BY",
            "city"
        ],
        "query_toks_no_value": [
            "select",
            "city",
            ",",
            "min",
            "(",
            "address_id",
            ")",
            "from",
            "addresses",
            "group",
            "by",
            "city"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__addresses.city__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__addresses.address_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__addresses.city__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_assessment",
        "query": "SELECT cell_mobile_number, MAX(person_id) FROM People GROUP BY cell_mobile_number;",
        "question": "Select cell mobile number and maximum person id from people grouped by cell mobile number ",
        "tables": [
            "Courses",
            "Students",
            "Candidates",
            "Addresses",
            "People_Addresses",
            "Student_Course_Registrations",
            "People",
            "Candidate_Assessments",
            "Student_Course_Attendance"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "cell",
            "mobile",
            "number",
            "and",
            "maximum",
            "person",
            "id",
            "from",
            "people",
            "grouped",
            "by",
            "cell",
            "mobile",
            "number"
        ],
        "query_toks": [
            "SELECT",
            "cell_mobile_number",
            ",",
            "MAX",
            "(",
            "person_id",
            ")",
            "FROM",
            "People",
            "GROUP",
            "BY",
            "cell_mobile_number"
        ],
        "query_toks_no_value": [
            "select",
            "cell_mobile_number",
            ",",
            "max",
            "(",
            "person_id",
            ")",
            "from",
            "people",
            "group",
            "by",
            "cell_mobile_number"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__people__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__people.cell_mobile_number__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__people.person_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__people.cell_mobile_number__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_assessment",
        "query": "SELECT qualification, MIN(candidate_id) FROM Candidate_Assessments GROUP BY qualification;",
        "question": "Select qualification and minimum candidate id from candidate assessments grouped by qualification ",
        "tables": [
            "Courses",
            "Students",
            "Candidates",
            "Addresses",
            "People_Addresses",
            "Student_Course_Registrations",
            "People",
            "Candidate_Assessments",
            "Student_Course_Attendance"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "qualification",
            "and",
            "minimum",
            "candidate",
            "id",
            "from",
            "candidate",
            "assessments",
            "grouped",
            "by",
            "qualification"
        ],
        "query_toks": [
            "SELECT",
            "qualification",
            ",",
            "MIN",
            "(",
            "candidate_id",
            ")",
            "FROM",
            "Candidate_Assessments",
            "GROUP",
            "BY",
            "qualification"
        ],
        "query_toks_no_value": [
            "select",
            "qualification",
            ",",
            "min",
            "(",
            "candidate_id",
            ")",
            "from",
            "candidate_assessments",
            "group",
            "by",
            "qualification"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__candidate_assessments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__candidate_assessments.qualification__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__candidate_assessments.candidate_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__candidate_assessments.qualification__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT cell_number, MAX(owner_id) FROM Owners GROUP BY cell_number;",
        "question": "Select cell number and maximum owner id from owners grouped by cell number ",
        "tables": [
            "Owners",
            "Breeds",
            "Treatment_Types",
            "Dogs",
            "Professionals",
            "Treatments",
            "Charges",
            "Sizes"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "cell",
            "number",
            "and",
            "maximum",
            "owner",
            "id",
            "from",
            "owners",
            "grouped",
            "by",
            "cell",
            "number"
        ],
        "query_toks": [
            "SELECT",
            "cell_number",
            ",",
            "MAX",
            "(",
            "owner_id",
            ")",
            "FROM",
            "Owners",
            "GROUP",
            "BY",
            "cell_number"
        ],
        "query_toks_no_value": [
            "select",
            "cell_number",
            ",",
            "max",
            "(",
            "owner_id",
            ")",
            "from",
            "owners",
            "group",
            "by",
            "cell_number"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__owners__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__owners.cell_number__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__owners.owner_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__owners.cell_number__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT name, MAX(owner_id) FROM Dogs GROUP BY name;",
        "question": "Select name and maximum owner id from dogs grouped by name ",
        "tables": [
            "Owners",
            "Breeds",
            "Treatment_Types",
            "Dogs",
            "Professionals",
            "Treatments",
            "Charges",
            "Sizes"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "maximum",
            "owner",
            "id",
            "from",
            "dogs",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "MAX",
            "(",
            "owner_id",
            ")",
            "FROM",
            "Dogs",
            "GROUP",
            "BY",
            "name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "max",
            "(",
            "owner_id",
            ")",
            "from",
            "dogs",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__dogs__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__dogs.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__dogs.owner_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__dogs.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT last_name, MIN(professional_id) FROM Professionals GROUP BY last_name;",
        "question": "Select last name and minimum professional id from professionals grouped by last name ",
        "tables": [
            "Owners",
            "Breeds",
            "Treatment_Types",
            "Dogs",
            "Professionals",
            "Treatments",
            "Charges",
            "Sizes"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "last",
            "name",
            "and",
            "minimum",
            "professional",
            "id",
            "from",
            "professionals",
            "grouped",
            "by",
            "last",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "last_name",
            ",",
            "MIN",
            "(",
            "professional_id",
            ")",
            "FROM",
            "Professionals",
            "GROUP",
            "BY",
            "last_name"
        ],
        "query_toks_no_value": [
            "select",
            "last_name",
            ",",
            "min",
            "(",
            "professional_id",
            ")",
            "from",
            "professionals",
            "group",
            "by",
            "last_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__professionals__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__professionals.last_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__professionals.professional_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__professionals.last_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT treatment_type_code, MIN(dog_id) FROM Treatments GROUP BY treatment_type_code;",
        "question": "Select treatment type code and minimum dog id from treatments grouped by treatment type code ",
        "tables": [
            "Owners",
            "Breeds",
            "Treatment_Types",
            "Dogs",
            "Professionals",
            "Treatments",
            "Charges",
            "Sizes"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "treatment",
            "type",
            "code",
            "and",
            "minimum",
            "dog",
            "id",
            "from",
            "treatments",
            "grouped",
            "by",
            "treatment",
            "type",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "treatment_type_code",
            ",",
            "MIN",
            "(",
            "dog_id",
            ")",
            "FROM",
            "Treatments",
            "GROUP",
            "BY",
            "treatment_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "treatment_type_code",
            ",",
            "min",
            "(",
            "dog_id",
            ")",
            "from",
            "treatments",
            "group",
            "by",
            "treatment_type_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__treatments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__treatments.treatment_type_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__treatments.dog_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__treatments.treatment_type_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT charge_type, MAX(charge_amount) FROM Charges GROUP BY charge_type;",
        "question": "Select charge type and maximum charge amount from charges grouped by charge type ",
        "tables": [
            "Owners",
            "Breeds",
            "Treatment_Types",
            "Dogs",
            "Professionals",
            "Treatments",
            "Charges",
            "Sizes"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "charge",
            "type",
            "and",
            "maximum",
            "charge",
            "amount",
            "from",
            "charges",
            "grouped",
            "by",
            "charge",
            "type"
        ],
        "query_toks": [
            "SELECT",
            "charge_type",
            ",",
            "MAX",
            "(",
            "charge_amount",
            ")",
            "FROM",
            "Charges",
            "GROUP",
            "BY",
            "charge_type"
        ],
        "query_toks_no_value": [
            "select",
            "charge_type",
            ",",
            "max",
            "(",
            "charge_amount",
            ")",
            "from",
            "charges",
            "group",
            "by",
            "charge_type"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__charges__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__charges.charge_type__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__charges.charge_amount__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__charges.charge_type__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "music_1",
        "query": "SELECT languages, MAX(rating) FROM song GROUP BY languages;",
        "question": "Select languages and maximum rating from song grouped by languages ",
        "tables": [
            "artist",
            "song",
            "genre",
            "files"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "languages",
            "and",
            "maximum",
            "rating",
            "from",
            "song",
            "grouped",
            "by",
            "languages"
        ],
        "query_toks": [
            "SELECT",
            "languages",
            ",",
            "MAX",
            "(",
            "rating",
            ")",
            "FROM",
            "song",
            "GROUP",
            "BY",
            "languages"
        ],
        "query_toks_no_value": [
            "select",
            "languages",
            ",",
            "max",
            "(",
            "rating",
            ")",
            "from",
            "song",
            "group",
            "by",
            "languages"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__song__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__song.languages__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__song.rating__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__song.languages__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "music_1",
        "query": "SELECT formats, MAX(f_id) FROM files GROUP BY formats;",
        "question": "Select formats and maximum song id from files grouped by formats ",
        "tables": [
            "artist",
            "song",
            "genre",
            "files"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "formats",
            "and",
            "maximum",
            "song",
            "id",
            "from",
            "files",
            "grouped",
            "by",
            "formats"
        ],
        "query_toks": [
            "SELECT",
            "formats",
            ",",
            "MAX",
            "(",
            "f_id",
            ")",
            "FROM",
            "files",
            "GROUP",
            "BY",
            "formats"
        ],
        "query_toks_no_value": [
            "select",
            "formats",
            ",",
            "max",
            "(",
            "f_id",
            ")",
            "from",
            "files",
            "group",
            "by",
            "formats"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__files__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__files.formats__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__files.f_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__files.formats__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_employee",
        "query": "SELECT Nationality, MAX(Age) FROM people GROUP BY Nationality;",
        "question": "Select nationality and maximum age from people grouped by nationality ",
        "tables": [
            "employment",
            "people",
            "company"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "nationality",
            "and",
            "maximum",
            "age",
            "from",
            "people",
            "grouped",
            "by",
            "nationality"
        ],
        "query_toks": [
            "SELECT",
            "Nationality",
            ",",
            "MAX",
            "(",
            "Age",
            ")",
            "FROM",
            "people",
            "GROUP",
            "BY",
            "Nationality"
        ],
        "query_toks_no_value": [
            "select",
            "nationality",
            ",",
            "max",
            "(",
            "age",
            ")",
            "from",
            "people",
            "group",
            "by",
            "nationality"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__people__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__people.nationality__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__people.age__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__people.nationality__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_employee",
        "query": "SELECT Headquarters, MIN(Profits_in_Billion) FROM company GROUP BY Headquarters;",
        "question": "Select headquarters and minimum profits in billion from company grouped by headquarters ",
        "tables": [
            "employment",
            "people",
            "company"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "headquarters",
            "and",
            "minimum",
            "profits",
            "in",
            "billion",
            "from",
            "company",
            "grouped",
            "by",
            "headquarters"
        ],
        "query_toks": [
            "SELECT",
            "Headquarters",
            ",",
            "MIN",
            "(",
            "Profits_in_Billion",
            ")",
            "FROM",
            "company",
            "GROUP",
            "BY",
            "Headquarters"
        ],
        "query_toks_no_value": [
            "select",
            "headquarters",
            ",",
            "min",
            "(",
            "profits_in_billion",
            ")",
            "from",
            "company",
            "group",
            "by",
            "headquarters"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__company__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__company.headquarters__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__company.profits_in_billion__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__company.headquarters__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "farm",
        "query": "SELECT Theme, MIN(Competition_ID) FROM farm_competition GROUP BY Theme;",
        "question": "Select theme and minimum competition id from farm competition grouped by theme ",
        "tables": [
            "farm_competition",
            "farm",
            "city",
            "competition_record"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "theme",
            "and",
            "minimum",
            "competition",
            "id",
            "from",
            "farm",
            "competition",
            "grouped",
            "by",
            "theme"
        ],
        "query_toks": [
            "SELECT",
            "Theme",
            ",",
            "MIN",
            "(",
            "Competition_ID",
            ")",
            "FROM",
            "farm_competition",
            "GROUP",
            "BY",
            "Theme"
        ],
        "query_toks_no_value": [
            "select",
            "theme",
            ",",
            "min",
            "(",
            "competition_id",
            ")",
            "from",
            "farm_competition",
            "group",
            "by",
            "theme"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__farm_competition__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__farm_competition.theme__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__farm_competition.competition_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__farm_competition.theme__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "farm",
        "query": "SELECT Census_Ranking, MAX(Area_km_2) FROM city GROUP BY Census_Ranking;",
        "question": "Select census ranking and maximum area km 2 from city grouped by census ranking ",
        "tables": [
            "farm_competition",
            "farm",
            "city",
            "competition_record"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "census",
            "ranking",
            "and",
            "maximum",
            "area",
            "km",
            "2",
            "from",
            "city",
            "grouped",
            "by",
            "census",
            "ranking"
        ],
        "query_toks": [
            "SELECT",
            "Census_Ranking",
            ",",
            "MAX",
            "(",
            "Area_km_2",
            ")",
            "FROM",
            "city",
            "GROUP",
            "BY",
            "Census_Ranking"
        ],
        "query_toks_no_value": [
            "select",
            "census_ranking",
            ",",
            "max",
            "(",
            "area_km_2",
            ")",
            "from",
            "city",
            "group",
            "by",
            "census_ranking"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__city__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__city.census_ranking__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__city.area_km_2__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__city.census_ranking__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT Product_Name, MIN(Product_Price) FROM Products GROUP BY Product_Name;",
        "question": "Select product name and minimum product price from products grouped by product name ",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "product",
            "name",
            "and",
            "minimum",
            "product",
            "price",
            "from",
            "products",
            "grouped",
            "by",
            "product",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Product_Name",
            ",",
            "MIN",
            "(",
            "Product_Price",
            ")",
            "FROM",
            "Products",
            "GROUP",
            "BY",
            "Product_Name"
        ],
        "query_toks_no_value": [
            "select",
            "product_name",
            ",",
            "min",
            "(",
            "product_price",
            ")",
            "from",
            "products",
            "group",
            "by",
            "product_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products.product_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__products.product_price__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__products.product_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT Other_Details, MAX(Asset_ID) FROM Assets GROUP BY Other_Details;",
        "question": "Select other details and maximum asset id from assets grouped by other details ",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "other",
            "details",
            "and",
            "maximum",
            "asset",
            "id",
            "from",
            "assets",
            "grouped",
            "by",
            "other",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "Other_Details",
            ",",
            "MAX",
            "(",
            "Asset_ID",
            ")",
            "FROM",
            "Assets",
            "GROUP",
            "BY",
            "Other_Details"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            ",",
            "max",
            "(",
            "asset_id",
            ")",
            "from",
            "assets",
            "group",
            "by",
            "other_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__assets__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__assets.other_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__assets.asset_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__assets.other_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT Event_Type_Code, MAX(Channel_ID) FROM Events GROUP BY Event_Type_Code;",
        "question": "Select event type code and maximum channel id from events grouped by event type code ",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "event",
            "type",
            "code",
            "and",
            "maximum",
            "channel",
            "id",
            "from",
            "events",
            "grouped",
            "by",
            "event",
            "type",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "Event_Type_Code",
            ",",
            "MAX",
            "(",
            "Channel_ID",
            ")",
            "FROM",
            "Events",
            "GROUP",
            "BY",
            "Event_Type_Code"
        ],
        "query_toks_no_value": [
            "select",
            "event_type_code",
            ",",
            "max",
            "(",
            "channel_id",
            ")",
            "from",
            "events",
            "group",
            "by",
            "event_type_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__events__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__events.event_type_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__events.channel_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__events.event_type_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT address_details, MAX(Address_ID) FROM Addresses GROUP BY address_details;",
        "question": "Select address details and maximum address id from addresses grouped by address details ",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "address",
            "details",
            "and",
            "maximum",
            "address",
            "id",
            "from",
            "addresses",
            "grouped",
            "by",
            "address",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "address_details",
            ",",
            "MAX",
            "(",
            "Address_ID",
            ")",
            "FROM",
            "Addresses",
            "GROUP",
            "BY",
            "address_details"
        ],
        "query_toks_no_value": [
            "select",
            "address_details",
            ",",
            "max",
            "(",
            "address_id",
            ")",
            "from",
            "addresses",
            "group",
            "by",
            "address_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__addresses.address_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__addresses.address_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__addresses.address_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT Role_Code, MAX(Event_ID) FROM Parties_in_Events GROUP BY Role_Code;",
        "question": "Select role code and maximum event id from parties in events grouped by role code ",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "role",
            "code",
            "and",
            "maximum",
            "event",
            "id",
            "from",
            "parties",
            "in",
            "events",
            "grouped",
            "by",
            "role",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "Role_Code",
            ",",
            "MAX",
            "(",
            "Event_ID",
            ")",
            "FROM",
            "Parties_in_Events",
            "GROUP",
            "BY",
            "Role_Code"
        ],
        "query_toks_no_value": [
            "select",
            "role_code",
            ",",
            "max",
            "(",
            "event_id",
            ")",
            "from",
            "parties_in_events",
            "group",
            "by",
            "role_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__parties_in_events__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__parties_in_events.role_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__parties_in_events.event_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__parties_in_events.role_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT Other_Details, MAX(Finance_ID) FROM Finances GROUP BY Other_Details;",
        "question": "Select other details and maximum finance id from finances grouped by other details ",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "other",
            "details",
            "and",
            "maximum",
            "finance",
            "id",
            "from",
            "finances",
            "grouped",
            "by",
            "other",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "Other_Details",
            ",",
            "MAX",
            "(",
            "Finance_ID",
            ")",
            "FROM",
            "Finances",
            "GROUP",
            "BY",
            "Other_Details"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            ",",
            "max",
            "(",
            "finance_id",
            ")",
            "from",
            "finances",
            "group",
            "by",
            "other_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__finances__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__finances.other_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__finances.finance_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__finances.other_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT Other_Details, MAX(Location_ID) FROM Locations GROUP BY Other_Details;",
        "question": "Select other details and maximum location id from locations grouped by other details ",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "other",
            "details",
            "and",
            "maximum",
            "location",
            "id",
            "from",
            "locations",
            "grouped",
            "by",
            "other",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "Other_Details",
            ",",
            "MAX",
            "(",
            "Location_ID",
            ")",
            "FROM",
            "Locations",
            "GROUP",
            "BY",
            "Other_Details"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            ",",
            "max",
            "(",
            "location_id",
            ")",
            "from",
            "locations",
            "group",
            "by",
            "other_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__locations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__locations.other_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__locations.location_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__locations.other_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT Other_Details, MAX(Channel_ID) FROM Channels GROUP BY Other_Details;",
        "question": "Select other details and maximum channel id from channels grouped by other details ",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "other",
            "details",
            "and",
            "maximum",
            "channel",
            "id",
            "from",
            "channels",
            "grouped",
            "by",
            "other",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "Other_Details",
            ",",
            "MAX",
            "(",
            "Channel_ID",
            ")",
            "FROM",
            "Channels",
            "GROUP",
            "BY",
            "Other_Details"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            ",",
            "max",
            "(",
            "channel_id",
            ")",
            "from",
            "channels",
            "group",
            "by",
            "other_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__channels__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__channels.other_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__channels.channel_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__channels.other_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT Party_Details, MAX(Party_ID) FROM Parties GROUP BY Party_Details;",
        "question": "Select party details and maximum party id from parties grouped by party details ",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "party",
            "details",
            "and",
            "maximum",
            "party",
            "id",
            "from",
            "parties",
            "grouped",
            "by",
            "party",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "Party_Details",
            ",",
            "MAX",
            "(",
            "Party_ID",
            ")",
            "FROM",
            "Parties",
            "GROUP",
            "BY",
            "Party_Details"
        ],
        "query_toks_no_value": [
            "select",
            "party_details",
            ",",
            "max",
            "(",
            "party_id",
            ")",
            "from",
            "parties",
            "group",
            "by",
            "party_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__parties__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__parties.party_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__parties.party_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__parties.party_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "city_record",
        "query": "SELECT Host_City, MIN(Year) FROM hosting_city GROUP BY Host_City;",
        "question": "Select host city and minimum year from hosting city grouped by host city ",
        "tables": [
            "temperature",
            "hosting_city",
            "city",
            "match"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "host",
            "city",
            "and",
            "minimum",
            "year",
            "from",
            "hosting",
            "city",
            "grouped",
            "by",
            "host",
            "city"
        ],
        "query_toks": [
            "SELECT",
            "Host_City",
            ",",
            "MIN",
            "(",
            "Year",
            ")",
            "FROM",
            "hosting_city",
            "GROUP",
            "BY",
            "Host_City"
        ],
        "query_toks_no_value": [
            "select",
            "host_city",
            ",",
            "min",
            "(",
            "year",
            ")",
            "from",
            "hosting_city",
            "group",
            "by",
            "host_city"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__hosting_city__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__hosting_city.host_city__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__hosting_city.year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__hosting_city.host_city__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "city_record",
        "query": "SELECT City, MAX(GDP) FROM city GROUP BY City;",
        "question": "Select city and maximum gdp from city grouped by city ",
        "tables": [
            "temperature",
            "hosting_city",
            "city",
            "match"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "city",
            "and",
            "maximum",
            "gdp",
            "from",
            "city",
            "grouped",
            "by",
            "city"
        ],
        "query_toks": [
            "SELECT",
            "City",
            ",",
            "MAX",
            "(",
            "GDP",
            ")",
            "FROM",
            "city",
            "GROUP",
            "BY",
            "City"
        ],
        "query_toks_no_value": [
            "select",
            "city",
            ",",
            "max",
            "(",
            "gdp",
            ")",
            "from",
            "city",
            "group",
            "by",
            "city"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__city__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__city.city__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__city.gdp__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__city.city__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "city_record",
        "query": "SELECT Result, MAX(Match_ID) FROM match GROUP BY Result;",
        "question": "Select result and maximum match id from match grouped by result ",
        "tables": [
            "temperature",
            "hosting_city",
            "city",
            "match"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "result",
            "and",
            "maximum",
            "match",
            "id",
            "from",
            "match",
            "grouped",
            "by",
            "result"
        ],
        "query_toks": [
            "SELECT",
            "Result",
            ",",
            "MAX",
            "(",
            "Match_ID",
            ")",
            "FROM",
            "match",
            "GROUP",
            "BY",
            "Result"
        ],
        "query_toks_no_value": [
            "select",
            "result",
            ",",
            "max",
            "(",
            "match_id",
            ")",
            "from",
            "match",
            "group",
            "by",
            "result"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__match__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__match.result__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__match.match_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__match.result__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "swimming",
        "query": "SELECT Year, MAX(ID) FROM event GROUP BY Year;",
        "question": "Select year and maximum id from event grouped by year ",
        "tables": [
            "event",
            "stadium",
            "record",
            "swimmer"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "year",
            "and",
            "maximum",
            "id",
            "from",
            "event",
            "grouped",
            "by",
            "year"
        ],
        "query_toks": [
            "SELECT",
            "Year",
            ",",
            "MAX",
            "(",
            "ID",
            ")",
            "FROM",
            "event",
            "GROUP",
            "BY",
            "Year"
        ],
        "query_toks_no_value": [
            "select",
            "year",
            ",",
            "max",
            "(",
            "id",
            ")",
            "from",
            "event",
            "group",
            "by",
            "year"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__event__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__event.year__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__event.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__event.year__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "swimming",
        "query": "SELECT City, MAX(Opening_year) FROM stadium GROUP BY City;",
        "question": "Select city and maximum opening year from stadium grouped by city ",
        "tables": [
            "event",
            "stadium",
            "record",
            "swimmer"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "city",
            "and",
            "maximum",
            "opening",
            "year",
            "from",
            "stadium",
            "grouped",
            "by",
            "city"
        ],
        "query_toks": [
            "SELECT",
            "City",
            ",",
            "MAX",
            "(",
            "Opening_year",
            ")",
            "FROM",
            "stadium",
            "GROUP",
            "BY",
            "City"
        ],
        "query_toks_no_value": [
            "select",
            "city",
            ",",
            "max",
            "(",
            "opening_year",
            ")",
            "from",
            "stadium",
            "group",
            "by",
            "city"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__stadium__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__stadium.city__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__stadium.opening_year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__stadium.city__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "swimming",
        "query": "SELECT Result, MAX(ID) FROM record GROUP BY Result;",
        "question": "Select result and maximum id from record grouped by result ",
        "tables": [
            "event",
            "stadium",
            "record",
            "swimmer"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "result",
            "and",
            "maximum",
            "id",
            "from",
            "record",
            "grouped",
            "by",
            "result"
        ],
        "query_toks": [
            "SELECT",
            "Result",
            ",",
            "MAX",
            "(",
            "ID",
            ")",
            "FROM",
            "record",
            "GROUP",
            "BY",
            "Result"
        ],
        "query_toks_no_value": [
            "select",
            "result",
            ",",
            "max",
            "(",
            "id",
            ")",
            "from",
            "record",
            "group",
            "by",
            "result"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__record__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__record.result__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__record.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__record.result__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "swimming",
        "query": "SELECT Nationality, MIN(meter_100) FROM swimmer GROUP BY Nationality;",
        "question": "Select nationality and minimum meter 100 from swimmer grouped by nationality ",
        "tables": [
            "event",
            "stadium",
            "record",
            "swimmer"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "nationality",
            "and",
            "minimum",
            "meter",
            "100",
            "from",
            "swimmer",
            "grouped",
            "by",
            "nationality"
        ],
        "query_toks": [
            "SELECT",
            "Nationality",
            ",",
            "MIN",
            "(",
            "meter_100",
            ")",
            "FROM",
            "swimmer",
            "GROUP",
            "BY",
            "Nationality"
        ],
        "query_toks_no_value": [
            "select",
            "nationality",
            ",",
            "min",
            "(",
            "meter_100",
            ")",
            "from",
            "swimmer",
            "group",
            "by",
            "nationality"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__swimmer__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__swimmer.nationality__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__swimmer.meter_100__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__swimmer.nationality__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "query": "SELECT DestAirport, MAX(Airline) FROM flights GROUP BY DestAirport;",
        "question": "Select destination airport and maximum airline from flights grouped by destination airport ",
        "tables": [
            "airports",
            "flights",
            "airlines"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "destination",
            "airport",
            "and",
            "maximum",
            "airline",
            "from",
            "flights",
            "grouped",
            "by",
            "destination",
            "airport"
        ],
        "query_toks": [
            "SELECT",
            "DestAirport",
            ",",
            "MAX",
            "(",
            "Airline",
            ")",
            "FROM",
            "flights",
            "GROUP",
            "BY",
            "DestAirport"
        ],
        "query_toks_no_value": [
            "select",
            "destairport",
            ",",
            "max",
            "(",
            "airline",
            ")",
            "from",
            "flights",
            "group",
            "by",
            "destairport"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__flights__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__flights.destairport__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__flights.airline__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__flights.destairport__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_2",
        "query": "SELECT Airline, MAX(uid) FROM airlines GROUP BY Airline;",
        "question": "Select airline name and maximum airline id from airlines grouped by airline name ",
        "tables": [
            "airports",
            "flights",
            "airlines"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "airline",
            "name",
            "and",
            "maximum",
            "airline",
            "id",
            "from",
            "airlines",
            "grouped",
            "by",
            "airline",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Airline",
            ",",
            "MAX",
            "(",
            "uid",
            ")",
            "FROM",
            "airlines",
            "GROUP",
            "BY",
            "Airline"
        ],
        "query_toks_no_value": [
            "select",
            "airline",
            ",",
            "max",
            "(",
            "uid",
            ")",
            "from",
            "airlines",
            "group",
            "by",
            "airline"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__airlines__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__airlines.airline__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__airlines.uid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__airlines.airline__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "election",
        "query": "SELECT Committee, MAX(Election_ID) FROM election GROUP BY Committee;",
        "question": "Select committee and maximum election id from election grouped by committee ",
        "tables": [
            "election",
            "county",
            "party"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "committee",
            "and",
            "maximum",
            "election",
            "id",
            "from",
            "election",
            "grouped",
            "by",
            "committee"
        ],
        "query_toks": [
            "SELECT",
            "Committee",
            ",",
            "MAX",
            "(",
            "Election_ID",
            ")",
            "FROM",
            "election",
            "GROUP",
            "BY",
            "Committee"
        ],
        "query_toks_no_value": [
            "select",
            "committee",
            ",",
            "max",
            "(",
            "election_id",
            ")",
            "from",
            "election",
            "group",
            "by",
            "committee"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__election__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__election.committee__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__election.election_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__election.committee__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "election",
        "query": "SELECT County_name, MAX(Population) FROM county GROUP BY County_name;",
        "question": "Select county name and maximum population from county grouped by county name ",
        "tables": [
            "election",
            "county",
            "party"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "county",
            "name",
            "and",
            "maximum",
            "population",
            "from",
            "county",
            "grouped",
            "by",
            "county",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "County_name",
            "(",
            "County_name",
            ")",
            "MAX",
            "(",
            "Population",
            ")",
            "FROM",
            "count",
            "(",
            "count",
            ")",
            "GROUP",
            "BY",
            "County_name",
            "(",
            "County_name",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "county_name",
            "(",
            "county_name",
            ")",
            "max",
            "(",
            "population",
            ")",
            "from",
            "count",
            "(",
            "count",
            ")",
            "group",
            "by",
            "county_name",
            "(",
            "county_name",
            ")"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__county__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__county.county_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__county.population__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__county.county_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "election",
        "query": "SELECT Attorney_General, MAX(Party_ID) FROM party GROUP BY Attorney_General;",
        "question": "Select attorney general and maximum party id from party grouped by attorney general ",
        "tables": [
            "election",
            "county",
            "party"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "attorney",
            "general",
            "and",
            "maximum",
            "party",
            "id",
            "from",
            "party",
            "grouped",
            "by",
            "attorney",
            "general"
        ],
        "query_toks": [
            "SELECT",
            "Attorney_General",
            ",",
            "MAX",
            "(",
            "Party_ID",
            ")",
            "FROM",
            "party",
            "GROUP",
            "BY",
            "Attorney_General"
        ],
        "query_toks_no_value": [
            "select",
            "attorney_general",
            ",",
            "max",
            "(",
            "party_id",
            ")",
            "from",
            "party",
            "group",
            "by",
            "attorney_general"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__party__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__party.attorney_general__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__party.party_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__party.attorney_general__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "manufactory_1",
        "query": "SELECT Founder, MAX(Revenue) FROM Manufacturers GROUP BY Founder;",
        "question": "Select founder and maximum revenue from manufacturers grouped by founder ",
        "tables": [
            "Manufacturers",
            "Products"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "founder",
            "and",
            "maximum",
            "revenue",
            "from",
            "manufacturers",
            "grouped",
            "by",
            "founder"
        ],
        "query_toks": [
            "SELECT",
            "Founder",
            ",",
            "MAX",
            "(",
            "Revenue",
            ")",
            "FROM",
            "Manufacturers",
            "GROUP",
            "BY",
            "Founder"
        ],
        "query_toks_no_value": [
            "select",
            "founder",
            ",",
            "max",
            "(",
            "revenue",
            ")",
            "from",
            "manufacturers",
            "group",
            "by",
            "founder"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__manufacturers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__manufacturers.founder__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__manufacturers.revenue__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__manufacturers.founder__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "manufactory_1",
        "query": "SELECT Name, MAX(Code) FROM Products GROUP BY Name;",
        "question": "Select name and maximum code from products grouped by name ",
        "tables": [
            "Manufacturers",
            "Products"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "maximum",
            "code",
            "from",
            "products",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "MAX",
            "(",
            "Code",
            ")",
            "FROM",
            "Products",
            "GROUP",
            "BY",
            "Name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "max",
            "(",
            "code",
            ")",
            "from",
            "products",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__products.code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__products.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "debate",
        "query": "SELECT Date, MIN(Num_of_Audience) FROM debate GROUP BY Date;",
        "question": "Select date and minimum num of audience from debate grouped by date ",
        "tables": [
            "debate",
            "people",
            "debate_people"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "date",
            "and",
            "minimum",
            "num",
            "of",
            "audience",
            "from",
            "debate",
            "grouped",
            "by",
            "date"
        ],
        "query_toks": [
            "SELECT",
            "Date",
            ",",
            "MIN",
            "(",
            "Num_of_Audience",
            ")",
            "FROM",
            "debate",
            "GROUP",
            "BY",
            "Date"
        ],
        "query_toks_no_value": [
            "select",
            "date",
            ",",
            "min",
            "(",
            "num_of_audience",
            ")",
            "from",
            "debate",
            "group",
            "by",
            "date"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__debate__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__debate.date__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__debate.num_of_audience__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__debate.date__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "debate",
        "query": "SELECT Name, MAX(Age) FROM people GROUP BY Name;",
        "question": "Select name and maximum age from people grouped by name ",
        "tables": [
            "debate",
            "people",
            "debate_people"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "maximum",
            "age",
            "from",
            "people",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "MAX",
            "(",
            "Age",
            ")",
            "FROM",
            "people",
            "GROUP",
            "BY",
            "Name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "max",
            "(",
            "age",
            ")",
            "from",
            "people",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__people__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__people.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__people.age__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__people.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_2",
        "query": "SELECT name, MAX(age) FROM Person GROUP BY name;",
        "question": "Select name and maximum age from person grouped by name ",
        "tables": [
            "Person",
            "PersonFriend"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "maximum",
            "age",
            "from",
            "person",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "MAX",
            "(",
            "age",
            ")",
            "FROM",
            "Person",
            "GROUP",
            "BY",
            "name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "max",
            "(",
            "age",
            ")",
            "from",
            "person",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__person__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__person.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__person.age__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__person.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_2",
        "query": "SELECT name, MAX(year) FROM PersonFriend GROUP BY name;",
        "question": "Select name and maximum year from person friend grouped by name ",
        "tables": [
            "Person",
            "PersonFriend"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "maximum",
            "year",
            "from",
            "person",
            "friend",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "MAX",
            "(",
            "year",
            ")",
            "FROM",
            "PersonFriend",
            "GROUP",
            "BY",
            "name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "max",
            "(",
            "year",
            ")",
            "from",
            "personfriend",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__personfriend__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__personfriend.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__personfriend.year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__personfriend.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_in_alabama",
        "query": "SELECT Participant_Details, MIN(Participant_ID) FROM Participants GROUP BY Participant_Details;",
        "question": "Select participant details and minimum participant id from participants grouped by participant details ",
        "tables": [
            "Participants",
            "Services",
            "Events",
            "Participants_in_Events"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "participant",
            "details",
            "and",
            "minimum",
            "participant",
            "id",
            "from",
            "participants",
            "grouped",
            "by",
            "participant",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "Participant_Details",
            ",",
            "MIN",
            "(",
            "Participant_ID",
            ")",
            "FROM",
            "Participants",
            "GROUP",
            "BY",
            "Participant_Details"
        ],
        "query_toks_no_value": [
            "select",
            "participant_details",
            ",",
            "min",
            "(",
            "participant_id",
            ")",
            "from",
            "participants",
            "group",
            "by",
            "participant_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__participants__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__participants.participant_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__participants.participant_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__participants.participant_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_in_alabama",
        "query": "SELECT Service_Type_Code, MAX(Service_ID) FROM Services GROUP BY Service_Type_Code;",
        "question": "Select service type code and maximum service id from services grouped by service type code ",
        "tables": [
            "Participants",
            "Services",
            "Events",
            "Participants_in_Events"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "service",
            "type",
            "code",
            "and",
            "maximum",
            "service",
            "id",
            "from",
            "services",
            "grouped",
            "by",
            "service",
            "type",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "Service_Type_Code",
            ",",
            "MAX",
            "(",
            "Service_ID",
            ")",
            "FROM",
            "Services",
            "GROUP",
            "BY",
            "Service_Type_Code"
        ],
        "query_toks_no_value": [
            "select",
            "service_type_code",
            ",",
            "max",
            "(",
            "service_id",
            ")",
            "from",
            "services",
            "group",
            "by",
            "service_type_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__services__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__services.service_type_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__services.service_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__services.service_type_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_in_alabama",
        "query": "SELECT Event_Details, MAX(Service_ID) FROM Events GROUP BY Event_Details;",
        "question": "Select event details and maximum service id from events grouped by event details ",
        "tables": [
            "Participants",
            "Services",
            "Events",
            "Participants_in_Events"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "event",
            "details",
            "and",
            "maximum",
            "service",
            "id",
            "from",
            "events",
            "grouped",
            "by",
            "event",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "Event_Details",
            ",",
            "MAX",
            "(",
            "Service_ID",
            ")",
            "FROM",
            "Events",
            "GROUP",
            "BY",
            "Event_Details"
        ],
        "query_toks_no_value": [
            "select",
            "event_details",
            ",",
            "max",
            "(",
            "service_id",
            ")",
            "from",
            "events",
            "group",
            "by",
            "event_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__events__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__events.event_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__events.service_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__events.event_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "climbing",
        "query": "SELECT Country, MAX(Points) FROM climber GROUP BY Country;",
        "question": "Select country and maximum points from climber grouped by country ",
        "tables": [
            "climber",
            "mountain"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "country",
            "and",
            "maximum",
            "points",
            "from",
            "climber",
            "grouped",
            "by",
            "country"
        ],
        "query_toks": [
            "SELECT",
            "Country",
            "(",
            "Country",
            ")",
            "MAX",
            "(",
            "Points",
            ")",
            "FROM",
            "climber",
            "GROUP",
            "BY",
            "Country",
            "(",
            "Country",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            "(",
            "country",
            ")",
            "max",
            "(",
            "points",
            ")",
            "from",
            "climber",
            "group",
            "by",
            "country",
            "(",
            "country",
            ")"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__climber__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__climber.country__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__climber.points__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__climber.country__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "climbing",
        "query": "SELECT Range, MAX(Prominence) FROM mountain GROUP BY Range;",
        "question": "Select range and maximum prominence from mountain grouped by range ",
        "tables": [
            "climber",
            "mountain"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "range",
            "and",
            "maximum",
            "prominence",
            "from",
            "mountain",
            "grouped",
            "by",
            "range"
        ],
        "query_toks": [
            "SELECT",
            "Range",
            ",",
            "MAX",
            "(",
            "Prominence",
            ")",
            "FROM",
            "mountain",
            "GROUP",
            "BY",
            "Range"
        ],
        "query_toks_no_value": [
            "select",
            "range",
            ",",
            "max",
            "(",
            "prominence",
            ")",
            "from",
            "mountain",
            "group",
            "by",
            "range"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__mountain__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__mountain.range__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__mountain.prominence__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__mountain.range__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_learning",
        "query": "SELECT course_name, MIN(subject_id) FROM Courses GROUP BY course_name;",
        "question": "Select course name and minimum subject id from courses grouped by course name ",
        "tables": [
            "Courses",
            "Students",
            "Subjects",
            "Course_Authors_and_Tutors",
            "Student_Course_Enrolment",
            "Student_Tests_Taken"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "course",
            "name",
            "and",
            "minimum",
            "subject",
            "id",
            "from",
            "courses",
            "grouped",
            "by",
            "course",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "course_name",
            ",",
            "MIN",
            "(",
            "subject_id",
            ")",
            "FROM",
            "Courses",
            "GROUP",
            "BY",
            "course_name"
        ],
        "query_toks_no_value": [
            "select",
            "course_name",
            ",",
            "min",
            "(",
            "subject_id",
            ")",
            "from",
            "courses",
            "group",
            "by",
            "course_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__courses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__courses.course_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__courses.subject_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__courses.course_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_learning",
        "query": "SELECT password, MIN(student_id) FROM Students GROUP BY password;",
        "question": "Select password and minimum student id from students grouped by password ",
        "tables": [
            "Courses",
            "Students",
            "Subjects",
            "Course_Authors_and_Tutors",
            "Student_Course_Enrolment",
            "Student_Tests_Taken"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "password",
            "and",
            "minimum",
            "student",
            "id",
            "from",
            "students",
            "grouped",
            "by",
            "password"
        ],
        "query_toks": [
            "SELECT",
            "password",
            ",",
            "MIN",
            "(",
            "student_id",
            ")",
            "FROM",
            "Students",
            "GROUP",
            "BY",
            "password"
        ],
        "query_toks_no_value": [
            "select",
            "password",
            ",",
            "min",
            "(",
            "student_id",
            ")",
            "from",
            "students",
            "group",
            "by",
            "password"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__students__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__students.password__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__students.student_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__students.password__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_learning",
        "query": "SELECT subject_name, MIN(subject_id) FROM Subjects GROUP BY subject_name;",
        "question": "Select subject name and minimum subject id from subjects grouped by subject name ",
        "tables": [
            "Courses",
            "Students",
            "Subjects",
            "Course_Authors_and_Tutors",
            "Student_Course_Enrolment",
            "Student_Tests_Taken"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "subject",
            "name",
            "and",
            "minimum",
            "subject",
            "id",
            "from",
            "subjects",
            "grouped",
            "by",
            "subject",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "subject_name",
            ",",
            "MIN",
            "(",
            "subject_id",
            ")",
            "FROM",
            "Subjects",
            "GROUP",
            "BY",
            "subject_name"
        ],
        "query_toks_no_value": [
            "select",
            "subject_name",
            ",",
            "min",
            "(",
            "subject_id",
            ")",
            "from",
            "subjects",
            "group",
            "by",
            "subject_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__subjects__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__subjects.subject_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__subjects.subject_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__subjects.subject_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_learning",
        "query": "SELECT family_name, MAX(author_id) FROM Course_Authors_and_Tutors GROUP BY family_name;",
        "question": "Select family name and maximum author id from course authors and tutors grouped by family name ",
        "tables": [
            "Courses",
            "Students",
            "Subjects",
            "Course_Authors_and_Tutors",
            "Student_Course_Enrolment",
            "Student_Tests_Taken"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "family",
            "name",
            "and",
            "maximum",
            "author",
            "id",
            "from",
            "course",
            "authors",
            "and",
            "tutors",
            "grouped",
            "by",
            "family",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "family_name",
            ",",
            "MAX",
            "(",
            "author_id",
            ")",
            "FROM",
            "Course_Authors_and_Tutors",
            "GROUP",
            "BY",
            "family_name"
        ],
        "query_toks_no_value": [
            "select",
            "family_name",
            ",",
            "max",
            "(",
            "author_id",
            ")",
            "from",
            "course_authors_and_tutors",
            "group",
            "by",
            "family_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__course_authors_and_tutors__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__course_authors_and_tutors.family_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__course_authors_and_tutors.author_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__course_authors_and_tutors.family_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_learning",
        "query": "SELECT test_result, MIN(registration_id) FROM Student_Tests_Taken GROUP BY test_result;",
        "question": "Select test result and minimum registration id from student tests taken grouped by test result ",
        "tables": [
            "Courses",
            "Students",
            "Subjects",
            "Course_Authors_and_Tutors",
            "Student_Course_Enrolment",
            "Student_Tests_Taken"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "test",
            "result",
            "and",
            "minimum",
            "registration",
            "id",
            "from",
            "student",
            "tests",
            "taken",
            "grouped",
            "by",
            "test",
            "result"
        ],
        "query_toks": [
            "SELECT",
            "test_result",
            ",",
            "MIN",
            "(",
            "registration_id",
            ")",
            "FROM",
            "Student_Tests_Taken",
            "GROUP",
            "BY",
            "test_result"
        ],
        "query_toks_no_value": [
            "select",
            "test_result",
            ",",
            "min",
            "(",
            "registration_id",
            ")",
            "from",
            "student_tests_taken",
            "group",
            "by",
            "test_result"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student_tests_taken__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student_tests_taken.test_result__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__student_tests_taken.registration_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__student_tests_taken.test_result__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "scientist_1",
        "query": "SELECT Project, MAX(Scientist) FROM AssignedTo GROUP BY Project;",
        "question": "Select project and maximum scientist from assigned to grouped by project ",
        "tables": [
            "AssignedTo",
            "Projects",
            "Scientists"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "project",
            "and",
            "maximum",
            "scientist",
            "from",
            "assigned",
            "to",
            "grouped",
            "by",
            "project"
        ],
        "query_toks": [
            "SELECT",
            "Project",
            ",",
            "MAX",
            "(",
            "Scientist",
            ")",
            "FROM",
            "AssignedTo",
            "GROUP",
            "BY",
            "Project"
        ],
        "query_toks_no_value": [
            "select",
            "project",
            ",",
            "max",
            "(",
            "scientist",
            ")",
            "from",
            "assignedto",
            "group",
            "by",
            "project"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__assignedto__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__assignedto.project__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__assignedto.scientist__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__assignedto.project__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "scientist_1",
        "query": "SELECT Code, MIN(Hours) FROM Projects GROUP BY Code;",
        "question": "Select code and minimum hours from projects grouped by code ",
        "tables": [
            "AssignedTo",
            "Projects",
            "Scientists"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "code",
            "and",
            "minimum",
            "hours",
            "from",
            "projects",
            "grouped",
            "by",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "Code",
            ",",
            "MIN",
            "(",
            "Hours",
            ")",
            "FROM",
            "Projects",
            "GROUP",
            "BY",
            "Code"
        ],
        "query_toks_no_value": [
            "select",
            "code",
            ",",
            "min",
            "(",
            "hours",
            ")",
            "from",
            "projects",
            "group",
            "by",
            "code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__projects__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__projects.code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__projects.hours__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__projects.code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "scientist_1",
        "query": "SELECT Name, MIN(SSN) FROM Scientists GROUP BY Name;",
        "question": "Select name and minimum ssn from scientists grouped by name ",
        "tables": [
            "AssignedTo",
            "Projects",
            "Scientists"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "minimum",
            "ssn",
            "from",
            "scientists",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "MIN",
            "(",
            "SSN",
            ")",
            "FROM",
            "Scientists",
            "GROUP",
            "BY",
            "Name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "min",
            "(",
            "ssn",
            ")",
            "from",
            "scientists",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__scientists__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__scientists.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__scientists.ssn__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__scientists.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "ship_1",
        "query": "SELECT Rank, MAX(Ship_ID) FROM captain GROUP BY Rank;",
        "question": "Select rank and maximum ship id from captain grouped by rank ",
        "tables": [
            "captain",
            "Ship"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "rank",
            "and",
            "maximum",
            "ship",
            "id",
            "from",
            "captain",
            "grouped",
            "by",
            "rank"
        ],
        "query_toks": [
            "SELECT",
            "Rank",
            ",",
            "MAX",
            "(",
            "Ship_ID",
            ")",
            "FROM",
            "captain",
            "GROUP",
            "BY",
            "Rank"
        ],
        "query_toks_no_value": [
            "select",
            "rank",
            ",",
            "max",
            "(",
            "ship_id",
            ")",
            "from",
            "captain",
            "group",
            "by",
            "rank"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__captain__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__captain.rank__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__captain.ship_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__captain.rank__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "ship_1",
        "query": "SELECT Flag, MAX(Ship_ID) FROM Ship GROUP BY Flag;",
        "question": "Select flag and maximum ship id from ship grouped by flag ",
        "tables": [
            "captain",
            "Ship"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "flag",
            "and",
            "maximum",
            "ship",
            "id",
            "from",
            "ship",
            "grouped",
            "by",
            "flag"
        ],
        "query_toks": [
            "SELECT",
            "Flag",
            ",",
            "MAX",
            "(",
            "Ship_ID",
            ")",
            "FROM",
            "Ship",
            "GROUP",
            "BY",
            "Flag"
        ],
        "query_toks_no_value": [
            "select",
            "flag",
            ",",
            "max",
            "(",
            "ship_id",
            ")",
            "from",
            "ship",
            "group",
            "by",
            "flag"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__ship__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__ship.flag__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__ship.ship_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__ship.flag__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "entertainment_awards",
        "query": "SELECT Result, MAX(Festival_ID) FROM nomination GROUP BY Result;",
        "question": "Select result and maximum festival id from nomination grouped by result ",
        "tables": [
            "nomination",
            "festival_detail",
            "artwork"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "result",
            "and",
            "maximum",
            "festival",
            "id",
            "from",
            "nomination",
            "grouped",
            "by",
            "result"
        ],
        "query_toks": [
            "SELECT",
            "Result",
            ",",
            "MAX",
            "(",
            "Festival_ID",
            ")",
            "FROM",
            "nomination",
            "GROUP",
            "BY",
            "Result"
        ],
        "query_toks_no_value": [
            "select",
            "result",
            ",",
            "max",
            "(",
            "festival_id",
            ")",
            "from",
            "nomination",
            "group",
            "by",
            "result"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__nomination__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__nomination.result__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__nomination.festival_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__nomination.result__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "entertainment_awards",
        "query": "SELECT Chair_Name, MIN(Year) FROM festival_detail GROUP BY Chair_Name;",
        "question": "Select chair name and minimum year from festival detail grouped by chair name ",
        "tables": [
            "nomination",
            "festival_detail",
            "artwork"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "chair",
            "name",
            "and",
            "minimum",
            "year",
            "from",
            "festival",
            "detail",
            "grouped",
            "by",
            "chair",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Chair_Name",
            ",",
            "MIN",
            "(",
            "Year",
            ")",
            "FROM",
            "festival_detail",
            "GROUP",
            "BY",
            "Chair_Name"
        ],
        "query_toks_no_value": [
            "select",
            "chair_name",
            ",",
            "min",
            "(",
            "year",
            ")",
            "from",
            "festival_detail",
            "group",
            "by",
            "chair_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__festival_detail__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__festival_detail.chair_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__festival_detail.year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__festival_detail.chair_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "entertainment_awards",
        "query": "SELECT Name, MIN(Artwork_ID) FROM artwork GROUP BY Name;",
        "question": "Select name and minimum artwork id from artwork grouped by name ",
        "tables": [
            "nomination",
            "festival_detail",
            "artwork"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "minimum",
            "artwork",
            "id",
            "from",
            "artwork",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "MIN",
            "(",
            "Artwork_ID",
            ")",
            "FROM",
            "artwork",
            "GROUP",
            "BY",
            "Name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "min",
            "(",
            "artwork_id",
            ")",
            "from",
            "artwork",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__artwork__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__artwork.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__artwork.artwork_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__artwork.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "allergy_1",
        "query": "SELECT Sex, MAX(StuID) FROM Student GROUP BY Sex;",
        "question": "Select sex and maximum stuid from student grouped by sex ",
        "tables": [
            "Allergy_Type",
            "Student",
            "Has_Allergy"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "sex",
            "and",
            "maximum",
            "stuid",
            "from",
            "student",
            "grouped",
            "by",
            "sex"
        ],
        "query_toks": [
            "SELECT",
            "Sex",
            ",",
            "MAX",
            "(",
            "StuID",
            ")",
            "FROM",
            "Student",
            "GROUP",
            "BY",
            "Sex"
        ],
        "query_toks_no_value": [
            "select",
            "sex",
            ",",
            "max",
            "(",
            "stuid",
            ")",
            "from",
            "student",
            "group",
            "by",
            "sex"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.sex__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__student.stuid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__student.sex__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "allergy_1",
        "query": "SELECT Allergy, MIN(StuID) FROM Has_Allergy GROUP BY Allergy;",
        "question": "Select allergy and minimum stuid from has allergy grouped by allergy ",
        "tables": [
            "Allergy_Type",
            "Student",
            "Has_Allergy"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "allergy",
            "and",
            "minimum",
            "stuid",
            "from",
            "has",
            "allergy",
            "grouped",
            "by",
            "allergy"
        ],
        "query_toks": [
            "SELECT",
            "Allergy",
            ",",
            "MIN",
            "(",
            "StuID",
            ")",
            "FROM",
            "Has_Allergy",
            "GROUP",
            "BY",
            "Allergy"
        ],
        "query_toks_no_value": [
            "select",
            "allergy",
            ",",
            "min",
            "(",
            "stuid",
            ")",
            "from",
            "has_allergy",
            "group",
            "by",
            "allergy"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__has_allergy__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__has_allergy.allergy__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__has_allergy.stuid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__has_allergy.allergy__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "imdb",
        "query": "SELECT title_aka, MAX(release_year) FROM tv_series GROUP BY title_aka;",
        "question": "Select title aka and maximum release year from tv series grouped by title aka ",
        "tables": [
            "tags",
            "tv_series",
            "made_by",
            "directed_by",
            "written_by",
            "director",
            "classification",
            "cast",
            "keyword",
            "movie",
            "copyright",
            "company",
            "writer",
            "actor",
            "producer",
            "genre"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "title",
            "aka",
            "and",
            "maximum",
            "release",
            "year",
            "from",
            "tv",
            "series",
            "grouped",
            "by",
            "title",
            "aka"
        ],
        "query_toks": [
            "SELECT",
            "title_aka",
            ",",
            "MAX",
            "(",
            "release_year",
            ")",
            "FROM",
            "tv_series",
            "GROUP",
            "BY",
            "title_aka"
        ],
        "query_toks_no_value": [
            "select",
            "title_aka",
            ",",
            "max",
            "(",
            "release_year",
            ")",
            "from",
            "tv_series",
            "group",
            "by",
            "title_aka"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__tv_series__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__tv_series.title_aka__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__tv_series.release_year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__tv_series.title_aka__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "imdb",
        "query": "SELECT name, MAX(birth_year) FROM director GROUP BY name;",
        "question": "Select name and maximum birth year from director grouped by name ",
        "tables": [
            "tags",
            "tv_series",
            "made_by",
            "directed_by",
            "written_by",
            "director",
            "classification",
            "cast",
            "keyword",
            "movie",
            "copyright",
            "company",
            "writer",
            "actor",
            "producer",
            "genre"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "maximum",
            "birth",
            "year",
            "from",
            "director",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "MAX",
            "(",
            "birth_year",
            ")",
            "FROM",
            "director",
            "GROUP",
            "BY",
            "name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "max",
            "(",
            "birth_year",
            ")",
            "from",
            "director",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__director__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__director.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__director.birth_year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__director.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "imdb",
        "query": "SELECT keyword, MAX(id) FROM keyword GROUP BY keyword;",
        "question": "Select keyword and maximum id from keyword grouped by keyword ",
        "tables": [
            "tags",
            "tv_series",
            "made_by",
            "directed_by",
            "written_by",
            "director",
            "classification",
            "cast",
            "keyword",
            "movie",
            "copyright",
            "company",
            "writer",
            "actor",
            "producer",
            "genre"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "keyword",
            "and",
            "maximum",
            "id",
            "from",
            "keyword",
            "grouped",
            "by",
            "keyword"
        ],
        "query_toks": [
            "SELECT",
            "keyword",
            ",",
            "MAX",
            "(",
            "id",
            ")",
            "FROM",
            "keyword",
            "GROUP",
            "BY",
            "keyword"
        ],
        "query_toks_no_value": [
            "select",
            "keyword",
            ",",
            "max",
            "(",
            "id",
            ")",
            "from",
            "keyword",
            "group",
            "by",
            "keyword"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__keyword__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__keyword.keyword__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__keyword.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__keyword.keyword__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "imdb",
        "query": "SELECT title_aka, MAX(release_year) FROM movie GROUP BY title_aka;",
        "question": "Select title aka and maximum release year from movie grouped by title aka ",
        "tables": [
            "tags",
            "tv_series",
            "made_by",
            "directed_by",
            "written_by",
            "director",
            "classification",
            "cast",
            "keyword",
            "movie",
            "copyright",
            "company",
            "writer",
            "actor",
            "producer",
            "genre"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "title",
            "aka",
            "and",
            "maximum",
            "release",
            "year",
            "from",
            "movie",
            "grouped",
            "by",
            "title",
            "aka"
        ],
        "query_toks": [
            "SELECT",
            "title_aka",
            ",",
            "MAX",
            "(",
            "release_year",
            ")",
            "FROM",
            "movie",
            "GROUP",
            "BY",
            "title_aka"
        ],
        "query_toks_no_value": [
            "select",
            "title_aka",
            ",",
            "max",
            "(",
            "release_year",
            ")",
            "from",
            "movie",
            "group",
            "by",
            "title_aka"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__movie__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__movie.title_aka__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__movie.release_year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__movie.title_aka__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "imdb",
        "query": "SELECT name, MAX(id) FROM company GROUP BY name;",
        "question": "Select name and maximum id from company grouped by name ",
        "tables": [
            "tags",
            "tv_series",
            "made_by",
            "directed_by",
            "written_by",
            "director",
            "classification",
            "cast",
            "keyword",
            "movie",
            "copyright",
            "company",
            "writer",
            "actor",
            "producer",
            "genre"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "maximum",
            "id",
            "from",
            "company",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "MAX",
            "(",
            "id",
            ")",
            "FROM",
            "company",
            "GROUP",
            "BY",
            "name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "max",
            "(",
            "id",
            ")",
            "from",
            "company",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__company__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__company.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__company.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__company.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "imdb",
        "query": "SELECT birth_city, MAX(birth_year) FROM writer GROUP BY birth_city;",
        "question": "Select birth city and maximum birth year from writer grouped by birth city ",
        "tables": [
            "tags",
            "tv_series",
            "made_by",
            "directed_by",
            "written_by",
            "director",
            "classification",
            "cast",
            "keyword",
            "movie",
            "copyright",
            "company",
            "writer",
            "actor",
            "producer",
            "genre"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "birth",
            "city",
            "and",
            "maximum",
            "birth",
            "year",
            "from",
            "writer",
            "grouped",
            "by",
            "birth",
            "city"
        ],
        "query_toks": [
            "SELECT",
            "birth_city",
            ",",
            "MAX",
            "(",
            "birth_year",
            ")",
            "FROM",
            "writer",
            "GROUP",
            "BY",
            "birth_city"
        ],
        "query_toks_no_value": [
            "select",
            "birth_city",
            ",",
            "max",
            "(",
            "birth_year",
            ")",
            "from",
            "writer",
            "group",
            "by",
            "birth_city"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__writer__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__writer.birth_city__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__writer.birth_year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__writer.birth_city__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "imdb",
        "query": "SELECT gender, MIN(aid) FROM actor GROUP BY gender;",
        "question": "Select gender and minimum aid from actor grouped by gender ",
        "tables": [
            "tags",
            "tv_series",
            "made_by",
            "directed_by",
            "written_by",
            "director",
            "classification",
            "cast",
            "keyword",
            "movie",
            "copyright",
            "company",
            "writer",
            "actor",
            "producer",
            "genre"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "gender",
            "and",
            "minimum",
            "aid",
            "from",
            "actor",
            "grouped",
            "by",
            "gender"
        ],
        "query_toks": [
            "SELECT",
            "gender",
            ",",
            "MIN",
            "(",
            "aid",
            ")",
            "FROM",
            "actor",
            "GROUP",
            "BY",
            "gender"
        ],
        "query_toks_no_value": [
            "select",
            "gender",
            ",",
            "min",
            "(",
            "aid",
            ")",
            "from",
            "actor",
            "group",
            "by",
            "gender"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__actor__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__actor.gender__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__actor.aid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__actor.gender__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "imdb",
        "query": "SELECT birth_city, MAX(birth_year) FROM producer GROUP BY birth_city;",
        "question": "Select birth city and maximum birth year from producer grouped by birth city ",
        "tables": [
            "tags",
            "tv_series",
            "made_by",
            "directed_by",
            "written_by",
            "director",
            "classification",
            "cast",
            "keyword",
            "movie",
            "copyright",
            "company",
            "writer",
            "actor",
            "producer",
            "genre"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "birth",
            "city",
            "and",
            "maximum",
            "birth",
            "year",
            "from",
            "producer",
            "grouped",
            "by",
            "birth",
            "city"
        ],
        "query_toks": [
            "SELECT",
            "birth_city",
            ",",
            "MAX",
            "(",
            "birth_year",
            ")",
            "FROM",
            "producer",
            "GROUP",
            "BY",
            "birth_city"
        ],
        "query_toks_no_value": [
            "select",
            "birth_city",
            ",",
            "max",
            "(",
            "birth_year",
            ")",
            "from",
            "producer",
            "group",
            "by",
            "birth_city"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__producer__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__producer.birth_city__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__producer.birth_year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__producer.birth_city__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "imdb",
        "query": "SELECT genre, MAX(gid) FROM genre GROUP BY genre;",
        "question": "Select genre and maximum gid from genre grouped by genre ",
        "tables": [
            "tags",
            "tv_series",
            "made_by",
            "directed_by",
            "written_by",
            "director",
            "classification",
            "cast",
            "keyword",
            "movie",
            "copyright",
            "company",
            "writer",
            "actor",
            "producer",
            "genre"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "genre",
            "and",
            "maximum",
            "gid",
            "from",
            "genre",
            "grouped",
            "by",
            "genre"
        ],
        "query_toks": [
            "SELECT",
            "genre",
            ",",
            "MAX",
            "(",
            "gid",
            ")",
            "FROM",
            "genre",
            "GROUP",
            "BY",
            "genre"
        ],
        "query_toks_no_value": [
            "select",
            "genre",
            ",",
            "max",
            "(",
            "gid",
            ")",
            "from",
            "genre",
            "group",
            "by",
            "genre"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__genre__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__genre.genre__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__genre.gid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__genre.genre__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_for_hire",
        "query": "SELECT returned_yn, MIN(booked_amount) FROM Products_Booked GROUP BY returned_yn;",
        "question": "Select returned yes or no and minimum booked amount from products booked grouped by returned yes or no ",
        "tables": [
            "Products_Booked",
            "Bookings",
            "Customers",
            "Discount_Coupons",
            "View_Product_Availability",
            "Products_for_Hire",
            "Payments"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "returned",
            "yes",
            "or",
            "no",
            "and",
            "minimum",
            "booked",
            "amount",
            "from",
            "products",
            "booked",
            "grouped",
            "by",
            "returned",
            "yes",
            "or",
            "no"
        ],
        "query_toks": [
            "SELECT",
            "returned_yn",
            ",",
            "MIN",
            "(",
            "booked_amount",
            ")",
            "FROM",
            "Products_Booked",
            "GROUP",
            "BY",
            "returned_yn"
        ],
        "query_toks_no_value": [
            "select",
            "returned_yn",
            ",",
            "min",
            "(",
            "booked_amount",
            ")",
            "from",
            "products_booked",
            "group",
            "by",
            "returned_yn"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products_booked__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products_booked.returned_yn__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__products_booked.booked_amount__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__products_booked.returned_yn__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_for_hire",
        "query": "SELECT booking_status_code, MIN(amount_of_discount) FROM Bookings GROUP BY booking_status_code;",
        "question": "Select booking status code and minimum amount of discount from bookings grouped by booking status code ",
        "tables": [
            "Products_Booked",
            "Bookings",
            "Customers",
            "Discount_Coupons",
            "View_Product_Availability",
            "Products_for_Hire",
            "Payments"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "booking",
            "status",
            "code",
            "and",
            "minimum",
            "amount",
            "of",
            "discount",
            "from",
            "bookings",
            "grouped",
            "by",
            "booking",
            "status",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "booking_status_code",
            ",",
            "MIN",
            "(",
            "amount_of_discount",
            ")",
            "FROM",
            "Bookings",
            "GROUP",
            "BY",
            "booking_status_code"
        ],
        "query_toks_no_value": [
            "select",
            "booking_status_code",
            ",",
            "min",
            "(",
            "amount_of_discount",
            ")",
            "from",
            "bookings",
            "group",
            "by",
            "booking_status_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__bookings__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__bookings.booking_status_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__bookings.amount_of_discount__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__bookings.booking_status_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_for_hire",
        "query": "SELECT first_name, MIN(coupon_id) FROM Customers GROUP BY first_name;",
        "question": "Select first name and minimum coupon id from customers grouped by first name ",
        "tables": [
            "Products_Booked",
            "Bookings",
            "Customers",
            "Discount_Coupons",
            "View_Product_Availability",
            "Products_for_Hire",
            "Payments"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "first",
            "name",
            "and",
            "minimum",
            "coupon",
            "id",
            "from",
            "customers",
            "grouped",
            "by",
            "first",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "first_name",
            ",",
            "MIN",
            "(",
            "coupon_id",
            ")",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "first_name"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            ",",
            "min",
            "(",
            "coupon_id",
            ")",
            "from",
            "customers",
            "group",
            "by",
            "first_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.first_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__customers.coupon_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customers.first_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_for_hire",
        "query": "SELECT available_yn, MAX(product_id) FROM View_Product_Availability GROUP BY available_yn;",
        "question": "Select available yes or no and maximum product id from view product availability grouped by available yes or no ",
        "tables": [
            "Products_Booked",
            "Bookings",
            "Customers",
            "Discount_Coupons",
            "View_Product_Availability",
            "Products_for_Hire",
            "Payments"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "available",
            "yes",
            "or",
            "no",
            "and",
            "maximum",
            "product",
            "id",
            "from",
            "view",
            "product",
            "availability",
            "grouped",
            "by",
            "available",
            "yes",
            "or",
            "no"
        ],
        "query_toks": [
            "SELECT",
            "available_yn",
            ",",
            "MAX",
            "(",
            "product_id",
            ")",
            "FROM",
            "View_Product_Availability",
            "GROUP",
            "BY",
            "available_yn"
        ],
        "query_toks_no_value": [
            "select",
            "available_yn",
            ",",
            "max",
            "(",
            "product_id",
            ")",
            "from",
            "view_product_availability",
            "group",
            "by",
            "available_yn"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__view_product_availability__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__view_product_availability.available_yn__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__view_product_availability.product_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__view_product_availability.available_yn__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_for_hire",
        "query": "SELECT product_name, MAX(product_id) FROM Products_for_Hire GROUP BY product_name;",
        "question": "Select product name and maximum product id from products for hire grouped by product name ",
        "tables": [
            "Products_Booked",
            "Bookings",
            "Customers",
            "Discount_Coupons",
            "View_Product_Availability",
            "Products_for_Hire",
            "Payments"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "product",
            "name",
            "and",
            "maximum",
            "product",
            "id",
            "from",
            "products",
            "for",
            "hire",
            "grouped",
            "by",
            "product",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "product_name",
            ",",
            "MAX",
            "(",
            "product_id",
            ")",
            "FROM",
            "Products_for_Hire",
            "GROUP",
            "BY",
            "product_name"
        ],
        "query_toks_no_value": [
            "select",
            "product_name",
            ",",
            "max",
            "(",
            "product_id",
            ")",
            "from",
            "products_for_hire",
            "group",
            "by",
            "product_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products_for_hire__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products_for_hire.product_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__products_for_hire.product_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__products_for_hire.product_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_for_hire",
        "query": "SELECT amount_paid_in_full_yn, MIN(booking_id) FROM Payments GROUP BY amount_paid_in_full_yn;",
        "question": "Select amount paid in full yn and minimum booking id from payments grouped by amount paid in full yn ",
        "tables": [
            "Products_Booked",
            "Bookings",
            "Customers",
            "Discount_Coupons",
            "View_Product_Availability",
            "Products_for_Hire",
            "Payments"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "amount",
            "paid",
            "in",
            "full",
            "yn",
            "and",
            "minimum",
            "booking",
            "id",
            "from",
            "payments",
            "grouped",
            "by",
            "amount",
            "paid",
            "in",
            "full",
            "yn"
        ],
        "query_toks": [
            "SELECT",
            "amount_paid_in_full_yn",
            ",",
            "MIN",
            "(",
            "booking_id",
            ")",
            "FROM",
            "Payments",
            "GROUP",
            "BY",
            "amount_paid_in_full_yn"
        ],
        "query_toks_no_value": [
            "select",
            "amount_paid_in_full_yn",
            ",",
            "min",
            "(",
            "booking_id",
            ")",
            "from",
            "payments",
            "group",
            "by",
            "amount_paid_in_full_yn"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__payments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__payments.amount_paid_in_full_yn__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__payments.booking_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__payments.amount_paid_in_full_yn__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "candidate_poll",
        "query": "SELECT Date, MIN(People_ID) FROM candidate GROUP BY Date;",
        "question": "Select date and minimum people id from candidate grouped by date ",
        "tables": [
            "candidate",
            "people"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "date",
            "and",
            "minimum",
            "people",
            "id",
            "from",
            "candidate",
            "grouped",
            "by",
            "date"
        ],
        "query_toks": [
            "SELECT",
            "Date",
            ",",
            "MIN",
            "(",
            "People_ID",
            ")",
            "FROM",
            "candidate",
            "GROUP",
            "BY",
            "Date"
        ],
        "query_toks_no_value": [
            "select",
            "date",
            ",",
            "min",
            "(",
            "people_id",
            ")",
            "from",
            "candidate",
            "group",
            "by",
            "date"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__candidate__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__candidate.date__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__candidate.people_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__candidate.date__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "candidate_poll",
        "query": "SELECT Name, MIN(Weight) FROM people GROUP BY Name;",
        "question": "Select name and minimum weight from people grouped by name ",
        "tables": [
            "candidate",
            "people"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "minimum",
            "weight",
            "from",
            "people",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "MIN",
            "(",
            "Weight",
            ")",
            "FROM",
            "people",
            "GROUP",
            "BY",
            "Name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "min",
            "(",
            "weight",
            ")",
            "from",
            "people",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__people__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__people.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__people.weight__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__people.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "chinook_1",
        "query": "SELECT BillingAddress, MIN(CustomerId) FROM Invoice GROUP BY BillingAddress;",
        "question": "Select billing address and minimum customer id from invoice grouped by billing address ",
        "tables": [
            "Invoice",
            "Artist",
            "Album",
            "Track",
            "InvoiceLine",
            "Employee",
            "Playlist",
            "Genre",
            "Customer",
            "PlaylistTrack",
            "MediaType"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "billing",
            "address",
            "and",
            "minimum",
            "customer",
            "id",
            "from",
            "invoice",
            "grouped",
            "by",
            "billing",
            "address"
        ],
        "query_toks": [
            "SELECT",
            "BillingAddress",
            ",",
            "MIN",
            "(",
            "CustomerId",
            ")",
            "FROM",
            "Invoice",
            "GROUP",
            "BY",
            "BillingAddress"
        ],
        "query_toks_no_value": [
            "select",
            "billingaddress",
            ",",
            "min",
            "(",
            "customerid",
            ")",
            "from",
            "invoice",
            "group",
            "by",
            "billingaddress"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__invoice__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__invoice.billingaddress__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__invoice.customerid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__invoice.billingaddress__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "chinook_1",
        "query": "SELECT Name, MIN(ArtistId) FROM Artist GROUP BY Name;",
        "question": "Select name and minimum artist id from artist grouped by name ",
        "tables": [
            "Invoice",
            "Artist",
            "Album",
            "Track",
            "InvoiceLine",
            "Employee",
            "Playlist",
            "Genre",
            "Customer",
            "PlaylistTrack",
            "MediaType"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "minimum",
            "artist",
            "id",
            "from",
            "artist",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "MIN",
            "(",
            "ArtistId",
            ")",
            "FROM",
            "Artist",
            "GROUP",
            "BY",
            "Name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "min",
            "(",
            "artistid",
            ")",
            "from",
            "artist",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__artist__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__artist.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__artist.artistid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__artist.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "chinook_1",
        "query": "SELECT Title, MIN(AlbumId) FROM Album GROUP BY Title;",
        "question": "Select title and minimum album id from album grouped by title ",
        "tables": [
            "Invoice",
            "Artist",
            "Album",
            "Track",
            "InvoiceLine",
            "Employee",
            "Playlist",
            "Genre",
            "Customer",
            "PlaylistTrack",
            "MediaType"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "title",
            "and",
            "minimum",
            "album",
            "id",
            "from",
            "album",
            "grouped",
            "by",
            "title"
        ],
        "query_toks": [
            "SELECT",
            "Title",
            ",",
            "MIN",
            "(",
            "AlbumId",
            ")",
            "FROM",
            "Album",
            "GROUP",
            "BY",
            "Title"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            ",",
            "min",
            "(",
            "albumid",
            ")",
            "from",
            "album",
            "group",
            "by",
            "title"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__album__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__album.title__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__album.albumid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__album.title__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "chinook_1",
        "query": "SELECT Composer, MIN(TrackId) FROM Track GROUP BY Composer;",
        "question": "Select composer and minimum track id from track grouped by composer ",
        "tables": [
            "Invoice",
            "Artist",
            "Album",
            "Track",
            "InvoiceLine",
            "Employee",
            "Playlist",
            "Genre",
            "Customer",
            "PlaylistTrack",
            "MediaType"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "composer",
            "and",
            "minimum",
            "track",
            "id",
            "from",
            "track",
            "grouped",
            "by",
            "composer"
        ],
        "query_toks": [
            "SELECT",
            "Composer",
            ",",
            "MIN",
            "(",
            "TrackId",
            ")",
            "FROM",
            "Track",
            "GROUP",
            "BY",
            "Composer"
        ],
        "query_toks_no_value": [
            "select",
            "composer",
            ",",
            "min",
            "(",
            "trackid",
            ")",
            "from",
            "track",
            "group",
            "by",
            "composer"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__track__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__track.composer__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__track.trackid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__track.composer__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "chinook_1",
        "query": "SELECT LastName, MAX(ReportsTo) FROM Employee GROUP BY LastName;",
        "question": "Select last name and maximum reports to from employee grouped by last name ",
        "tables": [
            "Invoice",
            "Artist",
            "Album",
            "Track",
            "InvoiceLine",
            "Employee",
            "Playlist",
            "Genre",
            "Customer",
            "PlaylistTrack",
            "MediaType"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "last",
            "name",
            "and",
            "maximum",
            "reports",
            "to",
            "from",
            "employee",
            "grouped",
            "by",
            "last",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "LastName",
            ",",
            "MAX",
            "(",
            "ReportsTo",
            ")",
            "FROM",
            "Employee",
            "GROUP",
            "BY",
            "LastName"
        ],
        "query_toks_no_value": [
            "select",
            "lastname",
            ",",
            "max",
            "(",
            "reportsto",
            ")",
            "from",
            "employee",
            "group",
            "by",
            "lastname"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__employee__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__employee.lastname__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__employee.reportsto__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__employee.lastname__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "chinook_1",
        "query": "SELECT Name, MIN(PlaylistId) FROM Playlist GROUP BY Name;",
        "question": "Select name and minimum play list id from playlist grouped by name ",
        "tables": [
            "Invoice",
            "Artist",
            "Album",
            "Track",
            "InvoiceLine",
            "Employee",
            "Playlist",
            "Genre",
            "Customer",
            "PlaylistTrack",
            "MediaType"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "minimum",
            "play",
            "list",
            "id",
            "from",
            "playlist",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "MIN",
            "(",
            "PlaylistId",
            ")",
            "FROM",
            "Playlist",
            "GROUP",
            "BY",
            "Name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "min",
            "(",
            "playlistid",
            ")",
            "from",
            "playlist",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__playlist__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__playlist.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__playlist.playlistid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__playlist.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "chinook_1",
        "query": "SELECT Name, MIN(GenreId) FROM Genre GROUP BY Name;",
        "question": "Select name and minimum genre id from genre grouped by name ",
        "tables": [
            "Invoice",
            "Artist",
            "Album",
            "Track",
            "InvoiceLine",
            "Employee",
            "Playlist",
            "Genre",
            "Customer",
            "PlaylistTrack",
            "MediaType"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "minimum",
            "genre",
            "id",
            "from",
            "genre",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "MIN",
            "(",
            "GenreId",
            ")",
            "FROM",
            "Genre",
            "GROUP",
            "BY",
            "Name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "min",
            "(",
            "genreid",
            ")",
            "from",
            "genre",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__genre__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__genre.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__genre.genreid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__genre.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "chinook_1",
        "query": "SELECT Phone, MIN(SupportRepId) FROM Customer GROUP BY Phone;",
        "question": "Select phone and minimum support representative id from customer grouped by phone ",
        "tables": [
            "Invoice",
            "Artist",
            "Album",
            "Track",
            "InvoiceLine",
            "Employee",
            "Playlist",
            "Genre",
            "Customer",
            "PlaylistTrack",
            "MediaType"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "phone",
            "and",
            "minimum",
            "support",
            "representative",
            "id",
            "from",
            "customer",
            "grouped",
            "by",
            "phone"
        ],
        "query_toks": [
            "SELECT",
            "Phone",
            ",",
            "MIN",
            "(",
            "SupportRepId",
            ")",
            "FROM",
            "Customer",
            "GROUP",
            "BY",
            "Phone"
        ],
        "query_toks_no_value": [
            "select",
            "phone",
            ",",
            "min",
            "(",
            "supportrepid",
            ")",
            "from",
            "customer",
            "group",
            "by",
            "phone"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer.phone__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__customer.supportrepid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customer.phone__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "chinook_1",
        "query": "SELECT Name, MAX(MediaTypeId) FROM MediaType GROUP BY Name;",
        "question": "Select name and maximum media type id from media type grouped by name ",
        "tables": [
            "Invoice",
            "Artist",
            "Album",
            "Track",
            "InvoiceLine",
            "Employee",
            "Playlist",
            "Genre",
            "Customer",
            "PlaylistTrack",
            "MediaType"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "maximum",
            "media",
            "type",
            "id",
            "from",
            "media",
            "type",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "MAX",
            "(",
            "MediaTypeId",
            ")",
            "FROM",
            "MediaType",
            "GROUP",
            "BY",
            "Name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "max",
            "(",
            "mediatypeid",
            ")",
            "from",
            "mediatype",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__mediatype__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__mediatype.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__mediatype.mediatypeid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__mediatype.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_4",
        "query": "SELECT iata, MIN(elevation) FROM airports GROUP BY iata;",
        "question": "Select iata and minimum elevation from airports grouped by iata ",
        "tables": [
            "airports",
            "routes",
            "airlines"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "iata",
            "and",
            "minimum",
            "elevation",
            "from",
            "airports",
            "grouped",
            "by",
            "iata"
        ],
        "query_toks": [
            "SELECT",
            "iata",
            ",",
            "MIN",
            "(",
            "elevation",
            ")",
            "FROM",
            "airports",
            "GROUP",
            "BY",
            "iata"
        ],
        "query_toks_no_value": [
            "select",
            "iata",
            ",",
            "min",
            "(",
            "elevation",
            ")",
            "from",
            "airports",
            "group",
            "by",
            "iata"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__airports__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__airports.iata__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__airports.elevation__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__airports.iata__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_4",
        "query": "SELECT dst_ap, MIN(alid) FROM routes GROUP BY dst_ap;",
        "question": "Select destination airport and minimum airline id from routes grouped by destination airport ",
        "tables": [
            "airports",
            "routes",
            "airlines"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "destination",
            "airport",
            "and",
            "minimum",
            "airline",
            "id",
            "from",
            "routes",
            "grouped",
            "by",
            "destination",
            "airport"
        ],
        "query_toks": [
            "SELECT",
            "dst_ap",
            ",",
            "MIN",
            "(",
            "alid",
            ")",
            "FROM",
            "routes",
            "GROUP",
            "BY",
            "dst_ap"
        ],
        "query_toks_no_value": [
            "select",
            "dst_ap",
            ",",
            "min",
            "(",
            "alid",
            ")",
            "from",
            "routes",
            "group",
            "by",
            "dst_ap"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__routes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__routes.dst_ap__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__routes.alid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__routes.dst_ap__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_4",
        "query": "SELECT name, MIN(alid) FROM airlines GROUP BY name;",
        "question": "Select name and minimum airline id from airlines grouped by name ",
        "tables": [
            "airports",
            "routes",
            "airlines"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "minimum",
            "airline",
            "id",
            "from",
            "airlines",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "MIN",
            "(",
            "alid",
            ")",
            "FROM",
            "airlines",
            "GROUP",
            "BY",
            "name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "min",
            "(",
            "alid",
            ")",
            "from",
            "airlines",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__airlines__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__airlines.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__airlines.alid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__airlines.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "query": "SELECT LName, MAX(StuID) FROM Student GROUP BY LName;",
        "question": "Select last name and maximum student id from student grouped by last name ",
        "tables": [
            "Has_Pet",
            "Student",
            "Pets"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "last",
            "name",
            "and",
            "maximum",
            "student",
            "id",
            "from",
            "student",
            "grouped",
            "by",
            "last",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "LName",
            ",",
            "MAX",
            "(",
            "StuID",
            ")",
            "FROM",
            "Student",
            "GROUP",
            "BY",
            "LName"
        ],
        "query_toks_no_value": [
            "select",
            "lname",
            ",",
            "max",
            "(",
            "stuid",
            ")",
            "from",
            "student",
            "group",
            "by",
            "lname"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.lname__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__student.stuid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__student.lname__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "query": "SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType;",
        "question": "Select pet type and maximum weight from pets grouped by pet type ",
        "tables": [
            "Has_Pet",
            "Student",
            "Pets"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "pet",
            "type",
            "and",
            "maximum",
            "weight",
            "from",
            "pets",
            "grouped",
            "by",
            "pet",
            "type"
        ],
        "query_toks": [
            "SELECT",
            "PetType",
            ",",
            "MAX",
            "(",
            "weight",
            ")",
            "FROM",
            "Pets",
            "GROUP",
            "BY",
            "PetType"
        ],
        "query_toks_no_value": [
            "select",
            "pettype",
            ",",
            "max",
            "(",
            "weight",
            ")",
            "from",
            "pets",
            "group",
            "by",
            "pettype"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__pets__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__pets.pettype__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__pets.weight__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__pets.pettype__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dorm_1",
        "query": "SELECT dorm_name, MAX(dormid) FROM Dorm GROUP BY dorm_name;",
        "question": "Select dorm name and maximum dorm id from dorm grouped by dorm name ",
        "tables": [
            "Dorm",
            "Has_amenity",
            "Student",
            "Lives_in",
            "Dorm_amenity"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "dorm",
            "name",
            "and",
            "maximum",
            "dorm",
            "id",
            "from",
            "dorm",
            "grouped",
            "by",
            "dorm",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "dorm_name",
            ",",
            "MAX",
            "(",
            "dormid",
            ")",
            "FROM",
            "Dorm",
            "GROUP",
            "BY",
            "dorm_name"
        ],
        "query_toks_no_value": [
            "select",
            "dorm_name",
            ",",
            "max",
            "(",
            "dormid",
            ")",
            "from",
            "dorm",
            "group",
            "by",
            "dorm_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__dorm__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__dorm.dorm_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__dorm.dormid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__dorm.dorm_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dorm_1",
        "query": "SELECT city_code, MAX(Advisor) FROM Student GROUP BY city_code;",
        "question": "Select city code and maximum advisor from student grouped by city code ",
        "tables": [
            "Dorm",
            "Has_amenity",
            "Student",
            "Lives_in",
            "Dorm_amenity"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "city",
            "code",
            "and",
            "maximum",
            "advisor",
            "from",
            "student",
            "grouped",
            "by",
            "city",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "city_code",
            ",",
            "MAX",
            "(",
            "Advisor",
            ")",
            "FROM",
            "Student",
            "GROUP",
            "BY",
            "city_code"
        ],
        "query_toks_no_value": [
            "select",
            "city_code",
            ",",
            "max",
            "(",
            "advisor",
            ")",
            "from",
            "student",
            "group",
            "by",
            "city_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.city_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__student.advisor__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__student.city_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dorm_1",
        "query": "SELECT amenity_name, MIN(amenid) FROM Dorm_amenity GROUP BY amenity_name;",
        "question": "Select amenity name and minimum amenity id from dorm amenity grouped by amenity name ",
        "tables": [
            "Dorm",
            "Has_amenity",
            "Student",
            "Lives_in",
            "Dorm_amenity"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "amenity",
            "name",
            "and",
            "minimum",
            "amenity",
            "id",
            "from",
            "dorm",
            "amenity",
            "grouped",
            "by",
            "amenity",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "amenity_name",
            ",",
            "MIN",
            "(",
            "amenid",
            ")",
            "FROM",
            "Dorm_amenity",
            "GROUP",
            "BY",
            "amenity_name"
        ],
        "query_toks_no_value": [
            "select",
            "amenity_name",
            ",",
            "min",
            "(",
            "amenid",
            ")",
            "from",
            "dorm_amenity",
            "group",
            "by",
            "amenity_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__dorm_amenity__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__dorm_amenity.amenity_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__dorm_amenity.amenid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__dorm_amenity.amenity_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "journal_committee",
        "query": "SELECT Work_Type, MIN(Journal_ID) FROM journal_committee GROUP BY Work_Type;",
        "question": "Select work type and minimum journal id from journal committee grouped by work type ",
        "tables": [
            "journal_committee",
            "editor",
            "journal"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "work",
            "type",
            "and",
            "minimum",
            "journal",
            "id",
            "from",
            "journal",
            "committee",
            "grouped",
            "by",
            "work",
            "type"
        ],
        "query_toks": [
            "SELECT",
            "Work_Type",
            ",",
            "MIN",
            "(",
            "Journal_ID",
            ")",
            "FROM",
            "journal_committee",
            "GROUP",
            "BY",
            "Work_Type"
        ],
        "query_toks_no_value": [
            "select",
            "work_type",
            ",",
            "min",
            "(",
            "journal_id",
            ")",
            "from",
            "journal_committee",
            "group",
            "by",
            "work_type"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__journal_committee__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__journal_committee.work_type__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__journal_committee.journal_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__journal_committee.work_type__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "journal_committee",
        "query": "SELECT Name, MAX(Editor_ID) FROM editor GROUP BY Name;",
        "question": "Select name and maximum editor id from editor grouped by name ",
        "tables": [
            "journal_committee",
            "editor",
            "journal"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "maximum",
            "editor",
            "id",
            "from",
            "editor",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "MAX",
            "(",
            "Editor_ID",
            ")",
            "FROM",
            "editor",
            "GROUP",
            "BY",
            "Name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "max",
            "(",
            "editor_id",
            ")",
            "from",
            "editor",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__editor__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__editor.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__editor.editor_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__editor.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "journal_committee",
        "query": "SELECT Date, MIN(Sales) FROM journal GROUP BY Date;",
        "question": "Select date and minimum sales from journal grouped by date ",
        "tables": [
            "journal_committee",
            "editor",
            "journal"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "date",
            "and",
            "minimum",
            "sales",
            "from",
            "journal",
            "grouped",
            "by",
            "date"
        ],
        "query_toks": [
            "SELECT",
            "Date",
            ",",
            "MIN",
            "(",
            "Sales",
            ")",
            "FROM",
            "journal",
            "GROUP",
            "BY",
            "Date"
        ],
        "query_toks_no_value": [
            "select",
            "date",
            ",",
            "min",
            "(",
            "sales",
            ")",
            "from",
            "journal",
            "group",
            "by",
            "date"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__journal__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__journal.date__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__journal.sales__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__journal.date__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_1",
        "query": "SELECT name, MAX(eid) FROM employee GROUP BY name;",
        "question": "Select name and maximum employee id from employee grouped by name ",
        "tables": [
            "employee",
            "aircraft",
            "certificate",
            "flight"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "maximum",
            "employee",
            "id",
            "from",
            "employee",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "MAX",
            "(",
            "eid",
            ")",
            "FROM",
            "employee",
            "GROUP",
            "BY",
            "name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "max",
            "(",
            "eid",
            ")",
            "from",
            "employee",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__employee__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__employee.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__employee.eid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__employee.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_1",
        "query": "SELECT name, MAX(aid) FROM aircraft GROUP BY name;",
        "question": "Select name and maximum airline id from aircraft grouped by name ",
        "tables": [
            "employee",
            "aircraft",
            "certificate",
            "flight"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "maximum",
            "airline",
            "id",
            "from",
            "aircraft",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "MAX",
            "(",
            "aid",
            ")",
            "FROM",
            "aircraft",
            "GROUP",
            "BY",
            "name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "max",
            "(",
            "aid",
            ")",
            "from",
            "aircraft",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__aircraft__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__aircraft.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__aircraft.aid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__aircraft.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_1",
        "query": "SELECT origin, MIN(price) FROM flight GROUP BY origin;",
        "question": "Select origin and minimum price from flight grouped by origin ",
        "tables": [
            "employee",
            "aircraft",
            "certificate",
            "flight"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "origin",
            "and",
            "minimum",
            "price",
            "from",
            "flight",
            "grouped",
            "by",
            "origin"
        ],
        "query_toks": [
            "SELECT",
            "origin",
            ",",
            "MIN",
            "(",
            "price",
            ")",
            "FROM",
            "flight",
            "GROUP",
            "BY",
            "origin"
        ],
        "query_toks_no_value": [
            "select",
            "origin",
            ",",
            "min",
            "(",
            "price",
            ")",
            "from",
            "flight",
            "group",
            "by",
            "origin"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__flight__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__flight.origin__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__flight.price__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__flight.origin__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "query": "SELECT interaction_type, MAX(enzyme_id) FROM medicine_enzyme_interaction GROUP BY interaction_type;",
        "question": "Select interaction type and maximum enzyme id from medicine enzyme interaction grouped by interaction type ",
        "tables": [
            "medicine_enzyme_interaction",
            "enzyme",
            "medicine"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "interaction",
            "type",
            "and",
            "maximum",
            "enzyme",
            "id",
            "from",
            "medicine",
            "enzyme",
            "interaction",
            "grouped",
            "by",
            "interaction",
            "type"
        ],
        "query_toks": [
            "SELECT",
            "interaction_type",
            ",",
            "MAX",
            "(",
            "enzyme_id",
            ")",
            "FROM",
            "medicine_enzyme_interaction",
            "GROUP",
            "BY",
            "interaction_type"
        ],
        "query_toks_no_value": [
            "select",
            "interaction_type",
            ",",
            "max",
            "(",
            "enzyme_id",
            ")",
            "from",
            "medicine_enzyme_interaction",
            "group",
            "by",
            "interaction_type"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__medicine_enzyme_interaction__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__medicine_enzyme_interaction.interaction_type__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__medicine_enzyme_interaction.enzyme_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__medicine_enzyme_interaction.interaction_type__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "query": "SELECT Product, MAX(id) FROM enzyme GROUP BY Product;",
        "question": "Select product and maximum id from enzyme grouped by product ",
        "tables": [
            "medicine_enzyme_interaction",
            "enzyme",
            "medicine"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "product",
            "and",
            "maximum",
            "id",
            "from",
            "enzyme",
            "grouped",
            "by",
            "product"
        ],
        "query_toks": [
            "SELECT",
            "Product",
            ",",
            "MAX",
            "(",
            "id",
            ")",
            "FROM",
            "enzyme",
            "GROUP",
            "BY",
            "Product"
        ],
        "query_toks_no_value": [
            "select",
            "product",
            ",",
            "max",
            "(",
            "id",
            ")",
            "from",
            "enzyme",
            "group",
            "by",
            "product"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__enzyme__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__enzyme.product__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__enzyme.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__enzyme.product__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "query": "SELECT Trade_Name, MAX(id) FROM medicine GROUP BY Trade_Name;",
        "question": "Select trade name and maximum id from medicine grouped by trade name ",
        "tables": [
            "medicine_enzyme_interaction",
            "enzyme",
            "medicine"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "trade",
            "name",
            "and",
            "maximum",
            "id",
            "from",
            "medicine",
            "grouped",
            "by",
            "trade",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Trade_Name",
            ",",
            "MAX",
            "(",
            "id",
            ")",
            "FROM",
            "medicine",
            "GROUP",
            "BY",
            "Trade_Name"
        ],
        "query_toks_no_value": [
            "select",
            "trade_name",
            ",",
            "max",
            "(",
            "id",
            ")",
            "from",
            "medicine",
            "group",
            "by",
            "trade_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__medicine__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__medicine.trade_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__medicine.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__medicine.trade_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_and_lot",
        "query": "SELECT other_details, MAX(resident_id) FROM Residents GROUP BY other_details;",
        "question": "Select other details and maximum resident id from residents grouped by other details ",
        "tables": [
            "Residents",
            "Timed_Status_of_Things",
            "Things",
            "Organizations",
            "Services",
            "Residents_Services",
            "Customers",
            "Properties",
            "Customer_Events",
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "other",
            "details",
            "and",
            "maximum",
            "resident",
            "id",
            "from",
            "residents",
            "grouped",
            "by",
            "other",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "other_details",
            ",",
            "MAX",
            "(",
            "resident_id",
            ")",
            "FROM",
            "Residents",
            "GROUP",
            "BY",
            "other_details"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            ",",
            "max",
            "(",
            "resident_id",
            ")",
            "from",
            "residents",
            "group",
            "by",
            "other_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__residents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__residents.other_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__residents.resident_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__residents.other_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_and_lot",
        "query": "SELECT Status_of_Thing_Code, MIN(thing_id) FROM Timed_Status_of_Things GROUP BY Status_of_Thing_Code;",
        "question": "Select status of thing code and minimum thing id from timed status of things grouped by status of thing code ",
        "tables": [
            "Residents",
            "Timed_Status_of_Things",
            "Things",
            "Organizations",
            "Services",
            "Residents_Services",
            "Customers",
            "Properties",
            "Customer_Events",
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "status",
            "of",
            "thing",
            "code",
            "and",
            "minimum",
            "thing",
            "id",
            "from",
            "timed",
            "status",
            "of",
            "things",
            "grouped",
            "by",
            "status",
            "of",
            "thing",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "Status_of_Thing_Code",
            ",",
            "MIN",
            "(",
            "thing_id",
            ")",
            "FROM",
            "Timed_Status_of_Things",
            "GROUP",
            "BY",
            "Status_of_Thing_Code"
        ],
        "query_toks_no_value": [
            "select",
            "status_of_thing_code",
            ",",
            "min",
            "(",
            "thing_id",
            ")",
            "from",
            "timed_status_of_things",
            "group",
            "by",
            "status_of_thing_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__timed_status_of_things__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__timed_status_of_things.status_of_thing_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__timed_status_of_things.thing_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__timed_status_of_things.status_of_thing_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_and_lot",
        "query": "SELECT service_details, MIN(organization_id) FROM Things GROUP BY service_details;",
        "question": "Select service details and minimum organization id from things grouped by service details ",
        "tables": [
            "Residents",
            "Timed_Status_of_Things",
            "Things",
            "Organizations",
            "Services",
            "Residents_Services",
            "Customers",
            "Properties",
            "Customer_Events",
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "service",
            "details",
            "and",
            "minimum",
            "organization",
            "id",
            "from",
            "things",
            "grouped",
            "by",
            "service",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "service_details",
            ",",
            "MIN",
            "(",
            "organization_id",
            ")",
            "FROM",
            "Things",
            "GROUP",
            "BY",
            "service_details"
        ],
        "query_toks_no_value": [
            "select",
            "service_details",
            ",",
            "min",
            "(",
            "organization_id",
            ")",
            "from",
            "things",
            "group",
            "by",
            "service_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__things__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__things.service_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__things.organization_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__things.service_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_and_lot",
        "query": "SELECT organization_details, MAX(organization_id) FROM Organizations GROUP BY organization_details;",
        "question": "Select organization details and maximum organization id from organizations grouped by organization details ",
        "tables": [
            "Residents",
            "Timed_Status_of_Things",
            "Things",
            "Organizations",
            "Services",
            "Residents_Services",
            "Customers",
            "Properties",
            "Customer_Events",
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "organization",
            "details",
            "and",
            "maximum",
            "organization",
            "id",
            "from",
            "organizations",
            "grouped",
            "by",
            "organization",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "organization_details",
            ",",
            "MAX",
            "(",
            "organization_id",
            ")",
            "FROM",
            "Organizations",
            "GROUP",
            "BY",
            "organization_details"
        ],
        "query_toks_no_value": [
            "select",
            "organization_details",
            ",",
            "max",
            "(",
            "organization_id",
            ")",
            "from",
            "organizations",
            "group",
            "by",
            "organization_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__organizations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__organizations.organization_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__organizations.organization_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__organizations.organization_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_and_lot",
        "query": "SELECT service_type_code, MAX(service_id) FROM Services GROUP BY service_type_code;",
        "question": "Select service type code and maximum service id from services grouped by service type code ",
        "tables": [
            "Residents",
            "Timed_Status_of_Things",
            "Things",
            "Organizations",
            "Services",
            "Residents_Services",
            "Customers",
            "Properties",
            "Customer_Events",
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "service",
            "type",
            "code",
            "and",
            "maximum",
            "service",
            "id",
            "from",
            "services",
            "grouped",
            "by",
            "service",
            "type",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "service_type_code",
            ",",
            "MAX",
            "(",
            "service_id",
            ")",
            "FROM",
            "Services",
            "GROUP",
            "BY",
            "service_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "service_type_code",
            ",",
            "max",
            "(",
            "service_id",
            ")",
            "from",
            "services",
            "group",
            "by",
            "service_type_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__services__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__services.service_type_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__services.service_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__services.service_type_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_and_lot",
        "query": "SELECT other_details, MIN(service_id) FROM Residents_Services GROUP BY other_details;",
        "question": "Select other details and minimum service id from residents services grouped by other details ",
        "tables": [
            "Residents",
            "Timed_Status_of_Things",
            "Things",
            "Organizations",
            "Services",
            "Residents_Services",
            "Customers",
            "Properties",
            "Customer_Events",
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "other",
            "details",
            "and",
            "minimum",
            "service",
            "id",
            "from",
            "residents",
            "services",
            "grouped",
            "by",
            "other",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "other_details",
            ",",
            "MIN",
            "(",
            "service_id",
            ")",
            "FROM",
            "Residents_Services",
            "GROUP",
            "BY",
            "other_details"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            ",",
            "min",
            "(",
            "service_id",
            ")",
            "from",
            "residents_services",
            "group",
            "by",
            "other_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__residents_services__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__residents_services.other_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__residents_services.service_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__residents_services.other_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_and_lot",
        "query": "SELECT customer_details, MAX(customer_id) FROM Customers GROUP BY customer_details;",
        "question": "Select customer details and maximum customer id from customers grouped by customer details ",
        "tables": [
            "Residents",
            "Timed_Status_of_Things",
            "Things",
            "Organizations",
            "Services",
            "Residents_Services",
            "Customers",
            "Properties",
            "Customer_Events",
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "customer",
            "details",
            "and",
            "maximum",
            "customer",
            "id",
            "from",
            "customers",
            "grouped",
            "by",
            "customer",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "customer_details",
            ",",
            "MAX",
            "(",
            "customer_id",
            ")",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "customer_details"
        ],
        "query_toks_no_value": [
            "select",
            "customer_details",
            ",",
            "max",
            "(",
            "customer_id",
            ")",
            "from",
            "customers",
            "group",
            "by",
            "customer_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customers.customer_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_and_lot",
        "query": "SELECT property_type_code, MAX(property_id) FROM Properties GROUP BY property_type_code;",
        "question": "Select property type code and maximum property id from properties grouped by property type code ",
        "tables": [
            "Residents",
            "Timed_Status_of_Things",
            "Things",
            "Organizations",
            "Services",
            "Residents_Services",
            "Customers",
            "Properties",
            "Customer_Events",
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "property",
            "type",
            "code",
            "and",
            "maximum",
            "property",
            "id",
            "from",
            "properties",
            "grouped",
            "by",
            "property",
            "type",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "property_type_code",
            ",",
            "MAX",
            "(",
            "property_id",
            ")",
            "FROM",
            "Properties",
            "GROUP",
            "BY",
            "property_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "property_type_code",
            ",",
            "max",
            "(",
            "property_id",
            ")",
            "from",
            "properties",
            "group",
            "by",
            "property_type_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__properties__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__properties.property_type_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__properties.property_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__properties.property_type_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_and_lot",
        "query": "SELECT service_type_code, MAX(property_id) FROM Customer_Event_Notes GROUP BY service_type_code;",
        "question": "Select service type code and maximum property id from customer event notes grouped by service type code ",
        "tables": [
            "Residents",
            "Timed_Status_of_Things",
            "Things",
            "Organizations",
            "Services",
            "Residents_Services",
            "Customers",
            "Properties",
            "Customer_Events",
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "service",
            "type",
            "code",
            "and",
            "maximum",
            "property",
            "id",
            "from",
            "customer",
            "event",
            "notes",
            "grouped",
            "by",
            "service",
            "type",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "service_type_code",
            ",",
            "MAX",
            "(",
            "property_id",
            ")",
            "FROM",
            "Customer_Event_Notes",
            "GROUP",
            "BY",
            "service_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "service_type_code",
            ",",
            "max",
            "(",
            "property_id",
            ")",
            "from",
            "customer_event_notes",
            "group",
            "by",
            "service_type_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_event_notes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_event_notes.service_type_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__customer_event_notes.property_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customer_event_notes.service_type_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_and_lot",
        "query": "SELECT Location_Code, MIN(thing_id) FROM Timed_Locations_of_Things GROUP BY Location_Code;",
        "question": "Select location code and minimum thing id from timed locations of things grouped by location code ",
        "tables": [
            "Residents",
            "Timed_Status_of_Things",
            "Things",
            "Organizations",
            "Services",
            "Residents_Services",
            "Customers",
            "Properties",
            "Customer_Events",
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "location",
            "code",
            "and",
            "minimum",
            "thing",
            "id",
            "from",
            "timed",
            "locations",
            "of",
            "things",
            "grouped",
            "by",
            "location",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "Location_Code",
            ",",
            "MIN",
            "(",
            "thing_id",
            ")",
            "FROM",
            "Timed_Locations_of_Things",
            "GROUP",
            "BY",
            "Location_Code"
        ],
        "query_toks_no_value": [
            "select",
            "location_code",
            ",",
            "min",
            "(",
            "thing_id",
            ")",
            "from",
            "timed_locations_of_things",
            "group",
            "by",
            "location_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__timed_locations_of_things__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__timed_locations_of_things.location_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__timed_locations_of_things.thing_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__timed_locations_of_things.location_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "station_weather",
        "query": "SELECT day_of_week, MAX(precipitation) FROM weekly_weather GROUP BY day_of_week;",
        "question": "Select day of week and maximum precipitation from weekly weather grouped by day of week ",
        "tables": [
            "weekly_weather",
            "route",
            "train",
            "station"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "day",
            "of",
            "week",
            "and",
            "maximum",
            "precipitation",
            "from",
            "weekly",
            "weather",
            "grouped",
            "by",
            "day",
            "of",
            "week"
        ],
        "query_toks": [
            "SELECT",
            "day_of_week",
            ",",
            "MAX",
            "(",
            "precipitation",
            ")",
            "FROM",
            "weekly_weather",
            "GROUP",
            "BY",
            "day_of_week"
        ],
        "query_toks_no_value": [
            "select",
            "day_of_week",
            ",",
            "max",
            "(",
            "precipitation",
            ")",
            "from",
            "weekly_weather",
            "group",
            "by",
            "day_of_week"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__weekly_weather__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__weekly_weather.day_of_week__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__weekly_weather.precipitation__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__weekly_weather.day_of_week__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "station_weather",
        "query": "SELECT interval, MIN(train_number) FROM train GROUP BY interval;",
        "question": "Select interval and minimum train number from train grouped by interval ",
        "tables": [
            "weekly_weather",
            "route",
            "train",
            "station"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "interval",
            "and",
            "minimum",
            "train",
            "number",
            "from",
            "train",
            "grouped",
            "by",
            "interval"
        ],
        "query_toks": [
            "SELECT",
            "interval",
            ",",
            "MIN",
            "(",
            "train_number",
            ")",
            "FROM",
            "train",
            "GROUP",
            "BY",
            "interval"
        ],
        "query_toks_no_value": [
            "select",
            "interval",
            ",",
            "min",
            "(",
            "train_number",
            ")",
            "from",
            "train",
            "group",
            "by",
            "interval"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__train__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__train.interval__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__train.train_number__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__train.interval__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "station_weather",
        "query": "SELECT network_name, MAX(id) FROM station GROUP BY network_name;",
        "question": "Select network name and maximum id from station grouped by network name ",
        "tables": [
            "weekly_weather",
            "route",
            "train",
            "station"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "network",
            "name",
            "and",
            "maximum",
            "id",
            "from",
            "station",
            "grouped",
            "by",
            "network",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "network_name",
            ",",
            "MAX",
            "(",
            "id",
            ")",
            "FROM",
            "station",
            "GROUP",
            "BY",
            "network_name"
        ],
        "query_toks_no_value": [
            "select",
            "network_name",
            ",",
            "max",
            "(",
            "id",
            ")",
            "from",
            "station",
            "group",
            "by",
            "network_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__station__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__station.network_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__station.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__station.network_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "shop_membership",
        "query": "SELECT Year, MAX(Member_ID) FROM purchase GROUP BY Year;",
        "question": "Select year and maximum member id from purchase grouped by year ",
        "tables": [
            "purchase",
            "membership_register_branch",
            "member",
            "branch"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "year",
            "and",
            "maximum",
            "member",
            "id",
            "from",
            "purchase",
            "grouped",
            "by",
            "year"
        ],
        "query_toks": [
            "SELECT",
            "Year",
            ",",
            "MAX",
            "(",
            "Member_ID",
            ")",
            "FROM",
            "purchase",
            "GROUP",
            "BY",
            "Year"
        ],
        "query_toks_no_value": [
            "select",
            "year",
            ",",
            "max",
            "(",
            "member_id",
            ")",
            "from",
            "purchase",
            "group",
            "by",
            "year"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__purchase__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__purchase.year__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__purchase.member_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__purchase.year__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "shop_membership",
        "query": "SELECT Register_Year, MIN(Member_ID) FROM membership_register_branch GROUP BY Register_Year;",
        "question": "Select register year and minimum member id from membership register branch grouped by register year ",
        "tables": [
            "purchase",
            "membership_register_branch",
            "member",
            "branch"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "register",
            "year",
            "and",
            "minimum",
            "member",
            "id",
            "from",
            "membership",
            "register",
            "branch",
            "grouped",
            "by",
            "register",
            "year"
        ],
        "query_toks": [
            "SELECT",
            "Register_Year",
            ",",
            "MIN",
            "(",
            "Member_ID",
            ")",
            "FROM",
            "membership_register_branch",
            "GROUP",
            "BY",
            "Register_Year"
        ],
        "query_toks_no_value": [
            "select",
            "register_year",
            ",",
            "min",
            "(",
            "member_id",
            ")",
            "from",
            "membership_register_branch",
            "group",
            "by",
            "register_year"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__membership_register_branch__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__membership_register_branch.register_year__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__membership_register_branch.member_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__membership_register_branch.register_year__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "shop_membership",
        "query": "SELECT Name, MIN(Member_ID) FROM member GROUP BY Name;",
        "question": "Select name and minimum member id from member grouped by name ",
        "tables": [
            "purchase",
            "membership_register_branch",
            "member",
            "branch"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "minimum",
            "member",
            "id",
            "from",
            "member",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "MIN",
            "(",
            "Member_ID",
            ")",
            "FROM",
            "member",
            "GROUP",
            "BY",
            "Name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "min",
            "(",
            "member_id",
            ")",
            "from",
            "member",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__member__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__member.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__member.member_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__member.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "shop_membership",
        "query": "SELECT Open_year, MAX(Branch_ID) FROM branch GROUP BY Open_year;",
        "question": "Select open year and maximum branch id from branch grouped by open year ",
        "tables": [
            "purchase",
            "membership_register_branch",
            "member",
            "branch"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "open",
            "year",
            "and",
            "maximum",
            "branch",
            "id",
            "from",
            "branch",
            "grouped",
            "by",
            "open",
            "year"
        ],
        "query_toks": [
            "SELECT",
            "Open_year",
            ",",
            "MAX",
            "(",
            "Branch_ID",
            ")",
            "FROM",
            "branch",
            "GROUP",
            "BY",
            "Open_year"
        ],
        "query_toks_no_value": [
            "select",
            "open_year",
            ",",
            "max",
            "(",
            "branch_id",
            ")",
            "from",
            "branch",
            "group",
            "by",
            "open_year"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__branch__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__branch.open_year__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__branch.branch_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__branch.open_year__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "driving_school",
        "query": "SELECT first_name, MAX(staff_address_id) FROM Staff GROUP BY first_name;",
        "question": "Select first name and maximum staff address id from staff grouped by first name ",
        "tables": [
            "Staff",
            "Customer_Payments",
            "Addresses",
            "Customers",
            "Vehicles",
            "Lessons"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "first",
            "name",
            "and",
            "maximum",
            "staff",
            "address",
            "id",
            "from",
            "staff",
            "grouped",
            "by",
            "first",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "first_name",
            ",",
            "MAX",
            "(",
            "staff_address_id",
            ")",
            "FROM",
            "Staff",
            "GROUP",
            "BY",
            "first_name"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            ",",
            "max",
            "(",
            "staff_address_id",
            ")",
            "from",
            "staff",
            "group",
            "by",
            "first_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__staff__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__staff.first_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__staff.staff_address_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__staff.first_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "driving_school",
        "query": "SELECT payment_method_code, MAX(customer_id) FROM Customer_Payments GROUP BY payment_method_code;",
        "question": "Select payment method code and maximum customer id from customer payments grouped by payment method code ",
        "tables": [
            "Staff",
            "Customer_Payments",
            "Addresses",
            "Customers",
            "Vehicles",
            "Lessons"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "payment",
            "method",
            "code",
            "and",
            "maximum",
            "customer",
            "id",
            "from",
            "customer",
            "payments",
            "grouped",
            "by",
            "payment",
            "method",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "payment_method_code",
            ",",
            "MAX",
            "(",
            "customer_id",
            ")",
            "FROM",
            "Customer_Payments",
            "GROUP",
            "BY",
            "payment_method_code"
        ],
        "query_toks_no_value": [
            "select",
            "payment_method_code",
            ",",
            "max",
            "(",
            "customer_id",
            ")",
            "from",
            "customer_payments",
            "group",
            "by",
            "payment_method_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_payments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_payments.payment_method_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__customer_payments.customer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customer_payments.payment_method_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "driving_school",
        "query": "SELECT state_province_county, MAX(address_id) FROM Addresses GROUP BY state_province_county;",
        "question": "Select state province county and maximum address id from addresses grouped by state province county ",
        "tables": [
            "Staff",
            "Customer_Payments",
            "Addresses",
            "Customers",
            "Vehicles",
            "Lessons"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "state",
            "province",
            "county",
            "and",
            "maximum",
            "address",
            "id",
            "from",
            "addresses",
            "grouped",
            "by",
            "state",
            "province",
            "county"
        ],
        "query_toks": [
            "SELECT",
            "state_province_county",
            ",",
            "MAX",
            "(",
            "address_id",
            ")",
            "FROM",
            "Addresses",
            "GROUP",
            "BY",
            "state_province_county"
        ],
        "query_toks_no_value": [
            "select",
            "state_province_county",
            ",",
            "max",
            "(",
            "address_id",
            ")",
            "from",
            "addresses",
            "group",
            "by",
            "state_province_county"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__addresses.state_province_county__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__addresses.address_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__addresses.state_province_county__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "driving_school",
        "query": "SELECT customer_status_code, MIN(amount_outstanding) FROM Customers GROUP BY customer_status_code;",
        "question": "Select customer status code and minimum amount outstanding from customers grouped by customer status code ",
        "tables": [
            "Staff",
            "Customer_Payments",
            "Addresses",
            "Customers",
            "Vehicles",
            "Lessons"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "customer",
            "status",
            "code",
            "and",
            "minimum",
            "amount",
            "outstanding",
            "from",
            "customers",
            "grouped",
            "by",
            "customer",
            "status",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "customer_status_code",
            ",",
            "MIN",
            "(",
            "amount_outstanding",
            ")",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "customer_status_code"
        ],
        "query_toks_no_value": [
            "select",
            "customer_status_code",
            ",",
            "min",
            "(",
            "amount_outstanding",
            ")",
            "from",
            "customers",
            "group",
            "by",
            "customer_status_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_status_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__customers.amount_outstanding__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customers.customer_status_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "driving_school",
        "query": "SELECT vehicle_details, MAX(vehicle_id) FROM Vehicles GROUP BY vehicle_details;",
        "question": "Select vehicle details and maximum vehicle id from vehicles grouped by vehicle details ",
        "tables": [
            "Staff",
            "Customer_Payments",
            "Addresses",
            "Customers",
            "Vehicles",
            "Lessons"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "vehicle",
            "details",
            "and",
            "maximum",
            "vehicle",
            "id",
            "from",
            "vehicles",
            "grouped",
            "by",
            "vehicle",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "vehicle_details",
            ",",
            "MAX",
            "(",
            "vehicle_id",
            ")",
            "FROM",
            "Vehicles",
            "GROUP",
            "BY",
            "vehicle_details"
        ],
        "query_toks_no_value": [
            "select",
            "vehicle_details",
            ",",
            "max",
            "(",
            "vehicle_id",
            ")",
            "from",
            "vehicles",
            "group",
            "by",
            "vehicle_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__vehicles__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__vehicles.vehicle_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__vehicles.vehicle_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__vehicles.vehicle_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "driving_school",
        "query": "SELECT lesson_time, MAX(price) FROM Lessons GROUP BY lesson_time;",
        "question": "Select lesson time and maximum price from lessons grouped by lesson time ",
        "tables": [
            "Staff",
            "Customer_Payments",
            "Addresses",
            "Customers",
            "Vehicles",
            "Lessons"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "lesson",
            "time",
            "and",
            "maximum",
            "price",
            "from",
            "lessons",
            "grouped",
            "by",
            "lesson",
            "time"
        ],
        "query_toks": [
            "SELECT",
            "lesson_time",
            ",",
            "MAX",
            "(",
            "price",
            ")",
            "FROM",
            "Lessons",
            "GROUP",
            "BY",
            "lesson_time"
        ],
        "query_toks_no_value": [
            "select",
            "lesson_time",
            ",",
            "max",
            "(",
            "price",
            ")",
            "from",
            "lessons",
            "group",
            "by",
            "lesson_time"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__lessons__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__lessons.lesson_time__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__lessons.price__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__lessons.lesson_time__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT Country, MIN(Age) FROM singer GROUP BY Country;",
        "question": "Select country and minimum age from singer grouped by country ",
        "tables": [
            "singer",
            "stadium",
            "singer_in_concert",
            "concert"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "country",
            "and",
            "minimum",
            "age",
            "from",
            "singer",
            "grouped",
            "by",
            "country"
        ],
        "query_toks": [
            "SELECT",
            "Country",
            "(",
            "Country",
            ")",
            "MIN",
            "(",
            "Age",
            ")",
            "FROM",
            "singer",
            "GROUP",
            "BY",
            "Country",
            "(",
            "Country",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            "(",
            "country",
            ")",
            "min",
            "(",
            "age",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "country",
            "(",
            "country",
            ")"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__singer__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__singer.country__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__singer.age__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__singer.country__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT Name, MIN(Average) FROM stadium GROUP BY Name;",
        "question": "Select name and minimum average from stadium grouped by name ",
        "tables": [
            "singer",
            "stadium",
            "singer_in_concert",
            "concert"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "minimum",
            "average",
            "from",
            "stadium",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "MIN",
            "(",
            "Average",
            ")",
            "FROM",
            "stadium",
            "GROUP",
            "BY",
            "Name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "min",
            "(",
            "average",
            ")",
            "from",
            "stadium",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__stadium__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__stadium.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__stadium.average__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__stadium.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT Singer_ID, MIN(concert_ID) FROM singer_in_concert GROUP BY Singer_ID;",
        "question": "Select singer id and minimum concert id from singer in concert grouped by singer id ",
        "tables": [
            "singer",
            "stadium",
            "singer_in_concert",
            "concert"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "singer",
            "id",
            "and",
            "minimum",
            "concert",
            "id",
            "from",
            "singer",
            "in",
            "concert",
            "grouped",
            "by",
            "singer",
            "id"
        ],
        "query_toks": [
            "SELECT",
            "Singer_ID",
            ",",
            "MIN",
            "(",
            "concert_ID",
            ")",
            "FROM",
            "singer_in_concert",
            "GROUP",
            "BY",
            "Singer_ID"
        ],
        "query_toks_no_value": [
            "select",
            "singer_id",
            ",",
            "min",
            "(",
            "concert_id",
            ")",
            "from",
            "singer_in_concert",
            "group",
            "by",
            "singer_id"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__singer_in_concert__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__singer_in_concert.singer_id__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__singer_in_concert.concert_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__singer_in_concert.singer_id__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT Theme, MIN(concert_ID) FROM concert GROUP BY Theme;",
        "question": "Select theme and minimum concert id from concert grouped by theme ",
        "tables": [
            "singer",
            "stadium",
            "singer_in_concert",
            "concert"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "theme",
            "and",
            "minimum",
            "concert",
            "id",
            "from",
            "concert",
            "grouped",
            "by",
            "theme"
        ],
        "query_toks": [
            "SELECT",
            "Theme",
            ",",
            "MIN",
            "(",
            "concert_ID",
            ")",
            "FROM",
            "concert",
            "GROUP",
            "BY",
            "Theme"
        ],
        "query_toks_no_value": [
            "select",
            "theme",
            ",",
            "min",
            "(",
            "concert_id",
            ")",
            "from",
            "concert",
            "group",
            "by",
            "theme"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__concert__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__concert.theme__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__concert.concert_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__concert.theme__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "music_2",
        "query": "SELECT StagePosition, MAX(Bandmate) FROM Performance GROUP BY StagePosition;",
        "question": "Select stage position and maximum bandmate from performance grouped by stage position ",
        "tables": [
            "Performance",
            "Vocals",
            "Albums",
            "Tracklists",
            "Instruments",
            "Band",
            "Songs"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "stage",
            "position",
            "and",
            "maximum",
            "bandmate",
            "from",
            "performance",
            "grouped",
            "by",
            "stage",
            "position"
        ],
        "query_toks": [
            "SELECT",
            "StagePosition",
            ",",
            "MAX",
            "(",
            "Bandmate",
            ")",
            "FROM",
            "Performance",
            "GROUP",
            "BY",
            "StagePosition"
        ],
        "query_toks_no_value": [
            "select",
            "stageposition",
            ",",
            "max",
            "(",
            "bandmate",
            ")",
            "from",
            "performance",
            "group",
            "by",
            "stageposition"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__performance__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__performance.stageposition__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__performance.bandmate__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__performance.stageposition__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "music_2",
        "query": "SELECT Type, MAX(SongId) FROM Vocals GROUP BY Type;",
        "question": "Select type and maximum song id from vocals grouped by type ",
        "tables": [
            "Performance",
            "Vocals",
            "Albums",
            "Tracklists",
            "Instruments",
            "Band",
            "Songs"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "type",
            "and",
            "maximum",
            "song",
            "id",
            "from",
            "vocals",
            "grouped",
            "by",
            "type"
        ],
        "query_toks": [
            "SELECT",
            "Type",
            ",",
            "MAX",
            "(",
            "SongId",
            ")",
            "FROM",
            "Vocals",
            "GROUP",
            "BY",
            "Type"
        ],
        "query_toks_no_value": [
            "select",
            "type",
            ",",
            "max",
            "(",
            "songid",
            ")",
            "from",
            "vocals",
            "group",
            "by",
            "type"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__vocals__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__vocals.type__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__vocals.songid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__vocals.type__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "music_2",
        "query": "SELECT Title, MIN(AId) FROM Albums GROUP BY Title;",
        "question": "Select title and minimum aid from albums grouped by title ",
        "tables": [
            "Performance",
            "Vocals",
            "Albums",
            "Tracklists",
            "Instruments",
            "Band",
            "Songs"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "title",
            "and",
            "minimum",
            "aid",
            "from",
            "albums",
            "grouped",
            "by",
            "title"
        ],
        "query_toks": [
            "SELECT",
            "Title",
            ",",
            "MIN",
            "(",
            "AId",
            ")",
            "FROM",
            "Albums",
            "GROUP",
            "BY",
            "Title"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            ",",
            "min",
            "(",
            "aid",
            ")",
            "from",
            "albums",
            "group",
            "by",
            "title"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__albums__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__albums.title__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__albums.aid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__albums.title__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "music_2",
        "query": "SELECT Instrument, MAX(BandmateId) FROM Instruments GROUP BY Instrument;",
        "question": "Select instrument and maximum bandmate id from instruments grouped by instrument ",
        "tables": [
            "Performance",
            "Vocals",
            "Albums",
            "Tracklists",
            "Instruments",
            "Band",
            "Songs"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "instrument",
            "and",
            "maximum",
            "bandmate",
            "id",
            "from",
            "instruments",
            "grouped",
            "by",
            "instrument"
        ],
        "query_toks": [
            "SELECT",
            "Instrument",
            ",",
            "MAX",
            "(",
            "BandmateId",
            ")",
            "FROM",
            "Instruments",
            "GROUP",
            "BY",
            "Instrument"
        ],
        "query_toks_no_value": [
            "select",
            "instrument",
            ",",
            "max",
            "(",
            "bandmateid",
            ")",
            "from",
            "instruments",
            "group",
            "by",
            "instrument"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__instruments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__instruments.instrument__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__instruments.bandmateid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__instruments.instrument__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "music_2",
        "query": "SELECT Firstname, MIN(Id) FROM Band GROUP BY Firstname;",
        "question": "Select first name and minimum id from band grouped by first name ",
        "tables": [
            "Performance",
            "Vocals",
            "Albums",
            "Tracklists",
            "Instruments",
            "Band",
            "Songs"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "first",
            "name",
            "and",
            "minimum",
            "id",
            "from",
            "band",
            "grouped",
            "by",
            "first",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Firstname",
            ",",
            "MIN",
            "(",
            "Id",
            ")",
            "FROM",
            "Band",
            "GROUP",
            "BY",
            "Firstname"
        ],
        "query_toks_no_value": [
            "select",
            "firstname",
            ",",
            "min",
            "(",
            "id",
            ")",
            "from",
            "band",
            "group",
            "by",
            "firstname"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__band__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__band.firstname__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__band.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__band.firstname__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "music_2",
        "query": "SELECT Title, MAX(SongId) FROM Songs GROUP BY Title;",
        "question": "Select title and maximum song id from songs grouped by title ",
        "tables": [
            "Performance",
            "Vocals",
            "Albums",
            "Tracklists",
            "Instruments",
            "Band",
            "Songs"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "title",
            "and",
            "maximum",
            "song",
            "id",
            "from",
            "songs",
            "grouped",
            "by",
            "title"
        ],
        "query_toks": [
            "SELECT",
            "Title",
            ",",
            "MAX",
            "(",
            "SongId",
            ")",
            "FROM",
            "Songs",
            "GROUP",
            "BY",
            "Title"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            ",",
            "max",
            "(",
            "songid",
            ")",
            "from",
            "songs",
            "group",
            "by",
            "title"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__songs__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__songs.title__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__songs.songid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__songs.title__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sports_competition",
        "query": "SELECT Country, MAX(Year) FROM competition GROUP BY Country;",
        "question": "Select country and maximum year from competition grouped by country ",
        "tables": [
            "club_rank",
            "competition",
            "club",
            "competition_result",
            "player"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "country",
            "and",
            "maximum",
            "year",
            "from",
            "competition",
            "grouped",
            "by",
            "country"
        ],
        "query_toks": [
            "SELECT",
            "Country",
            "(",
            "Country",
            ")",
            "MAX",
            "(",
            "Year",
            ")",
            "FROM",
            "competition",
            "GROUP",
            "BY",
            "Country",
            "(",
            "Country",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            "(",
            "country",
            ")",
            "max",
            "(",
            "year",
            ")",
            "from",
            "competition",
            "group",
            "by",
            "country",
            "(",
            "country",
            ")"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__competition__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__competition.country__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__competition.year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__competition.country__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sports_competition",
        "query": "SELECT Start_year, MIN(Club_ID) FROM club GROUP BY Start_year;",
        "question": "Select start year and minimum club id from club grouped by start year ",
        "tables": [
            "club_rank",
            "competition",
            "club",
            "competition_result",
            "player"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "start",
            "year",
            "and",
            "minimum",
            "club",
            "id",
            "from",
            "club",
            "grouped",
            "by",
            "start",
            "year"
        ],
        "query_toks": [
            "SELECT",
            "Start_year",
            ",",
            "MIN",
            "(",
            "Club_ID",
            ")",
            "FROM",
            "club",
            "GROUP",
            "BY",
            "Start_year"
        ],
        "query_toks_no_value": [
            "select",
            "start_year",
            ",",
            "min",
            "(",
            "club_id",
            ")",
            "from",
            "club",
            "group",
            "by",
            "start_year"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__club__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__club.start_year__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__club.club_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__club.start_year__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sports_competition",
        "query": "SELECT Score, MIN(Competition_ID) FROM competition_result GROUP BY Score;",
        "question": "Select score and minimum competition id from competition result grouped by score ",
        "tables": [
            "club_rank",
            "competition",
            "club",
            "competition_result",
            "player"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "score",
            "and",
            "minimum",
            "competition",
            "id",
            "from",
            "competition",
            "result",
            "grouped",
            "by",
            "score"
        ],
        "query_toks": [
            "SELECT",
            "Score",
            ",",
            "MIN",
            "(",
            "Competition_ID",
            ")",
            "FROM",
            "competition_result",
            "GROUP",
            "BY",
            "Score"
        ],
        "query_toks_no_value": [
            "select",
            "score",
            ",",
            "min",
            "(",
            "competition_id",
            ")",
            "from",
            "competition_result",
            "group",
            "by",
            "score"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__competition_result__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__competition_result.score__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__competition_result.competition_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__competition_result.score__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sports_competition",
        "query": "SELECT Goals, MAX(Apps) FROM player GROUP BY Goals;",
        "question": "Select goals and maximum apps from player grouped by goals ",
        "tables": [
            "club_rank",
            "competition",
            "club",
            "competition_result",
            "player"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "goals",
            "and",
            "maximum",
            "apps",
            "from",
            "player",
            "grouped",
            "by",
            "goals"
        ],
        "query_toks": [
            "SELECT",
            "Goals",
            ",",
            "MAX",
            "(",
            "Apps",
            ")",
            "FROM",
            "player",
            "GROUP",
            "BY",
            "Goals"
        ],
        "query_toks_no_value": [
            "select",
            "goals",
            ",",
            "max",
            "(",
            "apps",
            ")",
            "from",
            "player",
            "group",
            "by",
            "goals"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__player__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__player.goals__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__player.apps__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__player.goals__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "railway",
        "query": "SELECT From_Year, MIN(Manager_ID) FROM railway_manage GROUP BY From_Year;",
        "question": "Select from year and minimum manager id from railway manage grouped by from year ",
        "tables": [
            "railway_manage",
            "train",
            "manager",
            "railway"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "from",
            "year",
            "and",
            "minimum",
            "manager",
            "id",
            "from",
            "railway",
            "manage",
            "grouped",
            "by",
            "from",
            "year"
        ],
        "query_toks": [
            "SELECT",
            "From_Year",
            ",",
            "MIN",
            "(",
            "Manager_ID",
            ")",
            "FROM",
            "railway_manage",
            "GROUP",
            "BY",
            "From_Year"
        ],
        "query_toks_no_value": [
            "select",
            "from_year",
            ",",
            "min",
            "(",
            "manager_id",
            ")",
            "from",
            "railway_manage",
            "group",
            "by",
            "from_year"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__railway_manage__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__railway_manage.from_year__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__railway_manage.manager_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__railway_manage.from_year__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "railway",
        "query": "SELECT Train_Num, MIN(Railway_ID) FROM train GROUP BY Train_Num;",
        "question": "Select train num and minimum railway id from train grouped by train num ",
        "tables": [
            "railway_manage",
            "train",
            "manager",
            "railway"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "train",
            "num",
            "and",
            "minimum",
            "railway",
            "id",
            "from",
            "train",
            "grouped",
            "by",
            "train",
            "num"
        ],
        "query_toks": [
            "SELECT",
            "Train_Num",
            ",",
            "MIN",
            "(",
            "Railway_ID",
            ")",
            "FROM",
            "train",
            "GROUP",
            "BY",
            "Train_Num"
        ],
        "query_toks_no_value": [
            "select",
            "train_num",
            ",",
            "min",
            "(",
            "railway_id",
            ")",
            "from",
            "train",
            "group",
            "by",
            "train_num"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__train__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__train.train_num__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__train.railway_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__train.train_num__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "railway",
        "query": "SELECT Country, MIN(Age) FROM manager GROUP BY Country;",
        "question": "Select country and minimum age from manager grouped by country ",
        "tables": [
            "railway_manage",
            "train",
            "manager",
            "railway"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "country",
            "and",
            "minimum",
            "age",
            "from",
            "manager",
            "grouped",
            "by",
            "country"
        ],
        "query_toks": [
            "SELECT",
            "Country",
            "(",
            "Country",
            ")",
            "MIN",
            "(",
            "Age",
            ")",
            "FROM",
            "manager",
            "GROUP",
            "BY",
            "Country",
            "(",
            "Country",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            "(",
            "country",
            ")",
            "min",
            "(",
            "age",
            ")",
            "from",
            "manager",
            "group",
            "by",
            "country",
            "(",
            "country",
            ")"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__manager__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__manager.country__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__manager.age__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__manager.country__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "railway",
        "query": "SELECT ObjectNumber, MIN(Railway_ID) FROM railway GROUP BY ObjectNumber;",
        "question": "Select objectnumber and minimum railway id from railway grouped by objectnumber ",
        "tables": [
            "railway_manage",
            "train",
            "manager",
            "railway"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "objectnumber",
            "and",
            "minimum",
            "railway",
            "id",
            "from",
            "railway",
            "grouped",
            "by",
            "objectnumber"
        ],
        "query_toks": [
            "SELECT",
            "ObjectNumber",
            ",",
            "MIN",
            "(",
            "Railway_ID",
            ")",
            "FROM",
            "railway",
            "GROUP",
            "BY",
            "ObjectNumber"
        ],
        "query_toks_no_value": [
            "select",
            "objectnumber",
            ",",
            "min",
            "(",
            "railway_id",
            ")",
            "from",
            "railway",
            "group",
            "by",
            "objectnumber"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__railway__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__railway.objectnumber__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__railway.railway_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__railway.objectnumber__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "inn_1",
        "query": "SELECT RoomId, MAX(maxOccupancy) FROM Rooms GROUP BY RoomId;",
        "question": "Select room id and maximum max occupancy from rooms grouped by room id ",
        "tables": [
            "Rooms",
            "Reservations"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "room",
            "id",
            "and",
            "maximum",
            "max",
            "occupancy",
            "from",
            "rooms",
            "grouped",
            "by",
            "room",
            "id"
        ],
        "query_toks": [
            "SELECT",
            "RoomId",
            ",",
            "MAX",
            "(",
            "maxOccupancy",
            ")",
            "FROM",
            "Rooms",
            "GROUP",
            "BY",
            "RoomId"
        ],
        "query_toks_no_value": [
            "select",
            "roomid",
            ",",
            "max",
            "(",
            "maxoccupancy",
            ")",
            "from",
            "rooms",
            "group",
            "by",
            "roomid"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__rooms__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__rooms.roomid__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__rooms.maxoccupancy__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__rooms.roomid__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "inn_1",
        "query": "SELECT CheckOut, MAX(Kids) FROM Reservations GROUP BY CheckOut;",
        "question": "Select check out and maximum kids from reservations grouped by check out ",
        "tables": [
            "Rooms",
            "Reservations"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "check",
            "out",
            "and",
            "maximum",
            "kids",
            "from",
            "reservations",
            "grouped",
            "by",
            "check",
            "out"
        ],
        "query_toks": [
            "SELECT",
            "CheckOut",
            ",",
            "MAX",
            "(",
            "Kids",
            ")",
            "FROM",
            "Reservations",
            "GROUP",
            "BY",
            "CheckOut"
        ],
        "query_toks_no_value": [
            "select",
            "checkout",
            ",",
            "max",
            "(",
            "kids",
            ")",
            "from",
            "reservations",
            "group",
            "by",
            "checkout"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__reservations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__reservations.checkout__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__reservations.kids__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__reservations.checkout__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "museum_visit",
        "query": "SELECT visitor_ID, MIN(Total_spent) FROM visit GROUP BY visitor_ID;",
        "question": "Select customer id and minimum total spent from visit grouped by customer id ",
        "tables": [
            "visit",
            "visitor",
            "museum"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "customer",
            "id",
            "and",
            "minimum",
            "total",
            "spent",
            "from",
            "visit",
            "grouped",
            "by",
            "customer",
            "id"
        ],
        "query_toks": [
            "SELECT",
            "visitor_ID",
            ",",
            "MIN",
            "(",
            "Total_spent",
            ")",
            "FROM",
            "visit",
            "GROUP",
            "BY",
            "visitor_ID"
        ],
        "query_toks_no_value": [
            "select",
            "visitor_id",
            ",",
            "min",
            "(",
            "total_spent",
            ")",
            "from",
            "visit",
            "group",
            "by",
            "visitor_id"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__visit__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__visit.visitor_id__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__visit.total_spent__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__visit.visitor_id__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "museum_visit",
        "query": "SELECT Name, MAX(Level_of_membership) FROM visitor GROUP BY Name;",
        "question": "Select name and maximum level of membership from customer grouped by name ",
        "tables": [
            "visit",
            "visitor",
            "museum"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "maximum",
            "level",
            "of",
            "membership",
            "from",
            "customer",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "MAX",
            "(",
            "Level_of_membership",
            ")",
            "FROM",
            "visitor",
            "GROUP",
            "BY",
            "Name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "max",
            "(",
            "level_of_membership",
            ")",
            "from",
            "visitor",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__visitor__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__visitor.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__visitor.level_of_membership__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__visitor.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "museum_visit",
        "query": "SELECT Open_Year, MIN(Museum_ID) FROM museum GROUP BY Open_Year;",
        "question": "Select open year and minimum museum id from museum grouped by open year ",
        "tables": [
            "visit",
            "visitor",
            "museum"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "open",
            "year",
            "and",
            "minimum",
            "museum",
            "id",
            "from",
            "museum",
            "grouped",
            "by",
            "open",
            "year"
        ],
        "query_toks": [
            "SELECT",
            "Open_Year",
            ",",
            "MIN",
            "(",
            "Museum_ID",
            ")",
            "FROM",
            "museum",
            "GROUP",
            "BY",
            "Open_Year"
        ],
        "query_toks_no_value": [
            "select",
            "open_year",
            ",",
            "min",
            "(",
            "museum_id",
            ")",
            "from",
            "museum",
            "group",
            "by",
            "open_year"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__museum__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__museum.open_year__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__museum.museum_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__museum.open_year__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "browser_web",
        "query": "SELECT name, MIN(id) FROM browser GROUP BY name;",
        "question": "Select name and minimum id from browser grouped by name ",
        "tables": [
            "browser",
            "accelerator_compatible_browser",
            "Web_client_accelerator"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "minimum",
            "id",
            "from",
            "browser",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "MIN",
            "(",
            "id",
            ")",
            "FROM",
            "browser",
            "GROUP",
            "BY",
            "name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "min",
            "(",
            "id",
            ")",
            "from",
            "browser",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__browser__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__browser.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__browser.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__browser.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "browser_web",
        "query": "SELECT Connection, MAX(id) FROM Web_client_accelerator GROUP BY Connection;",
        "question": "Select connection and maximum id from web client accelerator grouped by connection ",
        "tables": [
            "browser",
            "accelerator_compatible_browser",
            "Web_client_accelerator"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "connection",
            "and",
            "maximum",
            "id",
            "from",
            "web",
            "client",
            "accelerator",
            "grouped",
            "by",
            "connection"
        ],
        "query_toks": [
            "SELECT",
            "Connection",
            ",",
            "MAX",
            "(",
            "id",
            ")",
            "FROM",
            "Web_client_accelerator",
            "GROUP",
            "BY",
            "Connection"
        ],
        "query_toks_no_value": [
            "select",
            "connection",
            ",",
            "max",
            "(",
            "id",
            ")",
            "from",
            "web_client_accelerator",
            "group",
            "by",
            "connection"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__web_client_accelerator__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__web_client_accelerator.connection__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__web_client_accelerator.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__web_client_accelerator.connection__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "architecture",
        "query": "SELECT name, MAX(id) FROM mill GROUP BY name;",
        "question": "Select name and maximum id from mill grouped by name ",
        "tables": [
            "architect",
            "mill",
            "bridge"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "maximum",
            "id",
            "from",
            "mill",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "MAX",
            "(",
            "id",
            ")",
            "FROM",
            "mill",
            "GROUP",
            "BY",
            "name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "max",
            "(",
            "id",
            ")",
            "from",
            "mill",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__mill__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__mill.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__mill.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__mill.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "architecture",
        "query": "SELECT name, MAX(length_feet) FROM bridge GROUP BY name;",
        "question": "Select name and maximum length feet from bridge grouped by name ",
        "tables": [
            "architect",
            "mill",
            "bridge"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "maximum",
            "length",
            "feet",
            "from",
            "bridge",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "MAX",
            "(",
            "length_feet",
            ")",
            "FROM",
            "bridge",
            "GROUP",
            "BY",
            "name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "max",
            "(",
            "length_feet",
            ")",
            "from",
            "bridge",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__bridge__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__bridge.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__bridge.length_feet__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__bridge.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "csu_1",
        "query": "SELECT Location, MAX(Year) FROM Campuses GROUP BY Location;",
        "question": "Select location and maximum year from campuses grouped by location ",
        "tables": [
            "discipline_enrollments",
            "Campuses",
            "degrees",
            "csu_fees",
            "faculty",
            "enrollments"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "location",
            "and",
            "maximum",
            "year",
            "from",
            "campuses",
            "grouped",
            "by",
            "location"
        ],
        "query_toks": [
            "SELECT",
            "Location",
            ",",
            "MAX",
            "(",
            "Year",
            ")",
            "FROM",
            "Campuses",
            "GROUP",
            "BY",
            "Location"
        ],
        "query_toks_no_value": [
            "select",
            "location",
            ",",
            "max",
            "(",
            "year",
            ")",
            "from",
            "campuses",
            "group",
            "by",
            "location"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__campuses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__campuses.location__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__campuses.year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__campuses.location__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_orders",
        "query": "SELECT product_details, MAX(product_id) FROM Products GROUP BY product_details;",
        "question": "Select product details and maximum product id from products grouped by product details ",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Shipments",
            "Customers",
            "Shipment_Items",
            "Orders"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "product",
            "details",
            "and",
            "maximum",
            "product",
            "id",
            "from",
            "products",
            "grouped",
            "by",
            "product",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "product_details",
            ",",
            "MAX",
            "(",
            "product_id",
            ")",
            "FROM",
            "Products",
            "GROUP",
            "BY",
            "product_details"
        ],
        "query_toks_no_value": [
            "select",
            "product_details",
            ",",
            "max",
            "(",
            "product_id",
            ")",
            "from",
            "products",
            "group",
            "by",
            "product_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products.product_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__products.product_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__products.product_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_orders",
        "query": "SELECT order_item_status, MAX(order_id) FROM Order_Items GROUP BY order_item_status;",
        "question": "Select order item status and maximum order id from order items grouped by order item status ",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Shipments",
            "Customers",
            "Shipment_Items",
            "Orders"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "order",
            "item",
            "status",
            "and",
            "maximum",
            "order",
            "id",
            "from",
            "order",
            "items",
            "grouped",
            "by",
            "order",
            "item",
            "status"
        ],
        "query_toks": [
            "SELECT",
            "order_item_status",
            ",",
            "MAX",
            "(",
            "order_id",
            ")",
            "FROM",
            "Order_Items",
            "GROUP",
            "BY",
            "order_item_status"
        ],
        "query_toks_no_value": [
            "select",
            "order_item_status",
            ",",
            "max",
            "(",
            "order_id",
            ")",
            "from",
            "order_items",
            "group",
            "by",
            "order_item_status"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__order_items__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__order_items.order_item_status__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__order_items.order_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__order_items.order_item_status__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_orders",
        "query": "SELECT invoice_details, MAX(invoice_number) FROM Invoices GROUP BY invoice_details;",
        "question": "Select invoice details and maximum invoice number from invoices grouped by invoice details ",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Shipments",
            "Customers",
            "Shipment_Items",
            "Orders"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "invoice",
            "details",
            "and",
            "maximum",
            "invoice",
            "number",
            "from",
            "invoices",
            "grouped",
            "by",
            "invoice",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "invoice_details",
            ",",
            "MAX",
            "(",
            "invoice_number",
            ")",
            "FROM",
            "Invoices",
            "GROUP",
            "BY",
            "invoice_details"
        ],
        "query_toks_no_value": [
            "select",
            "invoice_details",
            ",",
            "max",
            "(",
            "invoice_number",
            ")",
            "from",
            "invoices",
            "group",
            "by",
            "invoice_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__invoices__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__invoices.invoice_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__invoices.invoice_number__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__invoices.invoice_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_orders",
        "query": "SELECT shipment_tracking_number, MIN(order_id) FROM Shipments GROUP BY shipment_tracking_number;",
        "question": "Select shipment tracking number and minimum order id from shipments grouped by shipment tracking number ",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Shipments",
            "Customers",
            "Shipment_Items",
            "Orders"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "shipment",
            "tracking",
            "number",
            "and",
            "minimum",
            "order",
            "id",
            "from",
            "shipments",
            "grouped",
            "by",
            "shipment",
            "tracking",
            "number"
        ],
        "query_toks": [
            "SELECT",
            "shipment_tracking_number",
            ",",
            "MIN",
            "(",
            "order_id",
            ")",
            "FROM",
            "Shipments",
            "GROUP",
            "BY",
            "shipment_tracking_number"
        ],
        "query_toks_no_value": [
            "select",
            "shipment_tracking_number",
            ",",
            "min",
            "(",
            "order_id",
            ")",
            "from",
            "shipments",
            "group",
            "by",
            "shipment_tracking_number"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__shipments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__shipments.shipment_tracking_number__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__shipments.order_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__shipments.shipment_tracking_number__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_orders",
        "query": "SELECT customer_name, MAX(customer_id) FROM Customers GROUP BY customer_name;",
        "question": "Select customer name and maximum customer id from customers grouped by customer name ",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Shipments",
            "Customers",
            "Shipment_Items",
            "Orders"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "customer",
            "name",
            "and",
            "maximum",
            "customer",
            "id",
            "from",
            "customers",
            "grouped",
            "by",
            "customer",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "customer_name",
            ",",
            "MAX",
            "(",
            "customer_id",
            ")",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "customer_name"
        ],
        "query_toks_no_value": [
            "select",
            "customer_name",
            ",",
            "max",
            "(",
            "customer_id",
            ")",
            "from",
            "customers",
            "group",
            "by",
            "customer_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customers.customer_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_orders",
        "query": "SELECT order_details, MAX(order_id) FROM Orders GROUP BY order_details;",
        "question": "Select order details and maximum order id from orders grouped by order details ",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Shipments",
            "Customers",
            "Shipment_Items",
            "Orders"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "order",
            "details",
            "and",
            "maximum",
            "order",
            "id",
            "from",
            "orders",
            "grouped",
            "by",
            "order",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "order_details",
            ",",
            "MAX",
            "(",
            "order_id",
            ")",
            "FROM",
            "Orders",
            "GROUP",
            "BY",
            "order_details"
        ],
        "query_toks_no_value": [
            "select",
            "order_details",
            ",",
            "max",
            "(",
            "order_id",
            ")",
            "from",
            "orders",
            "group",
            "by",
            "order_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__orders__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__orders.order_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__orders.order_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__orders.order_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_policies",
        "query": "SELECT Policy_Type_Code, MAX(Policy_ID) FROM Customer_Policies GROUP BY Policy_Type_Code;",
        "question": "Select policy type code and maximum policy id from customer policies grouped by policy type code ",
        "tables": [
            "Settlements",
            "Claims",
            "Customer_Policies",
            "Customers",
            "Payments"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "policy",
            "type",
            "code",
            "and",
            "maximum",
            "policy",
            "id",
            "from",
            "customer",
            "policies",
            "grouped",
            "by",
            "policy",
            "type",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "Policy_Type_Code",
            ",",
            "MAX",
            "(",
            "Policy_ID",
            ")",
            "FROM",
            "Customer_Policies",
            "GROUP",
            "BY",
            "Policy_Type_Code"
        ],
        "query_toks_no_value": [
            "select",
            "policy_type_code",
            ",",
            "max",
            "(",
            "policy_id",
            ")",
            "from",
            "customer_policies",
            "group",
            "by",
            "policy_type_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_policies__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_policies.policy_type_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__customer_policies.policy_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customer_policies.policy_type_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_policies",
        "query": "SELECT Customer_Details, MIN(Customer_ID) FROM Customers GROUP BY Customer_Details;",
        "question": "Select customer details and minimum customer id from customers grouped by customer details ",
        "tables": [
            "Settlements",
            "Claims",
            "Customer_Policies",
            "Customers",
            "Payments"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "customer",
            "details",
            "and",
            "minimum",
            "customer",
            "id",
            "from",
            "customers",
            "grouped",
            "by",
            "customer",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "Customer_Details",
            ",",
            "MIN",
            "(",
            "Customer_ID",
            ")",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "Customer_Details"
        ],
        "query_toks_no_value": [
            "select",
            "customer_details",
            ",",
            "min",
            "(",
            "customer_id",
            ")",
            "from",
            "customers",
            "group",
            "by",
            "customer_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customers.customer_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_policies",
        "query": "SELECT Payment_Method_Code, MAX(Payment_ID) FROM Payments GROUP BY Payment_Method_Code;",
        "question": "Select payment method code and maximum payment id from payments grouped by payment method code ",
        "tables": [
            "Settlements",
            "Claims",
            "Customer_Policies",
            "Customers",
            "Payments"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "payment",
            "method",
            "code",
            "and",
            "maximum",
            "payment",
            "id",
            "from",
            "payments",
            "grouped",
            "by",
            "payment",
            "method",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "Payment_Method_Code",
            ",",
            "MAX",
            "(",
            "Payment_ID",
            ")",
            "FROM",
            "Payments",
            "GROUP",
            "BY",
            "Payment_Method_Code"
        ],
        "query_toks_no_value": [
            "select",
            "payment_method_code",
            ",",
            "max",
            "(",
            "payment_id",
            ")",
            "from",
            "payments",
            "group",
            "by",
            "payment_method_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__payments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__payments.payment_method_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__payments.payment_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__payments.payment_method_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "gas_company",
        "query": "SELECT Representative_Name, MIN(Open_Year) FROM gas_station GROUP BY Representative_Name;",
        "question": "Select representative name and minimum open year from gas station grouped by representative name ",
        "tables": [
            "gas_station",
            "company",
            "station_company"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "representative",
            "name",
            "and",
            "minimum",
            "open",
            "year",
            "from",
            "gas",
            "station",
            "grouped",
            "by",
            "representative",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Representative_Name",
            ",",
            "MIN",
            "(",
            "Open_Year",
            ")",
            "FROM",
            "gas_station",
            "GROUP",
            "BY",
            "Representative_Name"
        ],
        "query_toks_no_value": [
            "select",
            "representative_name",
            ",",
            "min",
            "(",
            "open_year",
            ")",
            "from",
            "gas_station",
            "group",
            "by",
            "representative_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__gas_station__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__gas_station.representative_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__gas_station.open_year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__gas_station.representative_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "gas_company",
        "query": "SELECT Company, MAX(Rank) FROM company GROUP BY Company;",
        "question": "Select company and maximum rank from company grouped by company ",
        "tables": [
            "gas_station",
            "company",
            "station_company"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "company",
            "and",
            "maximum",
            "rank",
            "from",
            "company",
            "grouped",
            "by",
            "company"
        ],
        "query_toks": [
            "SELECT",
            "Company",
            ",",
            "MAX",
            "(",
            "Rank",
            ")",
            "FROM",
            "company",
            "GROUP",
            "BY",
            "Company"
        ],
        "query_toks_no_value": [
            "select",
            "company",
            ",",
            "max",
            "(",
            "rank",
            ")",
            "from",
            "company",
            "group",
            "by",
            "company"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__company__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__company.company__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__company.rank__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__company.company__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_government",
        "query": "SELECT individual_email, MAX(individual_id) FROM Individuals GROUP BY individual_email;",
        "question": "Select individual email and maximum individual id from individuals grouped by individual email ",
        "tables": [
            "Individuals",
            "Organization_Contact_Individuals",
            "Addresses",
            "Organizations",
            "Services",
            "Party_Forms",
            "Party_Addresses",
            "Party_Services",
            "Parties",
            "Forms"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "individual",
            "email",
            "and",
            "maximum",
            "individual",
            "id",
            "from",
            "individuals",
            "grouped",
            "by",
            "individual",
            "email"
        ],
        "query_toks": [
            "SELECT",
            "individual_email",
            ",",
            "MAX",
            "(",
            "individual_id",
            ")",
            "FROM",
            "Individuals",
            "GROUP",
            "BY",
            "individual_email"
        ],
        "query_toks_no_value": [
            "select",
            "individual_email",
            ",",
            "max",
            "(",
            "individual_id",
            ")",
            "from",
            "individuals",
            "group",
            "by",
            "individual_email"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__individuals__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__individuals.individual_email__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__individuals.individual_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__individuals.individual_email__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_government",
        "query": "SELECT line_1_number_building, MAX(address_id) FROM Addresses GROUP BY line_1_number_building;",
        "question": "Select line 1 number building and maximum address id from addresses grouped by line 1 number building ",
        "tables": [
            "Individuals",
            "Organization_Contact_Individuals",
            "Addresses",
            "Organizations",
            "Services",
            "Party_Forms",
            "Party_Addresses",
            "Party_Services",
            "Parties",
            "Forms"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "line",
            "1",
            "number",
            "building",
            "and",
            "maximum",
            "address",
            "id",
            "from",
            "addresses",
            "grouped",
            "by",
            "line",
            "1",
            "number",
            "building"
        ],
        "query_toks": [
            "SELECT",
            "line_1_number_building",
            ",",
            "MAX",
            "(",
            "address_id",
            ")",
            "FROM",
            "Addresses",
            "GROUP",
            "BY",
            "line_1_number_building"
        ],
        "query_toks_no_value": [
            "select",
            "line_1_number_building",
            ",",
            "max",
            "(",
            "address_id",
            ")",
            "from",
            "addresses",
            "group",
            "by",
            "line_1_number_building"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__addresses.line_1_number_building__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__addresses.address_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__addresses.line_1_number_building__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_government",
        "query": "SELECT organization_name, MIN(organization_id) FROM Organizations GROUP BY organization_name;",
        "question": "Select organization name and minimum organization id from organizations grouped by organization name ",
        "tables": [
            "Individuals",
            "Organization_Contact_Individuals",
            "Addresses",
            "Organizations",
            "Services",
            "Party_Forms",
            "Party_Addresses",
            "Party_Services",
            "Parties",
            "Forms"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "organization",
            "name",
            "and",
            "minimum",
            "organization",
            "id",
            "from",
            "organizations",
            "grouped",
            "by",
            "organization",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "organization_name",
            ",",
            "MIN",
            "(",
            "organization_id",
            ")",
            "FROM",
            "Organizations",
            "GROUP",
            "BY",
            "organization_name"
        ],
        "query_toks_no_value": [
            "select",
            "organization_name",
            ",",
            "min",
            "(",
            "organization_id",
            ")",
            "from",
            "organizations",
            "group",
            "by",
            "organization_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__organizations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__organizations.organization_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__organizations.organization_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__organizations.organization_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_government",
        "query": "SELECT service_name, MIN(service_id) FROM Services GROUP BY service_name;",
        "question": "Select service name and minimum service id from services grouped by service name ",
        "tables": [
            "Individuals",
            "Organization_Contact_Individuals",
            "Addresses",
            "Organizations",
            "Services",
            "Party_Forms",
            "Party_Addresses",
            "Party_Services",
            "Parties",
            "Forms"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "service",
            "name",
            "and",
            "minimum",
            "service",
            "id",
            "from",
            "services",
            "grouped",
            "by",
            "service",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "service_name",
            ",",
            "MIN",
            "(",
            "service_id",
            ")",
            "FROM",
            "Services",
            "GROUP",
            "BY",
            "service_name"
        ],
        "query_toks_no_value": [
            "select",
            "service_name",
            ",",
            "min",
            "(",
            "service_id",
            ")",
            "from",
            "services",
            "group",
            "by",
            "service_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__services__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__services.service_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__services.service_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__services.service_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_government",
        "query": "SELECT form_status_code, MAX(party_id) FROM Party_Forms GROUP BY form_status_code;",
        "question": "Select form status code and maximum party id from party forms grouped by form status code ",
        "tables": [
            "Individuals",
            "Organization_Contact_Individuals",
            "Addresses",
            "Organizations",
            "Services",
            "Party_Forms",
            "Party_Addresses",
            "Party_Services",
            "Parties",
            "Forms"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "form",
            "status",
            "code",
            "and",
            "maximum",
            "party",
            "id",
            "from",
            "party",
            "forms",
            "grouped",
            "by",
            "form",
            "status",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "form_status_code",
            ",",
            "MAX",
            "(",
            "party_id",
            ")",
            "FROM",
            "Party_Forms",
            "GROUP",
            "BY",
            "form_status_code"
        ],
        "query_toks_no_value": [
            "select",
            "form_status_code",
            ",",
            "max",
            "(",
            "party_id",
            ")",
            "from",
            "party_forms",
            "group",
            "by",
            "form_status_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__party_forms__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__party_forms.form_status_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__party_forms.party_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__party_forms.form_status_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_government",
        "query": "SELECT address_type_code, MAX(address_id) FROM Party_Addresses GROUP BY address_type_code;",
        "question": "Select address type code and maximum address id from party addresses grouped by address type code ",
        "tables": [
            "Individuals",
            "Organization_Contact_Individuals",
            "Addresses",
            "Organizations",
            "Services",
            "Party_Forms",
            "Party_Addresses",
            "Party_Services",
            "Parties",
            "Forms"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "address",
            "type",
            "code",
            "and",
            "maximum",
            "address",
            "id",
            "from",
            "party",
            "addresses",
            "grouped",
            "by",
            "address",
            "type",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "address_type_code",
            ",",
            "MAX",
            "(",
            "address_id",
            ")",
            "FROM",
            "Party_Addresses",
            "GROUP",
            "BY",
            "address_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "address_type_code",
            ",",
            "max",
            "(",
            "address_id",
            ")",
            "from",
            "party_addresses",
            "group",
            "by",
            "address_type_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__party_addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__party_addresses.address_type_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__party_addresses.address_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__party_addresses.address_type_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_government",
        "query": "SELECT payment_method_code, MAX(party_id) FROM Parties GROUP BY payment_method_code;",
        "question": "Select payment method code and maximum party id from parties grouped by payment method code ",
        "tables": [
            "Individuals",
            "Organization_Contact_Individuals",
            "Addresses",
            "Organizations",
            "Services",
            "Party_Forms",
            "Party_Addresses",
            "Party_Services",
            "Parties",
            "Forms"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "payment",
            "method",
            "code",
            "and",
            "maximum",
            "party",
            "id",
            "from",
            "parties",
            "grouped",
            "by",
            "payment",
            "method",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "payment_method_code",
            ",",
            "MAX",
            "(",
            "party_id",
            ")",
            "FROM",
            "Parties",
            "GROUP",
            "BY",
            "payment_method_code"
        ],
        "query_toks_no_value": [
            "select",
            "payment_method_code",
            ",",
            "max",
            "(",
            "party_id",
            ")",
            "from",
            "parties",
            "group",
            "by",
            "payment_method_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__parties__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__parties.payment_method_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__parties.party_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__parties.payment_method_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_government",
        "query": "SELECT form_type_code, MAX(form_id) FROM Forms GROUP BY form_type_code;",
        "question": "Select form type code and maximum form id from forms grouped by form type code ",
        "tables": [
            "Individuals",
            "Organization_Contact_Individuals",
            "Addresses",
            "Organizations",
            "Services",
            "Party_Forms",
            "Party_Addresses",
            "Party_Services",
            "Parties",
            "Forms"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "form",
            "type",
            "code",
            "and",
            "maximum",
            "form",
            "id",
            "from",
            "forms",
            "grouped",
            "by",
            "form",
            "type",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "form_type_code",
            ",",
            "MAX",
            "(",
            "form_id",
            ")",
            "FROM",
            "Forms",
            "GROUP",
            "BY",
            "form_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "form_type_code",
            ",",
            "max",
            "(",
            "form_id",
            ")",
            "from",
            "forms",
            "group",
            "by",
            "form_type_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__forms__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__forms.form_type_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__forms.form_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__forms.form_type_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "school_bus",
        "query": "SELECT Type, MAX(School_ID) FROM school GROUP BY Type;",
        "question": "Select type and maximum school id from school grouped by type ",
        "tables": [
            "school_bus",
            "school",
            "driver"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "type",
            "and",
            "maximum",
            "school",
            "id",
            "from",
            "school",
            "grouped",
            "by",
            "type"
        ],
        "query_toks": [
            "SELECT",
            "Type",
            ",",
            "MAX",
            "(",
            "School_ID",
            ")",
            "FROM",
            "school",
            "GROUP",
            "BY",
            "Type"
        ],
        "query_toks_no_value": [
            "select",
            "type",
            ",",
            "max",
            "(",
            "school_id",
            ")",
            "from",
            "school",
            "group",
            "by",
            "type"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__school__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__school.type__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__school.school_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__school.type__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "school_bus",
        "query": "SELECT Home_city, MIN(Age) FROM driver GROUP BY Home_city;",
        "question": "Select home city and minimum age from driver grouped by home city ",
        "tables": [
            "school_bus",
            "school",
            "driver"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "home",
            "city",
            "and",
            "minimum",
            "age",
            "from",
            "driver",
            "grouped",
            "by",
            "home",
            "city"
        ],
        "query_toks": [
            "SELECT",
            "Home_city",
            ",",
            "MIN",
            "(",
            "Age",
            ")",
            "FROM",
            "driver",
            "GROUP",
            "BY",
            "Home_city"
        ],
        "query_toks_no_value": [
            "select",
            "home_city",
            ",",
            "min",
            "(",
            "age",
            ")",
            "from",
            "driver",
            "group",
            "by",
            "home_city"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__driver__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__driver.home_city__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__driver.age__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__driver.home_city__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "machine_repair",
        "query": "SELECT Team, MAX(Starting_Year) FROM technician GROUP BY Team;",
        "question": "Select team and maximum starting year from technician grouped by team ",
        "tables": [
            "technician",
            "repair",
            "machine",
            "repair_assignment"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "team",
            "and",
            "maximum",
            "starting",
            "year",
            "from",
            "technician",
            "grouped",
            "by",
            "team"
        ],
        "query_toks": [
            "SELECT",
            "Team",
            ",",
            "MAX",
            "(",
            "Starting_Year",
            ")",
            "FROM",
            "technician",
            "GROUP",
            "BY",
            "Team"
        ],
        "query_toks_no_value": [
            "select",
            "team",
            ",",
            "max",
            "(",
            "starting_year",
            ")",
            "from",
            "technician",
            "group",
            "by",
            "team"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__technician__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__technician.team__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__technician.starting_year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__technician.team__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "machine_repair",
        "query": "SELECT Notes, MAX(repair_ID) FROM repair GROUP BY Notes;",
        "question": "Select notes and maximum repair id from repair grouped by notes ",
        "tables": [
            "technician",
            "repair",
            "machine",
            "repair_assignment"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "notes",
            "and",
            "maximum",
            "repair",
            "id",
            "from",
            "repair",
            "grouped",
            "by",
            "notes"
        ],
        "query_toks": [
            "SELECT",
            "Notes",
            ",",
            "MAX",
            "(",
            "repair_ID",
            ")",
            "FROM",
            "repair",
            "GROUP",
            "BY",
            "Notes"
        ],
        "query_toks_no_value": [
            "select",
            "notes",
            ",",
            "max",
            "(",
            "repair_id",
            ")",
            "from",
            "repair",
            "group",
            "by",
            "notes"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__repair__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__repair.notes__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__repair.repair_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__repair.notes__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "machine_repair",
        "query": "SELECT Team, MAX(quality_rank) FROM machine GROUP BY Team;",
        "question": "Select team and maximum quality rank from machine grouped by team ",
        "tables": [
            "technician",
            "repair",
            "machine",
            "repair_assignment"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "team",
            "and",
            "maximum",
            "quality",
            "rank",
            "from",
            "machine",
            "grouped",
            "by",
            "team"
        ],
        "query_toks": [
            "SELECT",
            "Team",
            ",",
            "MAX",
            "(",
            "quality_rank",
            ")",
            "FROM",
            "machine",
            "GROUP",
            "BY",
            "Team"
        ],
        "query_toks_no_value": [
            "select",
            "team",
            ",",
            "max",
            "(",
            "quality_rank",
            ")",
            "from",
            "machine",
            "group",
            "by",
            "team"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__machine__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__machine.team__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__machine.quality_rank__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__machine.team__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "theme_gallery",
        "query": "SELECT Country, MIN(Year_Join) FROM artist GROUP BY Country;",
        "question": "Select country and minimum year join from artist grouped by country ",
        "tables": [
            "artist",
            "exhibition_record",
            "exhibition"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "country",
            "and",
            "minimum",
            "year",
            "join",
            "from",
            "artist",
            "grouped",
            "by",
            "country"
        ],
        "query_toks": [
            "SELECT",
            "Country",
            "(",
            "Country",
            ")",
            "MIN",
            "(",
            "Year_Join",
            ")",
            "FROM",
            "artist",
            "GROUP",
            "BY",
            "Country",
            "(",
            "Country",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            "(",
            "country",
            ")",
            "min",
            "(",
            "year_join",
            ")",
            "from",
            "artist",
            "group",
            "by",
            "country",
            "(",
            "country",
            ")"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__artist__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__artist.country__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__artist.year_join__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__artist.country__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "theme_gallery",
        "query": "SELECT Date, MAX(Attendance) FROM exhibition_record GROUP BY Date;",
        "question": "Select date and maximum attendance from exhibition record grouped by date ",
        "tables": [
            "artist",
            "exhibition_record",
            "exhibition"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "date",
            "and",
            "maximum",
            "attendance",
            "from",
            "exhibition",
            "record",
            "grouped",
            "by",
            "date"
        ],
        "query_toks": [
            "SELECT",
            "Date",
            ",",
            "MAX",
            "(",
            "Attendance",
            ")",
            "FROM",
            "exhibition_record",
            "GROUP",
            "BY",
            "Date"
        ],
        "query_toks_no_value": [
            "select",
            "date",
            ",",
            "max",
            "(",
            "attendance",
            ")",
            "from",
            "exhibition_record",
            "group",
            "by",
            "date"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__exhibition_record__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__exhibition_record.date__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__exhibition_record.attendance__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__exhibition_record.date__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "theme_gallery",
        "query": "SELECT Theme, MAX(Ticket_Price) FROM exhibition GROUP BY Theme;",
        "question": "Select theme and maximum ticket price from exhibition grouped by theme ",
        "tables": [
            "artist",
            "exhibition_record",
            "exhibition"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "theme",
            "and",
            "maximum",
            "ticket",
            "price",
            "from",
            "exhibition",
            "grouped",
            "by",
            "theme"
        ],
        "query_toks": [
            "SELECT",
            "Theme",
            ",",
            "MAX",
            "(",
            "Ticket_Price",
            ")",
            "FROM",
            "exhibition",
            "GROUP",
            "BY",
            "Theme"
        ],
        "query_toks_no_value": [
            "select",
            "theme",
            ",",
            "max",
            "(",
            "ticket_price",
            ")",
            "from",
            "exhibition",
            "group",
            "by",
            "theme"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__exhibition__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__exhibition.theme__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__exhibition.ticket_price__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__exhibition.theme__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "film_rank",
        "query": "SELECT Director, MIN(Gross_in_dollar) FROM film GROUP BY Director;",
        "question": "Select director and minimum gross in dollar from film grouped by director ",
        "tables": [
            "film",
            "market",
            "film_market_estimation"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "director",
            "and",
            "minimum",
            "gross",
            "in",
            "dollar",
            "from",
            "film",
            "grouped",
            "by",
            "director"
        ],
        "query_toks": [
            "SELECT",
            "Director",
            ",",
            "MIN",
            "(",
            "Gross_in_dollar",
            ")",
            "FROM",
            "film",
            "GROUP",
            "BY",
            "Director"
        ],
        "query_toks_no_value": [
            "select",
            "director",
            ",",
            "min",
            "(",
            "gross_in_dollar",
            ")",
            "from",
            "film",
            "group",
            "by",
            "director"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__film__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__film.director__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__film.gross_in_dollar__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__film.director__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "film_rank",
        "query": "SELECT Country, MIN(Number_cities) FROM market GROUP BY Country;",
        "question": "Select country and minimum number cities from market grouped by country ",
        "tables": [
            "film",
            "market",
            "film_market_estimation"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "country",
            "and",
            "minimum",
            "number",
            "cities",
            "from",
            "market",
            "grouped",
            "by",
            "country"
        ],
        "query_toks": [
            "SELECT",
            "Country",
            "(",
            "Country",
            ")",
            "MIN",
            "(",
            "Number_cities",
            ")",
            "FROM",
            "market",
            "GROUP",
            "BY",
            "Country",
            "(",
            "Country",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            "(",
            "country",
            ")",
            "min",
            "(",
            "number_cities",
            ")",
            "from",
            "market",
            "group",
            "by",
            "country",
            "(",
            "country",
            ")"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__market__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__market.country__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__market.number_cities__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__market.country__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "film_rank",
        "query": "SELECT Type, MAX(Film_ID) FROM film_market_estimation GROUP BY Type;",
        "question": "Select type and maximum film id from film market estimation grouped by type ",
        "tables": [
            "film",
            "market",
            "film_market_estimation"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "type",
            "and",
            "maximum",
            "film",
            "id",
            "from",
            "film",
            "market",
            "estimation",
            "grouped",
            "by",
            "type"
        ],
        "query_toks": [
            "SELECT",
            "Type",
            ",",
            "MAX",
            "(",
            "Film_ID",
            ")",
            "FROM",
            "film_market_estimation",
            "GROUP",
            "BY",
            "Type"
        ],
        "query_toks_no_value": [
            "select",
            "type",
            ",",
            "max",
            "(",
            "film_id",
            ")",
            "from",
            "film_market_estimation",
            "group",
            "by",
            "type"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__film_market_estimation__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__film_market_estimation.type__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__film_market_estimation.film_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__film_market_estimation.type__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "party_people",
        "query": "SELECT In_office, MIN(Member_ID) FROM member GROUP BY In_office;",
        "question": "Select in office and minimum member id from member grouped by in office ",
        "tables": [
            "member",
            "party_events",
            "party",
            "region"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "in",
            "office",
            "and",
            "minimum",
            "member",
            "id",
            "from",
            "member",
            "grouped",
            "by",
            "in",
            "office"
        ],
        "query_toks": [
            "SELECT",
            "In_office",
            ",",
            "MIN",
            "(",
            "Member_ID",
            ")",
            "FROM",
            "member",
            "GROUP",
            "BY",
            "In_office"
        ],
        "query_toks_no_value": [
            "select",
            "in_office",
            ",",
            "min",
            "(",
            "member_id",
            ")",
            "from",
            "member",
            "group",
            "by",
            "in_office"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__member__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__member.in_office__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__member.member_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__member.in_office__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "party_people",
        "query": "SELECT Event_Name, MIN(Party_ID) FROM party_events GROUP BY Event_Name;",
        "question": "Select event name and minimum party id from party events grouped by event name ",
        "tables": [
            "member",
            "party_events",
            "party",
            "region"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "event",
            "name",
            "and",
            "minimum",
            "party",
            "id",
            "from",
            "party",
            "events",
            "grouped",
            "by",
            "event",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Event_Name",
            ",",
            "MIN",
            "(",
            "Party_ID",
            ")",
            "FROM",
            "party_events",
            "GROUP",
            "BY",
            "Event_Name"
        ],
        "query_toks_no_value": [
            "select",
            "event_name",
            ",",
            "min",
            "(",
            "party_id",
            ")",
            "from",
            "party_events",
            "group",
            "by",
            "event_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__party_events__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__party_events.event_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__party_events.party_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__party_events.event_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "party_people",
        "query": "SELECT Party_name, MAX(Region_ID) FROM party GROUP BY Party_name;",
        "question": "Select party name and maximum region id from party grouped by party name ",
        "tables": [
            "member",
            "party_events",
            "party",
            "region"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "party",
            "name",
            "and",
            "maximum",
            "region",
            "id",
            "from",
            "party",
            "grouped",
            "by",
            "party",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Party_name",
            ",",
            "MAX",
            "(",
            "Region_ID",
            ")",
            "FROM",
            "party",
            "GROUP",
            "BY",
            "Party_name"
        ],
        "query_toks_no_value": [
            "select",
            "party_name",
            ",",
            "max",
            "(",
            "region_id",
            ")",
            "from",
            "party",
            "group",
            "by",
            "party_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__party__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__party.party_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__party.region_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__party.party_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "party_people",
        "query": "SELECT Format, MIN(Region_ID) FROM region GROUP BY Format;",
        "question": "Select format and minimum region id from region grouped by format ",
        "tables": [
            "member",
            "party_events",
            "party",
            "region"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "format",
            "and",
            "minimum",
            "region",
            "id",
            "from",
            "region",
            "grouped",
            "by",
            "format"
        ],
        "query_toks": [
            "SELECT",
            "Format",
            ",",
            "MIN",
            "(",
            "Region_ID",
            ")",
            "FROM",
            "region",
            "GROUP",
            "BY",
            "Format"
        ],
        "query_toks_no_value": [
            "select",
            "format",
            ",",
            "min",
            "(",
            "region_id",
            ")",
            "from",
            "region",
            "group",
            "by",
            "format"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__region__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__region.format__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__region.region_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__region.format__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT Dose, MIN(Medication) FROM Prescribes GROUP BY Dose;",
        "question": "Select dose and minimum medication from prescribes grouped by dose ",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "dose",
            "and",
            "minimum",
            "medication",
            "from",
            "prescribes",
            "grouped",
            "by",
            "dose"
        ],
        "query_toks": [
            "SELECT",
            "Dose",
            ",",
            "MIN",
            "(",
            "Medication",
            ")",
            "FROM",
            "Prescribes",
            "GROUP",
            "BY",
            "Dose"
        ],
        "query_toks_no_value": [
            "select",
            "dose",
            ",",
            "min",
            "(",
            "medication",
            ")",
            "from",
            "prescribes",
            "group",
            "by",
            "dose"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__prescribes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__prescribes.dose__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__prescribes.medication__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__prescribes.dose__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT RoomType, MAX(BlockCode) FROM Room GROUP BY RoomType;",
        "question": "Select room type and maximum block code from room grouped by room type ",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "room",
            "type",
            "and",
            "maximum",
            "block",
            "code",
            "from",
            "room",
            "grouped",
            "by",
            "room",
            "type"
        ],
        "query_toks": [
            "SELECT",
            "RoomType",
            ",",
            "MAX",
            "(",
            "BlockCode",
            ")",
            "FROM",
            "Room",
            "GROUP",
            "BY",
            "RoomType"
        ],
        "query_toks_no_value": [
            "select",
            "roomtype",
            ",",
            "max",
            "(",
            "blockcode",
            ")",
            "from",
            "room",
            "group",
            "by",
            "roomtype"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__room__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__room.roomtype__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__room.blockcode__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__room.roomtype__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT Name, MAX(Cost) FROM Procedures GROUP BY Name;",
        "question": "Select name and maximum cost from procedures grouped by name ",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "maximum",
            "cost",
            "from",
            "procedures",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "MAX",
            "(",
            "Cost",
            ")",
            "FROM",
            "Procedures",
            "GROUP",
            "BY",
            "Name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "max",
            "(",
            "cost",
            ")",
            "from",
            "procedures",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__procedures__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__procedures.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__procedures.cost__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__procedures.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT Name, MIN(DepartmentID) FROM Department GROUP BY Name;",
        "question": "Select name and minimum departmentid from department grouped by name ",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "minimum",
            "departmentid",
            "from",
            "department",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "MIN",
            "(",
            "DepartmentID",
            ")",
            "FROM",
            "Department",
            "GROUP",
            "BY",
            "Name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "min",
            "(",
            "departmentid",
            ")",
            "from",
            "department",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__department__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__department.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__department.departmentid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__department.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT Phone, MAX(SSN) FROM Patient GROUP BY Phone;",
        "question": "Select phone and maximum ssn from patient grouped by phone ",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "phone",
            "and",
            "maximum",
            "ssn",
            "from",
            "patient",
            "grouped",
            "by",
            "phone"
        ],
        "query_toks": [
            "SELECT",
            "Phone",
            ",",
            "MAX",
            "(",
            "SSN",
            ")",
            "FROM",
            "Patient",
            "GROUP",
            "BY",
            "Phone"
        ],
        "query_toks_no_value": [
            "select",
            "phone",
            ",",
            "max",
            "(",
            "ssn",
            ")",
            "from",
            "patient",
            "group",
            "by",
            "phone"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__patient__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__patient.phone__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__patient.ssn__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__patient.phone__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT Name, MIN(EmployeeID) FROM Physician GROUP BY Name;",
        "question": "Select name and minimum employee id from physician grouped by name ",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "minimum",
            "employee",
            "id",
            "from",
            "physician",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "MIN",
            "(",
            "EmployeeID",
            ")",
            "FROM",
            "Physician",
            "GROUP",
            "BY",
            "Name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "min",
            "(",
            "employeeid",
            ")",
            "from",
            "physician",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__physician__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__physician.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__physician.employeeid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__physician.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT Name, MIN(SSN) FROM Nurse GROUP BY Name;",
        "question": "Select name and minimum ssn from nurse grouped by name ",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "minimum",
            "ssn",
            "from",
            "nurse",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "MIN",
            "(",
            "SSN",
            ")",
            "FROM",
            "Nurse",
            "GROUP",
            "BY",
            "Name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "min",
            "(",
            "ssn",
            ")",
            "from",
            "nurse",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__nurse__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__nurse.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__nurse.ssn__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__nurse.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT ExaminationRoom, MAX(AppointmentID) FROM Appointment GROUP BY ExaminationRoom;",
        "question": "Select examination room and maximum appointment id from appointment grouped by examination room ",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "examination",
            "room",
            "and",
            "maximum",
            "appointment",
            "id",
            "from",
            "appointment",
            "grouped",
            "by",
            "examination",
            "room"
        ],
        "query_toks": [
            "SELECT",
            "ExaminationRoom",
            ",",
            "MAX",
            "(",
            "AppointmentID",
            ")",
            "FROM",
            "Appointment",
            "GROUP",
            "BY",
            "ExaminationRoom"
        ],
        "query_toks_no_value": [
            "select",
            "examinationroom",
            ",",
            "max",
            "(",
            "appointmentid",
            ")",
            "from",
            "appointment",
            "group",
            "by",
            "examinationroom"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__appointment__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__appointment.examinationroom__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__appointment.appointmentid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__appointment.examinationroom__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT Brand, MAX(Code) FROM Medication GROUP BY Brand;",
        "question": "Select brand and maximum code from medication grouped by brand ",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "brand",
            "and",
            "maximum",
            "code",
            "from",
            "medication",
            "grouped",
            "by",
            "brand"
        ],
        "query_toks": [
            "SELECT",
            "Brand",
            ",",
            "MAX",
            "(",
            "Code",
            ")",
            "FROM",
            "Medication",
            "GROUP",
            "BY",
            "Brand"
        ],
        "query_toks_no_value": [
            "select",
            "brand",
            ",",
            "max",
            "(",
            "code",
            ")",
            "from",
            "medication",
            "group",
            "by",
            "brand"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__medication__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__medication.brand__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__medication.code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__medication.brand__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "query": "SELECT product_category, MIN(mailshot_id) FROM Mailshot_Campaigns GROUP BY product_category;",
        "question": "Select product category and minimum mailshot id from mailshot campaigns grouped by product category ",
        "tables": [
            "Mailshot_Campaigns",
            "Products",
            "Mailshot_Customers",
            "Order_Items",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers",
            "Premises"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "product",
            "category",
            "and",
            "minimum",
            "mailshot",
            "id",
            "from",
            "mailshot",
            "campaigns",
            "grouped",
            "by",
            "product",
            "category"
        ],
        "query_toks": [
            "SELECT",
            "product_category",
            ",",
            "MIN",
            "(",
            "mailshot_id",
            ")",
            "FROM",
            "Mailshot_Campaigns",
            "GROUP",
            "BY",
            "product_category"
        ],
        "query_toks_no_value": [
            "select",
            "product_category",
            ",",
            "min",
            "(",
            "mailshot_id",
            ")",
            "from",
            "mailshot_campaigns",
            "group",
            "by",
            "product_category"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__mailshot_campaigns__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__mailshot_campaigns.product_category__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__mailshot_campaigns.mailshot_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__mailshot_campaigns.product_category__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "query": "SELECT product_name, MIN(product_id) FROM Products GROUP BY product_name;",
        "question": "Select product name and minimum product id from products grouped by product name ",
        "tables": [
            "Mailshot_Campaigns",
            "Products",
            "Mailshot_Customers",
            "Order_Items",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers",
            "Premises"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "product",
            "name",
            "and",
            "minimum",
            "product",
            "id",
            "from",
            "products",
            "grouped",
            "by",
            "product",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "product_name",
            ",",
            "MIN",
            "(",
            "product_id",
            ")",
            "FROM",
            "Products",
            "GROUP",
            "BY",
            "product_name"
        ],
        "query_toks_no_value": [
            "select",
            "product_name",
            ",",
            "min",
            "(",
            "product_id",
            ")",
            "from",
            "products",
            "group",
            "by",
            "product_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products.product_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__products.product_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__products.product_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "query": "SELECT outcome_code, MAX(mailshot_id) FROM Mailshot_Customers GROUP BY outcome_code;",
        "question": "Select outcome code and maximum mailshot id from mailshot customers grouped by outcome code ",
        "tables": [
            "Mailshot_Campaigns",
            "Products",
            "Mailshot_Customers",
            "Order_Items",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers",
            "Premises"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "outcome",
            "code",
            "and",
            "maximum",
            "mailshot",
            "id",
            "from",
            "mailshot",
            "customers",
            "grouped",
            "by",
            "outcome",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "outcome_code",
            ",",
            "MAX",
            "(",
            "mailshot_id",
            ")",
            "FROM",
            "Mailshot_Customers",
            "GROUP",
            "BY",
            "outcome_code"
        ],
        "query_toks_no_value": [
            "select",
            "outcome_code",
            ",",
            "max",
            "(",
            "mailshot_id",
            ")",
            "from",
            "mailshot_customers",
            "group",
            "by",
            "outcome_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__mailshot_customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__mailshot_customers.outcome_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__mailshot_customers.mailshot_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__mailshot_customers.outcome_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "query": "SELECT item_status_code, MIN(product_id) FROM Order_Items GROUP BY item_status_code;",
        "question": "Select item status code and minimum product id from order items grouped by item status code ",
        "tables": [
            "Mailshot_Campaigns",
            "Products",
            "Mailshot_Customers",
            "Order_Items",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers",
            "Premises"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "item",
            "status",
            "code",
            "and",
            "minimum",
            "product",
            "id",
            "from",
            "order",
            "items",
            "grouped",
            "by",
            "item",
            "status",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "item_status_code",
            ",",
            "MIN",
            "(",
            "product_id",
            ")",
            "FROM",
            "Order_Items",
            "GROUP",
            "BY",
            "item_status_code"
        ],
        "query_toks_no_value": [
            "select",
            "item_status_code",
            ",",
            "min",
            "(",
            "product_id",
            ")",
            "from",
            "order_items",
            "group",
            "by",
            "item_status_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__order_items__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__order_items.item_status_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__order_items.product_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__order_items.item_status_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "query": "SELECT order_status_code, MAX(order_id) FROM Customer_Orders GROUP BY order_status_code;",
        "question": "Select order status code and maximum order id from customer orders grouped by order status code ",
        "tables": [
            "Mailshot_Campaigns",
            "Products",
            "Mailshot_Customers",
            "Order_Items",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers",
            "Premises"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "order",
            "status",
            "code",
            "and",
            "maximum",
            "order",
            "id",
            "from",
            "customer",
            "orders",
            "grouped",
            "by",
            "order",
            "status",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "order_status_code",
            ",",
            "MAX",
            "(",
            "order_id",
            ")",
            "FROM",
            "Customer_Orders",
            "GROUP",
            "BY",
            "order_status_code"
        ],
        "query_toks_no_value": [
            "select",
            "order_status_code",
            ",",
            "max",
            "(",
            "order_id",
            ")",
            "from",
            "customer_orders",
            "group",
            "by",
            "order_status_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_orders__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_orders.order_status_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__customer_orders.order_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customer_orders.order_status_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "query": "SELECT address_type_code, MAX(premise_id) FROM Customer_Addresses GROUP BY address_type_code;",
        "question": "Select address type code and maximum premise id from customer addresses grouped by address type code ",
        "tables": [
            "Mailshot_Campaigns",
            "Products",
            "Mailshot_Customers",
            "Order_Items",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers",
            "Premises"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "address",
            "type",
            "code",
            "and",
            "maximum",
            "premise",
            "id",
            "from",
            "customer",
            "addresses",
            "grouped",
            "by",
            "address",
            "type",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "address_type_code",
            ",",
            "MAX",
            "(",
            "premise_id",
            ")",
            "FROM",
            "Customer_Addresses",
            "GROUP",
            "BY",
            "address_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "address_type_code",
            ",",
            "max",
            "(",
            "premise_id",
            ")",
            "from",
            "customer_addresses",
            "group",
            "by",
            "address_type_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_addresses.address_type_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__customer_addresses.premise_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customer_addresses.address_type_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "query": "SELECT customer_email, MAX(customer_id) FROM Customers GROUP BY customer_email;",
        "question": "Select customer email and maximum customer id from customers grouped by customer email ",
        "tables": [
            "Mailshot_Campaigns",
            "Products",
            "Mailshot_Customers",
            "Order_Items",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers",
            "Premises"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "customer",
            "email",
            "and",
            "maximum",
            "customer",
            "id",
            "from",
            "customers",
            "grouped",
            "by",
            "customer",
            "email"
        ],
        "query_toks": [
            "SELECT",
            "customer_email",
            ",",
            "MAX",
            "(",
            "customer_id",
            ")",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "customer_email"
        ],
        "query_toks_no_value": [
            "select",
            "customer_email",
            ",",
            "max",
            "(",
            "customer_id",
            ")",
            "from",
            "customers",
            "group",
            "by",
            "customer_email"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_email__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customers.customer_email__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "query": "SELECT premise_details, MAX(premise_id) FROM Premises GROUP BY premise_details;",
        "question": "Select premise details and maximum premise id from premises grouped by premise details ",
        "tables": [
            "Mailshot_Campaigns",
            "Products",
            "Mailshot_Customers",
            "Order_Items",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers",
            "Premises"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "premise",
            "details",
            "and",
            "maximum",
            "premise",
            "id",
            "from",
            "premises",
            "grouped",
            "by",
            "premise",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "premise_details",
            ",",
            "MAX",
            "(",
            "premise_id",
            ")",
            "FROM",
            "Premises",
            "GROUP",
            "BY",
            "premise_details"
        ],
        "query_toks_no_value": [
            "select",
            "premise_details",
            ",",
            "max",
            "(",
            "premise_id",
            ")",
            "from",
            "premises",
            "group",
            "by",
            "premise_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__premises__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__premises.premise_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__premises.premise_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__premises.premise_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "gymnast",
        "query": "SELECT Name, MIN(People_ID) FROM people GROUP BY Name;",
        "question": "Select name and minimum people id from people grouped by name ",
        "tables": [
            "gymnast",
            "people"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "minimum",
            "people",
            "id",
            "from",
            "people",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "MIN",
            "(",
            "People_ID",
            ")",
            "FROM",
            "people",
            "GROUP",
            "BY",
            "Name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "min",
            "(",
            "people_id",
            ")",
            "from",
            "people",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__people__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__people.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__people.people_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__people.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "restaurants",
        "query": "SELECT NAME, MAX(RATING) FROM RESTAURANT GROUP BY NAME;",
        "question": "Select name and maximum rating from restaurant grouped by name ",
        "tables": [
            "RESTAURANT",
            "GEOGRAPHIC",
            "LOCATION"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "maximum",
            "rating",
            "from",
            "restaurant",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "NAME",
            ",",
            "MAX",
            "(",
            "RATING",
            ")",
            "FROM",
            "RESTAURANT",
            "GROUP",
            "BY",
            "NAME"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "max",
            "(",
            "rating",
            ")",
            "from",
            "restaurant",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__restaurant__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__restaurant.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__restaurant.rating__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__restaurant.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "restaurants",
        "query": "SELECT CITY_NAME, MIN(HOUSE_NUMBER) FROM LOCATION GROUP BY CITY_NAME;",
        "question": "Select city name and minimum house number from location grouped by city name ",
        "tables": [
            "RESTAURANT",
            "GEOGRAPHIC",
            "LOCATION"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "city",
            "name",
            "and",
            "minimum",
            "house",
            "number",
            "from",
            "location",
            "grouped",
            "by",
            "city",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "CITY_NAME",
            ",",
            "MIN",
            "(",
            "HOUSE_NUMBER",
            ")",
            "FROM",
            "LOCATION",
            "GROUP",
            "BY",
            "CITY_NAME"
        ],
        "query_toks_no_value": [
            "select",
            "city_name",
            ",",
            "min",
            "(",
            "house_number",
            ")",
            "from",
            "location",
            "group",
            "by",
            "city_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__location__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__location.city_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__location.house_number__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__location.city_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "mountain_photos",
        "query": "SELECT Range, MIN(Height) FROM mountain GROUP BY Range;",
        "question": "Select range and minimum height from mountain grouped by range ",
        "tables": [
            "mountain",
            "camera_lens",
            "photos"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "range",
            "and",
            "minimum",
            "height",
            "from",
            "mountain",
            "grouped",
            "by",
            "range"
        ],
        "query_toks": [
            "SELECT",
            "Range",
            ",",
            "MIN",
            "(",
            "Height",
            ")",
            "FROM",
            "mountain",
            "GROUP",
            "BY",
            "Range"
        ],
        "query_toks_no_value": [
            "select",
            "range",
            ",",
            "min",
            "(",
            "height",
            ")",
            "from",
            "mountain",
            "group",
            "by",
            "range"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__mountain__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__mountain.range__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__mountain.height__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__mountain.range__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "mountain_photos",
        "query": "SELECT brand, MIN(max_aperture) FROM camera_lens GROUP BY brand;",
        "question": "Select brand and minimum max aperture from camera lens grouped by brand ",
        "tables": [
            "mountain",
            "camera_lens",
            "photos"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "brand",
            "and",
            "minimum",
            "max",
            "aperture",
            "from",
            "camera",
            "lens",
            "grouped",
            "by",
            "brand"
        ],
        "query_toks": [
            "SELECT",
            "brand",
            ",",
            "MIN",
            "(",
            "max_aperture",
            ")",
            "FROM",
            "camera_lens",
            "GROUP",
            "BY",
            "brand"
        ],
        "query_toks_no_value": [
            "select",
            "brand",
            ",",
            "min",
            "(",
            "max_aperture",
            ")",
            "from",
            "camera_lens",
            "group",
            "by",
            "brand"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__camera_lens__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__camera_lens.brand__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__camera_lens.max_aperture__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__camera_lens.brand__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "mountain_photos",
        "query": "SELECT color, MIN(camera_lens_id) FROM photos GROUP BY color;",
        "question": "Select color and minimum camera lens id from photos grouped by color ",
        "tables": [
            "mountain",
            "camera_lens",
            "photos"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "color",
            "and",
            "minimum",
            "camera",
            "lens",
            "id",
            "from",
            "photos",
            "grouped",
            "by",
            "color"
        ],
        "query_toks": [
            "SELECT",
            "color",
            ",",
            "MIN",
            "(",
            "camera_lens_id",
            ")",
            "FROM",
            "photos",
            "GROUP",
            "BY",
            "color"
        ],
        "query_toks_no_value": [
            "select",
            "color",
            ",",
            "min",
            "(",
            "camera_lens_id",
            ")",
            "from",
            "photos",
            "group",
            "by",
            "color"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__photos__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__photos.color__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__photos.camera_lens_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__photos.color__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "battle_death",
        "query": "SELECT location, MIN(id) FROM ship GROUP BY location;",
        "question": "Select location and minimum id from ship grouped by location ",
        "tables": [
            "ship",
            "battle",
            "death"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "location",
            "and",
            "minimum",
            "id",
            "from",
            "ship",
            "grouped",
            "by",
            "location"
        ],
        "query_toks": [
            "SELECT",
            "location",
            ",",
            "MIN",
            "(",
            "id",
            ")",
            "FROM",
            "ship",
            "GROUP",
            "BY",
            "location"
        ],
        "query_toks_no_value": [
            "select",
            "location",
            ",",
            "min",
            "(",
            "id",
            ")",
            "from",
            "ship",
            "group",
            "by",
            "location"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__ship__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__ship.location__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__ship.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__ship.location__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "battle_death",
        "query": "SELECT result, MAX(id) FROM battle GROUP BY result;",
        "question": "Select result and maximum id from battle grouped by result ",
        "tables": [
            "ship",
            "battle",
            "death"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "result",
            "and",
            "maximum",
            "id",
            "from",
            "battle",
            "grouped",
            "by",
            "result"
        ],
        "query_toks": [
            "SELECT",
            "result",
            ",",
            "MAX",
            "(",
            "id",
            ")",
            "FROM",
            "battle",
            "GROUP",
            "BY",
            "result"
        ],
        "query_toks_no_value": [
            "select",
            "result",
            ",",
            "max",
            "(",
            "id",
            ")",
            "from",
            "battle",
            "group",
            "by",
            "result"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__battle__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__battle.result__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__battle.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__battle.result__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "battle_death",
        "query": "SELECT note, MIN(injured) FROM death GROUP BY note;",
        "question": "Select note and minimum injured from death grouped by note ",
        "tables": [
            "ship",
            "battle",
            "death"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "note",
            "and",
            "minimum",
            "injured",
            "from",
            "death",
            "grouped",
            "by",
            "note"
        ],
        "query_toks": [
            "SELECT",
            "note",
            ",",
            "MIN",
            "(",
            "injured",
            ")",
            "FROM",
            "death",
            "GROUP",
            "BY",
            "note"
        ],
        "query_toks_no_value": [
            "select",
            "note",
            ",",
            "min",
            "(",
            "injured",
            ")",
            "from",
            "death",
            "group",
            "by",
            "note"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__death__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__death.note__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__death.injured__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__death.note__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "query": "SELECT document_status_code, MAX(document_id) FROM Documents GROUP BY document_status_code;",
        "question": "Select document status code and maximum document id from documents grouped by document status code ",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Document_Status",
            "Draft_Copies",
            "Documents",
            "Addresses",
            "Circulation_History",
            "Document_Drafts",
            "Documents_Mailed",
            "Ref_Shipping_Agents",
            "Employees"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "document",
            "status",
            "code",
            "and",
            "maximum",
            "document",
            "id",
            "from",
            "documents",
            "grouped",
            "by",
            "document",
            "status",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "document_status_code",
            ",",
            "MAX",
            "(",
            "document_id",
            ")",
            "FROM",
            "Documents",
            "GROUP",
            "BY",
            "document_status_code"
        ],
        "query_toks_no_value": [
            "select",
            "document_status_code",
            ",",
            "max",
            "(",
            "document_id",
            ")",
            "from",
            "documents",
            "group",
            "by",
            "document_status_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__documents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__documents.document_status_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__documents.document_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__documents.document_status_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "query": "SELECT address_details, MIN(address_id) FROM Addresses GROUP BY address_details;",
        "question": "Select address details and minimum address id from addresses grouped by address details ",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Document_Status",
            "Draft_Copies",
            "Documents",
            "Addresses",
            "Circulation_History",
            "Document_Drafts",
            "Documents_Mailed",
            "Ref_Shipping_Agents",
            "Employees"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "address",
            "details",
            "and",
            "minimum",
            "address",
            "id",
            "from",
            "addresses",
            "grouped",
            "by",
            "address",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "address_details",
            ",",
            "MIN",
            "(",
            "address_id",
            ")",
            "FROM",
            "Addresses",
            "GROUP",
            "BY",
            "address_details"
        ],
        "query_toks_no_value": [
            "select",
            "address_details",
            ",",
            "min",
            "(",
            "address_id",
            ")",
            "from",
            "addresses",
            "group",
            "by",
            "address_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__addresses.address_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__addresses.address_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__addresses.address_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "query": "SELECT draft_details, MIN(draft_number) FROM Document_Drafts GROUP BY draft_details;",
        "question": "Select draft details and minimum draft number from document drafts grouped by draft details ",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Document_Status",
            "Draft_Copies",
            "Documents",
            "Addresses",
            "Circulation_History",
            "Document_Drafts",
            "Documents_Mailed",
            "Ref_Shipping_Agents",
            "Employees"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "draft",
            "details",
            "and",
            "minimum",
            "draft",
            "number",
            "from",
            "document",
            "drafts",
            "grouped",
            "by",
            "draft",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "draft_details",
            ",",
            "MIN",
            "(",
            "draft_number",
            ")",
            "FROM",
            "Document_Drafts",
            "GROUP",
            "BY",
            "draft_details"
        ],
        "query_toks_no_value": [
            "select",
            "draft_details",
            ",",
            "min",
            "(",
            "draft_number",
            ")",
            "from",
            "document_drafts",
            "group",
            "by",
            "draft_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__document_drafts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__document_drafts.draft_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__document_drafts.draft_number__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__document_drafts.draft_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "query": "SELECT role_code, MAX(employee_id) FROM Employees GROUP BY role_code;",
        "question": "Select role code and maximum employee id from employees grouped by role code ",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Document_Status",
            "Draft_Copies",
            "Documents",
            "Addresses",
            "Circulation_History",
            "Document_Drafts",
            "Documents_Mailed",
            "Ref_Shipping_Agents",
            "Employees"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "role",
            "code",
            "and",
            "maximum",
            "employee",
            "id",
            "from",
            "employees",
            "grouped",
            "by",
            "role",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "role_code",
            ",",
            "MAX",
            "(",
            "employee_id",
            ")",
            "FROM",
            "Employees",
            "GROUP",
            "BY",
            "role_code"
        ],
        "query_toks_no_value": [
            "select",
            "role_code",
            ",",
            "max",
            "(",
            "employee_id",
            ")",
            "from",
            "employees",
            "group",
            "by",
            "role_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__employees__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__employees.role_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__employees.employee_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__employees.role_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_share_transactions",
        "query": "SELECT transaction_type_code, MIN(amount_of_transaction) FROM Transactions GROUP BY transaction_type_code;",
        "question": "Select transaction type code and minimum amount of transaction from transactions grouped by transaction type code ",
        "tables": [
            "Transactions",
            "Ref_Transaction_Types",
            "Purchases",
            "Investors",
            "Sales",
            "Lots",
            "Transactions_Lots"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "transaction",
            "type",
            "code",
            "and",
            "minimum",
            "amount",
            "of",
            "transaction",
            "from",
            "transactions",
            "grouped",
            "by",
            "transaction",
            "type",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "transaction_type_code",
            ",",
            "MIN",
            "(",
            "amount_of_transaction",
            ")",
            "FROM",
            "Transactions",
            "GROUP",
            "BY",
            "transaction_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "transaction_type_code",
            ",",
            "min",
            "(",
            "amount_of_transaction",
            ")",
            "from",
            "transactions",
            "group",
            "by",
            "transaction_type_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__transactions__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__transactions.transaction_type_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__transactions.amount_of_transaction__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__transactions.transaction_type_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_share_transactions",
        "query": "SELECT purchase_details, MIN(purchase_transaction_id) FROM Purchases GROUP BY purchase_details;",
        "question": "Select purchase details and minimum purchase transaction id from purchases grouped by purchase details ",
        "tables": [
            "Transactions",
            "Ref_Transaction_Types",
            "Purchases",
            "Investors",
            "Sales",
            "Lots",
            "Transactions_Lots"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "purchase",
            "details",
            "and",
            "minimum",
            "purchase",
            "transaction",
            "id",
            "from",
            "purchases",
            "grouped",
            "by",
            "purchase",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "purchase_details",
            ",",
            "MIN",
            "(",
            "purchase_transaction_id",
            ")",
            "FROM",
            "Purchases",
            "GROUP",
            "BY",
            "purchase_details"
        ],
        "query_toks_no_value": [
            "select",
            "purchase_details",
            ",",
            "min",
            "(",
            "purchase_transaction_id",
            ")",
            "from",
            "purchases",
            "group",
            "by",
            "purchase_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__purchases__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__purchases.purchase_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__purchases.purchase_transaction_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__purchases.purchase_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_share_transactions",
        "query": "SELECT Investor_details, MAX(investor_id) FROM Investors GROUP BY Investor_details;",
        "question": "Select investor details and maximum investor id from investors grouped by investor details ",
        "tables": [
            "Transactions",
            "Ref_Transaction_Types",
            "Purchases",
            "Investors",
            "Sales",
            "Lots",
            "Transactions_Lots"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "investor",
            "details",
            "and",
            "maximum",
            "investor",
            "id",
            "from",
            "investors",
            "grouped",
            "by",
            "investor",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "Investor_details",
            ",",
            "MAX",
            "(",
            "investor_id",
            ")",
            "FROM",
            "Investors",
            "GROUP",
            "BY",
            "Investor_details"
        ],
        "query_toks_no_value": [
            "select",
            "investor_details",
            ",",
            "max",
            "(",
            "investor_id",
            ")",
            "from",
            "investors",
            "group",
            "by",
            "investor_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__investors__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__investors.investor_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__investors.investor_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__investors.investor_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_share_transactions",
        "query": "SELECT sales_details, MIN(sales_transaction_id) FROM Sales GROUP BY sales_details;",
        "question": "Select sales details and minimum sales transaction id from sales grouped by sales details ",
        "tables": [
            "Transactions",
            "Ref_Transaction_Types",
            "Purchases",
            "Investors",
            "Sales",
            "Lots",
            "Transactions_Lots"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "sales",
            "details",
            "and",
            "minimum",
            "sales",
            "transaction",
            "id",
            "from",
            "sales",
            "grouped",
            "by",
            "sales",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "sales_details",
            ",",
            "MIN",
            "(",
            "sales_transaction_id",
            ")",
            "FROM",
            "Sales",
            "GROUP",
            "BY",
            "sales_details"
        ],
        "query_toks_no_value": [
            "select",
            "sales_details",
            ",",
            "min",
            "(",
            "sales_transaction_id",
            ")",
            "from",
            "sales",
            "group",
            "by",
            "sales_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__sales__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__sales.sales_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__sales.sales_transaction_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__sales.sales_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_share_transactions",
        "query": "SELECT lot_details, MIN(lot_id) FROM Lots GROUP BY lot_details;",
        "question": "Select lot details and minimum lot id from lots grouped by lot details ",
        "tables": [
            "Transactions",
            "Ref_Transaction_Types",
            "Purchases",
            "Investors",
            "Sales",
            "Lots",
            "Transactions_Lots"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "lot",
            "details",
            "and",
            "minimum",
            "lot",
            "id",
            "from",
            "lots",
            "grouped",
            "by",
            "lot",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "lot_details",
            ",",
            "MIN",
            "(",
            "lot_id",
            ")",
            "FROM",
            "Lots",
            "GROUP",
            "BY",
            "lot_details"
        ],
        "query_toks_no_value": [
            "select",
            "lot_details",
            ",",
            "min",
            "(",
            "lot_id",
            ")",
            "from",
            "lots",
            "group",
            "by",
            "lot_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__lots__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__lots.lot_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__lots.lot_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__lots.lot_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "apartment_rentals",
        "query": "SELECT apt_type_code, MAX(apt_id) FROM Apartments GROUP BY apt_type_code;",
        "question": "Select apartment type code and maximum apartment id from apartments grouped by apartment type code ",
        "tables": [
            "Apartments",
            "Apartment_Bookings",
            "View_Unit_Status",
            "Guests",
            "Apartment_Facilities",
            "Apartment_Buildings"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "apartment",
            "type",
            "code",
            "and",
            "maximum",
            "apartment",
            "id",
            "from",
            "apartments",
            "grouped",
            "by",
            "apartment",
            "type",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "apt_type_code",
            ",",
            "MAX",
            "(",
            "apt_id",
            ")",
            "FROM",
            "Apartments",
            "GROUP",
            "BY",
            "apt_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "apt_type_code",
            ",",
            "max",
            "(",
            "apt_id",
            ")",
            "from",
            "apartments",
            "group",
            "by",
            "apt_type_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__apartments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__apartments.apt_type_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__apartments.apt_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__apartments.apt_type_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "apartment_rentals",
        "query": "SELECT booking_status_code, MIN(guest_id) FROM Apartment_Bookings GROUP BY booking_status_code;",
        "question": "Select booking status code and minimum guest id from apartment bookings grouped by booking status code ",
        "tables": [
            "Apartments",
            "Apartment_Bookings",
            "View_Unit_Status",
            "Guests",
            "Apartment_Facilities",
            "Apartment_Buildings"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "booking",
            "status",
            "code",
            "and",
            "minimum",
            "guest",
            "id",
            "from",
            "apartment",
            "bookings",
            "grouped",
            "by",
            "booking",
            "status",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "booking_status_code",
            ",",
            "MIN",
            "(",
            "guest_id",
            ")",
            "FROM",
            "Apartment_Bookings",
            "GROUP",
            "BY",
            "booking_status_code"
        ],
        "query_toks_no_value": [
            "select",
            "booking_status_code",
            ",",
            "min",
            "(",
            "guest_id",
            ")",
            "from",
            "apartment_bookings",
            "group",
            "by",
            "booking_status_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__apartment_bookings__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__apartment_bookings.booking_status_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__apartment_bookings.guest_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__apartment_bookings.booking_status_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "apartment_rentals",
        "query": "SELECT guest_first_name, MIN(guest_id) FROM Guests GROUP BY guest_first_name;",
        "question": "Select guest first name and minimum guest id from guests grouped by guest first name ",
        "tables": [
            "Apartments",
            "Apartment_Bookings",
            "View_Unit_Status",
            "Guests",
            "Apartment_Facilities",
            "Apartment_Buildings"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "guest",
            "first",
            "name",
            "and",
            "minimum",
            "guest",
            "id",
            "from",
            "guests",
            "grouped",
            "by",
            "guest",
            "first",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "guest_first_name",
            ",",
            "MIN",
            "(",
            "guest_id",
            ")",
            "FROM",
            "Guests",
            "GROUP",
            "BY",
            "guest_first_name"
        ],
        "query_toks_no_value": [
            "select",
            "guest_first_name",
            ",",
            "min",
            "(",
            "guest_id",
            ")",
            "from",
            "guests",
            "group",
            "by",
            "guest_first_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__guests__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__guests.guest_first_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__guests.guest_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__guests.guest_first_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "apartment_rentals",
        "query": "SELECT facility_code, MAX(apt_id) FROM Apartment_Facilities GROUP BY facility_code;",
        "question": "Select facility code and maximum apartment id from apartment facilities grouped by facility code ",
        "tables": [
            "Apartments",
            "Apartment_Bookings",
            "View_Unit_Status",
            "Guests",
            "Apartment_Facilities",
            "Apartment_Buildings"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "facility",
            "code",
            "and",
            "maximum",
            "apartment",
            "id",
            "from",
            "apartment",
            "facilities",
            "grouped",
            "by",
            "facility",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "facility_code",
            ",",
            "MAX",
            "(",
            "apt_id",
            ")",
            "FROM",
            "Apartment_Facilities",
            "GROUP",
            "BY",
            "facility_code"
        ],
        "query_toks_no_value": [
            "select",
            "facility_code",
            ",",
            "max",
            "(",
            "apt_id",
            ")",
            "from",
            "apartment_facilities",
            "group",
            "by",
            "facility_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__apartment_facilities__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__apartment_facilities.facility_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__apartment_facilities.apt_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__apartment_facilities.facility_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "apartment_rentals",
        "query": "SELECT building_full_name, MAX(building_id) FROM Apartment_Buildings GROUP BY building_full_name;",
        "question": "Select building full name and maximum building id from apartment buildings grouped by building full name ",
        "tables": [
            "Apartments",
            "Apartment_Bookings",
            "View_Unit_Status",
            "Guests",
            "Apartment_Facilities",
            "Apartment_Buildings"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "building",
            "full",
            "name",
            "and",
            "maximum",
            "building",
            "id",
            "from",
            "apartment",
            "buildings",
            "grouped",
            "by",
            "building",
            "full",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "building_full_name",
            ",",
            "MAX",
            "(",
            "building_id",
            ")",
            "FROM",
            "Apartment_Buildings",
            "GROUP",
            "BY",
            "building_full_name"
        ],
        "query_toks_no_value": [
            "select",
            "building_full_name",
            ",",
            "max",
            "(",
            "building_id",
            ")",
            "from",
            "apartment_buildings",
            "group",
            "by",
            "building_full_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__apartment_buildings__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__apartment_buildings.building_full_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__apartment_buildings.building_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__apartment_buildings.building_full_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT other_details, MIN(degree_program_id) FROM Student_Enrolment GROUP BY other_details;",
        "question": "Select other details and minimum degree program id from student enrolment grouped by other details ",
        "tables": [
            "Transcript_Contents",
            "Student_Enrolment",
            "Courses",
            "Students",
            "Student_Enrolment_Courses",
            "Addresses",
            "Transcripts",
            "Sections",
            "Degree_Programs",
            "Semesters",
            "Departments"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "other",
            "details",
            "and",
            "minimum",
            "degree",
            "program",
            "id",
            "from",
            "student",
            "enrolment",
            "grouped",
            "by",
            "other",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "other_details",
            ",",
            "MIN",
            "(",
            "degree_program_id",
            ")",
            "FROM",
            "Student_Enrolment",
            "GROUP",
            "BY",
            "other_details"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            ",",
            "min",
            "(",
            "degree_program_id",
            ")",
            "from",
            "student_enrolment",
            "group",
            "by",
            "other_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student_enrolment__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student_enrolment.other_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__student_enrolment.degree_program_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__student_enrolment.other_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT course_name, MAX(course_id) FROM Courses GROUP BY course_name;",
        "question": "Select course name and maximum course id from courses grouped by course name ",
        "tables": [
            "Transcript_Contents",
            "Student_Enrolment",
            "Courses",
            "Students",
            "Student_Enrolment_Courses",
            "Addresses",
            "Transcripts",
            "Sections",
            "Degree_Programs",
            "Semesters",
            "Departments"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "course",
            "name",
            "and",
            "maximum",
            "course",
            "id",
            "from",
            "courses",
            "grouped",
            "by",
            "course",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "course_name",
            ",",
            "MAX",
            "(",
            "course_id",
            ")",
            "FROM",
            "Courses",
            "GROUP",
            "BY",
            "course_name"
        ],
        "query_toks_no_value": [
            "select",
            "course_name",
            ",",
            "max",
            "(",
            "course_id",
            ")",
            "from",
            "courses",
            "group",
            "by",
            "course_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__courses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__courses.course_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__courses.course_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__courses.course_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT middle_name, MIN(current_address_id) FROM Students GROUP BY middle_name;",
        "question": "Select middle name and minimum current address id from students grouped by middle name ",
        "tables": [
            "Transcript_Contents",
            "Student_Enrolment",
            "Courses",
            "Students",
            "Student_Enrolment_Courses",
            "Addresses",
            "Transcripts",
            "Sections",
            "Degree_Programs",
            "Semesters",
            "Departments"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "middle",
            "name",
            "and",
            "minimum",
            "current",
            "address",
            "id",
            "from",
            "students",
            "grouped",
            "by",
            "middle",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "middle_name",
            ",",
            "MIN",
            "(",
            "current_address_id",
            ")",
            "FROM",
            "Students",
            "GROUP",
            "BY",
            "middle_name"
        ],
        "query_toks_no_value": [
            "select",
            "middle_name",
            ",",
            "min",
            "(",
            "current_address_id",
            ")",
            "from",
            "students",
            "group",
            "by",
            "middle_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__students__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__students.middle_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__students.current_address_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__students.middle_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT line_1, MAX(address_id) FROM Addresses GROUP BY line_1;",
        "question": "Select line 1 and maximum address id from addresses grouped by line 1 ",
        "tables": [
            "Transcript_Contents",
            "Student_Enrolment",
            "Courses",
            "Students",
            "Student_Enrolment_Courses",
            "Addresses",
            "Transcripts",
            "Sections",
            "Degree_Programs",
            "Semesters",
            "Departments"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "line",
            "1",
            "and",
            "maximum",
            "address",
            "id",
            "from",
            "addresses",
            "grouped",
            "by",
            "line",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "line_1",
            ",",
            "MAX",
            "(",
            "address_id",
            ")",
            "FROM",
            "Addresses",
            "GROUP",
            "BY",
            "line_1"
        ],
        "query_toks_no_value": [
            "select",
            "line_1",
            ",",
            "max",
            "(",
            "address_id",
            ")",
            "from",
            "addresses",
            "group",
            "by",
            "line_1"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__addresses.line_1__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__addresses.address_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__addresses.line_1__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT other_details, MIN(transcript_id) FROM Transcripts GROUP BY other_details;",
        "question": "Select other details and minimum transcript id from transcripts grouped by other details ",
        "tables": [
            "Transcript_Contents",
            "Student_Enrolment",
            "Courses",
            "Students",
            "Student_Enrolment_Courses",
            "Addresses",
            "Transcripts",
            "Sections",
            "Degree_Programs",
            "Semesters",
            "Departments"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "other",
            "details",
            "and",
            "minimum",
            "transcript",
            "id",
            "from",
            "transcripts",
            "grouped",
            "by",
            "other",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "other_details",
            ",",
            "MIN",
            "(",
            "transcript_id",
            ")",
            "FROM",
            "Transcripts",
            "GROUP",
            "BY",
            "other_details"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            ",",
            "min",
            "(",
            "transcript_id",
            ")",
            "from",
            "transcripts",
            "group",
            "by",
            "other_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__transcripts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__transcripts.other_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__transcripts.transcript_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__transcripts.other_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT section_name, MAX(course_id) FROM Sections GROUP BY section_name;",
        "question": "Select section name and maximum course id from sections grouped by section name ",
        "tables": [
            "Transcript_Contents",
            "Student_Enrolment",
            "Courses",
            "Students",
            "Student_Enrolment_Courses",
            "Addresses",
            "Transcripts",
            "Sections",
            "Degree_Programs",
            "Semesters",
            "Departments"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "section",
            "name",
            "and",
            "maximum",
            "course",
            "id",
            "from",
            "sections",
            "grouped",
            "by",
            "section",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "section_name",
            ",",
            "MAX",
            "(",
            "course_id",
            ")",
            "FROM",
            "Sections",
            "GROUP",
            "BY",
            "section_name"
        ],
        "query_toks_no_value": [
            "select",
            "section_name",
            ",",
            "max",
            "(",
            "course_id",
            ")",
            "from",
            "sections",
            "group",
            "by",
            "section_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__sections__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__sections.section_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__sections.course_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__sections.section_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT other_details, MIN(department_id) FROM Degree_Programs GROUP BY other_details;",
        "question": "Select other details and minimum department id from degree programs grouped by other details ",
        "tables": [
            "Transcript_Contents",
            "Student_Enrolment",
            "Courses",
            "Students",
            "Student_Enrolment_Courses",
            "Addresses",
            "Transcripts",
            "Sections",
            "Degree_Programs",
            "Semesters",
            "Departments"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "other",
            "details",
            "and",
            "minimum",
            "department",
            "id",
            "from",
            "degree",
            "programs",
            "grouped",
            "by",
            "other",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "other_details",
            ",",
            "MIN",
            "(",
            "department_id",
            ")",
            "FROM",
            "Degree_Programs",
            "GROUP",
            "BY",
            "other_details"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            ",",
            "min",
            "(",
            "department_id",
            ")",
            "from",
            "degree_programs",
            "group",
            "by",
            "other_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__degree_programs__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__degree_programs.other_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__degree_programs.department_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__degree_programs.other_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT semester_name, MIN(semester_id) FROM Semesters GROUP BY semester_name;",
        "question": "Select semester name and minimum semester id from semesters grouped by semester name ",
        "tables": [
            "Transcript_Contents",
            "Student_Enrolment",
            "Courses",
            "Students",
            "Student_Enrolment_Courses",
            "Addresses",
            "Transcripts",
            "Sections",
            "Degree_Programs",
            "Semesters",
            "Departments"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "semester",
            "name",
            "and",
            "minimum",
            "semester",
            "id",
            "from",
            "semesters",
            "grouped",
            "by",
            "semester",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "semester_name",
            ",",
            "MIN",
            "(",
            "semester_id",
            ")",
            "FROM",
            "Semesters",
            "GROUP",
            "BY",
            "semester_name"
        ],
        "query_toks_no_value": [
            "select",
            "semester_name",
            ",",
            "min",
            "(",
            "semester_id",
            ")",
            "from",
            "semesters",
            "group",
            "by",
            "semester_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__semesters__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__semesters.semester_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__semesters.semester_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__semesters.semester_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT other_details, MIN(department_id) FROM Departments GROUP BY other_details;",
        "question": "Select other details and minimum department id from departments grouped by other details ",
        "tables": [
            "Transcript_Contents",
            "Student_Enrolment",
            "Courses",
            "Students",
            "Student_Enrolment_Courses",
            "Addresses",
            "Transcripts",
            "Sections",
            "Degree_Programs",
            "Semesters",
            "Departments"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "other",
            "details",
            "and",
            "minimum",
            "department",
            "id",
            "from",
            "departments",
            "grouped",
            "by",
            "other",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "other_details",
            ",",
            "MIN",
            "(",
            "department_id",
            ")",
            "FROM",
            "Departments",
            "GROUP",
            "BY",
            "other_details"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            ",",
            "min",
            "(",
            "department_id",
            ")",
            "from",
            "departments",
            "group",
            "by",
            "other_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__departments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__departments.other_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__departments.department_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__departments.other_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "query": "SELECT Project_Details, MAX(Project_ID) FROM Projects GROUP BY Project_Details;",
        "question": "Select project details and maximum project id from projects grouped by project details ",
        "tables": [
            "Ref_Document_Types",
            "Projects",
            "Documents",
            "Ref_Budget_Codes",
            "Accounts",
            "Statements",
            "Documents_with_Expenses"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "project",
            "details",
            "and",
            "maximum",
            "project",
            "id",
            "from",
            "projects",
            "grouped",
            "by",
            "project",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "Project_Details",
            ",",
            "MAX",
            "(",
            "Project_ID",
            ")",
            "FROM",
            "Projects",
            "GROUP",
            "BY",
            "Project_Details"
        ],
        "query_toks_no_value": [
            "select",
            "project_details",
            ",",
            "max",
            "(",
            "project_id",
            ")",
            "from",
            "projects",
            "group",
            "by",
            "project_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__projects__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__projects.project_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__projects.project_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__projects.project_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "query": "SELECT Document_Name, MIN(Document_ID) FROM Documents GROUP BY Document_Name;",
        "question": "Select document name and minimum document id from documents grouped by document name ",
        "tables": [
            "Ref_Document_Types",
            "Projects",
            "Documents",
            "Ref_Budget_Codes",
            "Accounts",
            "Statements",
            "Documents_with_Expenses"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "document",
            "name",
            "and",
            "minimum",
            "document",
            "id",
            "from",
            "documents",
            "grouped",
            "by",
            "document",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Document_Name",
            ",",
            "MIN",
            "(",
            "Document_ID",
            ")",
            "FROM",
            "Documents",
            "GROUP",
            "BY",
            "Document_Name"
        ],
        "query_toks_no_value": [
            "select",
            "document_name",
            ",",
            "min",
            "(",
            "document_id",
            ")",
            "from",
            "documents",
            "group",
            "by",
            "document_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__documents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__documents.document_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__documents.document_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__documents.document_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "query": "SELECT Account_Details, MIN(Statement_ID) FROM Accounts GROUP BY Account_Details;",
        "question": "Select account details and minimum statement id from accounts grouped by account details ",
        "tables": [
            "Ref_Document_Types",
            "Projects",
            "Documents",
            "Ref_Budget_Codes",
            "Accounts",
            "Statements",
            "Documents_with_Expenses"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "account",
            "details",
            "and",
            "minimum",
            "statement",
            "id",
            "from",
            "accounts",
            "grouped",
            "by",
            "account",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "Account_Details",
            ",",
            "MIN",
            "(",
            "Statement_ID",
            ")",
            "FROM",
            "Accounts",
            "GROUP",
            "BY",
            "Account_Details"
        ],
        "query_toks_no_value": [
            "select",
            "account_details",
            ",",
            "min",
            "(",
            "statement_id",
            ")",
            "from",
            "accounts",
            "group",
            "by",
            "account_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__accounts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__accounts.account_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__accounts.statement_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__accounts.account_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "query": "SELECT Statement_Details, MAX(Statement_ID) FROM Statements GROUP BY Statement_Details;",
        "question": "Select statement details and maximum statement id from statements grouped by statement details ",
        "tables": [
            "Ref_Document_Types",
            "Projects",
            "Documents",
            "Ref_Budget_Codes",
            "Accounts",
            "Statements",
            "Documents_with_Expenses"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "statement",
            "details",
            "and",
            "maximum",
            "statement",
            "id",
            "from",
            "statements",
            "grouped",
            "by",
            "statement",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "Statement_Details",
            ",",
            "MAX",
            "(",
            "Statement_ID",
            ")",
            "FROM",
            "Statements",
            "GROUP",
            "BY",
            "Statement_Details"
        ],
        "query_toks_no_value": [
            "select",
            "statement_details",
            ",",
            "max",
            "(",
            "statement_id",
            ")",
            "from",
            "statements",
            "group",
            "by",
            "statement_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__statements__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__statements.statement_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__statements.statement_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__statements.statement_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "query": "SELECT Budget_Type_Code, MAX(Document_ID) FROM Documents_with_Expenses GROUP BY Budget_Type_Code;",
        "question": "Select budget type code and maximum document id from documents with expenses grouped by budget type code ",
        "tables": [
            "Ref_Document_Types",
            "Projects",
            "Documents",
            "Ref_Budget_Codes",
            "Accounts",
            "Statements",
            "Documents_with_Expenses"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "budget",
            "type",
            "code",
            "and",
            "maximum",
            "document",
            "id",
            "from",
            "documents",
            "with",
            "expenses",
            "grouped",
            "by",
            "budget",
            "type",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "Budget_Type_Code",
            ",",
            "MAX",
            "(",
            "Document_ID",
            ")",
            "FROM",
            "Documents_with_Expenses",
            "GROUP",
            "BY",
            "Budget_Type_Code"
        ],
        "query_toks_no_value": [
            "select",
            "budget_type_code",
            ",",
            "max",
            "(",
            "document_id",
            ")",
            "from",
            "documents_with_expenses",
            "group",
            "by",
            "budget_type_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__documents_with_expenses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__documents_with_expenses.budget_type_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__documents_with_expenses.document_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__documents_with_expenses.budget_type_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "ship_mission",
        "query": "SELECT Type, MAX(Tonnage) FROM ship GROUP BY Type;",
        "question": "Select type and maximum tonnage from ship grouped by type ",
        "tables": [
            "ship",
            "mission"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "type",
            "and",
            "maximum",
            "tonnage",
            "from",
            "ship",
            "grouped",
            "by",
            "type"
        ],
        "query_toks": [
            "SELECT",
            "Type",
            ",",
            "MAX",
            "(",
            "Tonnage",
            ")",
            "FROM",
            "ship",
            "GROUP",
            "BY",
            "Type"
        ],
        "query_toks_no_value": [
            "select",
            "type",
            ",",
            "max",
            "(",
            "tonnage",
            ")",
            "from",
            "ship",
            "group",
            "by",
            "type"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__ship__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__ship.type__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__ship.tonnage__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__ship.type__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "ship_mission",
        "query": "SELECT Location, MIN(Ship_ID) FROM mission GROUP BY Location;",
        "question": "Select location and minimum ship id from mission grouped by location ",
        "tables": [
            "ship",
            "mission"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "location",
            "and",
            "minimum",
            "ship",
            "id",
            "from",
            "mission",
            "grouped",
            "by",
            "location"
        ],
        "query_toks": [
            "SELECT",
            "Location",
            ",",
            "MIN",
            "(",
            "Ship_ID",
            ")",
            "FROM",
            "mission",
            "GROUP",
            "BY",
            "Location"
        ],
        "query_toks_no_value": [
            "select",
            "location",
            ",",
            "min",
            "(",
            "ship_id",
            ")",
            "from",
            "mission",
            "group",
            "by",
            "location"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__mission__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__mission.location__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__mission.ship_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__mission.location__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_office",
        "query": "SELECT Market_Value_billion, MIN(id) FROM Companies GROUP BY Market_Value_billion;",
        "question": "Select market value billion and minimum id from companies grouped by market value billion ",
        "tables": [
            "Office_locations",
            "Companies",
            "buildings"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "market",
            "value",
            "billion",
            "and",
            "minimum",
            "id",
            "from",
            "companies",
            "grouped",
            "by",
            "market",
            "value",
            "billion"
        ],
        "query_toks": [
            "SELECT",
            "Market_Value_billion",
            ",",
            "MIN",
            "(",
            "id",
            ")",
            "FROM",
            "Companies",
            "GROUP",
            "BY",
            "Market_Value_billion"
        ],
        "query_toks_no_value": [
            "select",
            "market_value_billion",
            ",",
            "min",
            "(",
            "id",
            ")",
            "from",
            "companies",
            "group",
            "by",
            "market_value_billion"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__companies__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__companies.market_value_billion__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__companies.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__companies.market_value_billion__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_office",
        "query": "SELECT Status, MIN(id) FROM buildings GROUP BY Status;",
        "question": "Select status and minimum id from buildings grouped by status ",
        "tables": [
            "Office_locations",
            "Companies",
            "buildings"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "status",
            "and",
            "minimum",
            "id",
            "from",
            "buildings",
            "grouped",
            "by",
            "status"
        ],
        "query_toks": [
            "SELECT",
            "Status",
            ",",
            "MIN",
            "(",
            "id",
            ")",
            "FROM",
            "buildings",
            "GROUP",
            "BY",
            "Status"
        ],
        "query_toks_no_value": [
            "select",
            "status",
            ",",
            "min",
            "(",
            "id",
            ")",
            "from",
            "buildings",
            "group",
            "by",
            "status"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__buildings__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__buildings.status__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__buildings.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__buildings.status__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_software_problems",
        "query": "SELECT staff_first_name, MIN(staff_id) FROM Staff GROUP BY staff_first_name;",
        "question": "Select staff first name and minimum staff id from staff grouped by staff first name ",
        "tables": [
            "Staff",
            "Product",
            "Problem_Log",
            "Problems",
            "Problem_Category_Codes",
            "Problem_Status_Codes"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "staff",
            "first",
            "name",
            "and",
            "minimum",
            "staff",
            "id",
            "from",
            "staff",
            "grouped",
            "by",
            "staff",
            "first",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "staff_first_name",
            ",",
            "MIN",
            "(",
            "staff_id",
            ")",
            "FROM",
            "Staff",
            "GROUP",
            "BY",
            "staff_first_name"
        ],
        "query_toks_no_value": [
            "select",
            "staff_first_name",
            ",",
            "min",
            "(",
            "staff_id",
            ")",
            "from",
            "staff",
            "group",
            "by",
            "staff_first_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__staff__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__staff.staff_first_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__staff.staff_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__staff.staff_first_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_software_problems",
        "query": "SELECT product_details, MIN(product_id) FROM Product GROUP BY product_details;",
        "question": "Select product details and minimum product id from product grouped by product details ",
        "tables": [
            "Staff",
            "Product",
            "Problem_Log",
            "Problems",
            "Problem_Category_Codes",
            "Problem_Status_Codes"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "product",
            "details",
            "and",
            "minimum",
            "product",
            "id",
            "from",
            "product",
            "grouped",
            "by",
            "product",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "product_details",
            ",",
            "MIN",
            "(",
            "product_id",
            ")",
            "FROM",
            "Product",
            "GROUP",
            "BY",
            "product_details"
        ],
        "query_toks_no_value": [
            "select",
            "product_details",
            ",",
            "min",
            "(",
            "product_id",
            ")",
            "from",
            "product",
            "group",
            "by",
            "product_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__product__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__product.product_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__product.product_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__product.product_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_software_problems",
        "query": "SELECT other_log_details, MAX(assigned_to_staff_id) FROM Problem_Log GROUP BY other_log_details;",
        "question": "Select other log details and maximum assigned to staff id from problem log grouped by other log details ",
        "tables": [
            "Staff",
            "Product",
            "Problem_Log",
            "Problems",
            "Problem_Category_Codes",
            "Problem_Status_Codes"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "other",
            "log",
            "details",
            "and",
            "maximum",
            "assigned",
            "to",
            "staff",
            "id",
            "from",
            "problem",
            "log",
            "grouped",
            "by",
            "other",
            "log",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "other_log_details",
            ",",
            "MAX",
            "(",
            "assigned_to_staff_id",
            ")",
            "FROM",
            "Problem_Log",
            "GROUP",
            "BY",
            "other_log_details"
        ],
        "query_toks_no_value": [
            "select",
            "other_log_details",
            ",",
            "max",
            "(",
            "assigned_to_staff_id",
            ")",
            "from",
            "problem_log",
            "group",
            "by",
            "other_log_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__problem_log__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__problem_log.other_log_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__problem_log.assigned_to_staff_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__problem_log.other_log_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_software_problems",
        "query": "SELECT problem_description, MIN(problem_id) FROM Problems GROUP BY problem_description;",
        "question": "Select problem description and minimum problem id from problems grouped by problem description ",
        "tables": [
            "Staff",
            "Product",
            "Problem_Log",
            "Problems",
            "Problem_Category_Codes",
            "Problem_Status_Codes"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "problem",
            "description",
            "and",
            "minimum",
            "problem",
            "id",
            "from",
            "problems",
            "grouped",
            "by",
            "problem",
            "description"
        ],
        "query_toks": [
            "SELECT",
            "problem_description",
            ",",
            "MIN",
            "(",
            "problem_id",
            ")",
            "FROM",
            "Problems",
            "GROUP",
            "BY",
            "problem_description"
        ],
        "query_toks_no_value": [
            "select",
            "problem_description",
            ",",
            "min",
            "(",
            "problem_id",
            ")",
            "from",
            "problems",
            "group",
            "by",
            "problem_description"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__problems__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__problems.problem_description__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__problems.problem_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__problems.problem_description__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_gen_characteristics",
        "query": "SELECT characteristic_name, MAX(characteristic_id) FROM Characteristics GROUP BY characteristic_name;",
        "question": "Select characteristic name and maximum characteristic id from characteristics grouped by characteristic name ",
        "tables": [
            "Ref_Colors",
            "Characteristics",
            "Products",
            "Ref_Characteristic_Types",
            "Product_Characteristics",
            "Ref_Product_Categories"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "characteristic",
            "name",
            "and",
            "maximum",
            "characteristic",
            "id",
            "from",
            "characteristics",
            "grouped",
            "by",
            "characteristic",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "characteristic_name",
            ",",
            "MAX",
            "(",
            "characteristic_id",
            ")",
            "FROM",
            "Characteristics",
            "GROUP",
            "BY",
            "characteristic_name"
        ],
        "query_toks_no_value": [
            "select",
            "characteristic_name",
            ",",
            "max",
            "(",
            "characteristic_id",
            ")",
            "from",
            "characteristics",
            "group",
            "by",
            "characteristic_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__characteristics__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__characteristics.characteristic_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__characteristics.characteristic_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__characteristics.characteristic_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_gen_characteristics",
        "query": "SELECT product_description, MIN(product_id) FROM Products GROUP BY product_description;",
        "question": "Select product description and minimum product id from products grouped by product description ",
        "tables": [
            "Ref_Colors",
            "Characteristics",
            "Products",
            "Ref_Characteristic_Types",
            "Product_Characteristics",
            "Ref_Product_Categories"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "product",
            "description",
            "and",
            "minimum",
            "product",
            "id",
            "from",
            "products",
            "grouped",
            "by",
            "product",
            "description"
        ],
        "query_toks": [
            "SELECT",
            "product_description",
            ",",
            "MIN",
            "(",
            "product_id",
            ")",
            "FROM",
            "Products",
            "GROUP",
            "BY",
            "product_description"
        ],
        "query_toks_no_value": [
            "select",
            "product_description",
            ",",
            "min",
            "(",
            "product_id",
            ")",
            "from",
            "products",
            "group",
            "by",
            "product_description"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products.product_description__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__products.product_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__products.product_description__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_gen_characteristics",
        "query": "SELECT product_characteristic_value, MAX(product_id) FROM Product_Characteristics GROUP BY product_characteristic_value;",
        "question": "Select product characteristic value and maximum product id from product characteristics grouped by product characteristic value ",
        "tables": [
            "Ref_Colors",
            "Characteristics",
            "Products",
            "Ref_Characteristic_Types",
            "Product_Characteristics",
            "Ref_Product_Categories"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "product",
            "characteristic",
            "value",
            "and",
            "maximum",
            "product",
            "id",
            "from",
            "product",
            "characteristics",
            "grouped",
            "by",
            "product",
            "characteristic",
            "value"
        ],
        "query_toks": [
            "SELECT",
            "product_characteristic_value",
            ",",
            "MAX",
            "(",
            "product_id",
            ")",
            "FROM",
            "Product_Characteristics",
            "GROUP",
            "BY",
            "product_characteristic_value"
        ],
        "query_toks_no_value": [
            "select",
            "product_characteristic_value",
            ",",
            "max",
            "(",
            "product_id",
            ")",
            "from",
            "product_characteristics",
            "group",
            "by",
            "product_characteristic_value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__product_characteristics__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__product_characteristics.product_characteristic_value__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__product_characteristics.product_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__product_characteristics.product_characteristic_value__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "coffee_shop",
        "query": "SELECT Address, MIN(Age) FROM member GROUP BY Address;",
        "question": "Select address and minimum age from member grouped by address ",
        "tables": [
            "happy_hour_member",
            "member",
            "shop",
            "happy_hour"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "address",
            "and",
            "minimum",
            "age",
            "from",
            "member",
            "grouped",
            "by",
            "address"
        ],
        "query_toks": [
            "SELECT",
            "Address",
            ",",
            "MIN",
            "(",
            "Age",
            ")",
            "FROM",
            "member",
            "GROUP",
            "BY",
            "Address"
        ],
        "query_toks_no_value": [
            "select",
            "address",
            ",",
            "min",
            "(",
            "age",
            ")",
            "from",
            "member",
            "group",
            "by",
            "address"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__member__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__member.address__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__member.age__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__member.address__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "coffee_shop",
        "query": "SELECT Num_of_staff, MAX(Score) FROM shop GROUP BY Num_of_staff;",
        "question": "Select num of staff and maximum score from shop grouped by num of staff ",
        "tables": [
            "happy_hour_member",
            "member",
            "shop",
            "happy_hour"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "num",
            "of",
            "staff",
            "and",
            "maximum",
            "score",
            "from",
            "shop",
            "grouped",
            "by",
            "num",
            "of",
            "staff"
        ],
        "query_toks": [
            "SELECT",
            "Num_of_staff",
            ",",
            "MAX",
            "(",
            "Score",
            ")",
            "FROM",
            "shop",
            "GROUP",
            "BY",
            "Num_of_staff"
        ],
        "query_toks_no_value": [
            "select",
            "num_of_staff",
            ",",
            "max",
            "(",
            "score",
            ")",
            "from",
            "shop",
            "group",
            "by",
            "num_of_staff"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__shop__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__shop.num_of_staff__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__shop.score__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__shop.num_of_staff__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "coffee_shop",
        "query": "SELECT Month, MIN(Shop_ID) FROM happy_hour GROUP BY Month;",
        "question": "Select month and minimum shop id from happy hour grouped by month ",
        "tables": [
            "happy_hour_member",
            "member",
            "shop",
            "happy_hour"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "month",
            "and",
            "minimum",
            "shop",
            "id",
            "from",
            "happy",
            "hour",
            "grouped",
            "by",
            "month"
        ],
        "query_toks": [
            "SELECT",
            "Month",
            ",",
            "MIN",
            "(",
            "Shop_ID",
            ")",
            "FROM",
            "happy_hour",
            "GROUP",
            "BY",
            "Month"
        ],
        "query_toks_no_value": [
            "select",
            "month",
            ",",
            "min",
            "(",
            "shop_id",
            ")",
            "from",
            "happy_hour",
            "group",
            "by",
            "month"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__happy_hour__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__happy_hour.month__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__happy_hour.shop_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__happy_hour.month__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "riding_club",
        "query": "SELECT Club_name, MIN(Club_ID) FROM club GROUP BY Club_name;",
        "question": "Select club name and minimum club id from club grouped by club name ",
        "tables": [
            "club",
            "player",
            "coach",
            "match_result",
            "player_coach"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "club",
            "name",
            "and",
            "minimum",
            "club",
            "id",
            "from",
            "club",
            "grouped",
            "by",
            "club",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Club_name",
            ",",
            "MIN",
            "(",
            "Club_ID",
            ")",
            "FROM",
            "club",
            "GROUP",
            "BY",
            "Club_name"
        ],
        "query_toks_no_value": [
            "select",
            "club_name",
            ",",
            "min",
            "(",
            "club_id",
            ")",
            "from",
            "club",
            "group",
            "by",
            "club_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__club__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__club.club_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__club.club_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__club.club_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "riding_club",
        "query": "SELECT Residence, MAX(Player_ID) FROM player GROUP BY Residence;",
        "question": "Select residence and maximum player id from player grouped by residence ",
        "tables": [
            "club",
            "player",
            "coach",
            "match_result",
            "player_coach"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "residence",
            "and",
            "maximum",
            "player",
            "id",
            "from",
            "player",
            "grouped",
            "by",
            "residence"
        ],
        "query_toks": [
            "SELECT",
            "Residence",
            ",",
            "MAX",
            "(",
            "Player_ID",
            ")",
            "FROM",
            "player",
            "GROUP",
            "BY",
            "Residence"
        ],
        "query_toks_no_value": [
            "select",
            "residence",
            ",",
            "max",
            "(",
            "player_id",
            ")",
            "from",
            "player",
            "group",
            "by",
            "residence"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__player__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__player.residence__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__player.player_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__player.residence__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "riding_club",
        "query": "SELECT Coach_name, MAX(Club_ID) FROM coach GROUP BY Coach_name;",
        "question": "Select player name and maximum club id from coach grouped by player name ",
        "tables": [
            "club",
            "player",
            "coach",
            "match_result",
            "player_coach"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "player",
            "name",
            "and",
            "maximum",
            "club",
            "id",
            "from",
            "coach",
            "grouped",
            "by",
            "player",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Coach_name",
            ",",
            "MAX",
            "(",
            "Club_ID",
            ")",
            "FROM",
            "coach",
            "GROUP",
            "BY",
            "Coach_name"
        ],
        "query_toks_no_value": [
            "select",
            "coach_name",
            ",",
            "max",
            "(",
            "club_id",
            ")",
            "from",
            "coach",
            "group",
            "by",
            "coach_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__coach__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__coach.coach_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__coach.club_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__coach.coach_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_card_transactions",
        "query": "SELECT card_type_code, MIN(customer_id) FROM Customers_Cards GROUP BY card_type_code;",
        "question": "Select card type code and minimum customer id from customers cards grouped by card type code ",
        "tables": [
            "Customers_Cards",
            "Customers",
            "Financial_Transactions",
            "Accounts"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "card",
            "type",
            "code",
            "and",
            "minimum",
            "customer",
            "id",
            "from",
            "customers",
            "cards",
            "grouped",
            "by",
            "card",
            "type",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "card_type_code",
            ",",
            "MIN",
            "(",
            "customer_id",
            ")",
            "FROM",
            "Customers_Cards",
            "GROUP",
            "BY",
            "card_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "card_type_code",
            ",",
            "min",
            "(",
            "customer_id",
            ")",
            "from",
            "customers_cards",
            "group",
            "by",
            "card_type_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers_cards__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers_cards.card_type_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__customers_cards.customer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customers_cards.card_type_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_card_transactions",
        "query": "SELECT other_customer_details, MAX(customer_id) FROM Customers GROUP BY other_customer_details;",
        "question": "Select other customer details and maximum customer id from customers grouped by other customer details ",
        "tables": [
            "Customers_Cards",
            "Customers",
            "Financial_Transactions",
            "Accounts"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "other",
            "customer",
            "details",
            "and",
            "maximum",
            "customer",
            "id",
            "from",
            "customers",
            "grouped",
            "by",
            "other",
            "customer",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "other_customer_details",
            ",",
            "MAX",
            "(",
            "customer_id",
            ")",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "other_customer_details"
        ],
        "query_toks_no_value": [
            "select",
            "other_customer_details",
            ",",
            "max",
            "(",
            "customer_id",
            ")",
            "from",
            "customers",
            "group",
            "by",
            "other_customer_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.other_customer_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customers.other_customer_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_card_transactions",
        "query": "SELECT transaction_type, MAX(transaction_id) FROM Financial_Transactions GROUP BY transaction_type;",
        "question": "Select transaction type and maximum transaction id from financial transactions grouped by transaction type ",
        "tables": [
            "Customers_Cards",
            "Customers",
            "Financial_Transactions",
            "Accounts"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "transaction",
            "type",
            "and",
            "maximum",
            "transaction",
            "id",
            "from",
            "financial",
            "transactions",
            "grouped",
            "by",
            "transaction",
            "type"
        ],
        "query_toks": [
            "SELECT",
            "transaction_type",
            ",",
            "MAX",
            "(",
            "transaction_id",
            ")",
            "FROM",
            "Financial_Transactions",
            "GROUP",
            "BY",
            "transaction_type"
        ],
        "query_toks_no_value": [
            "select",
            "transaction_type",
            ",",
            "max",
            "(",
            "transaction_id",
            ")",
            "from",
            "financial_transactions",
            "group",
            "by",
            "transaction_type"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__financial_transactions__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__financial_transactions.transaction_type__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__financial_transactions.transaction_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__financial_transactions.transaction_type__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_card_transactions",
        "query": "SELECT other_account_details, MIN(account_id) FROM Accounts GROUP BY other_account_details;",
        "question": "Select other account details and minimum account id from accounts grouped by other account details ",
        "tables": [
            "Customers_Cards",
            "Customers",
            "Financial_Transactions",
            "Accounts"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "other",
            "account",
            "details",
            "and",
            "minimum",
            "account",
            "id",
            "from",
            "accounts",
            "grouped",
            "by",
            "other",
            "account",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "other_account_details",
            ",",
            "MIN",
            "(",
            "account_id",
            ")",
            "FROM",
            "Accounts",
            "GROUP",
            "BY",
            "other_account_details"
        ],
        "query_toks_no_value": [
            "select",
            "other_account_details",
            ",",
            "min",
            "(",
            "account_id",
            ")",
            "from",
            "accounts",
            "group",
            "by",
            "other_account_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__accounts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__accounts.other_account_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__accounts.account_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__accounts.other_account_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "county_public_safety",
        "query": "SELECT Location, MIN(County_ID) FROM county_public_safety GROUP BY Location;",
        "question": "Select location and minimum county id from county public safety grouped by location ",
        "tables": [
            "county_public_safety",
            "city"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "location",
            "and",
            "minimum",
            "county",
            "id",
            "from",
            "county",
            "public",
            "safety",
            "grouped",
            "by",
            "location"
        ],
        "query_toks": [
            "SELECT",
            "Location",
            ",",
            "MIN",
            "(",
            "County_ID",
            ")",
            "FROM",
            "county_public_safet",
            "(",
            "county_public_safet",
            ")",
            "GROUP",
            "BY",
            "Location"
        ],
        "query_toks_no_value": [
            "select",
            "location",
            ",",
            "min",
            "(",
            "county_id",
            ")",
            "from",
            "county_public_safet",
            "(",
            "county_public_safet",
            ")",
            "group",
            "by",
            "location"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__county_public_safety__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__county_public_safety.location__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__county_public_safety.county_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__county_public_safety.location__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "county_public_safety",
        "query": "SELECT Name, MAX(Multiracial) FROM city GROUP BY Name;",
        "question": "Select name and maximum multiracial from city grouped by name ",
        "tables": [
            "county_public_safety",
            "city"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "maximum",
            "multiracial",
            "from",
            "city",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "MAX",
            "(",
            "Multiracial",
            ")",
            "FROM",
            "city",
            "GROUP",
            "BY",
            "Name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "max",
            "(",
            "multiracial",
            ")",
            "from",
            "city",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__city__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__city.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__city.multiracial__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__city.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "performance_attendance",
        "query": "SELECT Host, MIN(Performance_ID) FROM performance GROUP BY Host;",
        "question": "Select host and minimum performance id from performance grouped by host ",
        "tables": [
            "member",
            "member_attendance",
            "performance"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "host",
            "and",
            "minimum",
            "performance",
            "id",
            "from",
            "performance",
            "grouped",
            "by",
            "host"
        ],
        "query_toks": [
            "SELECT",
            "Host",
            ",",
            "MIN",
            "(",
            "Performance_ID",
            ")",
            "FROM",
            "performance",
            "GROUP",
            "BY",
            "Host"
        ],
        "query_toks_no_value": [
            "select",
            "host",
            ",",
            "min",
            "(",
            "performance_id",
            ")",
            "from",
            "performance",
            "group",
            "by",
            "host"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__performance__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__performance.host__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__performance.performance_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__performance.host__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "club_1",
        "query": "SELECT LName, MAX(StuID) FROM Student GROUP BY LName;",
        "question": "Select last name and maximum student id from student grouped by last name ",
        "tables": [
            "Student",
            "Member_of_club",
            "Club"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "last",
            "name",
            "and",
            "maximum",
            "student",
            "id",
            "from",
            "student",
            "grouped",
            "by",
            "last",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "LName",
            ",",
            "MAX",
            "(",
            "StuID",
            ")",
            "FROM",
            "Student",
            "GROUP",
            "BY",
            "LName"
        ],
        "query_toks_no_value": [
            "select",
            "lname",
            ",",
            "max",
            "(",
            "stuid",
            ")",
            "from",
            "student",
            "group",
            "by",
            "lname"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.lname__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__student.stuid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__student.lname__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "club_1",
        "query": "SELECT Position, MAX(StuID) FROM Member_of_club GROUP BY Position;",
        "question": "Select position and maximum student id from member of club grouped by position ",
        "tables": [
            "Student",
            "Member_of_club",
            "Club"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "position",
            "and",
            "maximum",
            "student",
            "id",
            "from",
            "member",
            "of",
            "club",
            "grouped",
            "by",
            "position"
        ],
        "query_toks": [
            "SELECT",
            "Position",
            ",",
            "MAX",
            "(",
            "StuID",
            ")",
            "FROM",
            "Member_of_club",
            "GROUP",
            "BY",
            "Position"
        ],
        "query_toks_no_value": [
            "select",
            "position",
            ",",
            "max",
            "(",
            "stuid",
            ")",
            "from",
            "member_of_club",
            "group",
            "by",
            "position"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__member_of_club__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__member_of_club.position__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__member_of_club.stuid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__member_of_club.position__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "club_1",
        "query": "SELECT ClubLocation, MIN(ClubID) FROM Club GROUP BY ClubLocation;",
        "question": "Select club location and minimum club id from club grouped by club location ",
        "tables": [
            "Student",
            "Member_of_club",
            "Club"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "club",
            "location",
            "and",
            "minimum",
            "club",
            "id",
            "from",
            "club",
            "grouped",
            "by",
            "club",
            "location"
        ],
        "query_toks": [
            "SELECT",
            "ClubLocation",
            ",",
            "MIN",
            "(",
            "ClubID",
            ")",
            "FROM",
            "Club",
            "GROUP",
            "BY",
            "ClubLocation"
        ],
        "query_toks_no_value": [
            "select",
            "clublocation",
            ",",
            "min",
            "(",
            "clubid",
            ")",
            "from",
            "club",
            "group",
            "by",
            "clublocation"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__club__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__club.clublocation__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__club.clubid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__club.clublocation__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "query": "SELECT Citizenship, MIN(Singer_ID) FROM singer GROUP BY Citizenship;",
        "question": "Select citizenship and minimum singer id from singer grouped by citizenship ",
        "tables": [
            "singer",
            "song"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "citizenship",
            "and",
            "minimum",
            "singer",
            "id",
            "from",
            "singer",
            "grouped",
            "by",
            "citizenship"
        ],
        "query_toks": [
            "SELECT",
            "Citizenship",
            ",",
            "MIN",
            "(",
            "Singer_ID",
            ")",
            "FROM",
            "singer",
            "GROUP",
            "BY",
            "Citizenship"
        ],
        "query_toks_no_value": [
            "select",
            "citizenship",
            ",",
            "min",
            "(",
            "singer_id",
            ")",
            "from",
            "singer",
            "group",
            "by",
            "citizenship"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__singer__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__singer.citizenship__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__singer.singer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__singer.citizenship__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "query": "SELECT Title, MIN(Sales) FROM song GROUP BY Title;",
        "question": "Select title and minimum sales from song grouped by title ",
        "tables": [
            "singer",
            "song"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "title",
            "and",
            "minimum",
            "sales",
            "from",
            "song",
            "grouped",
            "by",
            "title"
        ],
        "query_toks": [
            "SELECT",
            "Title",
            ",",
            "MIN",
            "(",
            "Sales",
            ")",
            "FROM",
            "song",
            "GROUP",
            "BY",
            "Title"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            ",",
            "min",
            "(",
            "sales",
            ")",
            "from",
            "song",
            "group",
            "by",
            "title"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__song__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__song.title__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__song.sales__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__song.title__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "culture_company",
        "query": "SELECT Director, MIN(Year) FROM movie GROUP BY Director;",
        "question": "Select director and minimum year from movie grouped by director ",
        "tables": [
            "movie",
            "book_club",
            "culture_company"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "director",
            "and",
            "minimum",
            "year",
            "from",
            "movie",
            "grouped",
            "by",
            "director"
        ],
        "query_toks": [
            "SELECT",
            "Director",
            ",",
            "MIN",
            "(",
            "Year",
            ")",
            "FROM",
            "movie",
            "GROUP",
            "BY",
            "Director"
        ],
        "query_toks_no_value": [
            "select",
            "director",
            ",",
            "min",
            "(",
            "year",
            ")",
            "from",
            "movie",
            "group",
            "by",
            "director"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__movie__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__movie.director__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__movie.year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__movie.director__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "culture_company",
        "query": "SELECT Publisher, MIN(Year) FROM book_club GROUP BY Publisher;",
        "question": "Select publisher and minimum year from book club grouped by publisher ",
        "tables": [
            "movie",
            "book_club",
            "culture_company"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "publisher",
            "and",
            "minimum",
            "year",
            "from",
            "book",
            "club",
            "grouped",
            "by",
            "publisher"
        ],
        "query_toks": [
            "SELECT",
            "Publisher",
            ",",
            "MIN",
            "(",
            "Year",
            ")",
            "FROM",
            "book_club",
            "GROUP",
            "BY",
            "Publisher"
        ],
        "query_toks_no_value": [
            "select",
            "publisher",
            ",",
            "min",
            "(",
            "year",
            ")",
            "from",
            "book_club",
            "group",
            "by",
            "publisher"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__book_club__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__book_club.publisher__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__book_club.year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__book_club.publisher__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "culture_company",
        "query": "SELECT Incorporated_in, MAX(Group_Equity_Shareholding) FROM culture_company GROUP BY Incorporated_in;",
        "question": "Select incorporated in and maximum group equity shareholding from culture company grouped by incorporated in ",
        "tables": [
            "movie",
            "book_club",
            "culture_company"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "incorporated",
            "in",
            "and",
            "maximum",
            "group",
            "equity",
            "shareholding",
            "from",
            "culture",
            "company",
            "grouped",
            "by",
            "incorporated",
            "in"
        ],
        "query_toks": [
            "SELECT",
            "Incorporated_in",
            ",",
            "MAX",
            "(",
            "Group_Equity_Shareholding",
            ")",
            "FROM",
            "culture_company",
            "GROUP",
            "BY",
            "Incorporated_in"
        ],
        "query_toks_no_value": [
            "select",
            "incorporated_in",
            ",",
            "max",
            "(",
            "group_equity_shareholding",
            ")",
            "from",
            "culture_company",
            "group",
            "by",
            "incorporated_in"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__culture_company__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__culture_company.incorporated_in__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__culture_company.group_equity_shareholding__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__culture_company.incorporated_in__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT Paragraph_Text, MAX(Paragraph_ID) FROM Paragraphs GROUP BY Paragraph_Text;",
        "question": "Select paragraph text and maximum paragraph id from paragraphs grouped by paragraph text ",
        "tables": [
            "Paragraphs",
            "Templates",
            "Ref_Template_Types",
            "Documents"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "paragraph",
            "text",
            "and",
            "maximum",
            "paragraph",
            "id",
            "from",
            "paragraphs",
            "grouped",
            "by",
            "paragraph",
            "text"
        ],
        "query_toks": [
            "SELECT",
            "Paragraph_Text",
            ",",
            "MAX",
            "(",
            "Paragraph_ID",
            ")",
            "FROM",
            "Paragraphs",
            "GROUP",
            "BY",
            "Paragraph_Text"
        ],
        "query_toks_no_value": [
            "select",
            "paragraph_text",
            ",",
            "max",
            "(",
            "paragraph_id",
            ")",
            "from",
            "paragraphs",
            "group",
            "by",
            "paragraph_text"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__paragraphs__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__paragraphs.paragraph_text__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__paragraphs.paragraph_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__paragraphs.paragraph_text__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT Template_Type_Code, MIN(Version_Number) FROM Templates GROUP BY Template_Type_Code;",
        "question": "Select template type code and minimum version number from templates grouped by template type code ",
        "tables": [
            "Paragraphs",
            "Templates",
            "Ref_Template_Types",
            "Documents"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "template",
            "type",
            "code",
            "and",
            "minimum",
            "version",
            "number",
            "from",
            "templates",
            "grouped",
            "by",
            "template",
            "type",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "Template_Type_Code",
            ",",
            "MIN",
            "(",
            "Version_Number",
            ")",
            "FROM",
            "Templates",
            "GROUP",
            "BY",
            "Template_Type_Code"
        ],
        "query_toks_no_value": [
            "select",
            "template_type_code",
            ",",
            "min",
            "(",
            "version_number",
            ")",
            "from",
            "templates",
            "group",
            "by",
            "template_type_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__templates__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__templates.template_type_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__templates.version_number__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__templates.template_type_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT Document_Description, MAX(Document_ID) FROM Documents GROUP BY Document_Description;",
        "question": "Select document description and maximum document id from documents grouped by document description ",
        "tables": [
            "Paragraphs",
            "Templates",
            "Ref_Template_Types",
            "Documents"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "document",
            "description",
            "and",
            "maximum",
            "document",
            "id",
            "from",
            "documents",
            "grouped",
            "by",
            "document",
            "description"
        ],
        "query_toks": [
            "SELECT",
            "Document_Description",
            ",",
            "MAX",
            "(",
            "Document_ID",
            ")",
            "FROM",
            "Documents",
            "GROUP",
            "BY",
            "Document_Description"
        ],
        "query_toks_no_value": [
            "select",
            "document_description",
            ",",
            "max",
            "(",
            "document_id",
            ")",
            "from",
            "documents",
            "group",
            "by",
            "document_description"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__documents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__documents.document_description__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__documents.document_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__documents.document_description__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "musical",
        "query": "SELECT Character, MAX(age) FROM actor GROUP BY Character;",
        "question": "Select character and maximum age from actor grouped by character ",
        "tables": [
            "actor",
            "musical"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "character",
            "and",
            "maximum",
            "age",
            "from",
            "actor",
            "grouped",
            "by",
            "character"
        ],
        "query_toks": [
            "SELECT",
            "Character",
            ",",
            "MAX",
            "(",
            "age",
            ")",
            "FROM",
            "actor",
            "GROUP",
            "BY",
            "Character"
        ],
        "query_toks_no_value": [
            "select",
            "character",
            ",",
            "max",
            "(",
            "age",
            ")",
            "from",
            "actor",
            "group",
            "by",
            "character"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__actor__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__actor.character__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__actor.age__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__actor.character__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "musical",
        "query": "SELECT Category, MAX(Musical_ID) FROM musical GROUP BY Category;",
        "question": "Select category and maximum musical id from musical grouped by category ",
        "tables": [
            "actor",
            "musical"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "category",
            "and",
            "maximum",
            "musical",
            "id",
            "from",
            "musical",
            "grouped",
            "by",
            "category"
        ],
        "query_toks": [
            "SELECT",
            "Category",
            ",",
            "MAX",
            "(",
            "Musical_ID",
            ")",
            "FROM",
            "musical",
            "GROUP",
            "BY",
            "Category"
        ],
        "query_toks_no_value": [
            "select",
            "category",
            ",",
            "max",
            "(",
            "musical_id",
            ")",
            "from",
            "musical",
            "group",
            "by",
            "category"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__musical__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__musical.category__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__musical.musical_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__musical.category__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "query": "SELECT CountryCode, MAX(Percentage) FROM countrylanguage GROUP BY CountryCode;",
        "question": "Select countrycode and maximum percentage from countrylanguage grouped by countrycode ",
        "tables": [
            "sqlite_sequence",
            "countrylanguage",
            "city",
            "country"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "countrycode",
            "and",
            "maximum",
            "percentage",
            "from",
            "countrylanguage",
            "grouped",
            "by",
            "countrycode"
        ],
        "query_toks": [
            "SELECT",
            "CountryCode",
            "(",
            "CountryCode",
            ")",
            "MAX",
            "(",
            "Percentage",
            ")",
            "FROM",
            "countrylanguag",
            "(",
            "countrylanguag",
            ")",
            "GROUP",
            "BY",
            "CountryCode",
            "(",
            "CountryCode",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "countrycode",
            "(",
            "countrycode",
            ")",
            "max",
            "(",
            "percentage",
            ")",
            "from",
            "countrylanguag",
            "(",
            "countrylanguag",
            ")",
            "group",
            "by",
            "countrycode",
            "(",
            "countrycode",
            ")"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__countrylanguage__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__countrylanguage.countrycode__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__countrylanguage.percentage__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__countrylanguage.countrycode__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "query": "SELECT Name, MIN(Population) FROM city GROUP BY Name;",
        "question": "Select name and minimum population from city grouped by name ",
        "tables": [
            "sqlite_sequence",
            "countrylanguage",
            "city",
            "country"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "minimum",
            "population",
            "from",
            "city",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "MIN",
            "(",
            "Population",
            ")",
            "FROM",
            "city",
            "GROUP",
            "BY",
            "Name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "min",
            "(",
            "population",
            ")",
            "from",
            "city",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__city__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__city.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__city.population__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__city.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "query": "SELECT GovernmentForm, MIN(SurfaceArea) FROM country GROUP BY GovernmentForm;",
        "question": "Select government form and minimum surface area from country grouped by government form ",
        "tables": [
            "sqlite_sequence",
            "countrylanguage",
            "city",
            "country"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "government",
            "form",
            "and",
            "minimum",
            "surface",
            "area",
            "from",
            "country",
            "grouped",
            "by",
            "government",
            "form"
        ],
        "query_toks": [
            "SELECT",
            "GovernmentForm",
            ",",
            "MIN",
            "(",
            "SurfaceArea",
            ")",
            "FROM",
            "countr",
            "(",
            "countr",
            ")",
            "GROUP",
            "BY",
            "GovernmentForm"
        ],
        "query_toks_no_value": [
            "select",
            "governmentform",
            ",",
            "min",
            "(",
            "surfacearea",
            ")",
            "from",
            "countr",
            "(",
            "countr",
            ")",
            "group",
            "by",
            "governmentform"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__country__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__country.governmentform__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__country.surfacearea__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__country.governmentform__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "device",
        "query": "SELECT Shop_Name, MAX(Shop_ID) FROM shop GROUP BY Shop_Name;",
        "question": "Select shop name and maximum shop id from shop grouped by shop name ",
        "tables": [
            "shop",
            "device",
            "stock"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "shop",
            "name",
            "and",
            "maximum",
            "shop",
            "id",
            "from",
            "shop",
            "grouped",
            "by",
            "shop",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Shop_Name",
            ",",
            "MAX",
            "(",
            "Shop_ID",
            ")",
            "FROM",
            "shop",
            "GROUP",
            "BY",
            "Shop_Name"
        ],
        "query_toks_no_value": [
            "select",
            "shop_name",
            ",",
            "max",
            "(",
            "shop_id",
            ")",
            "from",
            "shop",
            "group",
            "by",
            "shop_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__shop__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__shop.shop_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__shop.shop_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__shop.shop_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "device",
        "query": "SELECT Applications, MIN(Device_ID) FROM device GROUP BY Applications;",
        "question": "Select applications and minimum device id from device grouped by applications ",
        "tables": [
            "shop",
            "device",
            "stock"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "applications",
            "and",
            "minimum",
            "device",
            "id",
            "from",
            "device",
            "grouped",
            "by",
            "applications"
        ],
        "query_toks": [
            "SELECT",
            "Applications",
            ",",
            "MIN",
            "(",
            "Device_ID",
            ")",
            "FROM",
            "device",
            "GROUP",
            "BY",
            "Applications"
        ],
        "query_toks_no_value": [
            "select",
            "applications",
            ",",
            "min",
            "(",
            "device_id",
            ")",
            "from",
            "device",
            "group",
            "by",
            "applications"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__device__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__device.applications__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__device.device_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__device.applications__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_grants_for_research",
        "query": "SELECT project_details, MAX(organisation_id) FROM Projects GROUP BY project_details;",
        "question": "Select project details and maximum organisation id from projects grouped by project details ",
        "tables": [
            "Projects",
            "Research_Outcomes",
            "Documents",
            "Document_Types",
            "Organisations",
            "Project_Outcomes",
            "Organisation_Types",
            "Project_Staff",
            "Grants",
            "Tasks",
            "Staff_Roles",
            "Research_Staff"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "project",
            "details",
            "and",
            "maximum",
            "organisation",
            "id",
            "from",
            "projects",
            "grouped",
            "by",
            "project",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "project_details",
            ",",
            "MAX",
            "(",
            "organisation_id",
            ")",
            "FROM",
            "Projects",
            "GROUP",
            "BY",
            "project_details"
        ],
        "query_toks_no_value": [
            "select",
            "project_details",
            ",",
            "max",
            "(",
            "organisation_id",
            ")",
            "from",
            "projects",
            "group",
            "by",
            "project_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__projects__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__projects.project_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__projects.organisation_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__projects.project_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_grants_for_research",
        "query": "SELECT other_details, MAX(document_id) FROM Documents GROUP BY other_details;",
        "question": "Select other details and maximum document id from documents grouped by other details ",
        "tables": [
            "Projects",
            "Research_Outcomes",
            "Documents",
            "Document_Types",
            "Organisations",
            "Project_Outcomes",
            "Organisation_Types",
            "Project_Staff",
            "Grants",
            "Tasks",
            "Staff_Roles",
            "Research_Staff"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "other",
            "details",
            "and",
            "maximum",
            "document",
            "id",
            "from",
            "documents",
            "grouped",
            "by",
            "other",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "other_details",
            ",",
            "MAX",
            "(",
            "document_id",
            ")",
            "FROM",
            "Documents",
            "GROUP",
            "BY",
            "other_details"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            ",",
            "max",
            "(",
            "document_id",
            ")",
            "from",
            "documents",
            "group",
            "by",
            "other_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__documents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__documents.other_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__documents.document_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__documents.other_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_grants_for_research",
        "query": "SELECT organisation_type, MIN(organisation_id) FROM Organisations GROUP BY organisation_type;",
        "question": "Select organisation type and minimum organisation id from organisations grouped by organisation type ",
        "tables": [
            "Projects",
            "Research_Outcomes",
            "Documents",
            "Document_Types",
            "Organisations",
            "Project_Outcomes",
            "Organisation_Types",
            "Project_Staff",
            "Grants",
            "Tasks",
            "Staff_Roles",
            "Research_Staff"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "organisation",
            "type",
            "and",
            "minimum",
            "organisation",
            "id",
            "from",
            "organisations",
            "grouped",
            "by",
            "organisation",
            "type"
        ],
        "query_toks": [
            "SELECT",
            "organisation_type",
            ",",
            "MIN",
            "(",
            "organisation_id",
            ")",
            "FROM",
            "Organisations",
            "GROUP",
            "BY",
            "organisation_type"
        ],
        "query_toks_no_value": [
            "select",
            "organisation_type",
            ",",
            "min",
            "(",
            "organisation_id",
            ")",
            "from",
            "organisations",
            "group",
            "by",
            "organisation_type"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__organisations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__organisations.organisation_type__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__organisations.organisation_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__organisations.organisation_type__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_grants_for_research",
        "query": "SELECT outcome_details, MIN(project_id) FROM Project_Outcomes GROUP BY outcome_details;",
        "question": "Select outcome details and minimum project id from project outcomes grouped by outcome details ",
        "tables": [
            "Projects",
            "Research_Outcomes",
            "Documents",
            "Document_Types",
            "Organisations",
            "Project_Outcomes",
            "Organisation_Types",
            "Project_Staff",
            "Grants",
            "Tasks",
            "Staff_Roles",
            "Research_Staff"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "outcome",
            "details",
            "and",
            "minimum",
            "project",
            "id",
            "from",
            "project",
            "outcomes",
            "grouped",
            "by",
            "outcome",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "outcome_details",
            ",",
            "MIN",
            "(",
            "project_id",
            ")",
            "FROM",
            "Project_Outcomes",
            "GROUP",
            "BY",
            "outcome_details"
        ],
        "query_toks_no_value": [
            "select",
            "outcome_details",
            ",",
            "min",
            "(",
            "project_id",
            ")",
            "from",
            "project_outcomes",
            "group",
            "by",
            "outcome_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__project_outcomes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__project_outcomes.outcome_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__project_outcomes.project_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__project_outcomes.outcome_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_grants_for_research",
        "query": "SELECT other_details, MIN(project_id) FROM Project_Staff GROUP BY other_details;",
        "question": "Select other details and minimum project id from project staff grouped by other details ",
        "tables": [
            "Projects",
            "Research_Outcomes",
            "Documents",
            "Document_Types",
            "Organisations",
            "Project_Outcomes",
            "Organisation_Types",
            "Project_Staff",
            "Grants",
            "Tasks",
            "Staff_Roles",
            "Research_Staff"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "other",
            "details",
            "and",
            "minimum",
            "project",
            "id",
            "from",
            "project",
            "staff",
            "grouped",
            "by",
            "other",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "other_details",
            ",",
            "MIN",
            "(",
            "project_id",
            ")",
            "FROM",
            "Project_Staff",
            "GROUP",
            "BY",
            "other_details"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            ",",
            "min",
            "(",
            "project_id",
            ")",
            "from",
            "project_staff",
            "group",
            "by",
            "other_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__project_staff__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__project_staff.other_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__project_staff.project_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__project_staff.other_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_grants_for_research",
        "query": "SELECT other_details, MAX(organisation_id) FROM Grants GROUP BY other_details;",
        "question": "Select other details and maximum organisation id from grants grouped by other details ",
        "tables": [
            "Projects",
            "Research_Outcomes",
            "Documents",
            "Document_Types",
            "Organisations",
            "Project_Outcomes",
            "Organisation_Types",
            "Project_Staff",
            "Grants",
            "Tasks",
            "Staff_Roles",
            "Research_Staff"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "other",
            "details",
            "and",
            "maximum",
            "organisation",
            "id",
            "from",
            "grants",
            "grouped",
            "by",
            "other",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "other_details",
            ",",
            "MAX",
            "(",
            "organisation_id",
            ")",
            "FROM",
            "Grants",
            "GROUP",
            "BY",
            "other_details"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            ",",
            "max",
            "(",
            "organisation_id",
            ")",
            "from",
            "grants",
            "group",
            "by",
            "other_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__grants__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__grants.other_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__grants.organisation_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__grants.other_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_grants_for_research",
        "query": "SELECT task_details, MIN(task_id) FROM Tasks GROUP BY task_details;",
        "question": "Select task details and minimum task id from tasks grouped by task details ",
        "tables": [
            "Projects",
            "Research_Outcomes",
            "Documents",
            "Document_Types",
            "Organisations",
            "Project_Outcomes",
            "Organisation_Types",
            "Project_Staff",
            "Grants",
            "Tasks",
            "Staff_Roles",
            "Research_Staff"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "task",
            "details",
            "and",
            "minimum",
            "task",
            "id",
            "from",
            "tasks",
            "grouped",
            "by",
            "task",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "task_details",
            ",",
            "MIN",
            "(",
            "task_id",
            ")",
            "FROM",
            "Tasks",
            "GROUP",
            "BY",
            "task_details"
        ],
        "query_toks_no_value": [
            "select",
            "task_details",
            ",",
            "min",
            "(",
            "task_id",
            ")",
            "from",
            "tasks",
            "group",
            "by",
            "task_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__tasks__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__tasks.task_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__tasks.task_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__tasks.task_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_grants_for_research",
        "query": "SELECT staff_details, MAX(employer_organisation_id) FROM Research_Staff GROUP BY staff_details;",
        "question": "Select staff details and maximum employer organisation id from research staff grouped by staff details ",
        "tables": [
            "Projects",
            "Research_Outcomes",
            "Documents",
            "Document_Types",
            "Organisations",
            "Project_Outcomes",
            "Organisation_Types",
            "Project_Staff",
            "Grants",
            "Tasks",
            "Staff_Roles",
            "Research_Staff"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "staff",
            "details",
            "and",
            "maximum",
            "employer",
            "organisation",
            "id",
            "from",
            "research",
            "staff",
            "grouped",
            "by",
            "staff",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "staff_details",
            ",",
            "MAX",
            "(",
            "employer_organisation_id",
            ")",
            "FROM",
            "Research_Staff",
            "GROUP",
            "BY",
            "staff_details"
        ],
        "query_toks_no_value": [
            "select",
            "staff_details",
            ",",
            "max",
            "(",
            "employer_organisation_id",
            ")",
            "from",
            "research_staff",
            "group",
            "by",
            "staff_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__research_staff__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__research_staff.staff_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__research_staff.employer_organisation_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__research_staff.staff_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT Start_from, MIN(Shop_ID) FROM hiring GROUP BY Start_from;",
        "question": "Select start from and minimum shop id from hiring grouped by start from ",
        "tables": [
            "hiring",
            "shop",
            "evaluation",
            "employee"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "start",
            "from",
            "and",
            "minimum",
            "shop",
            "id",
            "from",
            "hiring",
            "grouped",
            "by",
            "start",
            "from"
        ],
        "query_toks": [
            "SELECT",
            "Start_from",
            ",",
            "MIN",
            "(",
            "Shop_ID",
            ")",
            "FROM",
            "hiring",
            "GROUP",
            "BY",
            "Start_from"
        ],
        "query_toks_no_value": [
            "select",
            "start_from",
            ",",
            "min",
            "(",
            "shop_id",
            ")",
            "from",
            "hiring",
            "group",
            "by",
            "start_from"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__hiring__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__hiring.start_from__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__hiring.shop_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__hiring.start_from__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT District, MIN(Number_products) FROM shop GROUP BY District;",
        "question": "Select district and minimum number products from shop grouped by district ",
        "tables": [
            "hiring",
            "shop",
            "evaluation",
            "employee"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "district",
            "and",
            "minimum",
            "number",
            "products",
            "from",
            "shop",
            "grouped",
            "by",
            "district"
        ],
        "query_toks": [
            "SELECT",
            "District",
            ",",
            "MIN",
            "(",
            "Number_products",
            ")",
            "FROM",
            "shop",
            "GROUP",
            "BY",
            "District"
        ],
        "query_toks_no_value": [
            "select",
            "district",
            ",",
            "min",
            "(",
            "number_products",
            ")",
            "from",
            "shop",
            "group",
            "by",
            "district"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__shop__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__shop.district__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__shop.number_products__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__shop.district__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT Year_awarded, MAX(Bonus) FROM evaluation GROUP BY Year_awarded;",
        "question": "Select year awarded and maximum bonus from evaluation grouped by year awarded ",
        "tables": [
            "hiring",
            "shop",
            "evaluation",
            "employee"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "year",
            "awarded",
            "and",
            "maximum",
            "bonus",
            "from",
            "evaluation",
            "grouped",
            "by",
            "year",
            "awarded"
        ],
        "query_toks": [
            "SELECT",
            "Year_awarded",
            ",",
            "MAX",
            "(",
            "Bonus",
            ")",
            "FROM",
            "evaluation",
            "GROUP",
            "BY",
            "Year_awarded"
        ],
        "query_toks_no_value": [
            "select",
            "year_awarded",
            ",",
            "max",
            "(",
            "bonus",
            ")",
            "from",
            "evaluation",
            "group",
            "by",
            "year_awarded"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__evaluation__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__evaluation.year_awarded__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__evaluation.bonus__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__evaluation.year_awarded__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT Name, MIN(Employee_ID) FROM employee GROUP BY Name;",
        "question": "Select name and minimum employee id from employee grouped by name ",
        "tables": [
            "hiring",
            "shop",
            "evaluation",
            "employee"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "minimum",
            "employee",
            "id",
            "from",
            "employee",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "MIN",
            "(",
            "Employee_ID",
            ")",
            "FROM",
            "employee",
            "GROUP",
            "BY",
            "Name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "min",
            "(",
            "employee_id",
            ")",
            "from",
            "employee",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__employee__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__employee.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__employee.employee_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__employee.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "movie_1",
        "query": "SELECT director, MAX(mID) FROM Movie GROUP BY director;",
        "question": "Select director and maximum movie id from movie grouped by director ",
        "tables": [
            "Rating",
            "Movie",
            "Reviewer"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "director",
            "and",
            "maximum",
            "movie",
            "id",
            "from",
            "movie",
            "grouped",
            "by",
            "director"
        ],
        "query_toks": [
            "SELECT",
            "director",
            ",",
            "MAX",
            "(",
            "mID",
            ")",
            "FROM",
            "Movie",
            "GROUP",
            "BY",
            "director"
        ],
        "query_toks_no_value": [
            "select",
            "director",
            ",",
            "max",
            "(",
            "mid",
            ")",
            "from",
            "movie",
            "group",
            "by",
            "director"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__movie__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__movie.director__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__movie.mid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__movie.director__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "movie_1",
        "query": "SELECT name, MAX(rID) FROM Reviewer GROUP BY name;",
        "question": "Select name and maximum reviewer id from reviewer grouped by name ",
        "tables": [
            "Rating",
            "Movie",
            "Reviewer"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "maximum",
            "reviewer",
            "id",
            "from",
            "reviewer",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "MAX",
            "(",
            "rID",
            ")",
            "FROM",
            "Reviewer",
            "GROUP",
            "BY",
            "name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "max",
            "(",
            "rid",
            ")",
            "from",
            "reviewer",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__reviewer__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__reviewer.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__reviewer.rid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__reviewer.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "query": "SELECT name, MAX(grade) FROM Highschooler GROUP BY name;",
        "question": "Select name and maximum grade from high schooler grouped by name ",
        "tables": [
            "Highschooler",
            "Likes",
            "Friend"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "maximum",
            "grade",
            "from",
            "high",
            "schooler",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "MAX",
            "(",
            "grade",
            ")",
            "FROM",
            "Highschooler",
            "GROUP",
            "BY",
            "name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "max",
            "(",
            "grade",
            ")",
            "from",
            "highschooler",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__highschooler__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__highschooler.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__highschooler.grade__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__highschooler.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "poker_player",
        "query": "SELECT Nationality, MAX(Height) FROM people GROUP BY Nationality;",
        "question": "Select nationality and maximum height from people grouped by nationality ",
        "tables": [
            "poker_player",
            "people"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "nationality",
            "and",
            "maximum",
            "height",
            "from",
            "people",
            "grouped",
            "by",
            "nationality"
        ],
        "query_toks": [
            "SELECT",
            "Nationality",
            ",",
            "MAX",
            "(",
            "Height",
            ")",
            "FROM",
            "people",
            "GROUP",
            "BY",
            "Nationality"
        ],
        "query_toks_no_value": [
            "select",
            "nationality",
            ",",
            "max",
            "(",
            "height",
            ")",
            "from",
            "people",
            "group",
            "by",
            "nationality"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__people__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__people.nationality__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__people.height__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__people.nationality__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "program_share",
        "query": "SELECT Owner, MAX(Launch) FROM program GROUP BY Owner;",
        "question": "Select owner and maximum launch from program grouped by owner ",
        "tables": [
            "program",
            "broadcast",
            "channel",
            "broadcast_share"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "owner",
            "and",
            "maximum",
            "launch",
            "from",
            "program",
            "grouped",
            "by",
            "owner"
        ],
        "query_toks": [
            "SELECT",
            "Owner",
            ",",
            "MAX",
            "(",
            "Launch",
            ")",
            "FROM",
            "program",
            "GROUP",
            "BY",
            "Owner"
        ],
        "query_toks_no_value": [
            "select",
            "owner",
            ",",
            "max",
            "(",
            "launch",
            ")",
            "from",
            "program",
            "group",
            "by",
            "owner"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__program__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__program.owner__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__program.launch__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__program.owner__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "program_share",
        "query": "SELECT Time_of_day, MIN(Channel_ID) FROM broadcast GROUP BY Time_of_day;",
        "question": "Select time of day and minimum channel id from broadcast grouped by time of day ",
        "tables": [
            "program",
            "broadcast",
            "channel",
            "broadcast_share"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "time",
            "of",
            "day",
            "and",
            "minimum",
            "channel",
            "id",
            "from",
            "broadcast",
            "grouped",
            "by",
            "time",
            "of",
            "day"
        ],
        "query_toks": [
            "SELECT",
            "Time_of_day",
            ",",
            "MIN",
            "(",
            "Channel_ID",
            ")",
            "FROM",
            "broadcast",
            "GROUP",
            "BY",
            "Time_of_day"
        ],
        "query_toks_no_value": [
            "select",
            "time_of_day",
            ",",
            "min",
            "(",
            "channel_id",
            ")",
            "from",
            "broadcast",
            "group",
            "by",
            "time_of_day"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__broadcast__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__broadcast.time_of_day__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__broadcast.channel_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__broadcast.time_of_day__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "program_share",
        "query": "SELECT Owner, MAX(Share_in_percent) FROM channel GROUP BY Owner;",
        "question": "Select owner and maximum share in percent from channel grouped by owner ",
        "tables": [
            "program",
            "broadcast",
            "channel",
            "broadcast_share"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "owner",
            "and",
            "maximum",
            "share",
            "in",
            "percent",
            "from",
            "channel",
            "grouped",
            "by",
            "owner"
        ],
        "query_toks": [
            "SELECT",
            "Owner",
            ",",
            "MAX",
            "(",
            "Share_in_percent",
            ")",
            "FROM",
            "channel",
            "GROUP",
            "BY",
            "Owner"
        ],
        "query_toks_no_value": [
            "select",
            "owner",
            ",",
            "max",
            "(",
            "share_in_percent",
            ")",
            "from",
            "channel",
            "group",
            "by",
            "owner"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__channel__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__channel.owner__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__channel.share_in_percent__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__channel.owner__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "program_share",
        "query": "SELECT Date, MIN(Share_in_percent) FROM broadcast_share GROUP BY Date;",
        "question": "Select date and minimum share in percent from broadcast share grouped by date ",
        "tables": [
            "program",
            "broadcast",
            "channel",
            "broadcast_share"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "date",
            "and",
            "minimum",
            "share",
            "in",
            "percent",
            "from",
            "broadcast",
            "share",
            "grouped",
            "by",
            "date"
        ],
        "query_toks": [
            "SELECT",
            "Date",
            ",",
            "MIN",
            "(",
            "Share_in_percent",
            ")",
            "FROM",
            "broadcast_share",
            "GROUP",
            "BY",
            "Date"
        ],
        "query_toks_no_value": [
            "select",
            "date",
            ",",
            "min",
            "(",
            "share_in_percent",
            ")",
            "from",
            "broadcast_share",
            "group",
            "by",
            "date"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__broadcast_share__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__broadcast_share.date__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__broadcast_share.share_in_percent__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__broadcast_share.date__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "aircraft",
        "query": "SELECT Airport_Name, MIN(Transit_Passengers) FROM airport GROUP BY Airport_Name;",
        "question": "Select airport name and minimum transit passengers from airport grouped by airport name ",
        "tables": [
            "airport",
            "match",
            "pilot",
            "airport_aircraft",
            "aircraft"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "airport",
            "name",
            "and",
            "minimum",
            "transit",
            "passengers",
            "from",
            "airport",
            "grouped",
            "by",
            "airport",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Airport_Name",
            ",",
            "MIN",
            "(",
            "Transit_Passengers",
            ")",
            "FROM",
            "airport",
            "GROUP",
            "BY",
            "Airport_Name"
        ],
        "query_toks_no_value": [
            "select",
            "airport_name",
            ",",
            "min",
            "(",
            "transit_passengers",
            ")",
            "from",
            "airport",
            "group",
            "by",
            "airport_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__airport__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__airport.airport_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__airport.transit_passengers__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__airport.airport_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "aircraft",
        "query": "SELECT Country, MIN(Round) FROM match GROUP BY Country;",
        "question": "Select country and minimum round from match grouped by country ",
        "tables": [
            "airport",
            "match",
            "pilot",
            "airport_aircraft",
            "aircraft"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "country",
            "and",
            "minimum",
            "round",
            "from",
            "match",
            "grouped",
            "by",
            "country"
        ],
        "query_toks": [
            "SELECT",
            "Country",
            "(",
            "Country",
            ")",
            "MIN",
            "(",
            "Round",
            ")",
            "FROM",
            "match",
            "GROUP",
            "BY",
            "Country",
            "(",
            "Country",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            "(",
            "country",
            ")",
            "min",
            "(",
            "round",
            ")",
            "from",
            "match",
            "group",
            "by",
            "country",
            "(",
            "country",
            ")"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__match__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__match.country__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__match.round__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__match.country__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "aircraft",
        "query": "SELECT Name, MAX(Pilot_Id) FROM pilot GROUP BY Name;",
        "question": "Select name and maximum pilot id from pilot grouped by name ",
        "tables": [
            "airport",
            "match",
            "pilot",
            "airport_aircraft",
            "aircraft"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "maximum",
            "pilot",
            "id",
            "from",
            "pilot",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "MAX",
            "(",
            "Pilot_Id",
            ")",
            "FROM",
            "pilot",
            "GROUP",
            "BY",
            "Name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "max",
            "(",
            "pilot_id",
            ")",
            "from",
            "pilot",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__pilot__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__pilot.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__pilot.pilot_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__pilot.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "aircraft",
        "query": "SELECT Max_disk_Loading, MAX(Aircraft_ID) FROM aircraft GROUP BY Max_disk_Loading;",
        "question": "Select max disk loading and maximum aircraft id from aircraft grouped by max disk loading ",
        "tables": [
            "airport",
            "match",
            "pilot",
            "airport_aircraft",
            "aircraft"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "max",
            "disk",
            "loading",
            "and",
            "maximum",
            "aircraft",
            "id",
            "from",
            "aircraft",
            "grouped",
            "by",
            "max",
            "disk",
            "loading"
        ],
        "query_toks": [
            "SELECT",
            "Max_disk_Loading",
            "(",
            "Max_disk_Loading",
            ")",
            "MAX",
            "(",
            "Aircraft_ID",
            ")",
            "FROM",
            "aircraft",
            "GROUP",
            "BY",
            "Max_disk_Loading",
            "(",
            "Max_disk_Loading",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "max_disk_loading",
            "(",
            "max_disk_loading",
            ")",
            "max",
            "(",
            "aircraft_id",
            ")",
            "from",
            "aircraft",
            "group",
            "by",
            "max_disk_loading",
            "(",
            "max_disk_loading",
            ")"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__aircraft__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__aircraft.max_disk_loading__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__aircraft.aircraft_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__aircraft.max_disk_loading__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "restaurant_1",
        "query": "SELECT ResTypeDescription, MIN(ResTypeID) FROM Restaurant_Type GROUP BY ResTypeDescription;",
        "question": "Select restaurant type description and minimum restaurant type id from restaurant type grouped by restaurant type description ",
        "tables": [
            "Restaurant_Type",
            "Student",
            "Type_Of_Restaurant",
            "Visits_Restaurant",
            "Restaurant"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "restaurant",
            "type",
            "description",
            "and",
            "minimum",
            "restaurant",
            "type",
            "id",
            "from",
            "restaurant",
            "type",
            "grouped",
            "by",
            "restaurant",
            "type",
            "description"
        ],
        "query_toks": [
            "SELECT",
            "ResTypeDescription",
            ",",
            "MIN",
            "(",
            "ResTypeID",
            ")",
            "FROM",
            "Restaurant_Type",
            "GROUP",
            "BY",
            "ResTypeDescription"
        ],
        "query_toks_no_value": [
            "select",
            "restypedescription",
            ",",
            "min",
            "(",
            "restypeid",
            ")",
            "from",
            "restaurant_type",
            "group",
            "by",
            "restypedescription"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__restaurant_type__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__restaurant_type.restypedescription__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__restaurant_type.restypeid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__restaurant_type.restypedescription__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "restaurant_1",
        "query": "SELECT LName, MIN(Advisor) FROM Student GROUP BY LName;",
        "question": "Select last name and minimum advisor from student grouped by last name ",
        "tables": [
            "Restaurant_Type",
            "Student",
            "Type_Of_Restaurant",
            "Visits_Restaurant",
            "Restaurant"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "last",
            "name",
            "and",
            "minimum",
            "advisor",
            "from",
            "student",
            "grouped",
            "by",
            "last",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "LName",
            ",",
            "MIN",
            "(",
            "Advisor",
            ")",
            "FROM",
            "Student",
            "GROUP",
            "BY",
            "LName"
        ],
        "query_toks_no_value": [
            "select",
            "lname",
            ",",
            "min",
            "(",
            "advisor",
            ")",
            "from",
            "student",
            "group",
            "by",
            "lname"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.lname__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__student.advisor__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__student.lname__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "restaurant_1",
        "query": "SELECT Address, MAX(ResID) FROM Restaurant GROUP BY Address;",
        "question": "Select address and maximum restaurant id from restaurant grouped by address ",
        "tables": [
            "Restaurant_Type",
            "Student",
            "Type_Of_Restaurant",
            "Visits_Restaurant",
            "Restaurant"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "address",
            "and",
            "maximum",
            "restaurant",
            "id",
            "from",
            "restaurant",
            "grouped",
            "by",
            "address"
        ],
        "query_toks": [
            "SELECT",
            "Address",
            ",",
            "MAX",
            "(",
            "ResID",
            ")",
            "FROM",
            "Restaurant",
            "GROUP",
            "BY",
            "Address"
        ],
        "query_toks_no_value": [
            "select",
            "address",
            ",",
            "max",
            "(",
            "resid",
            ")",
            "from",
            "restaurant",
            "group",
            "by",
            "address"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__restaurant__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__restaurant.address__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__restaurant.resid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__restaurant.address__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_invoices",
        "query": "SELECT production_type_code, MAX(parent_product_id) FROM Products GROUP BY production_type_code;",
        "question": "Select production type code and maximum parent product id from products grouped by production type code ",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Accounts",
            "Customers",
            "Product_Categories",
            "Invoice_Line_Items",
            "Financial_Transactions",
            "Orders"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "production",
            "type",
            "code",
            "and",
            "maximum",
            "parent",
            "product",
            "id",
            "from",
            "products",
            "grouped",
            "by",
            "production",
            "type",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "production_type_code",
            ",",
            "MAX",
            "(",
            "parent_product_id",
            ")",
            "FROM",
            "Products",
            "GROUP",
            "BY",
            "production_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "production_type_code",
            ",",
            "max",
            "(",
            "parent_product_id",
            ")",
            "from",
            "products",
            "group",
            "by",
            "production_type_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products.production_type_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__products.parent_product_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__products.production_type_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_invoices",
        "query": "SELECT other_order_item_details, MIN(order_item_id) FROM Order_Items GROUP BY other_order_item_details;",
        "question": "Select other order item details and minimum order item id from order items grouped by other order item details ",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Accounts",
            "Customers",
            "Product_Categories",
            "Invoice_Line_Items",
            "Financial_Transactions",
            "Orders"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "other",
            "order",
            "item",
            "details",
            "and",
            "minimum",
            "order",
            "item",
            "id",
            "from",
            "order",
            "items",
            "grouped",
            "by",
            "other",
            "order",
            "item",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "other_order_item_details",
            ",",
            "MIN",
            "(",
            "order_item_id",
            ")",
            "FROM",
            "Order_Items",
            "GROUP",
            "BY",
            "other_order_item_details"
        ],
        "query_toks_no_value": [
            "select",
            "other_order_item_details",
            ",",
            "min",
            "(",
            "order_item_id",
            ")",
            "from",
            "order_items",
            "group",
            "by",
            "other_order_item_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__order_items__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__order_items.other_order_item_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__order_items.order_item_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__order_items.other_order_item_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_invoices",
        "query": "SELECT other_account_details, MAX(customer_id) FROM Accounts GROUP BY other_account_details;",
        "question": "Select other account details and maximum customer id from accounts grouped by other account details ",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Accounts",
            "Customers",
            "Product_Categories",
            "Invoice_Line_Items",
            "Financial_Transactions",
            "Orders"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "other",
            "account",
            "details",
            "and",
            "maximum",
            "customer",
            "id",
            "from",
            "accounts",
            "grouped",
            "by",
            "other",
            "account",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "other_account_details",
            ",",
            "MAX",
            "(",
            "customer_id",
            ")",
            "FROM",
            "Accounts",
            "GROUP",
            "BY",
            "other_account_details"
        ],
        "query_toks_no_value": [
            "select",
            "other_account_details",
            ",",
            "max",
            "(",
            "customer_id",
            ")",
            "from",
            "accounts",
            "group",
            "by",
            "other_account_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__accounts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__accounts.other_account_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__accounts.customer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__accounts.other_account_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_invoices",
        "query": "SELECT customer_last_name, MAX(customer_id) FROM Customers GROUP BY customer_last_name;",
        "question": "Select customer last name and maximum customer id from customers grouped by customer last name ",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Accounts",
            "Customers",
            "Product_Categories",
            "Invoice_Line_Items",
            "Financial_Transactions",
            "Orders"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "customer",
            "last",
            "name",
            "and",
            "maximum",
            "customer",
            "id",
            "from",
            "customers",
            "grouped",
            "by",
            "customer",
            "last",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "customer_last_name",
            ",",
            "MAX",
            "(",
            "customer_id",
            ")",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "customer_last_name"
        ],
        "query_toks_no_value": [
            "select",
            "customer_last_name",
            ",",
            "max",
            "(",
            "customer_id",
            ")",
            "from",
            "customers",
            "group",
            "by",
            "customer_last_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_last_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customers.customer_last_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_invoices",
        "query": "SELECT product_type_description, MAX(vat_rating) FROM Product_Categories GROUP BY product_type_description;",
        "question": "Select product type description and maximum vat rating from product categories grouped by product type description ",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Accounts",
            "Customers",
            "Product_Categories",
            "Invoice_Line_Items",
            "Financial_Transactions",
            "Orders"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "product",
            "type",
            "description",
            "and",
            "maximum",
            "vat",
            "rating",
            "from",
            "product",
            "categories",
            "grouped",
            "by",
            "product",
            "type",
            "description"
        ],
        "query_toks": [
            "SELECT",
            "product_type_description",
            ",",
            "MAX",
            "(",
            "vat_rating",
            ")",
            "FROM",
            "Product_Categories",
            "GROUP",
            "BY",
            "product_type_description"
        ],
        "query_toks_no_value": [
            "select",
            "product_type_description",
            ",",
            "max",
            "(",
            "vat_rating",
            ")",
            "from",
            "product_categories",
            "group",
            "by",
            "product_type_description"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__product_categories__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__product_categories.product_type_description__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__product_categories.vat_rating__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__product_categories.product_type_description__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_invoices",
        "query": "SELECT product_title, MAX(derived_product_cost) FROM Invoice_Line_Items GROUP BY product_title;",
        "question": "Select product title and maximum derived product cost from invoice line items grouped by product title ",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Accounts",
            "Customers",
            "Product_Categories",
            "Invoice_Line_Items",
            "Financial_Transactions",
            "Orders"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "product",
            "title",
            "and",
            "maximum",
            "derived",
            "product",
            "cost",
            "from",
            "invoice",
            "line",
            "items",
            "grouped",
            "by",
            "product",
            "title"
        ],
        "query_toks": [
            "SELECT",
            "product_title",
            ",",
            "MAX",
            "(",
            "derived_product_cost",
            ")",
            "FROM",
            "Invoice_Line_Items",
            "GROUP",
            "BY",
            "product_title"
        ],
        "query_toks_no_value": [
            "select",
            "product_title",
            ",",
            "max",
            "(",
            "derived_product_cost",
            ")",
            "from",
            "invoice_line_items",
            "group",
            "by",
            "product_title"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__invoice_line_items__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__invoice_line_items.product_title__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__invoice_line_items.derived_product_cost__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__invoice_line_items.product_title__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_invoices",
        "query": "SELECT transaction_comment, MAX(invoice_number) FROM Financial_Transactions GROUP BY transaction_comment;",
        "question": "Select transaction comment and maximum invoice number from financial transactions grouped by transaction comment ",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Accounts",
            "Customers",
            "Product_Categories",
            "Invoice_Line_Items",
            "Financial_Transactions",
            "Orders"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "transaction",
            "comment",
            "and",
            "maximum",
            "invoice",
            "number",
            "from",
            "financial",
            "transactions",
            "grouped",
            "by",
            "transaction",
            "comment"
        ],
        "query_toks": [
            "SELECT",
            "transaction_comment",
            ",",
            "MAX",
            "(",
            "invoice_number",
            ")",
            "FROM",
            "Financial_Transactions",
            "GROUP",
            "BY",
            "transaction_comment"
        ],
        "query_toks_no_value": [
            "select",
            "transaction_comment",
            ",",
            "max",
            "(",
            "invoice_number",
            ")",
            "from",
            "financial_transactions",
            "group",
            "by",
            "transaction_comment"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__financial_transactions__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__financial_transactions.transaction_comment__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__financial_transactions.invoice_number__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__financial_transactions.transaction_comment__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_invoices",
        "query": "SELECT order_details, MAX(customer_id) FROM Orders GROUP BY order_details;",
        "question": "Select order details and maximum customer id from orders grouped by order details ",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Accounts",
            "Customers",
            "Product_Categories",
            "Invoice_Line_Items",
            "Financial_Transactions",
            "Orders"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "order",
            "details",
            "and",
            "maximum",
            "customer",
            "id",
            "from",
            "orders",
            "grouped",
            "by",
            "order",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "order_details",
            ",",
            "MAX",
            "(",
            "customer_id",
            ")",
            "FROM",
            "Orders",
            "GROUP",
            "BY",
            "order_details"
        ],
        "query_toks_no_value": [
            "select",
            "order_details",
            ",",
            "max",
            "(",
            "customer_id",
            ")",
            "from",
            "orders",
            "group",
            "by",
            "order_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__orders__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__orders.order_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__orders.customer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__orders.order_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_and_eClaims",
        "query": "SELECT Staff_Details, MIN(Staff_ID) FROM Staff GROUP BY Staff_Details;",
        "question": "Select staff details and minimum staff id from staff grouped by staff details ",
        "tables": [
            "Staff",
            "Claim_Headers",
            "Claims_Processing",
            "Policies",
            "Customers",
            "Claims_Documents",
            "Claims_Processing_Stages"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "staff",
            "details",
            "and",
            "minimum",
            "staff",
            "id",
            "from",
            "staff",
            "grouped",
            "by",
            "staff",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "Staff_Details",
            ",",
            "MIN",
            "(",
            "Staff_ID",
            ")",
            "FROM",
            "Staff",
            "GROUP",
            "BY",
            "Staff_Details"
        ],
        "query_toks_no_value": [
            "select",
            "staff_details",
            ",",
            "min",
            "(",
            "staff_id",
            ")",
            "from",
            "staff",
            "group",
            "by",
            "staff_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__staff__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__staff.staff_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__staff.staff_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__staff.staff_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_and_eClaims",
        "query": "SELECT Claim_Type_Code, MIN(Amount_Piad) FROM Claim_Headers GROUP BY Claim_Type_Code;",
        "question": "Select claim type code and minimum amount piad from claim headers grouped by claim type code ",
        "tables": [
            "Staff",
            "Claim_Headers",
            "Claims_Processing",
            "Policies",
            "Customers",
            "Claims_Documents",
            "Claims_Processing_Stages"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "claim",
            "type",
            "code",
            "and",
            "minimum",
            "amount",
            "piad",
            "from",
            "claim",
            "headers",
            "grouped",
            "by",
            "claim",
            "type",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "Claim_Type_Code",
            ",",
            "MIN",
            "(",
            "Amount_Piad",
            ")",
            "FROM",
            "Claim_Headers",
            "GROUP",
            "BY",
            "Claim_Type_Code"
        ],
        "query_toks_no_value": [
            "select",
            "claim_type_code",
            ",",
            "min",
            "(",
            "amount_piad",
            ")",
            "from",
            "claim_headers",
            "group",
            "by",
            "claim_type_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__claim_headers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__claim_headers.claim_type_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__claim_headers.amount_piad__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__claim_headers.claim_type_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_and_eClaims",
        "query": "SELECT Claim_Outcome_Code, MIN(Staff_ID) FROM Claims_Processing GROUP BY Claim_Outcome_Code;",
        "question": "Select claim outcome code and minimum staff id from claims processing grouped by claim outcome code ",
        "tables": [
            "Staff",
            "Claim_Headers",
            "Claims_Processing",
            "Policies",
            "Customers",
            "Claims_Documents",
            "Claims_Processing_Stages"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "claim",
            "outcome",
            "code",
            "and",
            "minimum",
            "staff",
            "id",
            "from",
            "claims",
            "processing",
            "grouped",
            "by",
            "claim",
            "outcome",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "Claim_Outcome_Code",
            ",",
            "MIN",
            "(",
            "Staff_ID",
            ")",
            "FROM",
            "Claims_Processing",
            "GROUP",
            "BY",
            "Claim_Outcome_Code"
        ],
        "query_toks_no_value": [
            "select",
            "claim_outcome_code",
            ",",
            "min",
            "(",
            "staff_id",
            ")",
            "from",
            "claims_processing",
            "group",
            "by",
            "claim_outcome_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__claims_processing__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__claims_processing.claim_outcome_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__claims_processing.staff_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__claims_processing.claim_outcome_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_and_eClaims",
        "query": "SELECT Policy_Type_Code, MAX(Policy_ID) FROM Policies GROUP BY Policy_Type_Code;",
        "question": "Select policy type code and maximum policy id from policies grouped by policy type code ",
        "tables": [
            "Staff",
            "Claim_Headers",
            "Claims_Processing",
            "Policies",
            "Customers",
            "Claims_Documents",
            "Claims_Processing_Stages"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "policy",
            "type",
            "code",
            "and",
            "maximum",
            "policy",
            "id",
            "from",
            "policies",
            "grouped",
            "by",
            "policy",
            "type",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "Policy_Type_Code",
            ",",
            "MAX",
            "(",
            "Policy_ID",
            ")",
            "FROM",
            "Policies",
            "GROUP",
            "BY",
            "Policy_Type_Code"
        ],
        "query_toks_no_value": [
            "select",
            "policy_type_code",
            ",",
            "max",
            "(",
            "policy_id",
            ")",
            "from",
            "policies",
            "group",
            "by",
            "policy_type_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__policies__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__policies.policy_type_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__policies.policy_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__policies.policy_type_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_and_eClaims",
        "query": "SELECT Customer_Details, MAX(Customer_ID) FROM Customers GROUP BY Customer_Details;",
        "question": "Select customer details and maximum customer id from customers grouped by customer details ",
        "tables": [
            "Staff",
            "Claim_Headers",
            "Claims_Processing",
            "Policies",
            "Customers",
            "Claims_Documents",
            "Claims_Processing_Stages"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "customer",
            "details",
            "and",
            "maximum",
            "customer",
            "id",
            "from",
            "customers",
            "grouped",
            "by",
            "customer",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "Customer_Details",
            ",",
            "MAX",
            "(",
            "Customer_ID",
            ")",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "Customer_Details"
        ],
        "query_toks_no_value": [
            "select",
            "customer_details",
            ",",
            "max",
            "(",
            "customer_id",
            ")",
            "from",
            "customers",
            "group",
            "by",
            "customer_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customers.customer_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_and_eClaims",
        "query": "SELECT Document_Type_Code, MAX(Created_Date) FROM Claims_Documents GROUP BY Document_Type_Code;",
        "question": "Select document type code and maximum created date from claims documents grouped by document type code ",
        "tables": [
            "Staff",
            "Claim_Headers",
            "Claims_Processing",
            "Policies",
            "Customers",
            "Claims_Documents",
            "Claims_Processing_Stages"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "document",
            "type",
            "code",
            "and",
            "maximum",
            "created",
            "date",
            "from",
            "claims",
            "documents",
            "grouped",
            "by",
            "document",
            "type",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "Document_Type_Code",
            ",",
            "MAX",
            "(",
            "Created_Date",
            ")",
            "FROM",
            "Claims_Documents",
            "GROUP",
            "BY",
            "Document_Type_Code"
        ],
        "query_toks_no_value": [
            "select",
            "document_type_code",
            ",",
            "max",
            "(",
            "created_date",
            ")",
            "from",
            "claims_documents",
            "group",
            "by",
            "document_type_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__claims_documents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__claims_documents.document_type_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__claims_documents.created_date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__claims_documents.document_type_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_and_eClaims",
        "query": "SELECT Claim_Status_Description, MAX(Claim_Stage_ID) FROM Claims_Processing_Stages GROUP BY Claim_Status_Description;",
        "question": "Select claim status description and maximum claim stage id from claims processing stages grouped by claim status description ",
        "tables": [
            "Staff",
            "Claim_Headers",
            "Claims_Processing",
            "Policies",
            "Customers",
            "Claims_Documents",
            "Claims_Processing_Stages"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "claim",
            "status",
            "description",
            "and",
            "maximum",
            "claim",
            "stage",
            "id",
            "from",
            "claims",
            "processing",
            "stages",
            "grouped",
            "by",
            "claim",
            "status",
            "description"
        ],
        "query_toks": [
            "SELECT",
            "Claim_Status_Description",
            ",",
            "MAX",
            "(",
            "Claim_Stage_ID",
            ")",
            "FROM",
            "Claims_Processing_Stages",
            "GROUP",
            "BY",
            "Claim_Status_Description"
        ],
        "query_toks_no_value": [
            "select",
            "claim_status_description",
            ",",
            "max",
            "(",
            "claim_stage_id",
            ")",
            "from",
            "claims_processing_stages",
            "group",
            "by",
            "claim_status_description"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__claims_processing_stages__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__claims_processing_stages.claim_status_description__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__claims_processing_stages.claim_stage_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__claims_processing_stages.claim_status_description__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_1",
        "query": "SELECT DEPT_EXTENSION, MIN(EMP_NUM) FROM DEPARTMENT GROUP BY DEPT_EXTENSION;",
        "question": "Select department extension and minimum employee number from department grouped by department extension ",
        "tables": [
            "DEPARTMENT",
            "STUDENT",
            "PROFESSOR",
            "CLASS",
            "EMPLOYEE",
            "ENROLL",
            "COURSE"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "department",
            "extension",
            "and",
            "minimum",
            "employee",
            "number",
            "from",
            "department",
            "grouped",
            "by",
            "department",
            "extension"
        ],
        "query_toks": [
            "SELECT",
            "DEPT_EXTENSION",
            ",",
            "MIN",
            "(",
            "EMP_NUM",
            ")",
            "FROM",
            "DEPARTMENT",
            "GROUP",
            "BY",
            "DEPT_EXTENSION"
        ],
        "query_toks_no_value": [
            "select",
            "dept_extension",
            ",",
            "min",
            "(",
            "emp_num",
            ")",
            "from",
            "department",
            "group",
            "by",
            "dept_extension"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__department__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__department.dept_extension__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__department.emp_num__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__department.dept_extension__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_1",
        "query": "SELECT STU_PHONE, MIN(PROF_NUM) FROM STUDENT GROUP BY STU_PHONE;",
        "question": "Select student phone and minimum professor number from student grouped by student phone ",
        "tables": [
            "DEPARTMENT",
            "STUDENT",
            "PROFESSOR",
            "CLASS",
            "EMPLOYEE",
            "ENROLL",
            "COURSE"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "student",
            "phone",
            "and",
            "minimum",
            "professor",
            "number",
            "from",
            "student",
            "grouped",
            "by",
            "student",
            "phone"
        ],
        "query_toks": [
            "SELECT",
            "STU_PHONE",
            ",",
            "MIN",
            "(",
            "PROF_NUM",
            ")",
            "FROM",
            "STUDENT",
            "GROUP",
            "BY",
            "STU_PHONE"
        ],
        "query_toks_no_value": [
            "select",
            "stu_phone",
            ",",
            "min",
            "(",
            "prof_num",
            ")",
            "from",
            "student",
            "group",
            "by",
            "stu_phone"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.stu_phone__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__student.prof_num__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__student.stu_phone__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_1",
        "query": "SELECT PROF_OFFICE, MIN(EMP_NUM) FROM PROFESSOR GROUP BY PROF_OFFICE;",
        "question": "Select professor office and minimum employee number from professor grouped by professor office ",
        "tables": [
            "DEPARTMENT",
            "STUDENT",
            "PROFESSOR",
            "CLASS",
            "EMPLOYEE",
            "ENROLL",
            "COURSE"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "professor",
            "office",
            "and",
            "minimum",
            "employee",
            "number",
            "from",
            "professor",
            "grouped",
            "by",
            "professor",
            "office"
        ],
        "query_toks": [
            "SELECT",
            "PROF_OFFICE",
            ",",
            "MIN",
            "(",
            "EMP_NUM",
            ")",
            "FROM",
            "PROFESSOR",
            "GROUP",
            "BY",
            "PROF_OFFICE"
        ],
        "query_toks_no_value": [
            "select",
            "prof_office",
            ",",
            "min",
            "(",
            "emp_num",
            ")",
            "from",
            "professor",
            "group",
            "by",
            "prof_office"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__professor__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__professor.prof_office__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__professor.emp_num__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__professor.prof_office__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_1",
        "query": "SELECT CLASS_ROOM, MAX(PROF_NUM) FROM CLASS GROUP BY CLASS_ROOM;",
        "question": "Select class room and maximum professor employee number from class grouped by class room ",
        "tables": [
            "DEPARTMENT",
            "STUDENT",
            "PROFESSOR",
            "CLASS",
            "EMPLOYEE",
            "ENROLL",
            "COURSE"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "class",
            "room",
            "and",
            "maximum",
            "professor",
            "employee",
            "number",
            "from",
            "class",
            "grouped",
            "by",
            "class",
            "room"
        ],
        "query_toks": [
            "SELECT",
            "CLASS_ROOM",
            ",",
            "MAX",
            "(",
            "PROF_NUM",
            ")",
            "FROM",
            "CLASS",
            "GROUP",
            "BY",
            "CLASS_ROOM"
        ],
        "query_toks_no_value": [
            "select",
            "class_room",
            ",",
            "max",
            "(",
            "prof_num",
            ")",
            "from",
            "class",
            "group",
            "by",
            "class_room"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__class__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__class.class_room__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__class.prof_num__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__class.class_room__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_1",
        "query": "SELECT EMP_LNAME, MIN(EMP_NUM) FROM EMPLOYEE GROUP BY EMP_LNAME;",
        "question": "Select employee last name and minimum employee number from employee grouped by employee last name ",
        "tables": [
            "DEPARTMENT",
            "STUDENT",
            "PROFESSOR",
            "CLASS",
            "EMPLOYEE",
            "ENROLL",
            "COURSE"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "employee",
            "last",
            "name",
            "and",
            "minimum",
            "employee",
            "number",
            "from",
            "employee",
            "grouped",
            "by",
            "employee",
            "last",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "EMP_LNAME",
            ",",
            "MIN",
            "(",
            "EMP_NUM",
            ")",
            "FROM",
            "EMPLOYEE",
            "GROUP",
            "BY",
            "EMP_LNAME"
        ],
        "query_toks_no_value": [
            "select",
            "emp_lname",
            ",",
            "min",
            "(",
            "emp_num",
            ")",
            "from",
            "employee",
            "group",
            "by",
            "emp_lname"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__employee__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__employee.emp_lname__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__employee.emp_num__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__employee.emp_lname__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_1",
        "query": "SELECT CLASS_CODE, MAX(STU_NUM) FROM ENROLL GROUP BY CLASS_CODE;",
        "question": "Select class code and maximum student number from enroll grouped by class code ",
        "tables": [
            "DEPARTMENT",
            "STUDENT",
            "PROFESSOR",
            "CLASS",
            "EMPLOYEE",
            "ENROLL",
            "COURSE"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "class",
            "code",
            "and",
            "maximum",
            "student",
            "number",
            "from",
            "enroll",
            "grouped",
            "by",
            "class",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "CLASS_CODE",
            ",",
            "MAX",
            "(",
            "STU_NUM",
            ")",
            "FROM",
            "ENROLL",
            "GROUP",
            "BY",
            "CLASS_CODE"
        ],
        "query_toks_no_value": [
            "select",
            "class_code",
            ",",
            "max",
            "(",
            "stu_num",
            ")",
            "from",
            "enroll",
            "group",
            "by",
            "class_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__enroll__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__enroll.class_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__enroll.stu_num__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__enroll.class_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_1",
        "query": "SELECT CRS_CODE, MAX(CRS_CREDIT) FROM COURSE GROUP BY CRS_CODE;",
        "question": "Select course code and maximum course credit from course grouped by course code ",
        "tables": [
            "DEPARTMENT",
            "STUDENT",
            "PROFESSOR",
            "CLASS",
            "EMPLOYEE",
            "ENROLL",
            "COURSE"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "course",
            "code",
            "and",
            "maximum",
            "course",
            "credit",
            "from",
            "course",
            "grouped",
            "by",
            "course",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "CRS_CODE",
            ",",
            "MAX",
            "(",
            "CRS_CREDIT",
            ")",
            "FROM",
            "COURSE",
            "GROUP",
            "BY",
            "CRS_CODE"
        ],
        "query_toks_no_value": [
            "select",
            "crs_code",
            ",",
            "max",
            "(",
            "crs_credit",
            ")",
            "from",
            "course",
            "group",
            "by",
            "crs_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__course__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__course.crs_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__course.crs_credit__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__course.crs_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_mdm",
        "query": "SELECT cmi_details, MIN(master_customer_id) FROM Customer_Master_Index GROUP BY cmi_details;",
        "question": "Select cmi details and minimum master customer id from customer master index grouped by cmi details ",
        "tables": [
            "Customer_Master_Index",
            "Parking_Fines",
            "Benefits_Overpayments",
            "CMI_Cross_References",
            "Council_Tax",
            "Rent_Arrears",
            "Electoral_Register",
            "Business_Rates"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "cmi",
            "details",
            "and",
            "minimum",
            "master",
            "customer",
            "id",
            "from",
            "customer",
            "master",
            "index",
            "grouped",
            "by",
            "cmi",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "cmi_details",
            ",",
            "MIN",
            "(",
            "master_customer_id",
            ")",
            "FROM",
            "Customer_Master_Index",
            "GROUP",
            "BY",
            "cmi_details"
        ],
        "query_toks_no_value": [
            "select",
            "cmi_details",
            ",",
            "min",
            "(",
            "master_customer_id",
            ")",
            "from",
            "customer_master_index",
            "group",
            "by",
            "cmi_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_master_index__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_master_index.cmi_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__customer_master_index.master_customer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customer_master_index.cmi_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_mdm",
        "query": "SELECT source_system_code, MIN(master_customer_id) FROM CMI_Cross_References GROUP BY source_system_code;",
        "question": "Select source system code and minimum master customer id from cmi cross references grouped by source system code ",
        "tables": [
            "Customer_Master_Index",
            "Parking_Fines",
            "Benefits_Overpayments",
            "CMI_Cross_References",
            "Council_Tax",
            "Rent_Arrears",
            "Electoral_Register",
            "Business_Rates"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "source",
            "system",
            "code",
            "and",
            "minimum",
            "master",
            "customer",
            "id",
            "from",
            "cmi",
            "cross",
            "references",
            "grouped",
            "by",
            "source",
            "system",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "source_system_code",
            ",",
            "MIN",
            "(",
            "master_customer_id",
            ")",
            "FROM",
            "CMI_Cross_References",
            "GROUP",
            "BY",
            "source_system_code"
        ],
        "query_toks_no_value": [
            "select",
            "source_system_code",
            ",",
            "min",
            "(",
            "master_customer_id",
            ")",
            "from",
            "cmi_cross_references",
            "group",
            "by",
            "source_system_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__cmi_cross_references__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__cmi_cross_references.source_system_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__cmi_cross_references.master_customer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__cmi_cross_references.source_system_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "book_2",
        "query": "SELECT Writer, MAX(Issues) FROM book GROUP BY Writer;",
        "question": "Select writer and maximum issues from book grouped by writer ",
        "tables": [
            "book",
            "publication"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "writer",
            "and",
            "maximum",
            "issues",
            "from",
            "book",
            "grouped",
            "by",
            "writer"
        ],
        "query_toks": [
            "SELECT",
            "Writer",
            ",",
            "MAX",
            "(",
            "Issues",
            ")",
            "FROM",
            "book",
            "GROUP",
            "BY",
            "Writer"
        ],
        "query_toks_no_value": [
            "select",
            "writer",
            ",",
            "max",
            "(",
            "issues",
            ")",
            "from",
            "book",
            "group",
            "by",
            "writer"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__book__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__book.writer__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__book.issues__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__book.writer__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "book_2",
        "query": "SELECT Publisher, MIN(Book_ID) FROM publication GROUP BY Publisher;",
        "question": "Select publisher and minimum book id from publication grouped by publisher ",
        "tables": [
            "book",
            "publication"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "publisher",
            "and",
            "minimum",
            "book",
            "id",
            "from",
            "publication",
            "grouped",
            "by",
            "publisher"
        ],
        "query_toks": [
            "SELECT",
            "Publisher",
            ",",
            "MIN",
            "(",
            "Book_ID",
            ")",
            "FROM",
            "publication",
            "GROUP",
            "BY",
            "Publisher"
        ],
        "query_toks_no_value": [
            "select",
            "publisher",
            ",",
            "min",
            "(",
            "book_id",
            ")",
            "from",
            "publication",
            "group",
            "by",
            "publisher"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__publication__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__publication.publisher__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__publication.book_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__publication.publisher__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hr_1",
        "query": "SELECT COUNTRY_NAME, MAX(REGION_ID) FROM countries GROUP BY COUNTRY_NAME;",
        "question": "Select country name and maximum region id from countries grouped by country name ",
        "tables": [
            "countries",
            "regions",
            "locations",
            "jobs",
            "job_history",
            "departments",
            "employees"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "country",
            "name",
            "and",
            "maximum",
            "region",
            "id",
            "from",
            "countries",
            "grouped",
            "by",
            "country",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "COUNTRY_NAME",
            "(",
            "COUNTRY_NAME",
            ")",
            "MAX",
            "(",
            "REGION_ID",
            ")",
            "FROM",
            "countrie",
            "(",
            "countrie",
            ")",
            "GROUP",
            "BY",
            "COUNTRY_NAME",
            "(",
            "COUNTRY_NAME",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "country_name",
            "(",
            "country_name",
            ")",
            "max",
            "(",
            "region_id",
            ")",
            "from",
            "countrie",
            "(",
            "countrie",
            ")",
            "group",
            "by",
            "country_name",
            "(",
            "country_name",
            ")"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__countries__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__countries.country_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__countries.region_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__countries.country_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hr_1",
        "query": "SELECT REGION_NAME, MIN(REGION_ID) FROM regions GROUP BY REGION_NAME;",
        "question": "Select region name and minimum region id from regions grouped by region name ",
        "tables": [
            "countries",
            "regions",
            "locations",
            "jobs",
            "job_history",
            "departments",
            "employees"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "region",
            "name",
            "and",
            "minimum",
            "region",
            "id",
            "from",
            "regions",
            "grouped",
            "by",
            "region",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "REGION_NAME",
            ",",
            "MIN",
            "(",
            "REGION_ID",
            ")",
            "FROM",
            "regions",
            "GROUP",
            "BY",
            "REGION_NAME"
        ],
        "query_toks_no_value": [
            "select",
            "region_name",
            ",",
            "min",
            "(",
            "region_id",
            ")",
            "from",
            "regions",
            "group",
            "by",
            "region_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__regions__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__regions.region_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__regions.region_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__regions.region_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hr_1",
        "query": "SELECT STATE_PROVINCE, MAX(LOCATION_ID) FROM locations GROUP BY STATE_PROVINCE;",
        "question": "Select state province and maximum location id from locations grouped by state province ",
        "tables": [
            "countries",
            "regions",
            "locations",
            "jobs",
            "job_history",
            "departments",
            "employees"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "state",
            "province",
            "and",
            "maximum",
            "location",
            "id",
            "from",
            "locations",
            "grouped",
            "by",
            "state",
            "province"
        ],
        "query_toks": [
            "SELECT",
            "STATE_PROVINCE",
            ",",
            "MAX",
            "(",
            "LOCATION_ID",
            ")",
            "FROM",
            "locations",
            "GROUP",
            "BY",
            "STATE_PROVINCE"
        ],
        "query_toks_no_value": [
            "select",
            "state_province",
            ",",
            "max",
            "(",
            "location_id",
            ")",
            "from",
            "locations",
            "group",
            "by",
            "state_province"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__locations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__locations.state_province__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__locations.location_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__locations.state_province__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hr_1",
        "query": "SELECT JOB_TITLE, MAX(MAX_SALARY) FROM jobs GROUP BY JOB_TITLE;",
        "question": "Select job title and maximum max salary from jobs grouped by job title ",
        "tables": [
            "countries",
            "regions",
            "locations",
            "jobs",
            "job_history",
            "departments",
            "employees"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "job",
            "title",
            "and",
            "maximum",
            "max",
            "salary",
            "from",
            "jobs",
            "grouped",
            "by",
            "job",
            "title"
        ],
        "query_toks": [
            "SELECT",
            "JOB_TITLE",
            ",",
            "MAX",
            "(",
            "MAX_SALARY",
            ")",
            "FROM",
            "jobs",
            "GROUP",
            "BY",
            "JOB_TITLE"
        ],
        "query_toks_no_value": [
            "select",
            "job_title",
            ",",
            "max",
            "(",
            "max_salary",
            ")",
            "from",
            "jobs",
            "group",
            "by",
            "job_title"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__jobs__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__jobs.job_title__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__jobs.max_salary__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__jobs.job_title__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hr_1",
        "query": "SELECT JOB_ID, MAX(DEPARTMENT_ID) FROM job_history GROUP BY JOB_ID;",
        "question": "Select job id and maximum department id from job history grouped by job id ",
        "tables": [
            "countries",
            "regions",
            "locations",
            "jobs",
            "job_history",
            "departments",
            "employees"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "job",
            "id",
            "and",
            "maximum",
            "department",
            "id",
            "from",
            "job",
            "history",
            "grouped",
            "by",
            "job",
            "id"
        ],
        "query_toks": [
            "SELECT",
            "JOB_ID",
            ",",
            "MAX",
            "(",
            "DEPARTMENT_ID",
            ")",
            "FROM",
            "job_history",
            "GROUP",
            "BY",
            "JOB_ID"
        ],
        "query_toks_no_value": [
            "select",
            "job_id",
            ",",
            "max",
            "(",
            "department_id",
            ")",
            "from",
            "job_history",
            "group",
            "by",
            "job_id"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__job_history__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__job_history.job_id__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__job_history.department_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__job_history.job_id__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hr_1",
        "query": "SELECT DEPARTMENT_NAME, MIN(DEPARTMENT_ID) FROM departments GROUP BY DEPARTMENT_NAME;",
        "question": "Select department name and minimum department id from departments grouped by department name ",
        "tables": [
            "countries",
            "regions",
            "locations",
            "jobs",
            "job_history",
            "departments",
            "employees"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "department",
            "name",
            "and",
            "minimum",
            "department",
            "id",
            "from",
            "departments",
            "grouped",
            "by",
            "department",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "DEPARTMENT_NAME",
            ",",
            "MIN",
            "(",
            "DEPARTMENT_ID",
            ")",
            "FROM",
            "departments",
            "GROUP",
            "BY",
            "DEPARTMENT_NAME"
        ],
        "query_toks_no_value": [
            "select",
            "department_name",
            ",",
            "min",
            "(",
            "department_id",
            ")",
            "from",
            "departments",
            "group",
            "by",
            "department_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__departments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__departments.department_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__departments.department_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__departments.department_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hr_1",
        "query": "SELECT LAST_NAME, MIN(DEPARTMENT_ID) FROM employees GROUP BY LAST_NAME;",
        "question": "Select last name and minimum department id from employees grouped by last name ",
        "tables": [
            "countries",
            "regions",
            "locations",
            "jobs",
            "job_history",
            "departments",
            "employees"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "last",
            "name",
            "and",
            "minimum",
            "department",
            "id",
            "from",
            "employees",
            "grouped",
            "by",
            "last",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "LAST_NAME",
            ",",
            "MIN",
            "(",
            "DEPARTMENT_ID",
            ")",
            "FROM",
            "employees",
            "GROUP",
            "BY",
            "LAST_NAME"
        ],
        "query_toks_no_value": [
            "select",
            "last_name",
            ",",
            "min",
            "(",
            "department_id",
            ")",
            "from",
            "employees",
            "group",
            "by",
            "last_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__employees__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__employees.last_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__employees.department_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__employees.last_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_1",
        "query": "SELECT date, MAX(acceleration) FROM Player_Attributes GROUP BY date;",
        "question": "Select date and maximum acceleration from player attributes grouped by date ",
        "tables": [
            "sqlite_sequence",
            "Player_Attributes",
            "League",
            "Team_Attributes",
            "Player",
            "Team",
            "Country"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "date",
            "and",
            "maximum",
            "acceleration",
            "from",
            "player",
            "attributes",
            "grouped",
            "by",
            "date"
        ],
        "query_toks": [
            "SELECT",
            "date",
            ",",
            "MAX",
            "(",
            "acceleration",
            ")",
            "FROM",
            "Player_Attributes",
            "GROUP",
            "BY",
            "date"
        ],
        "query_toks_no_value": [
            "select",
            "date",
            ",",
            "max",
            "(",
            "acceleration",
            ")",
            "from",
            "player_attributes",
            "group",
            "by",
            "date"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__player_attributes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__player_attributes.date__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__player_attributes.acceleration__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__player_attributes.date__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_1",
        "query": "SELECT name, MIN(id) FROM League GROUP BY name;",
        "question": "Select name and minimum id from league grouped by name ",
        "tables": [
            "sqlite_sequence",
            "Player_Attributes",
            "League",
            "Team_Attributes",
            "Player",
            "Team",
            "Country"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "minimum",
            "id",
            "from",
            "league",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "MIN",
            "(",
            "id",
            ")",
            "FROM",
            "League",
            "GROUP",
            "BY",
            "name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "min",
            "(",
            "id",
            ")",
            "from",
            "league",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__league__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__league.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__league.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__league.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_1",
        "query": "SELECT chanceCreationCrossingClass, MIN(chanceCreationPassing) FROM Team_Attributes GROUP BY chanceCreationCrossingClass;",
        "question": "Select chance creation crossing class and minimum chance creation passing from team attributes grouped by chance creation crossing class ",
        "tables": [
            "sqlite_sequence",
            "Player_Attributes",
            "League",
            "Team_Attributes",
            "Player",
            "Team",
            "Country"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "chance",
            "creation",
            "crossing",
            "class",
            "and",
            "minimum",
            "chance",
            "creation",
            "passing",
            "from",
            "team",
            "attributes",
            "grouped",
            "by",
            "chance",
            "creation",
            "crossing",
            "class"
        ],
        "query_toks": [
            "SELECT",
            "chanceCreationCrossingClass",
            ",",
            "MIN",
            "(",
            "chanceCreationPassing",
            ")",
            "FROM",
            "Team_Attributes",
            "GROUP",
            "BY",
            "chanceCreationCrossingClass"
        ],
        "query_toks_no_value": [
            "select",
            "chancecreationcrossingclass",
            ",",
            "min",
            "(",
            "chancecreationpassing",
            ")",
            "from",
            "team_attributes",
            "group",
            "by",
            "chancecreationcrossingclass"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__team_attributes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__team_attributes.chancecreationcrossingclass__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__team_attributes.chancecreationpassing__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__team_attributes.chancecreationcrossingclass__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_1",
        "query": "SELECT player_name, MIN(player_fifa_api_id) FROM Player GROUP BY player_name;",
        "question": "Select player name and minimum player fifa api id from player grouped by player name ",
        "tables": [
            "sqlite_sequence",
            "Player_Attributes",
            "League",
            "Team_Attributes",
            "Player",
            "Team",
            "Country"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "player",
            "name",
            "and",
            "minimum",
            "player",
            "fifa",
            "api",
            "id",
            "from",
            "player",
            "grouped",
            "by",
            "player",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "player_name",
            ",",
            "MIN",
            "(",
            "player_fifa_api_id",
            ")",
            "FROM",
            "Player",
            "GROUP",
            "BY",
            "player_name"
        ],
        "query_toks_no_value": [
            "select",
            "player_name",
            ",",
            "min",
            "(",
            "player_fifa_api_id",
            ")",
            "from",
            "player",
            "group",
            "by",
            "player_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__player__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__player.player_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__player.player_fifa_api_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__player.player_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_1",
        "query": "SELECT team_long_name, MAX(id) FROM Team GROUP BY team_long_name;",
        "question": "Select team long name and maximum id from team grouped by team long name ",
        "tables": [
            "sqlite_sequence",
            "Player_Attributes",
            "League",
            "Team_Attributes",
            "Player",
            "Team",
            "Country"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "team",
            "long",
            "name",
            "and",
            "maximum",
            "id",
            "from",
            "team",
            "grouped",
            "by",
            "team",
            "long",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "team_long_name",
            ",",
            "MAX",
            "(",
            "id",
            ")",
            "FROM",
            "Team",
            "GROUP",
            "BY",
            "team_long_name"
        ],
        "query_toks_no_value": [
            "select",
            "team_long_name",
            ",",
            "max",
            "(",
            "id",
            ")",
            "from",
            "team",
            "group",
            "by",
            "team_long_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__team__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__team.team_long_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__team.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__team.team_long_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_1",
        "query": "SELECT name, MIN(id) FROM Country GROUP BY name;",
        "question": "Select name and minimum id from country grouped by name ",
        "tables": [
            "sqlite_sequence",
            "Player_Attributes",
            "League",
            "Team_Attributes",
            "Player",
            "Team",
            "Country"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "minimum",
            "id",
            "from",
            "country",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "MIN",
            "(",
            "id",
            ")",
            "FROM",
            "Countr",
            "(",
            "Countr",
            ")",
            "GROUP",
            "BY",
            "name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "min",
            "(",
            "id",
            ")",
            "from",
            "countr",
            "(",
            "countr",
            ")",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__country__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__country.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__country.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__country.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT password, MIN(address_id) FROM staff GROUP BY password;",
        "question": "Select password and minimum address id from staff grouped by password ",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "password",
            "and",
            "minimum",
            "address",
            "id",
            "from",
            "staff",
            "grouped",
            "by",
            "password"
        ],
        "query_toks": [
            "SELECT",
            "password",
            ",",
            "MIN",
            "(",
            "address_id",
            ")",
            "FROM",
            "staff",
            "GROUP",
            "BY",
            "password"
        ],
        "query_toks_no_value": [
            "select",
            "password",
            ",",
            "min",
            "(",
            "address_id",
            ")",
            "from",
            "staff",
            "group",
            "by",
            "password"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__staff__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__staff.password__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__staff.address_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__staff.password__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT title, MIN(film_id) FROM film_text GROUP BY title;",
        "question": "Select title and minimum film id from film text grouped by title ",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "title",
            "and",
            "minimum",
            "film",
            "id",
            "from",
            "film",
            "text",
            "grouped",
            "by",
            "title"
        ],
        "query_toks": [
            "SELECT",
            "title",
            ",",
            "MIN",
            "(",
            "film_id",
            ")",
            "FROM",
            "film_text",
            "GROUP",
            "BY",
            "title"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            ",",
            "min",
            "(",
            "film_id",
            ")",
            "from",
            "film_text",
            "group",
            "by",
            "title"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__film_text__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__film_text.title__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__film_text.film_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__film_text.title__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT city, MAX(city_id) FROM city GROUP BY city;",
        "question": "Select city and maximum city id from city grouped by city ",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "city",
            "and",
            "maximum",
            "city",
            "id",
            "from",
            "city",
            "grouped",
            "by",
            "city"
        ],
        "query_toks": [
            "SELECT",
            "city",
            ",",
            "MAX",
            "(",
            "city_id",
            ")",
            "FROM",
            "city",
            "GROUP",
            "BY",
            "city"
        ],
        "query_toks_no_value": [
            "select",
            "city",
            ",",
            "max",
            "(",
            "city_id",
            ")",
            "from",
            "city",
            "group",
            "by",
            "city"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__city__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__city.city__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__city.city_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__city.city__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT rating, MAX(rental_duration) FROM film GROUP BY rating;",
        "question": "Select rating and maximum rental duration from film grouped by rating ",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "rating",
            "and",
            "maximum",
            "rental",
            "duration",
            "from",
            "film",
            "grouped",
            "by",
            "rating"
        ],
        "query_toks": [
            "SELECT",
            "rating",
            ",",
            "MAX",
            "(",
            "rental_duration",
            ")",
            "FROM",
            "film",
            "GROUP",
            "BY",
            "rating"
        ],
        "query_toks_no_value": [
            "select",
            "rating",
            ",",
            "max",
            "(",
            "rental_duration",
            ")",
            "from",
            "film",
            "group",
            "by",
            "rating"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__film__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__film.rating__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__film.rental_duration__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__film.rating__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT name, MIN(language_id) FROM language GROUP BY name;",
        "question": "Select name and minimum language id from language grouped by name ",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "minimum",
            "language",
            "id",
            "from",
            "language",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "MIN",
            "(",
            "language_id",
            ")",
            "FROM",
            "language",
            "GROUP",
            "BY",
            "name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "min",
            "(",
            "language_id",
            ")",
            "from",
            "language",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__language__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__language.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__language.language_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__language.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT phone, MIN(city_id) FROM address GROUP BY phone;",
        "question": "Select phone and minimum city id from address grouped by phone ",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "phone",
            "and",
            "minimum",
            "city",
            "id",
            "from",
            "address",
            "grouped",
            "by",
            "phone"
        ],
        "query_toks": [
            "SELECT",
            "phone",
            ",",
            "MIN",
            "(",
            "city_id",
            ")",
            "FROM",
            "address",
            "GROUP",
            "BY",
            "phone"
        ],
        "query_toks_no_value": [
            "select",
            "phone",
            ",",
            "min",
            "(",
            "city_id",
            ")",
            "from",
            "address",
            "group",
            "by",
            "phone"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__address__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__address.phone__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__address.city_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__address.phone__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT name, MIN(category_id) FROM category GROUP BY name;",
        "question": "Select name and minimum category id from category grouped by name ",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "minimum",
            "category",
            "id",
            "from",
            "category",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "MIN",
            "(",
            "category_id",
            ")",
            "FROM",
            "category",
            "GROUP",
            "BY",
            "name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "min",
            "(",
            "category_id",
            ")",
            "from",
            "category",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__category__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__category.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__category.category_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__category.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT last_name, MIN(actor_id) FROM actor GROUP BY last_name;",
        "question": "Select last name and minimum actor id from actor grouped by last name ",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "last",
            "name",
            "and",
            "minimum",
            "actor",
            "id",
            "from",
            "actor",
            "grouped",
            "by",
            "last",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "last_name",
            ",",
            "MIN",
            "(",
            "actor_id",
            ")",
            "FROM",
            "actor",
            "GROUP",
            "BY",
            "last_name"
        ],
        "query_toks_no_value": [
            "select",
            "last_name",
            ",",
            "min",
            "(",
            "actor_id",
            ")",
            "from",
            "actor",
            "group",
            "by",
            "last_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__actor__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__actor.last_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__actor.actor_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__actor.last_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT last_name, MIN(address_id) FROM customer GROUP BY last_name;",
        "question": "Select last name and minimum address id from customer grouped by last name ",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "last",
            "name",
            "and",
            "minimum",
            "address",
            "id",
            "from",
            "customer",
            "grouped",
            "by",
            "last",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "last_name",
            ",",
            "MIN",
            "(",
            "address_id",
            ")",
            "FROM",
            "customer",
            "GROUP",
            "BY",
            "last_name"
        ],
        "query_toks_no_value": [
            "select",
            "last_name",
            ",",
            "min",
            "(",
            "address_id",
            ")",
            "from",
            "customer",
            "group",
            "by",
            "last_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer.last_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__customer.address_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customer.last_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT country, MIN(country_id) FROM country GROUP BY country;",
        "question": "Select country and minimum country id from country grouped by country ",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "country",
            "and",
            "minimum",
            "country",
            "id",
            "from",
            "country",
            "grouped",
            "by",
            "country"
        ],
        "query_toks": [
            "SELECT",
            "country",
            "(",
            "country",
            ")",
            "MIN",
            "(",
            "country_id",
            ")",
            "FROM",
            "countr",
            "(",
            "countr",
            ")",
            "GROUP",
            "BY",
            "country",
            "(",
            "country",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            "(",
            "country",
            ")",
            "min",
            "(",
            "country_id",
            ")",
            "from",
            "countr",
            "(",
            "countr",
            ")",
            "group",
            "by",
            "country",
            "(",
            "country",
            ")"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__country__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__country.country__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__country.country_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__country.country__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "real_estate_properties",
        "query": "SELECT property_feature_description, MAX(property_id) FROM Other_Property_Features GROUP BY property_feature_description;",
        "question": "Select property feature description and maximum property id from other property features grouped by property feature description ",
        "tables": [
            "Ref_Feature_Types",
            "Ref_Property_Types",
            "Other_Property_Features",
            "Properties",
            "Other_Available_Features"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "property",
            "feature",
            "description",
            "and",
            "maximum",
            "property",
            "id",
            "from",
            "other",
            "property",
            "features",
            "grouped",
            "by",
            "property",
            "feature",
            "description"
        ],
        "query_toks": [
            "SELECT",
            "property_feature_description",
            ",",
            "MAX",
            "(",
            "property_id",
            ")",
            "FROM",
            "Other_Property_Features",
            "GROUP",
            "BY",
            "property_feature_description"
        ],
        "query_toks_no_value": [
            "select",
            "property_feature_description",
            ",",
            "max",
            "(",
            "property_id",
            ")",
            "from",
            "other_property_features",
            "group",
            "by",
            "property_feature_description"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__other_property_features__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__other_property_features.property_feature_description__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__other_property_features.property_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__other_property_features.property_feature_description__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "real_estate_properties",
        "query": "SELECT apt_feature_2, MAX(buyer_offered_price) FROM Properties GROUP BY apt_feature_2;",
        "question": "Select apt feature 2 and maximum buyer offered price from properties grouped by apt feature 2 ",
        "tables": [
            "Ref_Feature_Types",
            "Ref_Property_Types",
            "Other_Property_Features",
            "Properties",
            "Other_Available_Features"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "apt",
            "feature",
            "2",
            "and",
            "maximum",
            "buyer",
            "offered",
            "price",
            "from",
            "properties",
            "grouped",
            "by",
            "apt",
            "feature",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "apt_feature_2",
            ",",
            "MAX",
            "(",
            "buyer_offered_price",
            ")",
            "FROM",
            "Properties",
            "GROUP",
            "BY",
            "apt_feature_2"
        ],
        "query_toks_no_value": [
            "select",
            "apt_feature_2",
            ",",
            "max",
            "(",
            "buyer_offered_price",
            ")",
            "from",
            "properties",
            "group",
            "by",
            "apt_feature_2"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__properties__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__properties.apt_feature_2__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__properties.buyer_offered_price__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__properties.apt_feature_2__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "real_estate_properties",
        "query": "SELECT feature_description, MIN(feature_id) FROM Other_Available_Features GROUP BY feature_description;",
        "question": "Select feature description and minimum feature id from other available features grouped by feature description ",
        "tables": [
            "Ref_Feature_Types",
            "Ref_Property_Types",
            "Other_Property_Features",
            "Properties",
            "Other_Available_Features"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "feature",
            "description",
            "and",
            "minimum",
            "feature",
            "id",
            "from",
            "other",
            "available",
            "features",
            "grouped",
            "by",
            "feature",
            "description"
        ],
        "query_toks": [
            "SELECT",
            "feature_description",
            ",",
            "MIN",
            "(",
            "feature_id",
            ")",
            "FROM",
            "Other_Available_Features",
            "GROUP",
            "BY",
            "feature_description"
        ],
        "query_toks_no_value": [
            "select",
            "feature_description",
            ",",
            "min",
            "(",
            "feature_id",
            ")",
            "from",
            "other_available_features",
            "group",
            "by",
            "feature_description"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__other_available_features__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__other_available_features.feature_description__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__other_available_features.feature_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__other_available_features.feature_description__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_3",
        "query": "SELECT Building, MAX(DPhone) FROM Department GROUP BY Building;",
        "question": "Select building and maximum department phone from department grouped by building ",
        "tables": [
            "Minor_in",
            "Department",
            "Student",
            "Enrolled_in",
            "Gradeconversion",
            "Member_of",
            "Faculty",
            "Course"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "building",
            "and",
            "maximum",
            "department",
            "phone",
            "from",
            "department",
            "grouped",
            "by",
            "building"
        ],
        "query_toks": [
            "SELECT",
            "Building",
            ",",
            "MAX",
            "(",
            "DPhone",
            ")",
            "FROM",
            "Department",
            "GROUP",
            "BY",
            "Building"
        ],
        "query_toks_no_value": [
            "select",
            "building",
            ",",
            "max",
            "(",
            "dphone",
            ")",
            "from",
            "department",
            "group",
            "by",
            "building"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__department__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__department.building__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__department.dphone__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__department.building__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_3",
        "query": "SELECT LName, MAX(StuID) FROM Student GROUP BY LName;",
        "question": "Select last name and maximum student id from student grouped by last name ",
        "tables": [
            "Minor_in",
            "Department",
            "Student",
            "Enrolled_in",
            "Gradeconversion",
            "Member_of",
            "Faculty",
            "Course"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "last",
            "name",
            "and",
            "maximum",
            "student",
            "id",
            "from",
            "student",
            "grouped",
            "by",
            "last",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "LName",
            ",",
            "MAX",
            "(",
            "StuID",
            ")",
            "FROM",
            "Student",
            "GROUP",
            "BY",
            "LName"
        ],
        "query_toks_no_value": [
            "select",
            "lname",
            ",",
            "max",
            "(",
            "stuid",
            ")",
            "from",
            "student",
            "group",
            "by",
            "lname"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.lname__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__student.stuid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__student.lname__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_3",
        "query": "SELECT Grade, MIN(StuID) FROM Enrolled_in GROUP BY Grade;",
        "question": "Select grade and minimum student id from enrolled in grouped by grade ",
        "tables": [
            "Minor_in",
            "Department",
            "Student",
            "Enrolled_in",
            "Gradeconversion",
            "Member_of",
            "Faculty",
            "Course"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "grade",
            "and",
            "minimum",
            "student",
            "id",
            "from",
            "enrolled",
            "in",
            "grouped",
            "by",
            "grade"
        ],
        "query_toks": [
            "SELECT",
            "Grade",
            ",",
            "MIN",
            "(",
            "StuID",
            ")",
            "FROM",
            "Enrolled_in",
            "GROUP",
            "BY",
            "Grade"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            ",",
            "min",
            "(",
            "stuid",
            ")",
            "from",
            "enrolled_in",
            "group",
            "by",
            "grade"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__enrolled_in__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__enrolled_in.grade__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__enrolled_in.stuid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__enrolled_in.grade__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_3",
        "query": "SELECT lettergrade, MAX(gradepoint) FROM Gradeconversion GROUP BY lettergrade;",
        "question": "Select letter grade and maximum grade point from grade conversion grouped by letter grade ",
        "tables": [
            "Minor_in",
            "Department",
            "Student",
            "Enrolled_in",
            "Gradeconversion",
            "Member_of",
            "Faculty",
            "Course"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "letter",
            "grade",
            "and",
            "maximum",
            "grade",
            "point",
            "from",
            "grade",
            "conversion",
            "grouped",
            "by",
            "letter",
            "grade"
        ],
        "query_toks": [
            "SELECT",
            "lettergrade",
            ",",
            "MAX",
            "(",
            "gradepoint",
            ")",
            "FROM",
            "Gradeconversion",
            "GROUP",
            "BY",
            "lettergrade"
        ],
        "query_toks_no_value": [
            "select",
            "lettergrade",
            ",",
            "max",
            "(",
            "gradepoint",
            ")",
            "from",
            "gradeconversion",
            "group",
            "by",
            "lettergrade"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__gradeconversion__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__gradeconversion.lettergrade__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__gradeconversion.gradepoint__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__gradeconversion.lettergrade__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_3",
        "query": "SELECT Appt_Type, MIN(FacID) FROM Member_of GROUP BY Appt_Type;",
        "question": "Select appt type and minimum faculty id from member of grouped by appt type ",
        "tables": [
            "Minor_in",
            "Department",
            "Student",
            "Enrolled_in",
            "Gradeconversion",
            "Member_of",
            "Faculty",
            "Course"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "appt",
            "type",
            "and",
            "minimum",
            "faculty",
            "id",
            "from",
            "member",
            "of",
            "grouped",
            "by",
            "appt",
            "type"
        ],
        "query_toks": [
            "SELECT",
            "Appt_Type",
            ",",
            "MIN",
            "(",
            "FacID",
            ")",
            "FROM",
            "Member_of",
            "GROUP",
            "BY",
            "Appt_Type"
        ],
        "query_toks_no_value": [
            "select",
            "appt_type",
            ",",
            "min",
            "(",
            "facid",
            ")",
            "from",
            "member_of",
            "group",
            "by",
            "appt_type"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__member_of__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__member_of.appt_type__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__member_of.facid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__member_of.appt_type__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_3",
        "query": "SELECT Fname, MIN(Phone) FROM Faculty GROUP BY Fname;",
        "question": "Select first name and minimum phone from faculty grouped by first name ",
        "tables": [
            "Minor_in",
            "Department",
            "Student",
            "Enrolled_in",
            "Gradeconversion",
            "Member_of",
            "Faculty",
            "Course"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "first",
            "name",
            "and",
            "minimum",
            "phone",
            "from",
            "faculty",
            "grouped",
            "by",
            "first",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Fname",
            ",",
            "MIN",
            "(",
            "Phone",
            ")",
            "FROM",
            "Faculty",
            "GROUP",
            "BY",
            "Fname"
        ],
        "query_toks_no_value": [
            "select",
            "fname",
            ",",
            "min",
            "(",
            "phone",
            ")",
            "from",
            "faculty",
            "group",
            "by",
            "fname"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__faculty__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__faculty.fname__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__faculty.phone__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__faculty.fname__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_3",
        "query": "SELECT Hours, MAX(Instructor) FROM Course GROUP BY Hours;",
        "question": "Select hours and maximum instructor from course grouped by hours ",
        "tables": [
            "Minor_in",
            "Department",
            "Student",
            "Enrolled_in",
            "Gradeconversion",
            "Member_of",
            "Faculty",
            "Course"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "hours",
            "and",
            "maximum",
            "instructor",
            "from",
            "course",
            "grouped",
            "by",
            "hours"
        ],
        "query_toks": [
            "SELECT",
            "Hours",
            ",",
            "MAX",
            "(",
            "Instructor",
            ")",
            "FROM",
            "Course",
            "GROUP",
            "BY",
            "Hours"
        ],
        "query_toks_no_value": [
            "select",
            "hours",
            ",",
            "max",
            "(",
            "instructor",
            ")",
            "from",
            "course",
            "group",
            "by",
            "hours"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__course__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__course.hours__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__course.instructor__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__course.hours__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Hometown, MIN(Teacher_ID) FROM teacher GROUP BY Hometown;",
        "question": "Select hometown and minimum teacher id from teacher grouped by hometown ",
        "tables": [
            "course_arrange",
            "teacher",
            "course"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "hometown",
            "and",
            "minimum",
            "teacher",
            "id",
            "from",
            "teacher",
            "grouped",
            "by",
            "hometown"
        ],
        "query_toks": [
            "SELECT",
            "Hometown",
            ",",
            "MIN",
            "(",
            "Teacher_ID",
            ")",
            "FROM",
            "teacher",
            "GROUP",
            "BY",
            "Hometown"
        ],
        "query_toks_no_value": [
            "select",
            "hometown",
            ",",
            "min",
            "(",
            "teacher_id",
            ")",
            "from",
            "teacher",
            "group",
            "by",
            "hometown"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__teacher__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__teacher.hometown__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__teacher.teacher_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__teacher.hometown__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Course, MAX(Course_ID) FROM course GROUP BY Course;",
        "question": "Select course and maximum course id from course grouped by course ",
        "tables": [
            "course_arrange",
            "teacher",
            "course"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "course",
            "and",
            "maximum",
            "course",
            "id",
            "from",
            "course",
            "grouped",
            "by",
            "course"
        ],
        "query_toks": [
            "SELECT",
            "Course",
            ",",
            "MAX",
            "(",
            "Course_ID",
            ")",
            "FROM",
            "course",
            "GROUP",
            "BY",
            "Course"
        ],
        "query_toks_no_value": [
            "select",
            "course",
            ",",
            "max",
            "(",
            "course_id",
            ")",
            "from",
            "course",
            "group",
            "by",
            "course"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__course__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__course.course__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__course.course_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__course.course__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "roller_coaster",
        "query": "SELECT Name, MAX(Roller_Coaster_ID) FROM roller_coaster GROUP BY Name;",
        "question": "Select name and maximum roller coaster id from roller coaster grouped by name ",
        "tables": [
            "roller_coaster",
            "country"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "maximum",
            "roller",
            "coaster",
            "id",
            "from",
            "roller",
            "coaster",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "MAX",
            "(",
            "Roller_Coaster_ID",
            ")",
            "FROM",
            "roller_coaster",
            "GROUP",
            "BY",
            "Name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "max",
            "(",
            "roller_coaster_id",
            ")",
            "from",
            "roller_coaster",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__roller_coaster__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__roller_coaster.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__roller_coaster.roller_coaster_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__roller_coaster.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "roller_coaster",
        "query": "SELECT Name, MIN(Area) FROM country GROUP BY Name;",
        "question": "Select name and minimum area from country grouped by name ",
        "tables": [
            "roller_coaster",
            "country"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "minimum",
            "area",
            "from",
            "country",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "MIN",
            "(",
            "Area",
            ")",
            "FROM",
            "countr",
            "(",
            "countr",
            ")",
            "GROUP",
            "BY",
            "Name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "min",
            "(",
            "area",
            ")",
            "from",
            "countr",
            "(",
            "countr",
            ")",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__country__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__country.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__country.area__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__country.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT order_status_code, MAX(regular_order_id) FROM Actual_Orders GROUP BY order_status_code;",
        "question": "Select order status code and maximum regular order id from actual orders grouped by order status code ",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "order",
            "status",
            "code",
            "and",
            "maximum",
            "regular",
            "order",
            "id",
            "from",
            "actual",
            "orders",
            "grouped",
            "by",
            "order",
            "status",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "order_status_code",
            ",",
            "MAX",
            "(",
            "regular_order_id",
            ")",
            "FROM",
            "Actual_Orders",
            "GROUP",
            "BY",
            "order_status_code"
        ],
        "query_toks_no_value": [
            "select",
            "order_status_code",
            ",",
            "max",
            "(",
            "regular_order_id",
            ")",
            "from",
            "actual_orders",
            "group",
            "by",
            "order_status_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__actual_orders__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__actual_orders.order_status_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__actual_orders.regular_order_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__actual_orders.order_status_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT product_name, MAX(product_id) FROM Products GROUP BY product_name;",
        "question": "Select product name and maximum product id from products grouped by product name ",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "product",
            "name",
            "and",
            "maximum",
            "product",
            "id",
            "from",
            "products",
            "grouped",
            "by",
            "product",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "product_name",
            ",",
            "MAX",
            "(",
            "product_id",
            ")",
            "FROM",
            "Products",
            "GROUP",
            "BY",
            "product_name"
        ],
        "query_toks_no_value": [
            "select",
            "product_name",
            ",",
            "max",
            "(",
            "product_id",
            ")",
            "from",
            "products",
            "group",
            "by",
            "product_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products.product_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__products.product_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__products.product_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT route_name, MAX(route_id) FROM Delivery_Routes GROUP BY route_name;",
        "question": "Select route name and maximum route id from delivery routes grouped by route name ",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "route",
            "name",
            "and",
            "maximum",
            "route",
            "id",
            "from",
            "delivery",
            "routes",
            "grouped",
            "by",
            "route",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "route_name",
            ",",
            "MAX",
            "(",
            "route_id",
            ")",
            "FROM",
            "Delivery_Routes",
            "GROUP",
            "BY",
            "route_name"
        ],
        "query_toks_no_value": [
            "select",
            "route_name",
            ",",
            "max",
            "(",
            "route_id",
            ")",
            "from",
            "delivery_routes",
            "group",
            "by",
            "route_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__delivery_routes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__delivery_routes.route_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__delivery_routes.route_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__delivery_routes.route_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT country, MIN(address_id) FROM Addresses GROUP BY country;",
        "question": "Select country and minimum address id from addresses grouped by country ",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "country",
            "and",
            "minimum",
            "address",
            "id",
            "from",
            "addresses",
            "grouped",
            "by",
            "country"
        ],
        "query_toks": [
            "SELECT",
            "country",
            "(",
            "country",
            ")",
            "MIN",
            "(",
            "address_id",
            ")",
            "FROM",
            "Addresses",
            "GROUP",
            "BY",
            "country",
            "(",
            "country",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "country",
            "(",
            "country",
            ")",
            "min",
            "(",
            "address_id",
            ")",
            "from",
            "addresses",
            "group",
            "by",
            "country",
            "(",
            "country",
            ")"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__addresses.country__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__addresses.address_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__addresses.country__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT location_code, MAX(location_address_id) FROM Delivery_Route_Locations GROUP BY location_code;",
        "question": "Select location code and maximum location address id from delivery route locations grouped by location code ",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "location",
            "code",
            "and",
            "maximum",
            "location",
            "address",
            "id",
            "from",
            "delivery",
            "route",
            "locations",
            "grouped",
            "by",
            "location",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "location_code",
            ",",
            "MAX",
            "(",
            "location_address_id",
            ")",
            "FROM",
            "Delivery_Route_Locations",
            "GROUP",
            "BY",
            "location_code"
        ],
        "query_toks_no_value": [
            "select",
            "location_code",
            ",",
            "max",
            "(",
            "location_address_id",
            ")",
            "from",
            "delivery_route_locations",
            "group",
            "by",
            "location_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__delivery_route_locations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__delivery_route_locations.location_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__delivery_route_locations.location_address_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__delivery_route_locations.location_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT address_type, MIN(customer_id) FROM Customer_Addresses GROUP BY address_type;",
        "question": "Select address type and minimum customer id from customer addresses grouped by address type ",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "address",
            "type",
            "and",
            "minimum",
            "customer",
            "id",
            "from",
            "customer",
            "addresses",
            "grouped",
            "by",
            "address",
            "type"
        ],
        "query_toks": [
            "SELECT",
            "address_type",
            ",",
            "MIN",
            "(",
            "customer_id",
            ")",
            "FROM",
            "Customer_Addresses",
            "GROUP",
            "BY",
            "address_type"
        ],
        "query_toks_no_value": [
            "select",
            "address_type",
            ",",
            "min",
            "(",
            "customer_id",
            ")",
            "from",
            "customer_addresses",
            "group",
            "by",
            "address_type"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_addresses.address_type__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__customer_addresses.customer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customer_addresses.address_type__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT payment_method, MIN(customer_id) FROM Customers GROUP BY payment_method;",
        "question": "Select payment method and minimum customer id from customers grouped by payment method ",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "payment",
            "method",
            "and",
            "minimum",
            "customer",
            "id",
            "from",
            "customers",
            "grouped",
            "by",
            "payment",
            "method"
        ],
        "query_toks": [
            "SELECT",
            "payment_method",
            ",",
            "MIN",
            "(",
            "customer_id",
            ")",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "payment_method"
        ],
        "query_toks_no_value": [
            "select",
            "payment_method",
            ",",
            "min",
            "(",
            "customer_id",
            ")",
            "from",
            "customers",
            "group",
            "by",
            "payment_method"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.payment_method__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customers.payment_method__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT location_code, MIN(actual_order_id) FROM Order_Deliveries GROUP BY location_code;",
        "question": "Select location code and minimum actual order id from order deliveries grouped by location code ",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "location",
            "code",
            "and",
            "minimum",
            "actual",
            "order",
            "id",
            "from",
            "order",
            "deliveries",
            "grouped",
            "by",
            "location",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "location_code",
            ",",
            "MIN",
            "(",
            "actual_order_id",
            ")",
            "FROM",
            "Order_Deliveries",
            "GROUP",
            "BY",
            "location_code"
        ],
        "query_toks_no_value": [
            "select",
            "location_code",
            ",",
            "min",
            "(",
            "actual_order_id",
            ")",
            "from",
            "order_deliveries",
            "group",
            "by",
            "location_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__order_deliveries__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__order_deliveries.location_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__order_deliveries.actual_order_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__order_deliveries.location_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT truck_details, MAX(truck_id) FROM Trucks GROUP BY truck_details;",
        "question": "Select truck details and maximum truck id from trucks grouped by truck details ",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "truck",
            "details",
            "and",
            "maximum",
            "truck",
            "id",
            "from",
            "trucks",
            "grouped",
            "by",
            "truck",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "truck_details",
            ",",
            "MAX",
            "(",
            "truck_id",
            ")",
            "FROM",
            "Trucks",
            "GROUP",
            "BY",
            "truck_details"
        ],
        "query_toks_no_value": [
            "select",
            "truck_details",
            ",",
            "max",
            "(",
            "truck_id",
            ")",
            "from",
            "trucks",
            "group",
            "by",
            "truck_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__trucks__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__trucks.truck_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__trucks.truck_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__trucks.truck_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT employee_name, MIN(employee_address_id) FROM Employees GROUP BY employee_name;",
        "question": "Select employee name and minimum employee address id from employees grouped by employee name ",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "employee",
            "name",
            "and",
            "minimum",
            "employee",
            "address",
            "id",
            "from",
            "employees",
            "grouped",
            "by",
            "employee",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "employee_name",
            ",",
            "MIN",
            "(",
            "employee_address_id",
            ")",
            "FROM",
            "Employees",
            "GROUP",
            "BY",
            "employee_name"
        ],
        "query_toks_no_value": [
            "select",
            "employee_name",
            ",",
            "min",
            "(",
            "employee_address_id",
            ")",
            "from",
            "employees",
            "group",
            "by",
            "employee_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__employees__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__employees.employee_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__employees.employee_address_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__employees.employee_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "game_injury",
        "query": "SELECT Source, MAX(game_id) FROM injury_accident GROUP BY Source;",
        "question": "Select source and maximum game id from injury accident grouped by source ",
        "tables": [
            "injury_accident",
            "stadium",
            "game"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "source",
            "and",
            "maximum",
            "game",
            "id",
            "from",
            "injury",
            "accident",
            "grouped",
            "by",
            "source"
        ],
        "query_toks": [
            "SELECT",
            "Source",
            ",",
            "MAX",
            "(",
            "game_id",
            ")",
            "FROM",
            "injury_accident",
            "GROUP",
            "BY",
            "Source"
        ],
        "query_toks_no_value": [
            "select",
            "source",
            ",",
            "max",
            "(",
            "game_id",
            ")",
            "from",
            "injury_accident",
            "group",
            "by",
            "source"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__injury_accident__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__injury_accident.source__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__injury_accident.game_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__injury_accident.source__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "game_injury",
        "query": "SELECT name, MAX(Home_Games) FROM stadium GROUP BY name;",
        "question": "Select name and maximum home games from stadium grouped by name ",
        "tables": [
            "injury_accident",
            "stadium",
            "game"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "maximum",
            "home",
            "games",
            "from",
            "stadium",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "MAX",
            "(",
            "Home_Games",
            ")",
            "FROM",
            "stadium",
            "GROUP",
            "BY",
            "name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "max",
            "(",
            "home_games",
            ")",
            "from",
            "stadium",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__stadium__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__stadium.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__stadium.home_games__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__stadium.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "game_injury",
        "query": "SELECT Competition, MIN(Season) FROM game GROUP BY Competition;",
        "question": "Select competition and minimum season from game grouped by competition ",
        "tables": [
            "injury_accident",
            "stadium",
            "game"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "competition",
            "and",
            "minimum",
            "season",
            "from",
            "game",
            "grouped",
            "by",
            "competition"
        ],
        "query_toks": [
            "SELECT",
            "Competition",
            ",",
            "MIN",
            "(",
            "Season",
            ")",
            "FROM",
            "game",
            "GROUP",
            "BY",
            "Competition"
        ],
        "query_toks_no_value": [
            "select",
            "competition",
            ",",
            "min",
            "(",
            "season",
            ")",
            "from",
            "game",
            "group",
            "by",
            "competition"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__game__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__game.competition__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__game.season__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__game.competition__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "school_finance",
        "query": "SELECT Budget_invested_percent, MAX(total_budget_percent_invested) FROM budget GROUP BY Budget_invested_percent;",
        "question": "Select budget invested percent and maximum total budget percent invested from budget grouped by budget invested percent ",
        "tables": [
            "budget",
            "School",
            "endowment"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "budget",
            "invested",
            "percent",
            "and",
            "maximum",
            "total",
            "budget",
            "percent",
            "invested",
            "from",
            "budget",
            "grouped",
            "by",
            "budget",
            "invested",
            "percent"
        ],
        "query_toks": [
            "SELECT",
            "Budget_invested_percent",
            ",",
            "MAX",
            "(",
            "total_budget_percent_invested",
            ")",
            "FROM",
            "budget",
            "GROUP",
            "BY",
            "Budget_invested_percent"
        ],
        "query_toks_no_value": [
            "select",
            "budget_invested_percent",
            ",",
            "max",
            "(",
            "total_budget_percent_invested",
            ")",
            "from",
            "budget",
            "group",
            "by",
            "budget_invested_percent"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__budget__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__budget.budget_invested_percent__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__budget.total_budget_percent_invested__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__budget.budget_invested_percent__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "school_finance",
        "query": "SELECT County, MIN(Enrollment) FROM School GROUP BY County;",
        "question": "Select county and minimum enrollment from school grouped by county ",
        "tables": [
            "budget",
            "School",
            "endowment"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "county",
            "and",
            "minimum",
            "enrollment",
            "from",
            "school",
            "grouped",
            "by",
            "county"
        ],
        "query_toks": [
            "SELECT",
            "County",
            "(",
            "County",
            ")",
            "MIN",
            "(",
            "Enrollment",
            ")",
            "FROM",
            "School",
            "GROUP",
            "BY",
            "County",
            "(",
            "County",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "county",
            "(",
            "county",
            ")",
            "min",
            "(",
            "enrollment",
            ")",
            "from",
            "school",
            "group",
            "by",
            "county",
            "(",
            "county",
            ")"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__school__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__school.county__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__school.enrollment__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__school.county__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "school_finance",
        "query": "SELECT donator_name, MIN(School_id) FROM endowment GROUP BY donator_name;",
        "question": "Select donator name and minimum school id from endowment grouped by donator name ",
        "tables": [
            "budget",
            "School",
            "endowment"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "donator",
            "name",
            "and",
            "minimum",
            "school",
            "id",
            "from",
            "endowment",
            "grouped",
            "by",
            "donator",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "donator_name",
            ",",
            "MIN",
            "(",
            "School_id",
            ")",
            "FROM",
            "endowment",
            "GROUP",
            "BY",
            "donator_name"
        ],
        "query_toks_no_value": [
            "select",
            "donator_name",
            ",",
            "min",
            "(",
            "school_id",
            ")",
            "from",
            "endowment",
            "group",
            "by",
            "donator_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__endowment__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__endowment.donator_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__endowment.school_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__endowment.donator_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "scholar",
        "query": "SELECT authorName, MAX(authorId) FROM author GROUP BY authorName;",
        "question": "Select author name and maximum author id from author grouped by author name ",
        "tables": [
            "author",
            "venue",
            "writes",
            "keyphrase",
            "cite",
            "paper",
            "dataset",
            "journal",
            "paperKeyphrase",
            "paperDataset"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "author",
            "name",
            "and",
            "maximum",
            "author",
            "id",
            "from",
            "author",
            "grouped",
            "by",
            "author",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "authorName",
            ",",
            "MAX",
            "(",
            "authorId",
            ")",
            "FROM",
            "author",
            "GROUP",
            "BY",
            "authorName"
        ],
        "query_toks_no_value": [
            "select",
            "authorname",
            ",",
            "max",
            "(",
            "authorid",
            ")",
            "from",
            "author",
            "group",
            "by",
            "authorname"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__author__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__author.authorname__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__author.authorid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__author.authorname__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "scholar",
        "query": "SELECT venueName, MIN(venueId) FROM venue GROUP BY venueName;",
        "question": "Select venue name and minimum venue id from venue grouped by venue name ",
        "tables": [
            "author",
            "venue",
            "writes",
            "keyphrase",
            "cite",
            "paper",
            "dataset",
            "journal",
            "paperKeyphrase",
            "paperDataset"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "venue",
            "name",
            "and",
            "minimum",
            "venue",
            "id",
            "from",
            "venue",
            "grouped",
            "by",
            "venue",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "venueName",
            ",",
            "MIN",
            "(",
            "venueId",
            ")",
            "FROM",
            "venue",
            "GROUP",
            "BY",
            "venueName"
        ],
        "query_toks_no_value": [
            "select",
            "venuename",
            ",",
            "min",
            "(",
            "venueid",
            ")",
            "from",
            "venue",
            "group",
            "by",
            "venuename"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__venue__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__venue.venuename__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__venue.venueid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__venue.venuename__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "scholar",
        "query": "SELECT keyphraseName, MAX(keyphraseId) FROM keyphrase GROUP BY keyphraseName;",
        "question": "Select key phrase name and maximum key phrase id from key phrase grouped by key phrase name ",
        "tables": [
            "author",
            "venue",
            "writes",
            "keyphrase",
            "cite",
            "paper",
            "dataset",
            "journal",
            "paperKeyphrase",
            "paperDataset"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "key",
            "phrase",
            "name",
            "and",
            "maximum",
            "key",
            "phrase",
            "id",
            "from",
            "key",
            "phrase",
            "grouped",
            "by",
            "key",
            "phrase",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "keyphraseName",
            ",",
            "MAX",
            "(",
            "keyphraseId",
            ")",
            "FROM",
            "keyphrase",
            "GROUP",
            "BY",
            "keyphraseName"
        ],
        "query_toks_no_value": [
            "select",
            "keyphrasename",
            ",",
            "max",
            "(",
            "keyphraseid",
            ")",
            "from",
            "keyphrase",
            "group",
            "by",
            "keyphrasename"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__keyphrase__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__keyphrase.keyphrasename__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__keyphrase.keyphraseid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__keyphrase.keyphrasename__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "scholar",
        "query": "SELECT title, MAX(journalId) FROM paper GROUP BY title;",
        "question": "Select title and maximum journal id from paper grouped by title ",
        "tables": [
            "author",
            "venue",
            "writes",
            "keyphrase",
            "cite",
            "paper",
            "dataset",
            "journal",
            "paperKeyphrase",
            "paperDataset"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "title",
            "and",
            "maximum",
            "journal",
            "id",
            "from",
            "paper",
            "grouped",
            "by",
            "title"
        ],
        "query_toks": [
            "SELECT",
            "title",
            ",",
            "MAX",
            "(",
            "journalId",
            ")",
            "FROM",
            "paper",
            "GROUP",
            "BY",
            "title"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            ",",
            "max",
            "(",
            "journalid",
            ")",
            "from",
            "paper",
            "group",
            "by",
            "title"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__paper__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__paper.title__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__paper.journalid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__paper.title__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "scholar",
        "query": "SELECT datasetName, MIN(datasetId) FROM dataset GROUP BY datasetName;",
        "question": "Select dataset name and minimum dataset id from dataset grouped by dataset name ",
        "tables": [
            "author",
            "venue",
            "writes",
            "keyphrase",
            "cite",
            "paper",
            "dataset",
            "journal",
            "paperKeyphrase",
            "paperDataset"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "dataset",
            "name",
            "and",
            "minimum",
            "dataset",
            "id",
            "from",
            "dataset",
            "grouped",
            "by",
            "dataset",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "datasetName",
            ",",
            "MIN",
            "(",
            "datasetId",
            ")",
            "FROM",
            "dataset",
            "GROUP",
            "BY",
            "datasetName"
        ],
        "query_toks_no_value": [
            "select",
            "datasetname",
            ",",
            "min",
            "(",
            "datasetid",
            ")",
            "from",
            "dataset",
            "group",
            "by",
            "datasetname"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__dataset__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__dataset.datasetname__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__dataset.datasetid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__dataset.datasetname__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "scholar",
        "query": "SELECT journalName, MAX(journalId) FROM journal GROUP BY journalName;",
        "question": "Select journal name and maximum journal id from journal grouped by journal name ",
        "tables": [
            "author",
            "venue",
            "writes",
            "keyphrase",
            "cite",
            "paper",
            "dataset",
            "journal",
            "paperKeyphrase",
            "paperDataset"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "journal",
            "name",
            "and",
            "maximum",
            "journal",
            "id",
            "from",
            "journal",
            "grouped",
            "by",
            "journal",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "journalName",
            ",",
            "MAX",
            "(",
            "journalId",
            ")",
            "FROM",
            "journal",
            "GROUP",
            "BY",
            "journalName"
        ],
        "query_toks_no_value": [
            "select",
            "journalname",
            ",",
            "max",
            "(",
            "journalid",
            ")",
            "from",
            "journal",
            "group",
            "by",
            "journalname"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__journal__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__journal.journalname__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__journal.journalid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__journal.journalname__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_1",
        "query": "SELECT contestant_name, MIN(contestant_number) FROM CONTESTANTS GROUP BY contestant_name;",
        "question": "Select contestant name and minimum contestant number from contestants grouped by contestant name ",
        "tables": [
            "CONTESTANTS",
            "VOTES",
            "AREA_CODE_STATE"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "contestant",
            "name",
            "and",
            "minimum",
            "contestant",
            "number",
            "from",
            "contestants",
            "grouped",
            "by",
            "contestant",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "contestant_name",
            ",",
            "MIN",
            "(",
            "contestant_number",
            ")",
            "FROM",
            "CONTESTANTS",
            "GROUP",
            "BY",
            "contestant_name"
        ],
        "query_toks_no_value": [
            "select",
            "contestant_name",
            ",",
            "min",
            "(",
            "contestant_number",
            ")",
            "from",
            "contestants",
            "group",
            "by",
            "contestant_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__contestants__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__contestants.contestant_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__contestants.contestant_number__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__contestants.contestant_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_1",
        "query": "SELECT state, MAX(phone_number) FROM VOTES GROUP BY state;",
        "question": "Select state and maximum phone number from votes grouped by state ",
        "tables": [
            "CONTESTANTS",
            "VOTES",
            "AREA_CODE_STATE"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "state",
            "and",
            "maximum",
            "phone",
            "number",
            "from",
            "votes",
            "grouped",
            "by",
            "state"
        ],
        "query_toks": [
            "SELECT",
            "state",
            ",",
            "MAX",
            "(",
            "phone_number",
            ")",
            "FROM",
            "VOTES",
            "GROUP",
            "BY",
            "state"
        ],
        "query_toks_no_value": [
            "select",
            "state",
            ",",
            "max",
            "(",
            "phone_number",
            ")",
            "from",
            "votes",
            "group",
            "by",
            "state"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__votes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__votes.state__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__votes.phone_number__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__votes.state__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_1",
        "query": "SELECT state, MAX(area_code) FROM AREA_CODE_STATE GROUP BY state;",
        "question": "Select state and maximum area code from area code state grouped by state ",
        "tables": [
            "CONTESTANTS",
            "VOTES",
            "AREA_CODE_STATE"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "state",
            "and",
            "maximum",
            "area",
            "code",
            "from",
            "area",
            "code",
            "state",
            "grouped",
            "by",
            "state"
        ],
        "query_toks": [
            "SELECT",
            "state",
            ",",
            "MAX",
            "(",
            "area_code",
            ")",
            "FROM",
            "AREA_CODE_STATE",
            "GROUP",
            "BY",
            "state"
        ],
        "query_toks_no_value": [
            "select",
            "state",
            ",",
            "max",
            "(",
            "area_code",
            ")",
            "from",
            "area_code_state",
            "group",
            "by",
            "state"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__area_code_state__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__area_code_state.state__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__area_code_state.area_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__area_code_state.state__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "match_season",
        "query": "SELECT Years_Played, MIN(Team) FROM player GROUP BY Years_Played;",
        "question": "Select years played and minimum team from player grouped by years played ",
        "tables": [
            "player",
            "match_season",
            "team",
            "country"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "years",
            "played",
            "and",
            "minimum",
            "team",
            "from",
            "player",
            "grouped",
            "by",
            "years",
            "played"
        ],
        "query_toks": [
            "SELECT",
            "Years_Played",
            ",",
            "MIN",
            "(",
            "Team",
            ")",
            "FROM",
            "player",
            "GROUP",
            "BY",
            "Years_Played"
        ],
        "query_toks_no_value": [
            "select",
            "years_played",
            ",",
            "min",
            "(",
            "team",
            ")",
            "from",
            "player",
            "group",
            "by",
            "years_played"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__player__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__player.years_played__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__player.team__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__player.years_played__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "match_season",
        "query": "SELECT Player, MIN(Country) FROM match_season GROUP BY Player;",
        "question": "Select player and minimum country from match season grouped by player ",
        "tables": [
            "player",
            "match_season",
            "team",
            "country"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "player",
            "and",
            "minimum",
            "country",
            "from",
            "match",
            "season",
            "grouped",
            "by",
            "player"
        ],
        "query_toks": [
            "SELECT",
            "Player",
            ",",
            "MIN",
            "(",
            "Country",
            ")",
            "FROM",
            "match_season",
            "GROUP",
            "BY",
            "Player"
        ],
        "query_toks_no_value": [
            "select",
            "player",
            ",",
            "min",
            "(",
            "country",
            ")",
            "from",
            "match_season",
            "group",
            "by",
            "player"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__match_season__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__match_season.player__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__match_season.country__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__match_season.player__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "match_season",
        "query": "SELECT Name, MAX(Team_id) FROM team GROUP BY Name;",
        "question": "Select name and maximum team id from team grouped by name ",
        "tables": [
            "player",
            "match_season",
            "team",
            "country"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "maximum",
            "team",
            "id",
            "from",
            "team",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "MAX",
            "(",
            "Team_id",
            ")",
            "FROM",
            "team",
            "GROUP",
            "BY",
            "Name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "max",
            "(",
            "team_id",
            ")",
            "from",
            "team",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__team__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__team.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__team.team_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__team.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "match_season",
        "query": "SELECT Capital, MAX(Country_id) FROM country GROUP BY Capital;",
        "question": "Select capital and maximum country id from country grouped by capital ",
        "tables": [
            "player",
            "match_season",
            "team",
            "country"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "capital",
            "and",
            "maximum",
            "country",
            "id",
            "from",
            "country",
            "grouped",
            "by",
            "capital"
        ],
        "query_toks": [
            "SELECT",
            "Capital",
            ",",
            "MAX",
            "(",
            "Country_id",
            ")",
            "FROM",
            "countr",
            "(",
            "countr",
            ")",
            "GROUP",
            "BY",
            "Capital"
        ],
        "query_toks_no_value": [
            "select",
            "capital",
            ",",
            "max",
            "(",
            "country_id",
            ")",
            "from",
            "countr",
            "(",
            "countr",
            ")",
            "group",
            "by",
            "capital"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__country__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__country.capital__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__country.country_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__country.capital__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "small_bank_1",
        "query": "SELECT name, MIN(custid) FROM ACCOUNTS GROUP BY name;",
        "question": "Select name and minimum customer id from accounts grouped by name ",
        "tables": [
            "SAVINGS",
            "CHECKING",
            "ACCOUNTS"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "minimum",
            "customer",
            "id",
            "from",
            "accounts",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "MIN",
            "(",
            "custid",
            ")",
            "FROM",
            "ACCOUNTS",
            "GROUP",
            "BY",
            "name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "min",
            "(",
            "custid",
            ")",
            "from",
            "accounts",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__accounts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__accounts.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__accounts.custid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__accounts.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "query": "SELECT loser_entry, MAX(year) FROM matches GROUP BY loser_entry;",
        "question": "Select loser entry and maximum year from matches grouped by loser entry ",
        "tables": [
            "matches",
            "players",
            "rankings"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "loser",
            "entry",
            "and",
            "maximum",
            "year",
            "from",
            "matches",
            "grouped",
            "by",
            "loser",
            "entry"
        ],
        "query_toks": [
            "SELECT",
            "loser_entry",
            ",",
            "MAX",
            "(",
            "year",
            ")",
            "FROM",
            "matches",
            "GROUP",
            "BY",
            "loser_entry"
        ],
        "query_toks_no_value": [
            "select",
            "loser_entry",
            ",",
            "max",
            "(",
            "year",
            ")",
            "from",
            "matches",
            "group",
            "by",
            "loser_entry"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__matches__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__matches.loser_entry__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__matches.year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__matches.loser_entry__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "query": "SELECT last_name, MAX(player_id) FROM players GROUP BY last_name;",
        "question": "Select last name and maximum player id from players grouped by last name ",
        "tables": [
            "matches",
            "players",
            "rankings"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "last",
            "name",
            "and",
            "maximum",
            "player",
            "id",
            "from",
            "players",
            "grouped",
            "by",
            "last",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "last_name",
            ",",
            "MAX",
            "(",
            "player_id",
            ")",
            "FROM",
            "players",
            "GROUP",
            "BY",
            "last_name"
        ],
        "query_toks_no_value": [
            "select",
            "last_name",
            ",",
            "max",
            "(",
            "player_id",
            ")",
            "from",
            "players",
            "group",
            "by",
            "last_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__players__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__players.last_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__players.player_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__players.last_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "yelp",
        "query": "SELECT business_id, MAX(id) FROM neighbourhood GROUP BY business_id;",
        "question": "Select business id and maximum id from neighbourhood grouped by business id ",
        "tables": [
            "neighbourhood",
            "user",
            "tip",
            "business",
            "checkin",
            "review",
            "category"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "business",
            "id",
            "and",
            "maximum",
            "id",
            "from",
            "neighbourhood",
            "grouped",
            "by",
            "business",
            "id"
        ],
        "query_toks": [
            "SELECT",
            "business_id",
            ",",
            "MAX",
            "(",
            "id",
            ")",
            "FROM",
            "neighbourhood",
            "GROUP",
            "BY",
            "business_id"
        ],
        "query_toks_no_value": [
            "select",
            "business_id",
            ",",
            "max",
            "(",
            "id",
            ")",
            "from",
            "neighbourhood",
            "group",
            "by",
            "business_id"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__neighbourhood__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__neighbourhood.business_id__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__neighbourhood.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__neighbourhood.business_id__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "yelp",
        "query": "SELECT user_id, MIN(uid) FROM user GROUP BY user_id;",
        "question": "Select user id and minimum uid from user grouped by user id ",
        "tables": [
            "neighbourhood",
            "user",
            "tip",
            "business",
            "checkin",
            "review",
            "category"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "user",
            "id",
            "and",
            "minimum",
            "uid",
            "from",
            "user",
            "grouped",
            "by",
            "user",
            "id"
        ],
        "query_toks": [
            "SELECT",
            "user_id",
            ",",
            "MIN",
            "(",
            "uid",
            ")",
            "FROM",
            "user",
            "GROUP",
            "BY",
            "user_id"
        ],
        "query_toks_no_value": [
            "select",
            "user_id",
            ",",
            "min",
            "(",
            "uid",
            ")",
            "from",
            "user",
            "group",
            "by",
            "user_id"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__user__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__user.user_id__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__user.uid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__user.user_id__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "yelp",
        "query": "SELECT business_id, MIN(likes) FROM tip GROUP BY business_id;",
        "question": "Select business id and minimum likes from tip grouped by business id ",
        "tables": [
            "neighbourhood",
            "user",
            "tip",
            "business",
            "checkin",
            "review",
            "category"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "business",
            "id",
            "and",
            "minimum",
            "likes",
            "from",
            "tip",
            "grouped",
            "by",
            "business",
            "id"
        ],
        "query_toks": [
            "SELECT",
            "business_id",
            ",",
            "MIN",
            "(",
            "likes",
            ")",
            "FROM",
            "tip",
            "GROUP",
            "BY",
            "business_id"
        ],
        "query_toks_no_value": [
            "select",
            "business_id",
            ",",
            "min",
            "(",
            "likes",
            ")",
            "from",
            "tip",
            "group",
            "by",
            "business_id"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__tip__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__tip.business_id__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__tip.likes__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__tip.business_id__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "yelp",
        "query": "SELECT city, MAX(rating) FROM business GROUP BY city;",
        "question": "Select city and maximum rating from business grouped by city ",
        "tables": [
            "neighbourhood",
            "user",
            "tip",
            "business",
            "checkin",
            "review",
            "category"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "city",
            "and",
            "maximum",
            "rating",
            "from",
            "business",
            "grouped",
            "by",
            "city"
        ],
        "query_toks": [
            "SELECT",
            "city",
            ",",
            "MAX",
            "(",
            "rating",
            ")",
            "FROM",
            "business",
            "GROUP",
            "BY",
            "city"
        ],
        "query_toks_no_value": [
            "select",
            "city",
            ",",
            "max",
            "(",
            "rating",
            ")",
            "from",
            "business",
            "group",
            "by",
            "city"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__business__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__business.city__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__business.rating__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__business.city__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "yelp",
        "query": "SELECT business_id, MAX(cid) FROM checkin GROUP BY business_id;",
        "question": "Select business id and maximum cid from checkin grouped by business id ",
        "tables": [
            "neighbourhood",
            "user",
            "tip",
            "business",
            "checkin",
            "review",
            "category"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "business",
            "id",
            "and",
            "maximum",
            "cid",
            "from",
            "checkin",
            "grouped",
            "by",
            "business",
            "id"
        ],
        "query_toks": [
            "SELECT",
            "business_id",
            ",",
            "MAX",
            "(",
            "cid",
            ")",
            "FROM",
            "checkin",
            "GROUP",
            "BY",
            "business_id"
        ],
        "query_toks_no_value": [
            "select",
            "business_id",
            ",",
            "max",
            "(",
            "cid",
            ")",
            "from",
            "checkin",
            "group",
            "by",
            "business_id"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__checkin__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__checkin.business_id__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__checkin.cid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__checkin.business_id__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "yelp",
        "query": "SELECT month, MAX(rating) FROM review GROUP BY month;",
        "question": "Select month and maximum rating from review grouped by month ",
        "tables": [
            "neighbourhood",
            "user",
            "tip",
            "business",
            "checkin",
            "review",
            "category"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "month",
            "and",
            "maximum",
            "rating",
            "from",
            "review",
            "grouped",
            "by",
            "month"
        ],
        "query_toks": [
            "SELECT",
            "month",
            ",",
            "MAX",
            "(",
            "rating",
            ")",
            "FROM",
            "review",
            "GROUP",
            "BY",
            "month"
        ],
        "query_toks_no_value": [
            "select",
            "month",
            ",",
            "max",
            "(",
            "rating",
            ")",
            "from",
            "review",
            "group",
            "by",
            "month"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__review__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__review.month__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__review.rating__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__review.month__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "yelp",
        "query": "SELECT business_id, MIN(id) FROM category GROUP BY business_id;",
        "question": "Select business id and minimum id from category grouped by business id ",
        "tables": [
            "neighbourhood",
            "user",
            "tip",
            "business",
            "checkin",
            "review",
            "category"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "business",
            "id",
            "and",
            "minimum",
            "id",
            "from",
            "category",
            "grouped",
            "by",
            "business",
            "id"
        ],
        "query_toks": [
            "SELECT",
            "business_id",
            ",",
            "MIN",
            "(",
            "id",
            ")",
            "FROM",
            "category",
            "GROUP",
            "BY",
            "business_id"
        ],
        "query_toks_no_value": [
            "select",
            "business_id",
            ",",
            "min",
            "(",
            "id",
            ")",
            "from",
            "category",
            "group",
            "by",
            "business_id"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__category__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__category.business_id__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__category.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__category.business_id__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_1",
        "query": "SELECT LastName, MIN(Grade) FROM list GROUP BY LastName;",
        "question": "Select last name and minimum grade from list grouped by last name ",
        "tables": [
            "list",
            "teachers"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "last",
            "name",
            "and",
            "minimum",
            "grade",
            "from",
            "list",
            "grouped",
            "by",
            "last",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "LastName",
            ",",
            "MIN",
            "(",
            "Grade",
            ")",
            "FROM",
            "list",
            "GROUP",
            "BY",
            "LastName"
        ],
        "query_toks_no_value": [
            "select",
            "lastname",
            ",",
            "min",
            "(",
            "grade",
            ")",
            "from",
            "list",
            "group",
            "by",
            "lastname"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__list__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__list.lastname__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__list.grade__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__list.lastname__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_1",
        "query": "SELECT LastName, MIN(Classroom) FROM teachers GROUP BY LastName;",
        "question": "Select last name and minimum class room from teachers grouped by last name ",
        "tables": [
            "list",
            "teachers"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "last",
            "name",
            "and",
            "minimum",
            "class",
            "room",
            "from",
            "teachers",
            "grouped",
            "by",
            "last",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "LastName",
            ",",
            "MIN",
            "(",
            "Classroom",
            ")",
            "FROM",
            "teachers",
            "GROUP",
            "BY",
            "LastName"
        ],
        "query_toks_no_value": [
            "select",
            "lastname",
            ",",
            "min",
            "(",
            "classroom",
            ")",
            "from",
            "teachers",
            "group",
            "by",
            "lastname"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__teachers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__teachers.lastname__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__teachers.classroom__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__teachers.lastname__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "manufacturer",
        "query": "SELECT Name, MAX(Manufacturer_ID) FROM manufacturer GROUP BY Name;",
        "question": "Select name and maximum manufacturer id from manufacturer grouped by name ",
        "tables": [
            "manufacturer",
            "furniture",
            "furniture_manufacte"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "maximum",
            "manufacturer",
            "id",
            "from",
            "manufacturer",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "MAX",
            "(",
            "Manufacturer_ID",
            ")",
            "FROM",
            "manufacturer",
            "GROUP",
            "BY",
            "Name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "max",
            "(",
            "manufacturer_id",
            ")",
            "from",
            "manufacturer",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__manufacturer__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__manufacturer.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__manufacturer.manufacturer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__manufacturer.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "manufacturer",
        "query": "SELECT Name, MIN(Num_of_Component) FROM furniture GROUP BY Name;",
        "question": "Select name and minimum num of component from furniture grouped by name ",
        "tables": [
            "manufacturer",
            "furniture",
            "furniture_manufacte"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "minimum",
            "num",
            "of",
            "component",
            "from",
            "furniture",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "MIN",
            "(",
            "Num_of_Component",
            ")",
            "FROM",
            "furniture",
            "GROUP",
            "BY",
            "Name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "min",
            "(",
            "num_of_component",
            ")",
            "from",
            "furniture",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__furniture__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__furniture.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__furniture.num_of_component__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__furniture.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT name, MIN(id) FROM artists GROUP BY name;",
        "question": "Select seq and minimum name from sqlite sequence grouped by seq ",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "seq",
            "and",
            "minimum",
            "name",
            "from",
            "sqlite",
            "sequence",
            "grouped",
            "by",
            "seq"
        ],
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "MIN",
            "(",
            "id",
            ")",
            "FROM",
            "artists",
            "GROUP",
            "BY",
            "name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "min",
            "(",
            "id",
            ")",
            "from",
            "artists",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__artists__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__artists.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__artists.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__artists.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT name, MIN(id) FROM genres GROUP BY name;",
        "question": "Select name and minimum id from genres grouped by name ",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "minimum",
            "id",
            "from",
            "genres",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "MIN",
            "(",
            "id",
            ")",
            "FROM",
            "genres",
            "GROUP",
            "BY",
            "name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "min",
            "(",
            "id",
            ")",
            "from",
            "genres",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__genres__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__genres.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__genres.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__genres.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT name, MIN(id) FROM media_types GROUP BY name;",
        "question": "Select name and minimum id from media types grouped by name ",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "minimum",
            "id",
            "from",
            "media",
            "types",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "MIN",
            "(",
            "id",
            ")",
            "FROM",
            "media_types",
            "GROUP",
            "BY",
            "name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "min",
            "(",
            "id",
            ")",
            "from",
            "media_types",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__media_types__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__media_types.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__media_types.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__media_types.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT billing_city, MIN(total) FROM invoices GROUP BY billing_city;",
        "question": "Select billing city and minimum total from invoices grouped by billing city ",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "billing",
            "city",
            "and",
            "minimum",
            "total",
            "from",
            "invoices",
            "grouped",
            "by",
            "billing",
            "city"
        ],
        "query_toks": [
            "SELECT",
            "billing_city",
            ",",
            "MIN",
            "(",
            "total",
            ")",
            "FROM",
            "invoices",
            "GROUP",
            "BY",
            "billing_city"
        ],
        "query_toks_no_value": [
            "select",
            "billing_city",
            ",",
            "min",
            "(",
            "total",
            ")",
            "from",
            "invoices",
            "group",
            "by",
            "billing_city"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__invoices__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__invoices.billing_city__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__invoices.total__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__invoices.billing_city__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT name, MIN(id) FROM playlists GROUP BY name;",
        "question": "Select name and minimum id from playlists grouped by name ",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "minimum",
            "id",
            "from",
            "playlists",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "MIN",
            "(",
            "id",
            ")",
            "FROM",
            "playlists",
            "GROUP",
            "BY",
            "name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "min",
            "(",
            "id",
            ")",
            "from",
            "playlists",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__playlists__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__playlists.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__playlists.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__playlists.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT company, MIN(id) FROM customers GROUP BY company;",
        "question": "Select company and minimum id from customers grouped by company ",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "company",
            "and",
            "minimum",
            "id",
            "from",
            "customers",
            "grouped",
            "by",
            "company"
        ],
        "query_toks": [
            "SELECT",
            "company",
            ",",
            "MIN",
            "(",
            "id",
            ")",
            "FROM",
            "customers",
            "GROUP",
            "BY",
            "company"
        ],
        "query_toks_no_value": [
            "select",
            "company",
            ",",
            "min",
            "(",
            "id",
            ")",
            "from",
            "customers",
            "group",
            "by",
            "company"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.company__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__customers.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customers.company__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT title, MAX(id) FROM albums GROUP BY title;",
        "question": "Select title and maximum id from albums grouped by title ",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "title",
            "and",
            "maximum",
            "id",
            "from",
            "albums",
            "grouped",
            "by",
            "title"
        ],
        "query_toks": [
            "SELECT",
            "title",
            ",",
            "MAX",
            "(",
            "id",
            ")",
            "FROM",
            "albums",
            "GROUP",
            "BY",
            "title"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            ",",
            "max",
            "(",
            "id",
            ")",
            "from",
            "albums",
            "group",
            "by",
            "title"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__albums__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__albums.title__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__albums.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__albums.title__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT name, MAX(bytes) FROM tracks GROUP BY name;",
        "question": "Select name and maximum bytes from tracks grouped by name ",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "maximum",
            "bytes",
            "from",
            "tracks",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "MAX",
            "(",
            "bytes",
            ")",
            "FROM",
            "tracks",
            "GROUP",
            "BY",
            "name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "max",
            "(",
            "bytes",
            ")",
            "from",
            "tracks",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__tracks__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__tracks.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__tracks.bytes__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__tracks.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT postal_code, MIN(reports_to) FROM employees GROUP BY postal_code;",
        "question": "Select postal code and minimum reports to from employees grouped by postal code ",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "postal",
            "code",
            "and",
            "minimum",
            "reports",
            "to",
            "from",
            "employees",
            "grouped",
            "by",
            "postal",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "postal_code",
            ",",
            "MIN",
            "(",
            "reports_to",
            ")",
            "FROM",
            "employees",
            "GROUP",
            "BY",
            "postal_code"
        ],
        "query_toks_no_value": [
            "select",
            "postal_code",
            ",",
            "min",
            "(",
            "reports_to",
            ")",
            "from",
            "employees",
            "group",
            "by",
            "postal_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__employees__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__employees.postal_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__employees.reports_to__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__employees.postal_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "train_station",
        "query": "SELECT Time, MAX(Train_ID) FROM train GROUP BY Time;",
        "question": "Select time and maximum train id from train grouped by time ",
        "tables": [
            "train_station",
            "train",
            "station"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "time",
            "and",
            "maximum",
            "train",
            "id",
            "from",
            "train",
            "grouped",
            "by",
            "time"
        ],
        "query_toks": [
            "SELECT",
            "Time",
            ",",
            "MAX",
            "(",
            "Train_ID",
            ")",
            "FROM",
            "train",
            "GROUP",
            "BY",
            "Time"
        ],
        "query_toks_no_value": [
            "select",
            "time",
            ",",
            "max",
            "(",
            "train_id",
            ")",
            "from",
            "train",
            "group",
            "by",
            "time"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__train__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__train.time__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__train.train_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__train.time__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "train_station",
        "query": "SELECT Name, MAX(Station_ID) FROM station GROUP BY Name;",
        "question": "Select name and maximum station id from station grouped by name ",
        "tables": [
            "train_station",
            "train",
            "station"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "maximum",
            "station",
            "id",
            "from",
            "station",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "MAX",
            "(",
            "Station_ID",
            ")",
            "FROM",
            "station",
            "GROUP",
            "BY",
            "Name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "max",
            "(",
            "station_id",
            ")",
            "from",
            "station",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__station__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__station.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__station.station_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__station.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "document_management",
        "query": "SELECT document_structure_code, MIN(access_count) FROM Documents GROUP BY document_structure_code;",
        "question": "Select document structure code and minimum access count from documents grouped by document structure code ",
        "tables": [
            "Roles",
            "Functional_Areas",
            "Documents",
            "Document_Sections",
            "Document_Sections_Images",
            "Images",
            "Users",
            "Document_Functional_Areas",
            "Document_Structures"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "document",
            "structure",
            "code",
            "and",
            "minimum",
            "access",
            "count",
            "from",
            "documents",
            "grouped",
            "by",
            "document",
            "structure",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "document_structure_code",
            ",",
            "MIN",
            "(",
            "access_count",
            ")",
            "FROM",
            "Documents",
            "GROUP",
            "BY",
            "document_structure_code"
        ],
        "query_toks_no_value": [
            "select",
            "document_structure_code",
            ",",
            "min",
            "(",
            "access_count",
            ")",
            "from",
            "documents",
            "group",
            "by",
            "document_structure_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__documents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__documents.document_structure_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__documents.access_count__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__documents.document_structure_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "document_management",
        "query": "SELECT section_code, MAX(section_id) FROM Document_Sections GROUP BY section_code;",
        "question": "Select section code and maximum section id from document sections grouped by section code ",
        "tables": [
            "Roles",
            "Functional_Areas",
            "Documents",
            "Document_Sections",
            "Document_Sections_Images",
            "Images",
            "Users",
            "Document_Functional_Areas",
            "Document_Structures"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "section",
            "code",
            "and",
            "maximum",
            "section",
            "id",
            "from",
            "document",
            "sections",
            "grouped",
            "by",
            "section",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "section_code",
            ",",
            "MAX",
            "(",
            "section_id",
            ")",
            "FROM",
            "Document_Sections",
            "GROUP",
            "BY",
            "section_code"
        ],
        "query_toks_no_value": [
            "select",
            "section_code",
            ",",
            "max",
            "(",
            "section_id",
            ")",
            "from",
            "document_sections",
            "group",
            "by",
            "section_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__document_sections__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__document_sections.section_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__document_sections.section_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__document_sections.section_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "document_management",
        "query": "SELECT image_name, MAX(image_id) FROM Images GROUP BY image_name;",
        "question": "Select image name and maximum image id from images grouped by image name ",
        "tables": [
            "Roles",
            "Functional_Areas",
            "Documents",
            "Document_Sections",
            "Document_Sections_Images",
            "Images",
            "Users",
            "Document_Functional_Areas",
            "Document_Structures"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "image",
            "name",
            "and",
            "maximum",
            "image",
            "id",
            "from",
            "images",
            "grouped",
            "by",
            "image",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "image_name",
            ",",
            "MAX",
            "(",
            "image_id",
            ")",
            "FROM",
            "Images",
            "GROUP",
            "BY",
            "image_name"
        ],
        "query_toks_no_value": [
            "select",
            "image_name",
            ",",
            "max",
            "(",
            "image_id",
            ")",
            "from",
            "images",
            "group",
            "by",
            "image_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__images__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__images.image_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__images.image_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__images.image_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "document_management",
        "query": "SELECT user_name, MIN(user_id) FROM Users GROUP BY user_name;",
        "question": "Select user name and minimum user id from users grouped by user name ",
        "tables": [
            "Roles",
            "Functional_Areas",
            "Documents",
            "Document_Sections",
            "Document_Sections_Images",
            "Images",
            "Users",
            "Document_Functional_Areas",
            "Document_Structures"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "user",
            "name",
            "and",
            "minimum",
            "user",
            "id",
            "from",
            "users",
            "grouped",
            "by",
            "user",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "user_name",
            ",",
            "MIN",
            "(",
            "user_id",
            ")",
            "FROM",
            "Users",
            "GROUP",
            "BY",
            "user_name"
        ],
        "query_toks_no_value": [
            "select",
            "user_name",
            ",",
            "min",
            "(",
            "user_id",
            ")",
            "from",
            "users",
            "group",
            "by",
            "user_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__users__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__users.user_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__users.user_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__users.user_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT nationality, MIN(constructorId) FROM constructors GROUP BY nationality;",
        "question": "Select nationality and minimum constructor id from constructors grouped by nationality ",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "nationality",
            "and",
            "minimum",
            "constructor",
            "id",
            "from",
            "constructors",
            "grouped",
            "by",
            "nationality"
        ],
        "query_toks": [
            "SELECT",
            "nationality",
            ",",
            "MIN",
            "(",
            "constructorId",
            ")",
            "FROM",
            "constructors",
            "GROUP",
            "BY",
            "nationality"
        ],
        "query_toks_no_value": [
            "select",
            "nationality",
            ",",
            "min",
            "(",
            "constructorid",
            ")",
            "from",
            "constructors",
            "group",
            "by",
            "nationality"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__constructors__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__constructors.nationality__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__constructors.constructorid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__constructors.nationality__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT url, MIN(year) FROM seasons GROUP BY url;",
        "question": "Select url and minimum year from seasons grouped by url ",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "url",
            "and",
            "minimum",
            "year",
            "from",
            "seasons",
            "grouped",
            "by",
            "url"
        ],
        "query_toks": [
            "SELECT",
            "url",
            ",",
            "MIN",
            "(",
            "year",
            ")",
            "FROM",
            "seasons",
            "GROUP",
            "BY",
            "url"
        ],
        "query_toks_no_value": [
            "select",
            "url",
            ",",
            "min",
            "(",
            "year",
            ")",
            "from",
            "seasons",
            "group",
            "by",
            "url"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__seasons__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__seasons.url__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__seasons.year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__seasons.url__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT q1, MIN(position) FROM qualifying GROUP BY q1;",
        "question": "Select q1 and minimum position from qualifying grouped by q1 ",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "q1",
            "and",
            "minimum",
            "position",
            "from",
            "qualifying",
            "grouped",
            "by",
            "q1"
        ],
        "query_toks": [
            "SELECT",
            "q1",
            ",",
            "MIN",
            "(",
            "position",
            ")",
            "FROM",
            "qualifying",
            "GROUP",
            "BY",
            "q1"
        ],
        "query_toks_no_value": [
            "select",
            "q1",
            ",",
            "min",
            "(",
            "position",
            ")",
            "from",
            "qualifying",
            "group",
            "by",
            "q1"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__qualifying__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__qualifying.q1__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__qualifying.position__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__qualifying.q1__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT positionText, MIN(driverStandingsId) FROM driverStandings GROUP BY positionText;",
        "question": "Select position text and minimum driver standings id from driver standings grouped by position text ",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "position",
            "text",
            "and",
            "minimum",
            "driver",
            "standings",
            "id",
            "from",
            "driver",
            "standings",
            "grouped",
            "by",
            "position",
            "text"
        ],
        "query_toks": [
            "SELECT",
            "positionText",
            ",",
            "MIN",
            "(",
            "driverStandingsId",
            ")",
            "FROM",
            "driverStandings",
            "GROUP",
            "BY",
            "positionText"
        ],
        "query_toks_no_value": [
            "select",
            "positiontext",
            ",",
            "min",
            "(",
            "driverstandingsid",
            ")",
            "from",
            "driverstandings",
            "group",
            "by",
            "positiontext"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__driverstandings__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__driverstandings.positiontext__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__driverstandings.driverstandingsid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__driverstandings.positiontext__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT positionText, MIN(raceId) FROM constructorStandings GROUP BY positionText;",
        "question": "Select position text and minimum race id from constructor standings grouped by position text ",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "position",
            "text",
            "and",
            "minimum",
            "race",
            "id",
            "from",
            "constructor",
            "standings",
            "grouped",
            "by",
            "position",
            "text"
        ],
        "query_toks": [
            "SELECT",
            "positionText",
            ",",
            "MIN",
            "(",
            "raceId",
            ")",
            "FROM",
            "constructorStandings",
            "GROUP",
            "BY",
            "positionText"
        ],
        "query_toks_no_value": [
            "select",
            "positiontext",
            ",",
            "min",
            "(",
            "raceid",
            ")",
            "from",
            "constructorstandings",
            "group",
            "by",
            "positiontext"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__constructorstandings__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__constructorstandings.positiontext__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__constructorstandings.raceid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__constructorstandings.positiontext__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT surname, MAX(driverId) FROM drivers GROUP BY surname;",
        "question": "Select surname and maximum driver id from drivers grouped by surname ",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "surname",
            "and",
            "maximum",
            "driver",
            "id",
            "from",
            "drivers",
            "grouped",
            "by",
            "surname"
        ],
        "query_toks": [
            "SELECT",
            "surname",
            ",",
            "MAX",
            "(",
            "driverId",
            ")",
            "FROM",
            "drivers",
            "GROUP",
            "BY",
            "surname"
        ],
        "query_toks_no_value": [
            "select",
            "surname",
            ",",
            "max",
            "(",
            "driverid",
            ")",
            "from",
            "drivers",
            "group",
            "by",
            "surname"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__drivers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__drivers.surname__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__drivers.driverid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__drivers.surname__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT time, MIN(milliseconds) FROM lapTimes GROUP BY time;",
        "question": "Select time and minimum milliseconds from lap times grouped by time ",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "time",
            "and",
            "minimum",
            "milliseconds",
            "from",
            "lap",
            "times",
            "grouped",
            "by",
            "time"
        ],
        "query_toks": [
            "SELECT",
            "time",
            ",",
            "MIN",
            "(",
            "milliseconds",
            ")",
            "FROM",
            "lapTimes",
            "GROUP",
            "BY",
            "time"
        ],
        "query_toks_no_value": [
            "select",
            "time",
            ",",
            "min",
            "(",
            "milliseconds",
            ")",
            "from",
            "laptimes",
            "group",
            "by",
            "time"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__laptimes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__laptimes.time__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__laptimes.milliseconds__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__laptimes.time__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT duration, MIN(raceId) FROM pitStops GROUP BY duration;",
        "question": "Select duration and minimum race id from pit stops grouped by duration ",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "duration",
            "and",
            "minimum",
            "race",
            "id",
            "from",
            "pit",
            "stops",
            "grouped",
            "by",
            "duration"
        ],
        "query_toks": [
            "SELECT",
            "duration",
            ",",
            "MIN",
            "(",
            "raceId",
            ")",
            "FROM",
            "pitStops",
            "GROUP",
            "BY",
            "duration"
        ],
        "query_toks_no_value": [
            "select",
            "duration",
            ",",
            "min",
            "(",
            "raceid",
            ")",
            "from",
            "pitstops",
            "group",
            "by",
            "duration"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__pitstops__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__pitstops.duration__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__pitstops.raceid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__pitstops.duration__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT fastestLapSpeed, MAX(raceId) FROM results GROUP BY fastestLapSpeed;",
        "question": "Select fastest lap speed and maximum race id from results grouped by fastest lap speed ",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "fastest",
            "lap",
            "speed",
            "and",
            "maximum",
            "race",
            "id",
            "from",
            "results",
            "grouped",
            "by",
            "fastest",
            "lap",
            "speed"
        ],
        "query_toks": [
            "SELECT",
            "fastestLapSpeed",
            ",",
            "MAX",
            "(",
            "raceId",
            ")",
            "FROM",
            "results",
            "GROUP",
            "BY",
            "fastestLapSpeed"
        ],
        "query_toks_no_value": [
            "select",
            "fastestlapspeed",
            ",",
            "max",
            "(",
            "raceid",
            ")",
            "from",
            "results",
            "group",
            "by",
            "fastestlapspeed"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__results__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__results.fastestlapspeed__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__results.raceid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__results.fastestlapspeed__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT url, MIN(year) FROM races GROUP BY url;",
        "question": "Select url and minimum year from races grouped by url ",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "url",
            "and",
            "minimum",
            "year",
            "from",
            "races",
            "grouped",
            "by",
            "url"
        ],
        "query_toks": [
            "SELECT",
            "url",
            ",",
            "MIN",
            "(",
            "year",
            ")",
            "FROM",
            "races",
            "GROUP",
            "BY",
            "url"
        ],
        "query_toks_no_value": [
            "select",
            "url",
            ",",
            "min",
            "(",
            "year",
            ")",
            "from",
            "races",
            "group",
            "by",
            "url"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__races__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__races.url__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__races.year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__races.url__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT location, MIN(circuitId) FROM circuits GROUP BY location;",
        "question": "Select location and minimum circuit id from circuits grouped by location ",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "location",
            "and",
            "minimum",
            "circuit",
            "id",
            "from",
            "circuits",
            "grouped",
            "by",
            "location"
        ],
        "query_toks": [
            "SELECT",
            "location",
            ",",
            "MIN",
            "(",
            "circuitId",
            ")",
            "FROM",
            "circuits",
            "GROUP",
            "BY",
            "location"
        ],
        "query_toks_no_value": [
            "select",
            "location",
            ",",
            "min",
            "(",
            "circuitid",
            ")",
            "from",
            "circuits",
            "group",
            "by",
            "location"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__circuits__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__circuits.location__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__circuits.circuitid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__circuits.location__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT status, MAX(statusId) FROM status GROUP BY status;",
        "question": "Select status and maximum status id from status grouped by status ",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "status",
            "and",
            "maximum",
            "status",
            "id",
            "from",
            "status",
            "grouped",
            "by",
            "status"
        ],
        "query_toks": [
            "SELECT",
            "status",
            ",",
            "MAX",
            "(",
            "statusId",
            ")",
            "FROM",
            "status",
            "GROUP",
            "BY",
            "status"
        ],
        "query_toks_no_value": [
            "select",
            "status",
            ",",
            "max",
            "(",
            "statusid",
            ")",
            "from",
            "status",
            "group",
            "by",
            "status"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__status__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__status.status__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__status.statusid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__status.status__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "game_1",
        "query": "SELECT OnScholarship, MAX(GamesPlayed) FROM SportsInfo GROUP BY OnScholarship;",
        "question": "Select on scholarship and maximum games played from sports info grouped by on scholarship ",
        "tables": [
            "SportsInfo",
            "Student",
            "Video_Games",
            "Plays_Games"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "on",
            "scholarship",
            "and",
            "maximum",
            "games",
            "played",
            "from",
            "sports",
            "info",
            "grouped",
            "by",
            "on",
            "scholarship"
        ],
        "query_toks": [
            "SELECT",
            "OnScholarship",
            ",",
            "MAX",
            "(",
            "GamesPlayed",
            ")",
            "FROM",
            "SportsInfo",
            "GROUP",
            "BY",
            "OnScholarship"
        ],
        "query_toks_no_value": [
            "select",
            "onscholarship",
            ",",
            "max",
            "(",
            "gamesplayed",
            ")",
            "from",
            "sportsinfo",
            "group",
            "by",
            "onscholarship"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__sportsinfo__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__sportsinfo.onscholarship__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__sportsinfo.gamesplayed__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__sportsinfo.onscholarship__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "game_1",
        "query": "SELECT Fname, MIN(StuID) FROM Student GROUP BY Fname;",
        "question": "Select first name and minimum student id from student grouped by first name ",
        "tables": [
            "SportsInfo",
            "Student",
            "Video_Games",
            "Plays_Games"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "first",
            "name",
            "and",
            "minimum",
            "student",
            "id",
            "from",
            "student",
            "grouped",
            "by",
            "first",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Fname",
            ",",
            "MIN",
            "(",
            "StuID",
            ")",
            "FROM",
            "Student",
            "GROUP",
            "BY",
            "Fname"
        ],
        "query_toks_no_value": [
            "select",
            "fname",
            ",",
            "min",
            "(",
            "stuid",
            ")",
            "from",
            "student",
            "group",
            "by",
            "fname"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.fname__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__student.stuid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__student.fname__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "game_1",
        "query": "SELECT GType, MAX(GameID) FROM Video_Games GROUP BY GType;",
        "question": "Select game type and maximum game id from video games grouped by game type ",
        "tables": [
            "SportsInfo",
            "Student",
            "Video_Games",
            "Plays_Games"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "game",
            "type",
            "and",
            "maximum",
            "game",
            "id",
            "from",
            "video",
            "games",
            "grouped",
            "by",
            "game",
            "type"
        ],
        "query_toks": [
            "SELECT",
            "GType",
            ",",
            "MAX",
            "(",
            "GameID",
            ")",
            "FROM",
            "Video_Games",
            "GROUP",
            "BY",
            "GType"
        ],
        "query_toks_no_value": [
            "select",
            "gtype",
            ",",
            "max",
            "(",
            "gameid",
            ")",
            "from",
            "video_games",
            "group",
            "by",
            "gtype"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__video_games__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__video_games.gtype__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__video_games.gameid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__video_games.gtype__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "loan_1",
        "query": "SELECT cust_name, MIN(branch_ID) FROM customer GROUP BY cust_name;",
        "question": "Select customer name and minimum branch id from customer grouped by customer name ",
        "tables": [
            "customer",
            "loan",
            "bank"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "customer",
            "name",
            "and",
            "minimum",
            "branch",
            "id",
            "from",
            "customer",
            "grouped",
            "by",
            "customer",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "cust_name",
            ",",
            "MIN",
            "(",
            "branch_ID",
            ")",
            "FROM",
            "customer",
            "GROUP",
            "BY",
            "cust_name"
        ],
        "query_toks_no_value": [
            "select",
            "cust_name",
            ",",
            "min",
            "(",
            "branch_id",
            ")",
            "from",
            "customer",
            "group",
            "by",
            "cust_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer.cust_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__customer.branch_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customer.cust_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "loan_1",
        "query": "SELECT loan_ID, MIN(amount) FROM loan GROUP BY loan_ID;",
        "question": "Select loan id and minimum amount from loan grouped by loan id ",
        "tables": [
            "customer",
            "loan",
            "bank"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "loan",
            "id",
            "and",
            "minimum",
            "amount",
            "from",
            "loan",
            "grouped",
            "by",
            "loan",
            "id"
        ],
        "query_toks": [
            "SELECT",
            "loan_ID",
            ",",
            "MIN",
            "(",
            "amount",
            ")",
            "FROM",
            "loan",
            "GROUP",
            "BY",
            "loan_ID"
        ],
        "query_toks_no_value": [
            "select",
            "loan_id",
            ",",
            "min",
            "(",
            "amount",
            ")",
            "from",
            "loan",
            "group",
            "by",
            "loan_id"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__loan__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__loan.loan_id__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__loan.amount__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__loan.loan_id__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "loan_1",
        "query": "SELECT city, MAX(branch_ID) FROM bank GROUP BY city;",
        "question": "Select city and maximum branch id from bank grouped by city ",
        "tables": [
            "customer",
            "loan",
            "bank"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "city",
            "and",
            "maximum",
            "branch",
            "id",
            "from",
            "bank",
            "grouped",
            "by",
            "city"
        ],
        "query_toks": [
            "SELECT",
            "city",
            ",",
            "MAX",
            "(",
            "branch_ID",
            ")",
            "FROM",
            "bank",
            "GROUP",
            "BY",
            "city"
        ],
        "query_toks_no_value": [
            "select",
            "city",
            ",",
            "max",
            "(",
            "branch_id",
            ")",
            "from",
            "bank",
            "group",
            "by",
            "city"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__bank__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__bank.city__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__bank.branch_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__bank.city__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "bike_1",
        "query": "SELECT time, MIN(station_id) FROM status GROUP BY time;",
        "question": "Select time and minimum station id from status grouped by time ",
        "tables": [
            "status",
            "weather",
            "trip",
            "station"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "time",
            "and",
            "minimum",
            "station",
            "id",
            "from",
            "status",
            "grouped",
            "by",
            "time"
        ],
        "query_toks": [
            "SELECT",
            "time",
            ",",
            "MIN",
            "(",
            "station_id",
            ")",
            "FROM",
            "status",
            "GROUP",
            "BY",
            "time"
        ],
        "query_toks_no_value": [
            "select",
            "time",
            ",",
            "min",
            "(",
            "station_id",
            ")",
            "from",
            "status",
            "group",
            "by",
            "time"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__status__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__status.time__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__status.station_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__status.time__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "bike_1",
        "query": "SELECT date, MAX(mean_temperature_f) FROM weather GROUP BY date;",
        "question": "Select date and maximum mean temperature f from weather grouped by date ",
        "tables": [
            "status",
            "weather",
            "trip",
            "station"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "date",
            "and",
            "maximum",
            "mean",
            "temperature",
            "f",
            "from",
            "weather",
            "grouped",
            "by",
            "date"
        ],
        "query_toks": [
            "SELECT",
            "date",
            ",",
            "MAX",
            "(",
            "mean_temperature_f",
            ")",
            "FROM",
            "weather",
            "GROUP",
            "BY",
            "date"
        ],
        "query_toks_no_value": [
            "select",
            "date",
            ",",
            "max",
            "(",
            "mean_temperature_f",
            ")",
            "from",
            "weather",
            "group",
            "by",
            "date"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__weather__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__weather.date__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__weather.mean_temperature_f__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__weather.date__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "bike_1",
        "query": "SELECT start_station_name, MAX(zip_code) FROM trip GROUP BY start_station_name;",
        "question": "Select start station name and maximum zip code from trip grouped by start station name ",
        "tables": [
            "status",
            "weather",
            "trip",
            "station"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "start",
            "station",
            "name",
            "and",
            "maximum",
            "zip",
            "code",
            "from",
            "trip",
            "grouped",
            "by",
            "start",
            "station",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "start_station_name",
            ",",
            "MAX",
            "(",
            "zip_code",
            ")",
            "FROM",
            "trip",
            "GROUP",
            "BY",
            "start_station_name"
        ],
        "query_toks_no_value": [
            "select",
            "start_station_name",
            ",",
            "max",
            "(",
            "zip_code",
            ")",
            "from",
            "trip",
            "group",
            "by",
            "start_station_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__trip__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__trip.start_station_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__trip.zip_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__trip.start_station_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "bike_1",
        "query": "SELECT city, MAX(dock_count) FROM station GROUP BY city;",
        "question": "Select city and maximum dock count from station grouped by city ",
        "tables": [
            "status",
            "weather",
            "trip",
            "station"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "city",
            "and",
            "maximum",
            "dock",
            "count",
            "from",
            "station",
            "grouped",
            "by",
            "city"
        ],
        "query_toks": [
            "SELECT",
            "city",
            ",",
            "MAX",
            "(",
            "dock_count",
            ")",
            "FROM",
            "station",
            "GROUP",
            "BY",
            "city"
        ],
        "query_toks_no_value": [
            "select",
            "city",
            ",",
            "max",
            "(",
            "dock_count",
            ")",
            "from",
            "station",
            "group",
            "by",
            "city"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__station__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__station.city__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__station.dock_count__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__station.city__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "entrepreneur",
        "query": "SELECT Investor, MAX(Money_Requested) FROM entrepreneur GROUP BY Investor;",
        "question": "Select investor and maximum money requested from entrepreneur grouped by investor ",
        "tables": [
            "entrepreneur",
            "people"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "investor",
            "and",
            "maximum",
            "money",
            "requested",
            "from",
            "entrepreneur",
            "grouped",
            "by",
            "investor"
        ],
        "query_toks": [
            "SELECT",
            "Investor",
            ",",
            "MAX",
            "(",
            "Money_Requested",
            ")",
            "FROM",
            "entrepreneur",
            "GROUP",
            "BY",
            "Investor"
        ],
        "query_toks_no_value": [
            "select",
            "investor",
            ",",
            "max",
            "(",
            "money_requested",
            ")",
            "from",
            "entrepreneur",
            "group",
            "by",
            "investor"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__entrepreneur__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__entrepreneur.investor__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__entrepreneur.money_requested__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__entrepreneur.investor__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "entrepreneur",
        "query": "SELECT Date_of_Birth, MAX(People_ID) FROM people GROUP BY Date_of_Birth;",
        "question": "Select date of birth and maximum people id from people grouped by date of birth ",
        "tables": [
            "entrepreneur",
            "people"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "date",
            "of",
            "birth",
            "and",
            "maximum",
            "people",
            "id",
            "from",
            "people",
            "grouped",
            "by",
            "date",
            "of",
            "birth"
        ],
        "query_toks": [
            "SELECT",
            "Date_of_Birth",
            ",",
            "MAX",
            "(",
            "People_ID",
            ")",
            "FROM",
            "people",
            "GROUP",
            "BY",
            "Date_of_Birth"
        ],
        "query_toks_no_value": [
            "select",
            "date_of_birth",
            ",",
            "max",
            "(",
            "people_id",
            ")",
            "from",
            "people",
            "group",
            "by",
            "date_of_birth"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__people__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__people.date_of_birth__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__people.people_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__people.date_of_birth__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Major_Record_Format, MIN(Year_of_Founded) FROM orchestra GROUP BY Major_Record_Format;",
        "question": "Select major record format and minimum year of founded from orchestra grouped by major record format ",
        "tables": [
            "orchestra",
            "show",
            "conductor",
            "performance"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "major",
            "record",
            "format",
            "and",
            "minimum",
            "year",
            "of",
            "founded",
            "from",
            "orchestra",
            "grouped",
            "by",
            "major",
            "record",
            "format"
        ],
        "query_toks": [
            "SELECT",
            "Major_Record_Format",
            ",",
            "MIN",
            "(",
            "Year_of_Founded",
            ")",
            "FROM",
            "orchestra",
            "GROUP",
            "BY",
            "Major_Record_Format"
        ],
        "query_toks_no_value": [
            "select",
            "major_record_format",
            ",",
            "min",
            "(",
            "year_of_founded",
            ")",
            "from",
            "orchestra",
            "group",
            "by",
            "major_record_format"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__orchestra__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__orchestra.major_record_format__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__orchestra.year_of_founded__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__orchestra.major_record_format__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Result, MAX(Performance_ID) FROM show GROUP BY Result;",
        "question": "Select result and maximum performance id from show grouped by result ",
        "tables": [
            "orchestra",
            "show",
            "conductor",
            "performance"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "result",
            "and",
            "maximum",
            "performance",
            "id",
            "from",
            "show",
            "grouped",
            "by",
            "result"
        ],
        "query_toks": [
            "SELECT",
            "Result",
            ",",
            "MAX",
            "(",
            "Performance_ID",
            ")",
            "FROM",
            "show",
            "GROUP",
            "BY",
            "Result"
        ],
        "query_toks_no_value": [
            "select",
            "result",
            ",",
            "max",
            "(",
            "performance_id",
            ")",
            "from",
            "show",
            "group",
            "by",
            "result"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__show__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__show.result__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__show.performance_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__show.result__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Nationality, MAX(Age) FROM conductor GROUP BY Nationality;",
        "question": "Select nationality and maximum age from conductor grouped by nationality ",
        "tables": [
            "orchestra",
            "show",
            "conductor",
            "performance"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "nationality",
            "and",
            "maximum",
            "age",
            "from",
            "conductor",
            "grouped",
            "by",
            "nationality"
        ],
        "query_toks": [
            "SELECT",
            "Nationality",
            ",",
            "MAX",
            "(",
            "Age",
            ")",
            "FROM",
            "conductor",
            "GROUP",
            "BY",
            "Nationality"
        ],
        "query_toks_no_value": [
            "select",
            "nationality",
            ",",
            "max",
            "(",
            "age",
            ")",
            "from",
            "conductor",
            "group",
            "by",
            "nationality"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__conductor__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__conductor.nationality__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__conductor.age__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__conductor.nationality__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "query": "SELECT Share, MAX(Orchestra_ID) FROM performance GROUP BY Share;",
        "question": "Select share and maximum orchestra id from performance grouped by share ",
        "tables": [
            "orchestra",
            "show",
            "conductor",
            "performance"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "share",
            "and",
            "maximum",
            "orchestra",
            "id",
            "from",
            "performance",
            "grouped",
            "by",
            "share"
        ],
        "query_toks": [
            "SELECT",
            "Share",
            ",",
            "MAX",
            "(",
            "Orchestra_ID",
            ")",
            "FROM",
            "performance",
            "GROUP",
            "BY",
            "Share"
        ],
        "query_toks_no_value": [
            "select",
            "share",
            ",",
            "max",
            "(",
            "orchestra_id",
            ")",
            "from",
            "performance",
            "group",
            "by",
            "share"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__performance__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__performance.share__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__performance.orchestra_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__performance.share__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Customer_Name, MAX(Performer_ID) FROM Performers GROUP BY Customer_Name;",
        "question": "Select customer name and maximum performer id from performers grouped by customer name ",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "customer",
            "name",
            "and",
            "maximum",
            "performer",
            "id",
            "from",
            "performers",
            "grouped",
            "by",
            "customer",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Customer_Name",
            ",",
            "MAX",
            "(",
            "Performer_ID",
            ")",
            "FROM",
            "Performers",
            "GROUP",
            "BY",
            "Customer_Name"
        ],
        "query_toks_no_value": [
            "select",
            "customer_name",
            ",",
            "max",
            "(",
            "performer_id",
            ")",
            "from",
            "performers",
            "group",
            "by",
            "customer_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__performers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__performers.customer_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__performers.performer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__performers.customer_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Product_Name, MAX(Product_Price) FROM Products GROUP BY Product_Name;",
        "question": "Select product name and maximum product price from products grouped by product name ",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "product",
            "name",
            "and",
            "maximum",
            "product",
            "price",
            "from",
            "products",
            "grouped",
            "by",
            "product",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Product_Name",
            ",",
            "MAX",
            "(",
            "Product_Price",
            ")",
            "FROM",
            "Products",
            "GROUP",
            "BY",
            "Product_Name"
        ],
        "query_toks_no_value": [
            "select",
            "product_name",
            ",",
            "max",
            "(",
            "product_price",
            ")",
            "from",
            "products",
            "group",
            "by",
            "product_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products.product_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__products.product_price__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__products.product_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Other_Details, MAX(Workshop_Group_ID) FROM Drama_Workshop_Groups GROUP BY Other_Details;",
        "question": "Select other details and maximum workshop group id from drama workshop groups grouped by other details ",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "other",
            "details",
            "and",
            "maximum",
            "workshop",
            "group",
            "id",
            "from",
            "drama",
            "workshop",
            "groups",
            "grouped",
            "by",
            "other",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "Other_Details",
            ",",
            "MAX",
            "(",
            "Workshop_Group_ID",
            ")",
            "FROM",
            "Drama_Workshop_Groups",
            "GROUP",
            "BY",
            "Other_Details"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            ",",
            "max",
            "(",
            "workshop_group_id",
            ")",
            "from",
            "drama_workshop_groups",
            "group",
            "by",
            "other_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__drama_workshop_groups__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__drama_workshop_groups.other_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__drama_workshop_groups.workshop_group_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__drama_workshop_groups.other_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Order_Quantity, MIN(Product_ID) FROM Order_Items GROUP BY Order_Quantity;",
        "question": "Select order quantity and minimum product id from order items grouped by order quantity ",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "order",
            "quantity",
            "and",
            "minimum",
            "product",
            "id",
            "from",
            "order",
            "items",
            "grouped",
            "by",
            "order",
            "quantity"
        ],
        "query_toks": [
            "SELECT",
            "Order_Quantity",
            ",",
            "MIN",
            "(",
            "Product_ID",
            ")",
            "FROM",
            "Order_Items",
            "GROUP",
            "BY",
            "Order_Quantity"
        ],
        "query_toks_no_value": [
            "select",
            "order_quantity",
            ",",
            "min",
            "(",
            "product_id",
            ")",
            "from",
            "order_items",
            "group",
            "by",
            "order_quantity"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__order_items__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__order_items.order_quantity__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__order_items.product_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__order_items.order_quantity__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT payment_method_code, MAX(Order_Item_ID) FROM Invoices GROUP BY payment_method_code;",
        "question": "Select payment method code and maximum order item id from invoices grouped by payment method code ",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "payment",
            "method",
            "code",
            "and",
            "maximum",
            "order",
            "item",
            "id",
            "from",
            "invoices",
            "grouped",
            "by",
            "payment",
            "method",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "payment_method_code",
            ",",
            "MAX",
            "(",
            "Order_Item_ID",
            ")",
            "FROM",
            "Invoices",
            "GROUP",
            "BY",
            "payment_method_code"
        ],
        "query_toks_no_value": [
            "select",
            "payment_method_code",
            ",",
            "max",
            "(",
            "order_item_id",
            ")",
            "from",
            "invoices",
            "group",
            "by",
            "payment_method_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__invoices__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__invoices.payment_method_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__invoices.order_item_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__invoices.payment_method_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Other_Order_Details, MIN(Store_ID) FROM Customer_Orders GROUP BY Other_Order_Details;",
        "question": "Select other order details and minimum store id from customer orders grouped by other order details ",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "other",
            "order",
            "details",
            "and",
            "minimum",
            "store",
            "id",
            "from",
            "customer",
            "orders",
            "grouped",
            "by",
            "other",
            "order",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "Other_Order_Details",
            ",",
            "MIN",
            "(",
            "Store_ID",
            ")",
            "FROM",
            "Customer_Orders",
            "GROUP",
            "BY",
            "Other_Order_Details"
        ],
        "query_toks_no_value": [
            "select",
            "other_order_details",
            ",",
            "min",
            "(",
            "store_id",
            ")",
            "from",
            "customer_orders",
            "group",
            "by",
            "other_order_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_orders__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_orders.other_order_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__customer_orders.store_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customer_orders.other_order_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Product_Description, MAX(Product_Price) FROM Services GROUP BY Product_Description;",
        "question": "Select product description and maximum product price from services grouped by product description ",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "product",
            "description",
            "and",
            "maximum",
            "product",
            "price",
            "from",
            "services",
            "grouped",
            "by",
            "product",
            "description"
        ],
        "query_toks": [
            "SELECT",
            "Product_Description",
            ",",
            "MAX",
            "(",
            "Product_Price",
            ")",
            "FROM",
            "Services",
            "GROUP",
            "BY",
            "Product_Description"
        ],
        "query_toks_no_value": [
            "select",
            "product_description",
            ",",
            "max",
            "(",
            "product_price",
            ")",
            "from",
            "services",
            "group",
            "by",
            "product_description"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__services__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__services.product_description__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__services.product_price__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__services.product_description__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Other_Item_Details, MAX(Order_ID) FROM Invoice_Items GROUP BY Other_Item_Details;",
        "question": "Select other item details and maximum order id from invoice items grouped by other item details ",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "other",
            "item",
            "details",
            "and",
            "maximum",
            "order",
            "id",
            "from",
            "invoice",
            "items",
            "grouped",
            "by",
            "other",
            "item",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "Other_Item_Details",
            ",",
            "MAX",
            "(",
            "Order_ID",
            ")",
            "FROM",
            "Invoice_Items",
            "GROUP",
            "BY",
            "Other_Item_Details"
        ],
        "query_toks_no_value": [
            "select",
            "other_item_details",
            ",",
            "max",
            "(",
            "order_id",
            ")",
            "from",
            "invoice_items",
            "group",
            "by",
            "other_item_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__invoice_items__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__invoice_items.other_item_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__invoice_items.order_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__invoice_items.other_item_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Customer_Phone, MIN(Address_ID) FROM Customers GROUP BY Customer_Phone;",
        "question": "Select customer phone and minimum address id from customers grouped by customer phone ",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "customer",
            "phone",
            "and",
            "minimum",
            "address",
            "id",
            "from",
            "customers",
            "grouped",
            "by",
            "customer",
            "phone"
        ],
        "query_toks": [
            "SELECT",
            "Customer_Phone",
            ",",
            "MIN",
            "(",
            "Address_ID",
            ")",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "Customer_Phone"
        ],
        "query_toks_no_value": [
            "select",
            "customer_phone",
            ",",
            "min",
            "(",
            "address_id",
            ")",
            "from",
            "customers",
            "group",
            "by",
            "customer_phone"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_phone__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__customers.address_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customers.customer_phone__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Other_Details, MAX(Address_ID) FROM Stores GROUP BY Other_Details;",
        "question": "Select other details and maximum address id from stores grouped by other details ",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "other",
            "details",
            "and",
            "maximum",
            "address",
            "id",
            "from",
            "stores",
            "grouped",
            "by",
            "other",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "Other_Details",
            ",",
            "MAX",
            "(",
            "Address_ID",
            ")",
            "FROM",
            "Stores",
            "GROUP",
            "BY",
            "Other_Details"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            ",",
            "max",
            "(",
            "address_id",
            ")",
            "from",
            "stores",
            "group",
            "by",
            "other_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__stores__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__stores.other_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__stores.address_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__stores.other_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Customer_Phone, MIN(Client_ID) FROM Clients GROUP BY Customer_Phone;",
        "question": "Select customer phone and minimum client id from clients grouped by customer phone ",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "customer",
            "phone",
            "and",
            "minimum",
            "client",
            "id",
            "from",
            "clients",
            "grouped",
            "by",
            "customer",
            "phone"
        ],
        "query_toks": [
            "SELECT",
            "Customer_Phone",
            ",",
            "MIN",
            "(",
            "Client_ID",
            ")",
            "FROM",
            "Clients",
            "GROUP",
            "BY",
            "Customer_Phone"
        ],
        "query_toks_no_value": [
            "select",
            "customer_phone",
            ",",
            "min",
            "(",
            "client_id",
            ")",
            "from",
            "clients",
            "group",
            "by",
            "customer_phone"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__clients__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__clients.customer_phone__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__clients.client_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__clients.customer_phone__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Status_Code, MIN(Store_ID) FROM Bookings GROUP BY Status_Code;",
        "question": "Select status code and minimum store id from bookings grouped by status code ",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "status",
            "code",
            "and",
            "minimum",
            "store",
            "id",
            "from",
            "bookings",
            "grouped",
            "by",
            "status",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "Status_Code",
            ",",
            "MIN",
            "(",
            "Store_ID",
            ")",
            "FROM",
            "Bookings",
            "GROUP",
            "BY",
            "Status_Code"
        ],
        "query_toks_no_value": [
            "select",
            "status_code",
            ",",
            "min",
            "(",
            "store_id",
            ")",
            "from",
            "bookings",
            "group",
            "by",
            "status_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__bookings__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__bookings.status_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__bookings.store_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__bookings.status_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "query": "SELECT FullName, MAX(Id) FROM car_makers GROUP BY FullName;",
        "question": "Select full name and maximum id from car makers grouped by full name ",
        "tables": [
            "car_makers",
            "car_names",
            "countries",
            "model_list",
            "cars_data",
            "continents"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "full",
            "name",
            "and",
            "maximum",
            "id",
            "from",
            "car",
            "makers",
            "grouped",
            "by",
            "full",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "FullName",
            ",",
            "MAX",
            "(",
            "Id",
            ")",
            "FROM",
            "car_makers",
            "GROUP",
            "BY",
            "FullName"
        ],
        "query_toks_no_value": [
            "select",
            "fullname",
            ",",
            "max",
            "(",
            "id",
            ")",
            "from",
            "car_makers",
            "group",
            "by",
            "fullname"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__car_makers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__car_makers.fullname__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__car_makers.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__car_makers.fullname__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "query": "SELECT Model, MIN(MakeId) FROM car_names GROUP BY Model;",
        "question": "Select model and minimum make id from car names grouped by model ",
        "tables": [
            "car_makers",
            "car_names",
            "countries",
            "model_list",
            "cars_data",
            "continents"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "model",
            "and",
            "minimum",
            "make",
            "id",
            "from",
            "car",
            "names",
            "grouped",
            "by",
            "model"
        ],
        "query_toks": [
            "SELECT",
            "Model",
            ",",
            "MIN",
            "(",
            "MakeId",
            ")",
            "FROM",
            "car_names",
            "GROUP",
            "BY",
            "Model"
        ],
        "query_toks_no_value": [
            "select",
            "model",
            ",",
            "min",
            "(",
            "makeid",
            ")",
            "from",
            "car_names",
            "group",
            "by",
            "model"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__car_names__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__car_names.model__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__car_names.makeid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__car_names.model__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "query": "SELECT CountryName, MIN(Continent) FROM countries GROUP BY CountryName;",
        "question": "Select country name and minimum continent from countries grouped by country name ",
        "tables": [
            "car_makers",
            "car_names",
            "countries",
            "model_list",
            "cars_data",
            "continents"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "country",
            "name",
            "and",
            "minimum",
            "continent",
            "from",
            "countries",
            "grouped",
            "by",
            "country",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "CountryName",
            "(",
            "CountryName",
            ")",
            "MIN",
            "(",
            "Continent",
            ")",
            "FROM",
            "countrie",
            "(",
            "countrie",
            ")",
            "GROUP",
            "BY",
            "CountryName",
            "(",
            "CountryName",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "countryname",
            "(",
            "countryname",
            ")",
            "min",
            "(",
            "continent",
            ")",
            "from",
            "countrie",
            "(",
            "countrie",
            ")",
            "group",
            "by",
            "countryname",
            "(",
            "countryname",
            ")"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__countries__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__countries.countryname__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__countries.continent__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__countries.countryname__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "query": "SELECT Model, MAX(Maker) FROM model_list GROUP BY Model;",
        "question": "Select model and maximum maker from model list grouped by model ",
        "tables": [
            "car_makers",
            "car_names",
            "countries",
            "model_list",
            "cars_data",
            "continents"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "model",
            "and",
            "maximum",
            "maker",
            "from",
            "model",
            "list",
            "grouped",
            "by",
            "model"
        ],
        "query_toks": [
            "SELECT",
            "Model",
            ",",
            "MAX",
            "(",
            "Maker",
            ")",
            "FROM",
            "model_list",
            "GROUP",
            "BY",
            "Model"
        ],
        "query_toks_no_value": [
            "select",
            "model",
            ",",
            "max",
            "(",
            "maker",
            ")",
            "from",
            "model_list",
            "group",
            "by",
            "model"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__model_list__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__model_list.model__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__model_list.maker__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__model_list.model__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "query": "SELECT MPG, MIN(Cylinders) FROM cars_data GROUP BY MPG;",
        "question": "Select mpg and minimum cylinders from cars data grouped by mpg ",
        "tables": [
            "car_makers",
            "car_names",
            "countries",
            "model_list",
            "cars_data",
            "continents"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "mpg",
            "and",
            "minimum",
            "cylinders",
            "from",
            "cars",
            "data",
            "grouped",
            "by",
            "mpg"
        ],
        "query_toks": [
            "SELECT",
            "MPG",
            ",",
            "MIN",
            "(",
            "Cylinders",
            ")",
            "FROM",
            "cars_data",
            "GROUP",
            "BY",
            "MPG"
        ],
        "query_toks_no_value": [
            "select",
            "mpg",
            ",",
            "min",
            "(",
            "cylinders",
            ")",
            "from",
            "cars_data",
            "group",
            "by",
            "mpg"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__cars_data__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__cars_data.mpg__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__cars_data.cylinders__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__cars_data.mpg__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "query": "SELECT Continent, MAX(ContId) FROM continents GROUP BY Continent;",
        "question": "Select continent and maximum cont id from continents grouped by continent ",
        "tables": [
            "car_makers",
            "car_names",
            "countries",
            "model_list",
            "cars_data",
            "continents"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "continent",
            "and",
            "maximum",
            "cont",
            "id",
            "from",
            "continents",
            "grouped",
            "by",
            "continent"
        ],
        "query_toks": [
            "SELECT",
            "Continent",
            ",",
            "MAX",
            "(",
            "ContId",
            ")",
            "FROM",
            "continents",
            "GROUP",
            "BY",
            "Continent"
        ],
        "query_toks_no_value": [
            "select",
            "continent",
            ",",
            "max",
            "(",
            "contid",
            ")",
            "from",
            "continents",
            "group",
            "by",
            "continent"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__continents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__continents.continent__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__continents.contid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__continents.continent__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "geo",
        "query": "SELECT capital, MIN(area) FROM state GROUP BY capital;",
        "question": "Select capital and minimum area from state grouped by capital ",
        "tables": [
            "state",
            "city",
            "river",
            "border_info",
            "lake",
            "mountain",
            "highlow"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "capital",
            "and",
            "minimum",
            "area",
            "from",
            "state",
            "grouped",
            "by",
            "capital"
        ],
        "query_toks": [
            "SELECT",
            "capital",
            ",",
            "MIN",
            "(",
            "area",
            ")",
            "FROM",
            "state",
            "GROUP",
            "BY",
            "capital"
        ],
        "query_toks_no_value": [
            "select",
            "capital",
            ",",
            "min",
            "(",
            "area",
            ")",
            "from",
            "state",
            "group",
            "by",
            "capital"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__state__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__state.capital__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__state.area__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__state.capital__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "geo",
        "query": "SELECT city_name, MAX(population) FROM city GROUP BY city_name;",
        "question": "Select city name and maximum population from city grouped by city name ",
        "tables": [
            "state",
            "city",
            "river",
            "border_info",
            "lake",
            "mountain",
            "highlow"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "city",
            "name",
            "and",
            "maximum",
            "population",
            "from",
            "city",
            "grouped",
            "by",
            "city",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "city_name",
            ",",
            "MAX",
            "(",
            "population",
            ")",
            "FROM",
            "city",
            "GROUP",
            "BY",
            "city_name"
        ],
        "query_toks_no_value": [
            "select",
            "city_name",
            ",",
            "max",
            "(",
            "population",
            ")",
            "from",
            "city",
            "group",
            "by",
            "city_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__city__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__city.city_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__city.population__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__city.city_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "geo",
        "query": "SELECT river_name, MIN(length) FROM river GROUP BY river_name;",
        "question": "Select river name and minimum length from river grouped by river name ",
        "tables": [
            "state",
            "city",
            "river",
            "border_info",
            "lake",
            "mountain",
            "highlow"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "river",
            "name",
            "and",
            "minimum",
            "length",
            "from",
            "river",
            "grouped",
            "by",
            "river",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "river_name",
            ",",
            "MIN",
            "(",
            "length",
            ")",
            "FROM",
            "river",
            "GROUP",
            "BY",
            "river_name"
        ],
        "query_toks_no_value": [
            "select",
            "river_name",
            ",",
            "min",
            "(",
            "length",
            ")",
            "from",
            "river",
            "group",
            "by",
            "river_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__river__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__river.river_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__river.length__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__river.river_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "geo",
        "query": "SELECT country_name, MIN(area) FROM lake GROUP BY country_name;",
        "question": "Select country name and minimum area from lake grouped by country name ",
        "tables": [
            "state",
            "city",
            "river",
            "border_info",
            "lake",
            "mountain",
            "highlow"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "country",
            "name",
            "and",
            "minimum",
            "area",
            "from",
            "lake",
            "grouped",
            "by",
            "country",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "country_name",
            "(",
            "country_name",
            ")",
            "MIN",
            "(",
            "area",
            ")",
            "FROM",
            "lake",
            "GROUP",
            "BY",
            "country_name",
            "(",
            "country_name",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "country_name",
            "(",
            "country_name",
            ")",
            "min",
            "(",
            "area",
            ")",
            "from",
            "lake",
            "group",
            "by",
            "country_name",
            "(",
            "country_name",
            ")"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__lake__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__lake.country_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__lake.area__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__lake.country_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "geo",
        "query": "SELECT mountain_name, MIN(mountain_altitude) FROM mountain GROUP BY mountain_name;",
        "question": "Select mountain name and minimum mountain altitude from mountain grouped by mountain name ",
        "tables": [
            "state",
            "city",
            "river",
            "border_info",
            "lake",
            "mountain",
            "highlow"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "mountain",
            "name",
            "and",
            "minimum",
            "mountain",
            "altitude",
            "from",
            "mountain",
            "grouped",
            "by",
            "mountain",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "mountain_name",
            ",",
            "MIN",
            "(",
            "mountain_altitude",
            ")",
            "FROM",
            "mountain",
            "GROUP",
            "BY",
            "mountain_name"
        ],
        "query_toks_no_value": [
            "select",
            "mountain_name",
            ",",
            "min",
            "(",
            "mountain_altitude",
            ")",
            "from",
            "mountain",
            "group",
            "by",
            "mountain_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__mountain__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__mountain.mountain_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__mountain.mountain_altitude__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__mountain.mountain_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "behavior_monitoring",
        "query": "SELECT email_address, MAX(address_id) FROM Teachers GROUP BY email_address;",
        "question": "Select email address and maximum address id from teachers grouped by email address ",
        "tables": [
            "Ref_Detention_Type",
            "Teachers",
            "Students",
            "Addresses",
            "Assessment_Notes",
            "Detention",
            "Students_in_Detention",
            "Student_Addresses",
            "Ref_Incident_Type",
            "Behavior_Incident",
            "Ref_Address_Types"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "email",
            "address",
            "and",
            "maximum",
            "address",
            "id",
            "from",
            "teachers",
            "grouped",
            "by",
            "email",
            "address"
        ],
        "query_toks": [
            "SELECT",
            "email_address",
            ",",
            "MAX",
            "(",
            "address_id",
            ")",
            "FROM",
            "Teachers",
            "GROUP",
            "BY",
            "email_address"
        ],
        "query_toks_no_value": [
            "select",
            "email_address",
            ",",
            "max",
            "(",
            "address_id",
            ")",
            "from",
            "teachers",
            "group",
            "by",
            "email_address"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__teachers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__teachers.email_address__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__teachers.address_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__teachers.email_address__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "behavior_monitoring",
        "query": "SELECT first_name, MIN(address_id) FROM Students GROUP BY first_name;",
        "question": "Select first name and minimum address id from students grouped by first name ",
        "tables": [
            "Ref_Detention_Type",
            "Teachers",
            "Students",
            "Addresses",
            "Assessment_Notes",
            "Detention",
            "Students_in_Detention",
            "Student_Addresses",
            "Ref_Incident_Type",
            "Behavior_Incident",
            "Ref_Address_Types"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "first",
            "name",
            "and",
            "minimum",
            "address",
            "id",
            "from",
            "students",
            "grouped",
            "by",
            "first",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "first_name",
            ",",
            "MIN",
            "(",
            "address_id",
            ")",
            "FROM",
            "Students",
            "GROUP",
            "BY",
            "first_name"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            ",",
            "min",
            "(",
            "address_id",
            ")",
            "from",
            "students",
            "group",
            "by",
            "first_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__students__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__students.first_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__students.address_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__students.first_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "behavior_monitoring",
        "query": "SELECT city, MAX(address_id) FROM Addresses GROUP BY city;",
        "question": "Select city and maximum address id from addresses grouped by city ",
        "tables": [
            "Ref_Detention_Type",
            "Teachers",
            "Students",
            "Addresses",
            "Assessment_Notes",
            "Detention",
            "Students_in_Detention",
            "Student_Addresses",
            "Ref_Incident_Type",
            "Behavior_Incident",
            "Ref_Address_Types"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "city",
            "and",
            "maximum",
            "address",
            "id",
            "from",
            "addresses",
            "grouped",
            "by",
            "city"
        ],
        "query_toks": [
            "SELECT",
            "city",
            ",",
            "MAX",
            "(",
            "address_id",
            ")",
            "FROM",
            "Addresses",
            "GROUP",
            "BY",
            "city"
        ],
        "query_toks_no_value": [
            "select",
            "city",
            ",",
            "max",
            "(",
            "address_id",
            ")",
            "from",
            "addresses",
            "group",
            "by",
            "city"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__addresses.city__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__addresses.address_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__addresses.city__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "behavior_monitoring",
        "query": "SELECT text_of_notes, MAX(teacher_id) FROM Assessment_Notes GROUP BY text_of_notes;",
        "question": "Select text of notes and maximum teacher id from assessment notes grouped by text of notes ",
        "tables": [
            "Ref_Detention_Type",
            "Teachers",
            "Students",
            "Addresses",
            "Assessment_Notes",
            "Detention",
            "Students_in_Detention",
            "Student_Addresses",
            "Ref_Incident_Type",
            "Behavior_Incident",
            "Ref_Address_Types"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "text",
            "of",
            "notes",
            "and",
            "maximum",
            "teacher",
            "id",
            "from",
            "assessment",
            "notes",
            "grouped",
            "by",
            "text",
            "of",
            "notes"
        ],
        "query_toks": [
            "SELECT",
            "text_of_notes",
            ",",
            "MAX",
            "(",
            "teacher_id",
            ")",
            "FROM",
            "Assessment_Notes",
            "GROUP",
            "BY",
            "text_of_notes"
        ],
        "query_toks_no_value": [
            "select",
            "text_of_notes",
            ",",
            "max",
            "(",
            "teacher_id",
            ")",
            "from",
            "assessment_notes",
            "group",
            "by",
            "text_of_notes"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__assessment_notes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__assessment_notes.text_of_notes__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__assessment_notes.teacher_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__assessment_notes.text_of_notes__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "behavior_monitoring",
        "query": "SELECT detention_summary, MIN(detention_id) FROM Detention GROUP BY detention_summary;",
        "question": "Select detention summary and minimum detention id from detention grouped by detention summary ",
        "tables": [
            "Ref_Detention_Type",
            "Teachers",
            "Students",
            "Addresses",
            "Assessment_Notes",
            "Detention",
            "Students_in_Detention",
            "Student_Addresses",
            "Ref_Incident_Type",
            "Behavior_Incident",
            "Ref_Address_Types"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "detention",
            "summary",
            "and",
            "minimum",
            "detention",
            "id",
            "from",
            "detention",
            "grouped",
            "by",
            "detention",
            "summary"
        ],
        "query_toks": [
            "SELECT",
            "detention_summary",
            ",",
            "MIN",
            "(",
            "detention_id",
            ")",
            "FROM",
            "Detention",
            "GROUP",
            "BY",
            "detention_summary"
        ],
        "query_toks_no_value": [
            "select",
            "detention_summary",
            ",",
            "min",
            "(",
            "detention_id",
            ")",
            "from",
            "detention",
            "group",
            "by",
            "detention_summary"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__detention__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__detention.detention_summary__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__detention.detention_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__detention.detention_summary__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "behavior_monitoring",
        "query": "SELECT other_details, MAX(student_id) FROM Student_Addresses GROUP BY other_details;",
        "question": "Select other details and maximum student id from student addresses grouped by other details ",
        "tables": [
            "Ref_Detention_Type",
            "Teachers",
            "Students",
            "Addresses",
            "Assessment_Notes",
            "Detention",
            "Students_in_Detention",
            "Student_Addresses",
            "Ref_Incident_Type",
            "Behavior_Incident",
            "Ref_Address_Types"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "other",
            "details",
            "and",
            "maximum",
            "student",
            "id",
            "from",
            "student",
            "addresses",
            "grouped",
            "by",
            "other",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "other_details",
            ",",
            "MAX",
            "(",
            "student_id",
            ")",
            "FROM",
            "Student_Addresses",
            "GROUP",
            "BY",
            "other_details"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            ",",
            "max",
            "(",
            "student_id",
            ")",
            "from",
            "student_addresses",
            "group",
            "by",
            "other_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student_addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student_addresses.other_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__student_addresses.student_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__student_addresses.other_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "behavior_monitoring",
        "query": "SELECT incident_summary, MAX(incident_id) FROM Behavior_Incident GROUP BY incident_summary;",
        "question": "Select incident summary and maximum incident id from behavior incident grouped by incident summary ",
        "tables": [
            "Ref_Detention_Type",
            "Teachers",
            "Students",
            "Addresses",
            "Assessment_Notes",
            "Detention",
            "Students_in_Detention",
            "Student_Addresses",
            "Ref_Incident_Type",
            "Behavior_Incident",
            "Ref_Address_Types"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "incident",
            "summary",
            "and",
            "maximum",
            "incident",
            "id",
            "from",
            "behavior",
            "incident",
            "grouped",
            "by",
            "incident",
            "summary"
        ],
        "query_toks": [
            "SELECT",
            "incident_summary",
            ",",
            "MAX",
            "(",
            "incident_id",
            ")",
            "FROM",
            "Behavior_Incident",
            "GROUP",
            "BY",
            "incident_summary"
        ],
        "query_toks_no_value": [
            "select",
            "incident_summary",
            ",",
            "max",
            "(",
            "incident_id",
            ")",
            "from",
            "behavior_incident",
            "group",
            "by",
            "incident_summary"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__behavior_incident__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__behavior_incident.incident_summary__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__behavior_incident.incident_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__behavior_incident.incident_summary__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "query": "SELECT Other_Details, MAX(Destruction_Authorised_by_Employee_ID) FROM Documents_to_be_Destroyed GROUP BY Other_Details;",
        "question": "Select other details and maximum destruction authorised by employee id from documents to be destroyed grouped by other details ",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Calendar",
            "Documents_to_be_Destroyed",
            "Document_Locations",
            "All_Documents",
            "Ref_Locations",
            "Employees"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "other",
            "details",
            "and",
            "maximum",
            "destruction",
            "authorised",
            "by",
            "employee",
            "id",
            "from",
            "documents",
            "to",
            "be",
            "destroyed",
            "grouped",
            "by",
            "other",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "Other_Details",
            ",",
            "MAX",
            "(",
            "Destruction_Authorised_by_Employee_ID",
            ")",
            "FROM",
            "Documents_to_be_Destroyed",
            "GROUP",
            "BY",
            "Other_Details"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            ",",
            "max",
            "(",
            "destruction_authorised_by_employee_id",
            ")",
            "from",
            "documents_to_be_destroyed",
            "group",
            "by",
            "other_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__documents_to_be_destroyed__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__documents_to_be_destroyed.other_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__documents_to_be_destroyed.destruction_authorised_by_employee_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__documents_to_be_destroyed.other_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "query": "SELECT Location_Code, MAX(Document_ID) FROM Document_Locations GROUP BY Location_Code;",
        "question": "Select location code and maximum document id from document locations grouped by location code ",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Calendar",
            "Documents_to_be_Destroyed",
            "Document_Locations",
            "All_Documents",
            "Ref_Locations",
            "Employees"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "location",
            "code",
            "and",
            "maximum",
            "document",
            "id",
            "from",
            "document",
            "locations",
            "grouped",
            "by",
            "location",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "Location_Code",
            ",",
            "MAX",
            "(",
            "Document_ID",
            ")",
            "FROM",
            "Document_Locations",
            "GROUP",
            "BY",
            "Location_Code"
        ],
        "query_toks_no_value": [
            "select",
            "location_code",
            ",",
            "max",
            "(",
            "document_id",
            ")",
            "from",
            "document_locations",
            "group",
            "by",
            "location_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__document_locations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__document_locations.location_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__document_locations.document_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__document_locations.location_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "query": "SELECT Document_Type_Code, MIN(Document_ID) FROM All_Documents GROUP BY Document_Type_Code;",
        "question": "Select document type code and minimum document id from all documents grouped by document type code ",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Calendar",
            "Documents_to_be_Destroyed",
            "Document_Locations",
            "All_Documents",
            "Ref_Locations",
            "Employees"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "document",
            "type",
            "code",
            "and",
            "minimum",
            "document",
            "id",
            "from",
            "all",
            "documents",
            "grouped",
            "by",
            "document",
            "type",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "Document_Type_Code",
            ",",
            "MIN",
            "(",
            "Document_ID",
            ")",
            "FROM",
            "All_Documents",
            "GROUP",
            "BY",
            "Document_Type_Code"
        ],
        "query_toks_no_value": [
            "select",
            "document_type_code",
            ",",
            "min",
            "(",
            "document_id",
            ")",
            "from",
            "all_documents",
            "group",
            "by",
            "document_type_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__all_documents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all_documents.document_type_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__all_documents.document_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__all_documents.document_type_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "query": "SELECT Employee_Name, MAX(Employee_ID) FROM Employees GROUP BY Employee_Name;",
        "question": "Select employee name and maximum employee id from employees grouped by employee name ",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Calendar",
            "Documents_to_be_Destroyed",
            "Document_Locations",
            "All_Documents",
            "Ref_Locations",
            "Employees"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "employee",
            "name",
            "and",
            "maximum",
            "employee",
            "id",
            "from",
            "employees",
            "grouped",
            "by",
            "employee",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Employee_Name",
            ",",
            "MAX",
            "(",
            "Employee_ID",
            ")",
            "FROM",
            "Employees",
            "GROUP",
            "BY",
            "Employee_Name"
        ],
        "query_toks_no_value": [
            "select",
            "employee_name",
            ",",
            "max",
            "(",
            "employee_id",
            ")",
            "from",
            "employees",
            "group",
            "by",
            "employee_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__employees__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__employees.employee_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__employees.employee_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__employees.employee_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "university_basketball",
        "query": "SELECT All_Neutral, MIN(Team_ID) FROM basketball_match GROUP BY All_Neutral;",
        "question": "Select all neutral and minimum team id from basketball match grouped by all neutral ",
        "tables": [
            "basketball_match",
            "university"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "all",
            "neutral",
            "and",
            "minimum",
            "team",
            "id",
            "from",
            "basketball",
            "match",
            "grouped",
            "by",
            "all",
            "neutral"
        ],
        "query_toks": [
            "SELECT",
            "All_Neutral",
            ",",
            "MIN",
            "(",
            "Team_ID",
            ")",
            "FROM",
            "basketball_match",
            "GROUP",
            "BY",
            "All_Neutral"
        ],
        "query_toks_no_value": [
            "select",
            "all_neutral",
            ",",
            "min",
            "(",
            "team_id",
            ")",
            "from",
            "basketball_match",
            "group",
            "by",
            "all_neutral"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__basketball_match__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__basketball_match.all_neutral__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__basketball_match.team_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__basketball_match.all_neutral__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "university_basketball",
        "query": "SELECT Nickname, MAX(Enrollment) FROM university GROUP BY Nickname;",
        "question": "Select nickname and maximum enrollment from university grouped by nickname ",
        "tables": [
            "basketball_match",
            "university"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "nickname",
            "and",
            "maximum",
            "enrollment",
            "from",
            "university",
            "grouped",
            "by",
            "nickname"
        ],
        "query_toks": [
            "SELECT",
            "Nickname",
            ",",
            "MAX",
            "(",
            "Enrollment",
            ")",
            "FROM",
            "university",
            "GROUP",
            "BY",
            "Nickname"
        ],
        "query_toks_no_value": [
            "select",
            "nickname",
            ",",
            "max",
            "(",
            "enrollment",
            ")",
            "from",
            "university",
            "group",
            "by",
            "nickname"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__university__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__university.nickname__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__university.enrollment__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__university.nickname__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_2",
        "query": "SELECT cName, MIN(pID) FROM Tryout GROUP BY cName;",
        "question": "Select college name and minimum player id from tryout grouped by college name ",
        "tables": [
            "Tryout",
            "Player",
            "College"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "college",
            "name",
            "and",
            "minimum",
            "player",
            "id",
            "from",
            "tryout",
            "grouped",
            "by",
            "college",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "cName",
            ",",
            "MIN",
            "(",
            "pID",
            ")",
            "FROM",
            "Tryout",
            "GROUP",
            "BY",
            "cName"
        ],
        "query_toks_no_value": [
            "select",
            "cname",
            ",",
            "min",
            "(",
            "pid",
            ")",
            "from",
            "tryout",
            "group",
            "by",
            "cname"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__tryout__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__tryout.cname__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__tryout.pid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__tryout.cname__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_2",
        "query": "SELECT pName, MAX(HS) FROM Player GROUP BY pName;",
        "question": "Select player name and maximum training hours from player grouped by player name ",
        "tables": [
            "Tryout",
            "Player",
            "College"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "player",
            "name",
            "and",
            "maximum",
            "training",
            "hours",
            "from",
            "player",
            "grouped",
            "by",
            "player",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "pName",
            ",",
            "MAX",
            "(",
            "HS",
            ")",
            "FROM",
            "Player",
            "GROUP",
            "BY",
            "pName"
        ],
        "query_toks_no_value": [
            "select",
            "pname",
            ",",
            "max",
            "(",
            "hs",
            ")",
            "from",
            "player",
            "group",
            "by",
            "pname"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__player__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__player.pname__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__player.hs__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__player.pname__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_2",
        "query": "SELECT state, MAX(enr) FROM College GROUP BY state;",
        "question": "Select state and maximum enrollment from college grouped by state ",
        "tables": [
            "Tryout",
            "Player",
            "College"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "state",
            "and",
            "maximum",
            "enrollment",
            "from",
            "college",
            "grouped",
            "by",
            "state"
        ],
        "query_toks": [
            "SELECT",
            "state",
            ",",
            "MAX",
            "(",
            "enr",
            ")",
            "FROM",
            "College",
            "GROUP",
            "BY",
            "state"
        ],
        "query_toks_no_value": [
            "select",
            "state",
            ",",
            "max",
            "(",
            "enr",
            ")",
            "from",
            "college",
            "group",
            "by",
            "state"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__college__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__college.state__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__college.enr__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__college.state__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "activity_1",
        "query": "SELECT city_code, MAX(Major) FROM Student GROUP BY city_code;",
        "question": "Select city code and maximum major from student grouped by city code ",
        "tables": [
            "Student",
            "Faculty_Participates_in",
            "Activity",
            "Faculty",
            "Participates_in"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "city",
            "code",
            "and",
            "maximum",
            "major",
            "from",
            "student",
            "grouped",
            "by",
            "city",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "city_code",
            ",",
            "MAX",
            "(",
            "Major",
            ")",
            "FROM",
            "Student",
            "GROUP",
            "BY",
            "city_code"
        ],
        "query_toks_no_value": [
            "select",
            "city_code",
            ",",
            "max",
            "(",
            "major",
            ")",
            "from",
            "student",
            "group",
            "by",
            "city_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.city_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__student.major__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__student.city_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "activity_1",
        "query": "SELECT activity_name, MAX(actid) FROM Activity GROUP BY activity_name;",
        "question": "Select activity name and maximum activity id from activity grouped by activity name ",
        "tables": [
            "Student",
            "Faculty_Participates_in",
            "Activity",
            "Faculty",
            "Participates_in"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "activity",
            "name",
            "and",
            "maximum",
            "activity",
            "id",
            "from",
            "activity",
            "grouped",
            "by",
            "activity",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "activity_name",
            ",",
            "MAX",
            "(",
            "actid",
            ")",
            "FROM",
            "Activity",
            "GROUP",
            "BY",
            "activity_name"
        ],
        "query_toks_no_value": [
            "select",
            "activity_name",
            ",",
            "max",
            "(",
            "actid",
            ")",
            "from",
            "activity",
            "group",
            "by",
            "activity_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__activity__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__activity.activity_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__activity.actid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__activity.activity_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "activity_1",
        "query": "SELECT Sex, MIN(FacID) FROM Faculty GROUP BY Sex;",
        "question": "Select sex and minimum faculty id from faculty grouped by sex ",
        "tables": [
            "Student",
            "Faculty_Participates_in",
            "Activity",
            "Faculty",
            "Participates_in"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "sex",
            "and",
            "minimum",
            "faculty",
            "id",
            "from",
            "faculty",
            "grouped",
            "by",
            "sex"
        ],
        "query_toks": [
            "SELECT",
            "Sex",
            ",",
            "MIN",
            "(",
            "FacID",
            ")",
            "FROM",
            "Faculty",
            "GROUP",
            "BY",
            "Sex"
        ],
        "query_toks_no_value": [
            "select",
            "sex",
            ",",
            "min",
            "(",
            "facid",
            ")",
            "from",
            "faculty",
            "group",
            "by",
            "sex"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__faculty__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__faculty.sex__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__faculty.facid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__faculty.sex__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Other_Details, MAX(Tourist_Attraction_ID) FROM Staff GROUP BY Other_Details;",
        "question": "Select other details and maximum tourist attraction id from staff grouped by other details ",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "other",
            "details",
            "and",
            "maximum",
            "tourist",
            "attraction",
            "id",
            "from",
            "staff",
            "grouped",
            "by",
            "other",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "Other_Details",
            ",",
            "MAX",
            "(",
            "Tourist_Attraction_ID",
            ")",
            "FROM",
            "Staff",
            "GROUP",
            "BY",
            "Other_Details"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            ",",
            "max",
            "(",
            "tourist_attraction_id",
            ")",
            "from",
            "staff",
            "group",
            "by",
            "other_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__staff__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__staff.other_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__staff.tourist_attraction_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__staff.other_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Visit_Details, MAX(Visit_ID) FROM Visits GROUP BY Visit_Details;",
        "question": "Select visit details and maximum visit id from visits grouped by visit details ",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "visit",
            "details",
            "and",
            "maximum",
            "visit",
            "id",
            "from",
            "visits",
            "grouped",
            "by",
            "visit",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "Visit_Details",
            ",",
            "MAX",
            "(",
            "Visit_ID",
            ")",
            "FROM",
            "Visits",
            "GROUP",
            "BY",
            "Visit_Details"
        ],
        "query_toks_no_value": [
            "select",
            "visit_details",
            ",",
            "max",
            "(",
            "visit_id",
            ")",
            "from",
            "visits",
            "group",
            "by",
            "visit_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__visits__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__visits.visit_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__visits.visit_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__visits.visit_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Feature_Details, MIN(Feature_ID) FROM Features GROUP BY Feature_Details;",
        "question": "Select feature details and minimum feature id from features grouped by feature details ",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "feature",
            "details",
            "and",
            "minimum",
            "feature",
            "id",
            "from",
            "features",
            "grouped",
            "by",
            "feature",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "Feature_Details",
            ",",
            "MIN",
            "(",
            "Feature_ID",
            ")",
            "FROM",
            "Features",
            "GROUP",
            "BY",
            "Feature_Details"
        ],
        "query_toks_no_value": [
            "select",
            "feature_details",
            ",",
            "min",
            "(",
            "feature_id",
            ")",
            "from",
            "features",
            "group",
            "by",
            "feature_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__features__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__features.feature_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__features.feature_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__features.feature_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Royal_Family_Details, MIN(Royal_Family_ID) FROM Royal_Family GROUP BY Royal_Family_Details;",
        "question": "Select royal family details and minimum royal family id from royal family grouped by royal family details ",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "royal",
            "family",
            "details",
            "and",
            "minimum",
            "royal",
            "family",
            "id",
            "from",
            "royal",
            "family",
            "grouped",
            "by",
            "royal",
            "family",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "Royal_Family_Details",
            ",",
            "MIN",
            "(",
            "Royal_Family_ID",
            ")",
            "FROM",
            "Royal_Family",
            "GROUP",
            "BY",
            "Royal_Family_Details"
        ],
        "query_toks_no_value": [
            "select",
            "royal_family_details",
            ",",
            "min",
            "(",
            "royal_family_id",
            ")",
            "from",
            "royal_family",
            "group",
            "by",
            "royal_family_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__royal_family__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__royal_family.royal_family_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__royal_family.royal_family_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__royal_family.royal_family_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT pets_allowed_yn, MAX(hotel_id) FROM Hotels GROUP BY pets_allowed_yn;",
        "question": "Select pets allowed yn and maximum hotel id from hotels grouped by pets allowed yn ",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "pets",
            "allowed",
            "yn",
            "and",
            "maximum",
            "hotel",
            "id",
            "from",
            "hotels",
            "grouped",
            "by",
            "pets",
            "allowed",
            "yn"
        ],
        "query_toks": [
            "SELECT",
            "pets_allowed_yn",
            ",",
            "MAX",
            "(",
            "hotel_id",
            ")",
            "FROM",
            "Hotels",
            "GROUP",
            "BY",
            "pets_allowed_yn"
        ],
        "query_toks_no_value": [
            "select",
            "pets_allowed_yn",
            ",",
            "max",
            "(",
            "hotel_id",
            ")",
            "from",
            "hotels",
            "group",
            "by",
            "pets_allowed_yn"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__hotels__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__hotels.pets_allowed_yn__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__hotels.hotel_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__hotels.pets_allowed_yn__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Market_Details, MIN(Market_ID) FROM Street_Markets GROUP BY Market_Details;",
        "question": "Select market details and minimum market id from street markets grouped by market details ",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "market",
            "details",
            "and",
            "minimum",
            "market",
            "id",
            "from",
            "street",
            "markets",
            "grouped",
            "by",
            "market",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "Market_Details",
            ",",
            "MIN",
            "(",
            "Market_ID",
            ")",
            "FROM",
            "Street_Markets",
            "GROUP",
            "BY",
            "Market_Details"
        ],
        "query_toks_no_value": [
            "select",
            "market_details",
            ",",
            "min",
            "(",
            "market_id",
            ")",
            "from",
            "street_markets",
            "group",
            "by",
            "market_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__street_markets__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__street_markets.market_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__street_markets.market_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__street_markets.market_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Tourist_Details, MIN(Tourist_ID) FROM Visitors GROUP BY Tourist_Details;",
        "question": "Select tourist details and minimum tourist id from visitors grouped by tourist details ",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "tourist",
            "details",
            "and",
            "minimum",
            "tourist",
            "id",
            "from",
            "visitors",
            "grouped",
            "by",
            "tourist",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "Tourist_Details",
            ",",
            "MIN",
            "(",
            "Tourist_ID",
            ")",
            "FROM",
            "Visitors",
            "GROUP",
            "BY",
            "Tourist_Details"
        ],
        "query_toks_no_value": [
            "select",
            "tourist_details",
            ",",
            "min",
            "(",
            "tourist_id",
            ")",
            "from",
            "visitors",
            "group",
            "by",
            "tourist_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__visitors__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__visitors.tourist_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__visitors.tourist_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__visitors.tourist_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Museum_Details, MAX(Museum_ID) FROM Museums GROUP BY Museum_Details;",
        "question": "Select museum details and maximum museum id from museums grouped by museum details ",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "museum",
            "details",
            "and",
            "maximum",
            "museum",
            "id",
            "from",
            "museums",
            "grouped",
            "by",
            "museum",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "Museum_Details",
            ",",
            "MAX",
            "(",
            "Museum_ID",
            ")",
            "FROM",
            "Museums",
            "GROUP",
            "BY",
            "Museum_Details"
        ],
        "query_toks_no_value": [
            "select",
            "museum_details",
            ",",
            "max",
            "(",
            "museum_id",
            ")",
            "from",
            "museums",
            "group",
            "by",
            "museum_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__museums__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__museums.museum_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__museums.museum_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__museums.museum_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Name, MIN(Tourist_Attraction_ID) FROM Photos GROUP BY Name;",
        "question": "Select name and minimum tourist attraction id from photos grouped by name ",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "minimum",
            "tourist",
            "attraction",
            "id",
            "from",
            "photos",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "MIN",
            "(",
            "Tourist_Attraction_ID",
            ")",
            "FROM",
            "Photos",
            "GROUP",
            "BY",
            "Name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "min",
            "(",
            "tourist_attraction_id",
            ")",
            "from",
            "photos",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__photos__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__photos.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__photos.tourist_attraction_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__photos.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Shop_Details, MIN(Shop_ID) FROM Shops GROUP BY Shop_Details;",
        "question": "Select shop details and minimum shop id from shops grouped by shop details ",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "shop",
            "details",
            "and",
            "minimum",
            "shop",
            "id",
            "from",
            "shops",
            "grouped",
            "by",
            "shop",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "Shop_Details",
            ",",
            "MIN",
            "(",
            "Shop_ID",
            ")",
            "FROM",
            "Shops",
            "GROUP",
            "BY",
            "Shop_Details"
        ],
        "query_toks_no_value": [
            "select",
            "shop_details",
            ",",
            "min",
            "(",
            "shop_id",
            ")",
            "from",
            "shops",
            "group",
            "by",
            "shop_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__shops__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__shops.shop_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__shops.shop_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__shops.shop_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Other_Details, MAX(Location_ID) FROM Locations GROUP BY Other_Details;",
        "question": "Select other details and maximum location id from locations grouped by other details ",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "other",
            "details",
            "and",
            "maximum",
            "location",
            "id",
            "from",
            "locations",
            "grouped",
            "by",
            "other",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "Other_Details",
            ",",
            "MAX",
            "(",
            "Location_ID",
            ")",
            "FROM",
            "Locations",
            "GROUP",
            "BY",
            "Other_Details"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            ",",
            "max",
            "(",
            "location_id",
            ")",
            "from",
            "locations",
            "group",
            "by",
            "other_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__locations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__locations.other_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__locations.location_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__locations.other_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Theme_Park_Details, MIN(Theme_Park_ID) FROM Theme_Parks GROUP BY Theme_Park_Details;",
        "question": "Select theme park details and minimum theme park id from theme parks grouped by theme park details ",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "theme",
            "park",
            "details",
            "and",
            "minimum",
            "theme",
            "park",
            "id",
            "from",
            "theme",
            "parks",
            "grouped",
            "by",
            "theme",
            "park",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "Theme_Park_Details",
            ",",
            "MIN",
            "(",
            "Theme_Park_ID",
            ")",
            "FROM",
            "Theme_Parks",
            "GROUP",
            "BY",
            "Theme_Park_Details"
        ],
        "query_toks_no_value": [
            "select",
            "theme_park_details",
            ",",
            "min",
            "(",
            "theme_park_id",
            ")",
            "from",
            "theme_parks",
            "group",
            "by",
            "theme_park_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__theme_parks__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__theme_parks.theme_park_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__theme_parks.theme_park_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__theme_parks.theme_park_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT How_to_Get_There, MIN(Location_ID) FROM Tourist_Attractions GROUP BY How_to_Get_There;",
        "question": "Select how to get there and minimum location id from tourist attractions grouped by how to get there ",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "how",
            "to",
            "get",
            "there",
            "and",
            "minimum",
            "location",
            "id",
            "from",
            "tourist",
            "attractions",
            "grouped",
            "by",
            "how",
            "to",
            "get",
            "there"
        ],
        "query_toks": [
            "SELECT",
            "How_to_Get_There",
            ",",
            "MIN",
            "(",
            "Location_ID",
            ")",
            "FROM",
            "Tourist_Attractions",
            "GROUP",
            "BY",
            "How_to_Get_There"
        ],
        "query_toks_no_value": [
            "select",
            "how_to_get_there",
            ",",
            "min",
            "(",
            "location_id",
            ")",
            "from",
            "tourist_attractions",
            "group",
            "by",
            "how_to_get_there"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__tourist_attractions__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__tourist_attractions.how_to_get_there__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__tourist_attractions.location_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__tourist_attractions.how_to_get_there__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "twitter_1",
        "query": "SELECT email, MAX(partitionid) FROM user_profiles GROUP BY email;",
        "question": "Select email and maximum partition id from user profiles grouped by email ",
        "tables": [
            "user_profiles",
            "follows",
            "tweets"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "email",
            "and",
            "maximum",
            "partition",
            "id",
            "from",
            "user",
            "profiles",
            "grouped",
            "by",
            "email"
        ],
        "query_toks": [
            "SELECT",
            "email",
            ",",
            "MAX",
            "(",
            "partitionid",
            ")",
            "FROM",
            "user_profiles",
            "GROUP",
            "BY",
            "email"
        ],
        "query_toks_no_value": [
            "select",
            "email",
            ",",
            "max",
            "(",
            "partitionid",
            ")",
            "from",
            "user_profiles",
            "group",
            "by",
            "email"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__user_profiles__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__user_profiles.email__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__user_profiles.partitionid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__user_profiles.email__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "twitter_1",
        "query": "SELECT text, MIN(uid) FROM tweets GROUP BY text;",
        "question": "Select text and minimum user id from tweets grouped by text ",
        "tables": [
            "user_profiles",
            "follows",
            "tweets"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "text",
            "and",
            "minimum",
            "user",
            "id",
            "from",
            "tweets",
            "grouped",
            "by",
            "text"
        ],
        "query_toks": [
            "SELECT",
            "text",
            ",",
            "MIN",
            "(",
            "uid",
            ")",
            "FROM",
            "tweets",
            "GROUP",
            "BY",
            "text"
        ],
        "query_toks_no_value": [
            "select",
            "text",
            ",",
            "min",
            "(",
            "uid",
            ")",
            "from",
            "tweets",
            "group",
            "by",
            "text"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__tweets__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__tweets.text__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__tweets.uid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__tweets.text__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "election_representative",
        "query": "SELECT Date, MAX(Representative_ID) FROM election GROUP BY Date;",
        "question": "Select date and maximum representative id from election grouped by date ",
        "tables": [
            "election",
            "representative"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "date",
            "and",
            "maximum",
            "representative",
            "id",
            "from",
            "election",
            "grouped",
            "by",
            "date"
        ],
        "query_toks": [
            "SELECT",
            "Date",
            ",",
            "MAX",
            "(",
            "Representative_ID",
            ")",
            "FROM",
            "election",
            "GROUP",
            "BY",
            "Date"
        ],
        "query_toks_no_value": [
            "select",
            "date",
            ",",
            "max",
            "(",
            "representative_id",
            ")",
            "from",
            "election",
            "group",
            "by",
            "date"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__election__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__election.date__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__election.representative_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__election.date__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "election_representative",
        "query": "SELECT Name, MAX(Representative_ID) FROM representative GROUP BY Name;",
        "question": "Select name and maximum representative id from representative grouped by name ",
        "tables": [
            "election",
            "representative"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "maximum",
            "representative",
            "id",
            "from",
            "representative",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "MAX",
            "(",
            "Representative_ID",
            ")",
            "FROM",
            "representative",
            "GROUP",
            "BY",
            "Name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "max",
            "(",
            "representative_id",
            ")",
            "from",
            "representative",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__representative__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__representative.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__representative.representative_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__representative.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_2",
        "query": "SELECT Sex, MIN(Advisor) FROM Student GROUP BY Sex;",
        "question": "Select sex and minimum advisor from student grouped by sex ",
        "tables": [
            "Student",
            "Voting_record"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "sex",
            "and",
            "minimum",
            "advisor",
            "from",
            "student",
            "grouped",
            "by",
            "sex"
        ],
        "query_toks": [
            "SELECT",
            "Sex",
            ",",
            "MIN",
            "(",
            "Advisor",
            ")",
            "FROM",
            "Student",
            "GROUP",
            "BY",
            "Sex"
        ],
        "query_toks_no_value": [
            "select",
            "sex",
            ",",
            "min",
            "(",
            "advisor",
            ")",
            "from",
            "student",
            "group",
            "by",
            "sex"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.sex__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__student.advisor__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__student.sex__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_2",
        "query": "SELECT Election_Cycle, MAX(Secretary_Vote) FROM Voting_record GROUP BY Election_Cycle;",
        "question": "Select election cycle and maximum secretary vote from voting record grouped by election cycle ",
        "tables": [
            "Student",
            "Voting_record"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "election",
            "cycle",
            "and",
            "maximum",
            "secretary",
            "vote",
            "from",
            "voting",
            "record",
            "grouped",
            "by",
            "election",
            "cycle"
        ],
        "query_toks": [
            "SELECT",
            "Election_Cycle",
            ",",
            "MAX",
            "(",
            "Secretary_Vote",
            ")",
            "FROM",
            "Voting_record",
            "GROUP",
            "BY",
            "Election_Cycle"
        ],
        "query_toks_no_value": [
            "select",
            "election_cycle",
            ",",
            "max",
            "(",
            "secretary_vote",
            ")",
            "from",
            "voting_record",
            "group",
            "by",
            "election_cycle"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__voting_record__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__voting_record.election_cycle__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__voting_record.secretary_vote__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__voting_record.election_cycle__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wedding",
        "query": "SELECT Continuation_of, MAX(Church_ID) FROM church GROUP BY Continuation_of;",
        "question": "Select continuation of and maximum church id from church grouped by continuation of ",
        "tables": [
            "church",
            "wedding",
            "people"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "continuation",
            "of",
            "and",
            "maximum",
            "church",
            "id",
            "from",
            "church",
            "grouped",
            "by",
            "continuation",
            "of"
        ],
        "query_toks": [
            "SELECT",
            "Continuation_of",
            ",",
            "MAX",
            "(",
            "Church_ID",
            ")",
            "FROM",
            "church",
            "GROUP",
            "BY",
            "Continuation_of"
        ],
        "query_toks_no_value": [
            "select",
            "continuation_of",
            ",",
            "max",
            "(",
            "church_id",
            ")",
            "from",
            "church",
            "group",
            "by",
            "continuation_of"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__church__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__church.continuation_of__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__church.church_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__church.continuation_of__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wedding",
        "query": "SELECT Name, MIN(People_ID) FROM people GROUP BY Name;",
        "question": "Select name and minimum people id from people grouped by name ",
        "tables": [
            "church",
            "wedding",
            "people"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "minimum",
            "people",
            "id",
            "from",
            "people",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "MIN",
            "(",
            "People_ID",
            ")",
            "FROM",
            "people",
            "GROUP",
            "BY",
            "Name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "min",
            "(",
            "people_id",
            ")",
            "from",
            "people",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__people__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__people.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__people.people_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__people.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "news_report",
        "query": "SELECT Venue, MIN(Event_Attendance) FROM event GROUP BY Venue;",
        "question": "Select venue and minimum event attendance from event grouped by venue ",
        "tables": [
            "event",
            "journalist",
            "news_report"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "venue",
            "and",
            "minimum",
            "event",
            "attendance",
            "from",
            "event",
            "grouped",
            "by",
            "venue"
        ],
        "query_toks": [
            "SELECT",
            "Venue",
            ",",
            "MIN",
            "(",
            "Event_Attendance",
            ")",
            "FROM",
            "event",
            "GROUP",
            "BY",
            "Venue"
        ],
        "query_toks_no_value": [
            "select",
            "venue",
            ",",
            "min",
            "(",
            "event_attendance",
            ")",
            "from",
            "event",
            "group",
            "by",
            "venue"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__event__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__event.venue__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__event.event_attendance__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__event.venue__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "news_report",
        "query": "SELECT Age, MAX(Years_working) FROM journalist GROUP BY Age;",
        "question": "Select age and maximum years working from journalist grouped by age ",
        "tables": [
            "event",
            "journalist",
            "news_report"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "age",
            "and",
            "maximum",
            "years",
            "working",
            "from",
            "journalist",
            "grouped",
            "by",
            "age"
        ],
        "query_toks": [
            "SELECT",
            "Age",
            ",",
            "MAX",
            "(",
            "Years_working",
            ")",
            "FROM",
            "journalist",
            "GROUP",
            "BY",
            "Age"
        ],
        "query_toks_no_value": [
            "select",
            "age",
            ",",
            "max",
            "(",
            "years_working",
            ")",
            "from",
            "journalist",
            "group",
            "by",
            "age"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__journalist__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__journalist.age__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__journalist.years_working__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__journalist.age__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "news_report",
        "query": "SELECT Work_Type, MAX(journalist_ID) FROM news_report GROUP BY Work_Type;",
        "question": "Select work type and maximum journalist id from news report grouped by work type ",
        "tables": [
            "event",
            "journalist",
            "news_report"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "work",
            "type",
            "and",
            "maximum",
            "journalist",
            "id",
            "from",
            "news",
            "report",
            "grouped",
            "by",
            "work",
            "type"
        ],
        "query_toks": [
            "SELECT",
            "Work_Type",
            ",",
            "MAX",
            "(",
            "journalist_ID",
            ")",
            "FROM",
            "news_report",
            "GROUP",
            "BY",
            "Work_Type"
        ],
        "query_toks_no_value": [
            "select",
            "work_type",
            ",",
            "max",
            "(",
            "journalist_id",
            ")",
            "from",
            "news_report",
            "group",
            "by",
            "work_type"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__news_report__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__news_report.work_type__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__news_report.journalist_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__news_report.work_type__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wine_1",
        "query": "SELECT Grape, MIN(No) FROM wine GROUP BY Grape;",
        "question": "Select grape and minimum no from wine grouped by grape ",
        "tables": [
            "wine",
            "grapes",
            "appellations"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "grape",
            "and",
            "minimum",
            "no",
            "from",
            "wine",
            "grouped",
            "by",
            "grape"
        ],
        "query_toks": [
            "SELECT",
            "Grape",
            ",",
            "MIN",
            "(",
            "No",
            ")",
            "FROM",
            "wine",
            "GROUP",
            "BY",
            "Grape"
        ],
        "query_toks_no_value": [
            "select",
            "grape",
            ",",
            "min",
            "(",
            "no",
            ")",
            "from",
            "wine",
            "group",
            "by",
            "grape"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__wine__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__wine.grape__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__wine.no__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__wine.grape__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wine_1",
        "query": "SELECT Color, MIN(ID) FROM grapes GROUP BY Color;",
        "question": "Select color and minimum id from grapes grouped by color ",
        "tables": [
            "wine",
            "grapes",
            "appellations"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "color",
            "and",
            "minimum",
            "id",
            "from",
            "grapes",
            "grouped",
            "by",
            "color"
        ],
        "query_toks": [
            "SELECT",
            "Color",
            ",",
            "MIN",
            "(",
            "ID",
            ")",
            "FROM",
            "grapes",
            "GROUP",
            "BY",
            "Color"
        ],
        "query_toks_no_value": [
            "select",
            "color",
            ",",
            "min",
            "(",
            "id",
            ")",
            "from",
            "grapes",
            "group",
            "by",
            "color"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__grapes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__grapes.color__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__grapes.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__grapes.color__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wine_1",
        "query": "SELECT Area, MAX(No) FROM appellations GROUP BY Area;",
        "question": "Select area and maximum no from appellations grouped by area ",
        "tables": [
            "wine",
            "grapes",
            "appellations"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "area",
            "and",
            "maximum",
            "no",
            "from",
            "appellations",
            "grouped",
            "by",
            "area"
        ],
        "query_toks": [
            "SELECT",
            "Area",
            ",",
            "MAX",
            "(",
            "No",
            ")",
            "FROM",
            "appellations",
            "GROUP",
            "BY",
            "Area"
        ],
        "query_toks_no_value": [
            "select",
            "area",
            ",",
            "max",
            "(",
            "no",
            ")",
            "from",
            "appellations",
            "group",
            "by",
            "area"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__appellations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__appellations.area__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__appellations.no__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__appellations.area__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_addresses",
        "query": "SELECT contact_number, MAX(customer_id) FROM Customer_Contact_Channels GROUP BY contact_number;",
        "question": "Select contact number and maximum customer id from customer contact channels grouped by contact number ",
        "tables": [
            "Customer_Contact_Channels",
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "contact",
            "number",
            "and",
            "maximum",
            "customer",
            "id",
            "from",
            "customer",
            "contact",
            "channels",
            "grouped",
            "by",
            "contact",
            "number"
        ],
        "query_toks": [
            "SELECT",
            "contact_number",
            ",",
            "MAX",
            "(",
            "customer_id",
            ")",
            "FROM",
            "Customer_Contact_Channels",
            "GROUP",
            "BY",
            "contact_number"
        ],
        "query_toks_no_value": [
            "select",
            "contact_number",
            ",",
            "max",
            "(",
            "customer_id",
            ")",
            "from",
            "customer_contact_channels",
            "group",
            "by",
            "contact_number"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_contact_channels__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_contact_channels.contact_number__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__customer_contact_channels.customer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customer_contact_channels.contact_number__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_addresses",
        "query": "SELECT product_details, MIN(product_id) FROM Products GROUP BY product_details;",
        "question": "Select product details and minimum product id from products grouped by product details ",
        "tables": [
            "Customer_Contact_Channels",
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "product",
            "details",
            "and",
            "minimum",
            "product",
            "id",
            "from",
            "products",
            "grouped",
            "by",
            "product",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "product_details",
            ",",
            "MIN",
            "(",
            "product_id",
            ")",
            "FROM",
            "Products",
            "GROUP",
            "BY",
            "product_details"
        ],
        "query_toks_no_value": [
            "select",
            "product_details",
            ",",
            "min",
            "(",
            "product_id",
            ")",
            "from",
            "products",
            "group",
            "by",
            "product_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products.product_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__products.product_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__products.product_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_addresses",
        "query": "SELECT order_quantity, MIN(product_id) FROM Order_Items GROUP BY order_quantity;",
        "question": "Select order quantity and minimum product id from order items grouped by order quantity ",
        "tables": [
            "Customer_Contact_Channels",
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "order",
            "quantity",
            "and",
            "minimum",
            "product",
            "id",
            "from",
            "order",
            "items",
            "grouped",
            "by",
            "order",
            "quantity"
        ],
        "query_toks": [
            "SELECT",
            "order_quantity",
            ",",
            "MIN",
            "(",
            "product_id",
            ")",
            "FROM",
            "Order_Items",
            "GROUP",
            "BY",
            "order_quantity"
        ],
        "query_toks_no_value": [
            "select",
            "order_quantity",
            ",",
            "min",
            "(",
            "product_id",
            ")",
            "from",
            "order_items",
            "group",
            "by",
            "order_quantity"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__order_items__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__order_items.order_quantity__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__order_items.product_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__order_items.order_quantity__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_addresses",
        "query": "SELECT state_province_county, MAX(address_id) FROM Addresses GROUP BY state_province_county;",
        "question": "Select state province county and maximum address id from addresses grouped by state province county ",
        "tables": [
            "Customer_Contact_Channels",
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "state",
            "province",
            "county",
            "and",
            "maximum",
            "address",
            "id",
            "from",
            "addresses",
            "grouped",
            "by",
            "state",
            "province",
            "county"
        ],
        "query_toks": [
            "SELECT",
            "state_province_county",
            ",",
            "MAX",
            "(",
            "address_id",
            ")",
            "FROM",
            "Addresses",
            "GROUP",
            "BY",
            "state_province_county"
        ],
        "query_toks_no_value": [
            "select",
            "state_province_county",
            ",",
            "max",
            "(",
            "address_id",
            ")",
            "from",
            "addresses",
            "group",
            "by",
            "state_province_county"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__addresses.state_province_county__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__addresses.address_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__addresses.state_province_county__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_addresses",
        "query": "SELECT order_details, MAX(order_id) FROM Customer_Orders GROUP BY order_details;",
        "question": "Select order details and maximum order id from customer orders grouped by order details ",
        "tables": [
            "Customer_Contact_Channels",
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "order",
            "details",
            "and",
            "maximum",
            "order",
            "id",
            "from",
            "customer",
            "orders",
            "grouped",
            "by",
            "order",
            "details"
        ],
        "query_toks": [
            "SELECT",
            "order_details",
            ",",
            "MAX",
            "(",
            "order_id",
            ")",
            "FROM",
            "Customer_Orders",
            "GROUP",
            "BY",
            "order_details"
        ],
        "query_toks_no_value": [
            "select",
            "order_details",
            ",",
            "max",
            "(",
            "order_id",
            ")",
            "from",
            "customer_orders",
            "group",
            "by",
            "order_details"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_orders__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_orders.order_details__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__customer_orders.order_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customer_orders.order_details__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_addresses",
        "query": "SELECT address_type, MIN(address_id) FROM Customer_Addresses GROUP BY address_type;",
        "question": "Select address type and minimum address id from customer addresses grouped by address type ",
        "tables": [
            "Customer_Contact_Channels",
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "address",
            "type",
            "and",
            "minimum",
            "address",
            "id",
            "from",
            "customer",
            "addresses",
            "grouped",
            "by",
            "address",
            "type"
        ],
        "query_toks": [
            "SELECT",
            "address_type",
            ",",
            "MIN",
            "(",
            "address_id",
            ")",
            "FROM",
            "Customer_Addresses",
            "GROUP",
            "BY",
            "address_type"
        ],
        "query_toks_no_value": [
            "select",
            "address_type",
            ",",
            "min",
            "(",
            "address_id",
            ")",
            "from",
            "customer_addresses",
            "group",
            "by",
            "address_type"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_addresses.address_type__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__customer_addresses.address_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customer_addresses.address_type__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_addresses",
        "query": "SELECT payment_method, MIN(customer_id) FROM Customers GROUP BY payment_method;",
        "question": "Select payment method and minimum customer id from customers grouped by payment method ",
        "tables": [
            "Customer_Contact_Channels",
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "payment",
            "method",
            "and",
            "minimum",
            "customer",
            "id",
            "from",
            "customers",
            "grouped",
            "by",
            "payment",
            "method"
        ],
        "query_toks": [
            "SELECT",
            "payment_method",
            ",",
            "MIN",
            "(",
            "customer_id",
            ")",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "payment_method"
        ],
        "query_toks_no_value": [
            "select",
            "payment_method",
            ",",
            "min",
            "(",
            "customer_id",
            ")",
            "from",
            "customers",
            "group",
            "by",
            "payment_method"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.payment_method__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customers.payment_method__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "protein_institute",
        "query": "SELECT Name, MAX(Floors) FROM building GROUP BY Name;",
        "question": "Select name and maximum floors from building grouped by name ",
        "tables": [
            "building",
            "protein",
            "Institution"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "maximum",
            "floors",
            "from",
            "building",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "MAX",
            "(",
            "Floors",
            ")",
            "FROM",
            "building",
            "GROUP",
            "BY",
            "Name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "max",
            "(",
            "floors",
            ")",
            "from",
            "building",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__building__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__building.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__building.floors__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__building.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "protein_institute",
        "query": "SELECT accession_number, MIN(sequence_length) FROM protein GROUP BY accession_number;",
        "question": "Select accession number and minimum sequence length from protein grouped by accession number ",
        "tables": [
            "building",
            "protein",
            "Institution"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "accession",
            "number",
            "and",
            "minimum",
            "sequence",
            "length",
            "from",
            "protein",
            "grouped",
            "by",
            "accession",
            "number"
        ],
        "query_toks": [
            "SELECT",
            "accession_number",
            ",",
            "MIN",
            "(",
            "sequence_length",
            ")",
            "FROM",
            "protein",
            "GROUP",
            "BY",
            "accession_number"
        ],
        "query_toks_no_value": [
            "select",
            "accession_number",
            ",",
            "min",
            "(",
            "sequence_length",
            ")",
            "from",
            "protein",
            "group",
            "by",
            "accession_number"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__protein__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__protein.accession_number__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__protein.sequence_length__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__protein.accession_number__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "protein_institute",
        "query": "SELECT Type, MIN(Enrollment) FROM Institution GROUP BY Type;",
        "question": "Select type and minimum enrollment from institution grouped by type ",
        "tables": [
            "building",
            "protein",
            "Institution"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "type",
            "and",
            "minimum",
            "enrollment",
            "from",
            "institution",
            "grouped",
            "by",
            "type"
        ],
        "query_toks": [
            "SELECT",
            "Type",
            ",",
            "MIN",
            "(",
            "Enrollment",
            ")",
            "FROM",
            "Institution",
            "GROUP",
            "BY",
            "Type"
        ],
        "query_toks_no_value": [
            "select",
            "type",
            ",",
            "min",
            "(",
            "enrollment",
            ")",
            "from",
            "institution",
            "group",
            "by",
            "type"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__institution__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__institution.type__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__institution.enrollment__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__institution.type__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "school_player",
        "query": "SELECT Class_AA, MAX(School_Id) FROM school_performance GROUP BY Class_AA;",
        "question": "Select class aa and maximum school id from school performance grouped by class aa ",
        "tables": [
            "school_performance",
            "school",
            "player",
            "school_details"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "class",
            "aa",
            "and",
            "maximum",
            "school",
            "id",
            "from",
            "school",
            "performance",
            "grouped",
            "by",
            "class",
            "aa"
        ],
        "query_toks": [
            "SELECT",
            "Class_AA",
            ",",
            "MAX",
            "(",
            "School_Id",
            ")",
            "FROM",
            "school_performance",
            "GROUP",
            "BY",
            "Class_AA"
        ],
        "query_toks_no_value": [
            "select",
            "class_aa",
            ",",
            "max",
            "(",
            "school_id",
            ")",
            "from",
            "school_performance",
            "group",
            "by",
            "class_aa"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__school_performance__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__school_performance.class_aa__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__school_performance.school_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__school_performance.class_aa__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "school_player",
        "query": "SELECT Boys_or_Girls, MAX(Enrollment) FROM school GROUP BY Boys_or_Girls;",
        "question": "Select boys or girls and maximum enrollment from school grouped by boys or girls ",
        "tables": [
            "school_performance",
            "school",
            "player",
            "school_details"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "boys",
            "or",
            "girls",
            "and",
            "maximum",
            "enrollment",
            "from",
            "school",
            "grouped",
            "by",
            "boys",
            "or",
            "girls"
        ],
        "query_toks": [
            "SELECT",
            "Boys_or_Girls",
            ",",
            "MAX",
            "(",
            "Enrollment",
            ")",
            "FROM",
            "school",
            "GROUP",
            "BY",
            "Boys_or_Girls"
        ],
        "query_toks_no_value": [
            "select",
            "boys_or_girls",
            ",",
            "max",
            "(",
            "enrollment",
            ")",
            "from",
            "school",
            "group",
            "by",
            "boys_or_girls"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__school__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__school.boys_or_girls__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__school.enrollment__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__school.boys_or_girls__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "school_player",
        "query": "SELECT Team, MAX(Age) FROM player GROUP BY Team;",
        "question": "Select team and maximum age from player grouped by team ",
        "tables": [
            "school_performance",
            "school",
            "player",
            "school_details"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "team",
            "and",
            "maximum",
            "age",
            "from",
            "player",
            "grouped",
            "by",
            "team"
        ],
        "query_toks": [
            "SELECT",
            "Team",
            ",",
            "MAX",
            "(",
            "Age",
            ")",
            "FROM",
            "player",
            "GROUP",
            "BY",
            "Team"
        ],
        "query_toks_no_value": [
            "select",
            "team",
            ",",
            "max",
            "(",
            "age",
            ")",
            "from",
            "player",
            "group",
            "by",
            "team"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__player__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__player.team__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__player.age__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__player.team__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "school_player",
        "query": "SELECT League, MIN(School_ID) FROM school_details GROUP BY League;",
        "question": "Select league and minimum school id from school details grouped by league ",
        "tables": [
            "school_performance",
            "school",
            "player",
            "school_details"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "league",
            "and",
            "minimum",
            "school",
            "id",
            "from",
            "school",
            "details",
            "grouped",
            "by",
            "league"
        ],
        "query_toks": [
            "SELECT",
            "League",
            ",",
            "MIN",
            "(",
            "School_ID",
            ")",
            "FROM",
            "school_details",
            "GROUP",
            "BY",
            "League"
        ],
        "query_toks_no_value": [
            "select",
            "league",
            ",",
            "min",
            "(",
            "school_id",
            ")",
            "from",
            "school_details",
            "group",
            "by",
            "league"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__school_details__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__school_details.league__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__school_details.school_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__school_details.league__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "phone_1",
        "query": "SELECT Type, MIN(Hardware_colours) FROM screen_mode GROUP BY Type;",
        "question": "Select type and minimum hardware colours from screen mode grouped by type ",
        "tables": [
            "screen_mode",
            "chip_model",
            "phone"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "type",
            "and",
            "minimum",
            "hardware",
            "colours",
            "from",
            "screen",
            "mode",
            "grouped",
            "by",
            "type"
        ],
        "query_toks": [
            "SELECT",
            "Type",
            ",",
            "MIN",
            "(",
            "Hardware_colours",
            ")",
            "FROM",
            "screen_mode",
            "GROUP",
            "BY",
            "Type"
        ],
        "query_toks_no_value": [
            "select",
            "type",
            ",",
            "min",
            "(",
            "hardware_colours",
            ")",
            "from",
            "screen_mode",
            "group",
            "by",
            "type"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__screen_mode__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__screen_mode.type__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__screen_mode.hardware_colours__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__screen_mode.type__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "phone_1",
        "query": "SELECT Slots, MAX(RAM_MiB) FROM chip_model GROUP BY Slots;",
        "question": "Select slots and maximum ram mib from chip model grouped by slots ",
        "tables": [
            "screen_mode",
            "chip_model",
            "phone"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "slots",
            "and",
            "maximum",
            "ram",
            "mib",
            "from",
            "chip",
            "model",
            "grouped",
            "by",
            "slots"
        ],
        "query_toks": [
            "SELECT",
            "Slots",
            ",",
            "MAX",
            "(",
            "RAM_MiB",
            ")",
            "FROM",
            "chip_model",
            "GROUP",
            "BY",
            "Slots"
        ],
        "query_toks_no_value": [
            "select",
            "slots",
            ",",
            "max",
            "(",
            "ram_mib",
            ")",
            "from",
            "chip_model",
            "group",
            "by",
            "slots"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__chip_model__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__chip_model.slots__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__chip_model.ram_mib__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__chip_model.slots__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "query": "SELECT Channel, MIN(Production_code) FROM Cartoon GROUP BY Channel;",
        "question": "Select channel and minimum production code from cartoon grouped by channel ",
        "tables": [
            "Cartoon",
            "TV_Channel",
            "TV_series"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "channel",
            "and",
            "minimum",
            "production",
            "code",
            "from",
            "cartoon",
            "grouped",
            "by",
            "channel"
        ],
        "query_toks": [
            "SELECT",
            "Channel",
            ",",
            "MIN",
            "(",
            "Production_code",
            ")",
            "FROM",
            "Cartoon",
            "GROUP",
            "BY",
            "Channel"
        ],
        "query_toks_no_value": [
            "select",
            "channel",
            ",",
            "min",
            "(",
            "production_code",
            ")",
            "from",
            "cartoon",
            "group",
            "by",
            "channel"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__cartoon__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__cartoon.channel__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__cartoon.production_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__cartoon.channel__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "query": "SELECT 18_49_Rating_Share, MAX(Share) FROM TV_series GROUP BY 18_49_Rating_Share;",
        "question": "Select 18 49 rating share and maximum share from tv series grouped by 18 49 rating share ",
        "tables": [
            "Cartoon",
            "TV_Channel",
            "TV_series"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "18",
            "49",
            "rating",
            "share",
            "and",
            "maximum",
            "share",
            "from",
            "tv",
            "series",
            "grouped",
            "by",
            "18",
            "49",
            "rating",
            "share"
        ],
        "query_toks": [
            "SELECT",
            "18_49_Rating_Share",
            ",",
            "MAX",
            "(",
            "Share",
            ")",
            "FROM",
            "TV_series",
            "GROUP",
            "BY",
            "18_49_Rating_Share"
        ],
        "query_toks_no_value": [
            "select",
            "18_49_rating_share",
            ",",
            "max",
            "(",
            "share",
            ")",
            "from",
            "tv_series",
            "group",
            "by",
            "18_49_rating_share"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__tv_series__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__tv_series.18_49_rating_share__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__tv_series.share__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__tv_series.18_49_rating_share__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wrestler",
        "query": "SELECT Reign, MAX(Wrestler_ID) FROM wrestler GROUP BY Reign;",
        "question": "Select reign and maximum wrestler id from wrestler grouped by reign ",
        "tables": [
            "Elimination",
            "wrestler"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "reign",
            "and",
            "maximum",
            "wrestler",
            "id",
            "from",
            "wrestler",
            "grouped",
            "by",
            "reign"
        ],
        "query_toks": [
            "SELECT",
            "Reign",
            ",",
            "MAX",
            "(",
            "Wrestler_ID",
            ")",
            "FROM",
            "wrestler",
            "GROUP",
            "BY",
            "Reign"
        ],
        "query_toks_no_value": [
            "select",
            "reign",
            ",",
            "max",
            "(",
            "wrestler_id",
            ")",
            "from",
            "wrestler",
            "group",
            "by",
            "reign"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__wrestler__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__wrestler.reign__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__wrestler.wrestler_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__wrestler.reign__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_complaints",
        "query": "SELECT gender, MIN(staff_id) FROM Staff GROUP BY gender;",
        "question": "Select gender and minimum staff id from staff grouped by gender ",
        "tables": [
            "Staff",
            "Complaints",
            "Products",
            "Customers"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "gender",
            "and",
            "minimum",
            "staff",
            "id",
            "from",
            "staff",
            "grouped",
            "by",
            "gender"
        ],
        "query_toks": [
            "SELECT",
            "gender",
            ",",
            "MIN",
            "(",
            "staff_id",
            ")",
            "FROM",
            "Staff",
            "GROUP",
            "BY",
            "gender"
        ],
        "query_toks_no_value": [
            "select",
            "gender",
            ",",
            "min",
            "(",
            "staff_id",
            ")",
            "from",
            "staff",
            "group",
            "by",
            "gender"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__staff__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__staff.gender__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__staff.staff_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__staff.gender__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_complaints",
        "query": "SELECT complaint_type_code, MIN(customer_id) FROM Complaints GROUP BY complaint_type_code;",
        "question": "Select complaint type code and minimum customer id from complaints grouped by complaint type code ",
        "tables": [
            "Staff",
            "Complaints",
            "Products",
            "Customers"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "complaint",
            "type",
            "code",
            "and",
            "minimum",
            "customer",
            "id",
            "from",
            "complaints",
            "grouped",
            "by",
            "complaint",
            "type",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "complaint_type_code",
            ",",
            "MIN",
            "(",
            "customer_id",
            ")",
            "FROM",
            "Complaints",
            "GROUP",
            "BY",
            "complaint_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "complaint_type_code",
            ",",
            "min",
            "(",
            "customer_id",
            ")",
            "from",
            "complaints",
            "group",
            "by",
            "complaint_type_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__complaints__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__complaints.complaint_type_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__complaints.customer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__complaints.complaint_type_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_complaints",
        "query": "SELECT product_category_code, MIN(product_price) FROM Products GROUP BY product_category_code;",
        "question": "Select product category code and minimum product price from products grouped by product category code ",
        "tables": [
            "Staff",
            "Complaints",
            "Products",
            "Customers"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "product",
            "category",
            "code",
            "and",
            "minimum",
            "product",
            "price",
            "from",
            "products",
            "grouped",
            "by",
            "product",
            "category",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "product_category_code",
            ",",
            "MIN",
            "(",
            "product_price",
            ")",
            "FROM",
            "Products",
            "GROUP",
            "BY",
            "product_category_code"
        ],
        "query_toks_no_value": [
            "select",
            "product_category_code",
            ",",
            "min",
            "(",
            "product_price",
            ")",
            "from",
            "products",
            "group",
            "by",
            "product_category_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products.product_category_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__products.product_price__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__products.product_category_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_complaints",
        "query": "SELECT address_line_2, MAX(customer_id) FROM Customers GROUP BY address_line_2;",
        "question": "Select address line 2 and maximum customer id from customers grouped by address line 2 ",
        "tables": [
            "Staff",
            "Complaints",
            "Products",
            "Customers"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "address",
            "line",
            "2",
            "and",
            "maximum",
            "customer",
            "id",
            "from",
            "customers",
            "grouped",
            "by",
            "address",
            "line",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "address_line_2",
            ",",
            "MAX",
            "(",
            "customer_id",
            ")",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "address_line_2"
        ],
        "query_toks_no_value": [
            "select",
            "address_line_2",
            ",",
            "max",
            "(",
            "customer_id",
            ")",
            "from",
            "customers",
            "group",
            "by",
            "address_line_2"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.address_line_2__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customers.address_line_2__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_management",
        "query": "SELECT temporary_acting, MIN(head_ID) FROM management GROUP BY temporary_acting;",
        "question": "Select temporary acting and minimum head id from management grouped by temporary acting ",
        "tables": [
            "management",
            "department",
            "head"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "temporary",
            "acting",
            "and",
            "minimum",
            "head",
            "id",
            "from",
            "management",
            "grouped",
            "by",
            "temporary",
            "acting"
        ],
        "query_toks": [
            "SELECT",
            "temporary_acting",
            ",",
            "MIN",
            "(",
            "head_ID",
            ")",
            "FROM",
            "management",
            "GROUP",
            "BY",
            "temporary_acting"
        ],
        "query_toks_no_value": [
            "select",
            "temporary_acting",
            ",",
            "min",
            "(",
            "head_id",
            ")",
            "from",
            "management",
            "group",
            "by",
            "temporary_acting"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__management__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__management.temporary_acting__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__management.head_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__management.temporary_acting__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_management",
        "query": "SELECT Name, MIN(Ranking) FROM department GROUP BY Name;",
        "question": "Select name and minimum ranking from department grouped by name ",
        "tables": [
            "management",
            "department",
            "head"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "minimum",
            "ranking",
            "from",
            "department",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "MIN",
            "(",
            "Ranking",
            ")",
            "FROM",
            "department",
            "GROUP",
            "BY",
            "Name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "min",
            "(",
            "ranking",
            ")",
            "from",
            "department",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__department__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__department.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__department.ranking__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__department.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_management",
        "query": "SELECT born_state, MAX(age) FROM head GROUP BY born_state;",
        "question": "Select born state and maximum age from head grouped by born state ",
        "tables": [
            "management",
            "department",
            "head"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "born",
            "state",
            "and",
            "maximum",
            "age",
            "from",
            "head",
            "grouped",
            "by",
            "born",
            "state"
        ],
        "query_toks": [
            "SELECT",
            "born_state",
            ",",
            "MAX",
            "(",
            "age",
            ")",
            "FROM",
            "head",
            "GROUP",
            "BY",
            "born_state"
        ],
        "query_toks_no_value": [
            "select",
            "born_state",
            ",",
            "max",
            "(",
            "age",
            ")",
            "from",
            "head",
            "group",
            "by",
            "born_state"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__head__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__head.born_state__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__head.age__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__head.born_state__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_products_contacts",
        "query": "SELECT product_type_code, MAX(product_id) FROM Products GROUP BY product_type_code;",
        "question": "Select product type code and maximum product id from products grouped by product type code ",
        "tables": [
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Address_History",
            "Customer_Orders",
            "Customers",
            "Contacts"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "product",
            "type",
            "code",
            "and",
            "maximum",
            "product",
            "id",
            "from",
            "products",
            "grouped",
            "by",
            "product",
            "type",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "product_type_code",
            ",",
            "MAX",
            "(",
            "product_id",
            ")",
            "FROM",
            "Products",
            "GROUP",
            "BY",
            "product_type_code"
        ],
        "query_toks_no_value": [
            "select",
            "product_type_code",
            ",",
            "max",
            "(",
            "product_id",
            ")",
            "from",
            "products",
            "group",
            "by",
            "product_type_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products.product_type_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__products.product_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__products.product_type_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_products_contacts",
        "query": "SELECT order_quantity, MAX(order_item_id) FROM Order_Items GROUP BY order_quantity;",
        "question": "Select order quantity and maximum order item id from order items grouped by order quantity ",
        "tables": [
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Address_History",
            "Customer_Orders",
            "Customers",
            "Contacts"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "order",
            "quantity",
            "and",
            "maximum",
            "order",
            "item",
            "id",
            "from",
            "order",
            "items",
            "grouped",
            "by",
            "order",
            "quantity"
        ],
        "query_toks": [
            "SELECT",
            "order_quantity",
            ",",
            "MAX",
            "(",
            "order_item_id",
            ")",
            "FROM",
            "Order_Items",
            "GROUP",
            "BY",
            "order_quantity"
        ],
        "query_toks_no_value": [
            "select",
            "order_quantity",
            ",",
            "max",
            "(",
            "order_item_id",
            ")",
            "from",
            "order_items",
            "group",
            "by",
            "order_quantity"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__order_items__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__order_items.order_quantity__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__order_items.order_item_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__order_items.order_quantity__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_products_contacts",
        "query": "SELECT zip_postcode, MAX(address_id) FROM Addresses GROUP BY zip_postcode;",
        "question": "Select zip postcode and maximum address id from addresses grouped by zip postcode ",
        "tables": [
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Address_History",
            "Customer_Orders",
            "Customers",
            "Contacts"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "zip",
            "postcode",
            "and",
            "maximum",
            "address",
            "id",
            "from",
            "addresses",
            "grouped",
            "by",
            "zip",
            "postcode"
        ],
        "query_toks": [
            "SELECT",
            "zip_postcode",
            ",",
            "MAX",
            "(",
            "address_id",
            ")",
            "FROM",
            "Addresses",
            "GROUP",
            "BY",
            "zip_postcode"
        ],
        "query_toks_no_value": [
            "select",
            "zip_postcode",
            ",",
            "max",
            "(",
            "address_id",
            ")",
            "from",
            "addresses",
            "group",
            "by",
            "zip_postcode"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__addresses.zip_postcode__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__addresses.address_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__addresses.zip_postcode__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_products_contacts",
        "query": "SELECT order_status_code, MAX(order_id) FROM Customer_Orders GROUP BY order_status_code;",
        "question": "Select order status code and maximum order id from customer orders grouped by order status code ",
        "tables": [
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Address_History",
            "Customer_Orders",
            "Customers",
            "Contacts"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "order",
            "status",
            "code",
            "and",
            "maximum",
            "order",
            "id",
            "from",
            "customer",
            "orders",
            "grouped",
            "by",
            "order",
            "status",
            "code"
        ],
        "query_toks": [
            "SELECT",
            "order_status_code",
            ",",
            "MAX",
            "(",
            "order_id",
            ")",
            "FROM",
            "Customer_Orders",
            "GROUP",
            "BY",
            "order_status_code"
        ],
        "query_toks_no_value": [
            "select",
            "order_status_code",
            ",",
            "max",
            "(",
            "order_id",
            ")",
            "from",
            "customer_orders",
            "group",
            "by",
            "order_status_code"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_orders__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_orders.order_status_code__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__customer_orders.order_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customer_orders.order_status_code__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_products_contacts",
        "query": "SELECT customer_number, MAX(customer_id) FROM Customers GROUP BY customer_number;",
        "question": "Select customer number and maximum customer id from customers grouped by customer number ",
        "tables": [
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Address_History",
            "Customer_Orders",
            "Customers",
            "Contacts"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "customer",
            "number",
            "and",
            "maximum",
            "customer",
            "id",
            "from",
            "customers",
            "grouped",
            "by",
            "customer",
            "number"
        ],
        "query_toks": [
            "SELECT",
            "customer_number",
            ",",
            "MAX",
            "(",
            "customer_id",
            ")",
            "FROM",
            "Customers",
            "GROUP",
            "BY",
            "customer_number"
        ],
        "query_toks_no_value": [
            "select",
            "customer_number",
            ",",
            "max",
            "(",
            "customer_id",
            ")",
            "from",
            "customers",
            "group",
            "by",
            "customer_number"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_number__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__customers.customer_number__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_products_contacts",
        "query": "SELECT last_name, MAX(customer_id) FROM Contacts GROUP BY last_name;",
        "question": "Select last name and maximum customer id from contacts grouped by last name ",
        "tables": [
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Address_History",
            "Customer_Orders",
            "Customers",
            "Contacts"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "last",
            "name",
            "and",
            "maximum",
            "customer",
            "id",
            "from",
            "contacts",
            "grouped",
            "by",
            "last",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "last_name",
            ",",
            "MAX",
            "(",
            "customer_id",
            ")",
            "FROM",
            "Contacts",
            "GROUP",
            "BY",
            "last_name"
        ],
        "query_toks_no_value": [
            "select",
            "last_name",
            ",",
            "max",
            "(",
            "customer_id",
            ")",
            "from",
            "contacts",
            "group",
            "by",
            "last_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__contacts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__contacts.last_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__contacts.customer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__contacts.last_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_1",
        "query": "SELECT Dlocation, MAX(Dnumber) FROM dept_locations GROUP BY Dlocation;",
        "question": "Select department location and maximum department number from department locations grouped by department location ",
        "tables": [
            "works_on",
            "dept_locations",
            "dependent",
            "department",
            "project",
            "employee"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "department",
            "location",
            "and",
            "maximum",
            "department",
            "number",
            "from",
            "department",
            "locations",
            "grouped",
            "by",
            "department",
            "location"
        ],
        "query_toks": [
            "SELECT",
            "Dlocation",
            ",",
            "MAX",
            "(",
            "Dnumber",
            ")",
            "FROM",
            "dept_locations",
            "GROUP",
            "BY",
            "Dlocation"
        ],
        "query_toks_no_value": [
            "select",
            "dlocation",
            ",",
            "max",
            "(",
            "dnumber",
            ")",
            "from",
            "dept_locations",
            "group",
            "by",
            "dlocation"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__dept_locations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__dept_locations.dlocation__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__dept_locations.dnumber__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__dept_locations.dlocation__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_1",
        "query": "SELECT Sex, MIN(Essn) FROM dependent GROUP BY Sex;",
        "question": "Select sex and minimum employee ssn from dependent grouped by sex ",
        "tables": [
            "works_on",
            "dept_locations",
            "dependent",
            "department",
            "project",
            "employee"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "sex",
            "and",
            "minimum",
            "employee",
            "ssn",
            "from",
            "dependent",
            "grouped",
            "by",
            "sex"
        ],
        "query_toks": [
            "SELECT",
            "Sex",
            ",",
            "MIN",
            "(",
            "Essn",
            ")",
            "FROM",
            "dependent",
            "GROUP",
            "BY",
            "Sex"
        ],
        "query_toks_no_value": [
            "select",
            "sex",
            ",",
            "min",
            "(",
            "essn",
            ")",
            "from",
            "dependent",
            "group",
            "by",
            "sex"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__dependent__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__dependent.sex__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__dependent.essn__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__dependent.sex__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_1",
        "query": "SELECT Mgr_start_date, MIN(Dnumber) FROM department GROUP BY Mgr_start_date;",
        "question": "Select manager start date and minimum department number from department grouped by manager start date ",
        "tables": [
            "works_on",
            "dept_locations",
            "dependent",
            "department",
            "project",
            "employee"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "manager",
            "start",
            "date",
            "and",
            "minimum",
            "department",
            "number",
            "from",
            "department",
            "grouped",
            "by",
            "manager",
            "start",
            "date"
        ],
        "query_toks": [
            "SELECT",
            "Mgr_start_date",
            ",",
            "MIN",
            "(",
            "Dnumber",
            ")",
            "FROM",
            "department",
            "GROUP",
            "BY",
            "Mgr_start_date"
        ],
        "query_toks_no_value": [
            "select",
            "mgr_start_date",
            ",",
            "min",
            "(",
            "dnumber",
            ")",
            "from",
            "department",
            "group",
            "by",
            "mgr_start_date"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__department__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__department.mgr_start_date__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__department.dnumber__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__department.mgr_start_date__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_1",
        "query": "SELECT Plocation, MIN(Dnum) FROM project GROUP BY Plocation;",
        "question": "Select dependent location and minimum department number from project grouped by dependent location ",
        "tables": [
            "works_on",
            "dept_locations",
            "dependent",
            "department",
            "project",
            "employee"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "dependent",
            "location",
            "and",
            "minimum",
            "department",
            "number",
            "from",
            "project",
            "grouped",
            "by",
            "dependent",
            "location"
        ],
        "query_toks": [
            "SELECT",
            "Plocation",
            ",",
            "MIN",
            "(",
            "Dnum",
            ")",
            "FROM",
            "project",
            "GROUP",
            "BY",
            "Plocation"
        ],
        "query_toks_no_value": [
            "select",
            "plocation",
            ",",
            "min",
            "(",
            "dnum",
            ")",
            "from",
            "project",
            "group",
            "by",
            "plocation"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__project__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__project.plocation__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__project.dnum__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__project.plocation__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_1",
        "query": "SELECT Fname, MAX(Salary) FROM employee GROUP BY Fname;",
        "question": "Select first name and maximum salary from employee grouped by first name ",
        "tables": [
            "works_on",
            "dept_locations",
            "dependent",
            "department",
            "project",
            "employee"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "first",
            "name",
            "and",
            "maximum",
            "salary",
            "from",
            "employee",
            "grouped",
            "by",
            "first",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "Fname",
            ",",
            "MAX",
            "(",
            "Salary",
            ")",
            "FROM",
            "employee",
            "GROUP",
            "BY",
            "Fname"
        ],
        "query_toks_no_value": [
            "select",
            "fname",
            ",",
            "max",
            "(",
            "salary",
            ")",
            "from",
            "employee",
            "group",
            "by",
            "fname"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__employee__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__employee.fname__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__employee.salary__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__employee.fname__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "workshop_paper",
        "query": "SELECT Result, MAX(Submission_ID) FROM Acceptance GROUP BY Result;",
        "question": "Select result and maximum submission id from acceptance grouped by result ",
        "tables": [
            "Acceptance",
            "submission",
            "workshop"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "result",
            "and",
            "maximum",
            "submission",
            "id",
            "from",
            "acceptance",
            "grouped",
            "by",
            "result"
        ],
        "query_toks": [
            "SELECT",
            "Result",
            ",",
            "MAX",
            "(",
            "Submission_ID",
            ")",
            "FROM",
            "Acceptance",
            "GROUP",
            "BY",
            "Result"
        ],
        "query_toks_no_value": [
            "select",
            "result",
            ",",
            "max",
            "(",
            "submission_id",
            ")",
            "from",
            "acceptance",
            "group",
            "by",
            "result"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__acceptance__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__acceptance.result__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__acceptance.submission_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__acceptance.result__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "workshop_paper",
        "query": "SELECT Author, MAX(Scores) FROM submission GROUP BY Author;",
        "question": "Select author and maximum scores from submission grouped by author ",
        "tables": [
            "Acceptance",
            "submission",
            "workshop"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "author",
            "and",
            "maximum",
            "scores",
            "from",
            "submission",
            "grouped",
            "by",
            "author"
        ],
        "query_toks": [
            "SELECT",
            "Author",
            ",",
            "MAX",
            "(",
            "Scores",
            ")",
            "FROM",
            "submission",
            "GROUP",
            "BY",
            "Author"
        ],
        "query_toks_no_value": [
            "select",
            "author",
            ",",
            "max",
            "(",
            "scores",
            ")",
            "from",
            "submission",
            "group",
            "by",
            "author"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__submission__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__submission.author__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__submission.scores__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__submission.author__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "workshop_paper",
        "query": "SELECT Venue, MIN(Workshop_ID) FROM workshop GROUP BY Venue;",
        "question": "Select venue and minimum workshop id from workshop grouped by venue ",
        "tables": [
            "Acceptance",
            "submission",
            "workshop"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "venue",
            "and",
            "minimum",
            "workshop",
            "id",
            "from",
            "workshop",
            "grouped",
            "by",
            "venue"
        ],
        "query_toks": [
            "SELECT",
            "Venue",
            ",",
            "MIN",
            "(",
            "Workshop_ID",
            ")",
            "FROM",
            "workshop",
            "GROUP",
            "BY",
            "Venue"
        ],
        "query_toks_no_value": [
            "select",
            "venue",
            ",",
            "min",
            "(",
            "workshop_id",
            ")",
            "from",
            "workshop",
            "group",
            "by",
            "venue"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__workshop__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__workshop.venue__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__workshop.workshop_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__workshop.venue__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "epinions_1",
        "query": "SELECT title, MAX(i_id) FROM item GROUP BY title;",
        "question": "Select title and maximum item id from item grouped by title ",
        "tables": [
            "item",
            "review",
            "useracct",
            "trust"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "title",
            "and",
            "maximum",
            "item",
            "id",
            "from",
            "item",
            "grouped",
            "by",
            "title"
        ],
        "query_toks": [
            "SELECT",
            "title",
            ",",
            "MAX",
            "(",
            "i_id",
            ")",
            "FROM",
            "item",
            "GROUP",
            "BY",
            "title"
        ],
        "query_toks_no_value": [
            "select",
            "title",
            ",",
            "max",
            "(",
            "i_id",
            ")",
            "from",
            "item",
            "group",
            "by",
            "title"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__item__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__item.title__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__item.i_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__item.title__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "epinions_1",
        "query": "SELECT name, MAX(u_id) FROM useracct GROUP BY name;",
        "question": "Select name and maximum user id from useracct grouped by name ",
        "tables": [
            "item",
            "review",
            "useracct",
            "trust"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "name",
            "and",
            "maximum",
            "user",
            "id",
            "from",
            "useracct",
            "grouped",
            "by",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "name",
            ",",
            "MAX",
            "(",
            "u_id",
            ")",
            "FROM",
            "useracct",
            "GROUP",
            "BY",
            "name"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "max",
            "(",
            "u_id",
            ")",
            "from",
            "useracct",
            "group",
            "by",
            "name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__useracct__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__useracct.name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__useracct.u_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__useracct.name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "party_host",
        "query": "SELECT Age, MAX(Host_ID) FROM host GROUP BY Age;",
        "question": "Select age and maximum host id from host grouped by age ",
        "tables": [
            "host",
            "party",
            "party_host"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "age",
            "and",
            "maximum",
            "host",
            "id",
            "from",
            "host",
            "grouped",
            "by",
            "age"
        ],
        "query_toks": [
            "SELECT",
            "Age",
            ",",
            "MAX",
            "(",
            "Host_ID",
            ")",
            "FROM",
            "host",
            "GROUP",
            "BY",
            "Age"
        ],
        "query_toks_no_value": [
            "select",
            "age",
            ",",
            "max",
            "(",
            "host_id",
            ")",
            "from",
            "host",
            "group",
            "by",
            "age"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__host__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__host.age__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__host.host_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__host.age__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "party_host",
        "query": "SELECT Last_year, MAX(Party_ID) FROM party GROUP BY Last_year;",
        "question": "Select last year and maximum party id from party grouped by last year ",
        "tables": [
            "host",
            "party",
            "party_host"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "last",
            "year",
            "and",
            "maximum",
            "party",
            "id",
            "from",
            "party",
            "grouped",
            "by",
            "last",
            "year"
        ],
        "query_toks": [
            "SELECT",
            "Last_year",
            ",",
            "MAX",
            "(",
            "Party_ID",
            ")",
            "FROM",
            "party",
            "GROUP",
            "BY",
            "Last_year"
        ],
        "query_toks_no_value": [
            "select",
            "last_year",
            ",",
            "max",
            "(",
            "party_id",
            ")",
            "from",
            "party",
            "group",
            "by",
            "last_year"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__party__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__party.last_year__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__party.party_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__party.last_year__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "product_catalog",
        "query": "SELECT length, MIN(price_in_dollars) FROM Catalog_Contents GROUP BY length;",
        "question": "Select length and minimum price in dollars from catalog contents grouped by length ",
        "tables": [
            "Catalog_Contents",
            "Catalogs",
            "Attribute_Definitions",
            "Catalog_Contents_Additional_Attributes",
            "Catalog_Structure"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "length",
            "and",
            "minimum",
            "price",
            "in",
            "dollars",
            "from",
            "catalog",
            "contents",
            "grouped",
            "by",
            "length"
        ],
        "query_toks": [
            "SELECT",
            "length",
            ",",
            "MIN",
            "(",
            "price_in_dollars",
            ")",
            "FROM",
            "Catalog_Contents",
            "GROUP",
            "BY",
            "length"
        ],
        "query_toks_no_value": [
            "select",
            "length",
            ",",
            "min",
            "(",
            "price_in_dollars",
            ")",
            "from",
            "catalog_contents",
            "group",
            "by",
            "length"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__catalog_contents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__catalog_contents.length__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__catalog_contents.price_in_dollars__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__catalog_contents.length__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "product_catalog",
        "query": "SELECT catalog_publisher, MIN(catalog_id) FROM Catalogs GROUP BY catalog_publisher;",
        "question": "Select catalog publisher and minimum catalog id from catalogs grouped by catalog publisher ",
        "tables": [
            "Catalog_Contents",
            "Catalogs",
            "Attribute_Definitions",
            "Catalog_Contents_Additional_Attributes",
            "Catalog_Structure"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "catalog",
            "publisher",
            "and",
            "minimum",
            "catalog",
            "id",
            "from",
            "catalogs",
            "grouped",
            "by",
            "catalog",
            "publisher"
        ],
        "query_toks": [
            "SELECT",
            "catalog_publisher",
            ",",
            "MIN",
            "(",
            "catalog_id",
            ")",
            "FROM",
            "Catalogs",
            "GROUP",
            "BY",
            "catalog_publisher"
        ],
        "query_toks_no_value": [
            "select",
            "catalog_publisher",
            ",",
            "min",
            "(",
            "catalog_id",
            ")",
            "from",
            "catalogs",
            "group",
            "by",
            "catalog_publisher"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__catalogs__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__catalogs.catalog_publisher__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__catalogs.catalog_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__catalogs.catalog_publisher__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "product_catalog",
        "query": "SELECT attribute_name, MIN(attribute_id) FROM Attribute_Definitions GROUP BY attribute_name;",
        "question": "Select attribute name and minimum attribute id from attribute definitions grouped by attribute name ",
        "tables": [
            "Catalog_Contents",
            "Catalogs",
            "Attribute_Definitions",
            "Catalog_Contents_Additional_Attributes",
            "Catalog_Structure"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "attribute",
            "name",
            "and",
            "minimum",
            "attribute",
            "id",
            "from",
            "attribute",
            "definitions",
            "grouped",
            "by",
            "attribute",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "attribute_name",
            ",",
            "MIN",
            "(",
            "attribute_id",
            ")",
            "FROM",
            "Attribute_Definitions",
            "GROUP",
            "BY",
            "attribute_name"
        ],
        "query_toks_no_value": [
            "select",
            "attribute_name",
            ",",
            "min",
            "(",
            "attribute_id",
            ")",
            "from",
            "attribute_definitions",
            "group",
            "by",
            "attribute_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__attribute_definitions__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__attribute_definitions.attribute_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__attribute_definitions.attribute_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__attribute_definitions.attribute_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "product_catalog",
        "query": "SELECT attribute_value, MAX(attribute_id) FROM Catalog_Contents_Additional_Attributes GROUP BY attribute_value;",
        "question": "Select attribute value and maximum attribute id from catalog contents additional attributes grouped by attribute value ",
        "tables": [
            "Catalog_Contents",
            "Catalogs",
            "Attribute_Definitions",
            "Catalog_Contents_Additional_Attributes",
            "Catalog_Structure"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "attribute",
            "value",
            "and",
            "maximum",
            "attribute",
            "id",
            "from",
            "catalog",
            "contents",
            "additional",
            "attributes",
            "grouped",
            "by",
            "attribute",
            "value"
        ],
        "query_toks": [
            "SELECT",
            "attribute_value",
            ",",
            "MAX",
            "(",
            "attribute_id",
            ")",
            "FROM",
            "Catalog_Contents_Additional_Attributes",
            "GROUP",
            "BY",
            "attribute_value"
        ],
        "query_toks_no_value": [
            "select",
            "attribute_value",
            ",",
            "max",
            "(",
            "attribute_id",
            ")",
            "from",
            "catalog_contents_additional_attributes",
            "group",
            "by",
            "attribute_value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__catalog_contents_additional_attributes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__catalog_contents_additional_attributes.attribute_value__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                "__catalog_contents_additional_attributes.attribute_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__catalog_contents_additional_attributes.attribute_value__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "product_catalog",
        "query": "SELECT catalog_level_name, MIN(catalog_id) FROM Catalog_Structure GROUP BY catalog_level_name;",
        "question": "Select catalog level name and minimum catalog id from catalog structure grouped by catalog level name ",
        "tables": [
            "Catalog_Contents",
            "Catalogs",
            "Attribute_Definitions",
            "Catalog_Contents_Additional_Attributes",
            "Catalog_Structure"
        ],
        "rule": "groupby",
        "question_toks": [
            "Select",
            "catalog",
            "level",
            "name",
            "and",
            "minimum",
            "catalog",
            "id",
            "from",
            "catalog",
            "structure",
            "grouped",
            "by",
            "catalog",
            "level",
            "name"
        ],
        "query_toks": [
            "SELECT",
            "catalog_level_name",
            ",",
            "MIN",
            "(",
            "catalog_id",
            ")",
            "FROM",
            "Catalog_Structure",
            "GROUP",
            "BY",
            "catalog_level_name"
        ],
        "query_toks_no_value": [
            "select",
            "catalog_level_name",
            ",",
            "min",
            "(",
            "catalog_id",
            ")",
            "from",
            "catalog_structure",
            "group",
            "by",
            "catalog_level_name"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__catalog_structure__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__catalog_structure.catalog_level_name__",
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        2,
                        [
                            0,
                            [
                                0,
                                "__catalog_structure.catalog_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    "__catalog_structure.catalog_level_name__",
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    }
]