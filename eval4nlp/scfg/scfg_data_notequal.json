[
    {
        "db_id": "perpetrator",
        "query": "SELECT * FROM people WHERE People_ID != 7;",
        "question": "Select all columns from people when people id does not equal 7",
        "tables": [
            "people",
            "perpetrator"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "people",
            "when",
            "people",
            "id",
            "does",
            "not",
            "equal",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "people",
            "WHERE",
            "People_ID",
            "!=",
            "7"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "people",
            "where",
            "people_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__people__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__people.people_id__",
                            false
                        ],
                        null
                    ],
                    7.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "perpetrator",
        "query": "SELECT People_ID FROM perpetrator WHERE Killed != 56;",
        "question": "Select people id from perpetrator when killed does not equal 56",
        "tables": [
            "people",
            "perpetrator"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "people",
            "id",
            "from",
            "perpetrator",
            "when",
            "killed",
            "does",
            "not",
            "equal",
            "56"
        ],
        "query_toks": [
            "SELECT",
            "People_ID",
            "FROM",
            "perpetrator",
            "WHERE",
            "Killed",
            "!=",
            "56"
        ],
        "query_toks_no_value": [
            "select",
            "people_id",
            "from",
            "perpetrator",
            "where",
            "killed",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__perpetrator__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__perpetrator.people_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__perpetrator.killed__",
                            false
                        ],
                        null
                    ],
                    56.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT * FROM advisor WHERE s_ID != 44881;",
        "question": "Select all columns from advisor when student id does not equal 44881",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "advisor",
            "when",
            "student",
            "id",
            "does",
            "not",
            "equal",
            "44881"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "advisor",
            "WHERE",
            "s_ID",
            "!=",
            "44881"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "advisor",
            "where",
            "s_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__advisor__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__advisor.s_id__",
                            false
                        ],
                        null
                    ],
                    44881.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT prereq_id FROM prereq WHERE course_id != 692;",
        "question": "Select prerequisite id from prerequisite when course id does not equal 692",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "prerequisite",
            "id",
            "from",
            "prerequisite",
            "when",
            "course",
            "id",
            "does",
            "not",
            "equal",
            "692"
        ],
        "query_toks": [
            "SELECT",
            "prereq_id",
            "FROM",
            "prereq",
            "WHERE",
            "course_id",
            "!=",
            "692"
        ],
        "query_toks_no_value": [
            "select",
            "prereq_id",
            "from",
            "prereq",
            "where",
            "course_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__prereq__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__prereq.prereq_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__prereq.course_id__",
                            false
                        ],
                        null
                    ],
                    692.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT dept_name FROM student WHERE ID != 18338;",
        "question": "Select department name from student when id does not equal 18338",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "department",
            "name",
            "from",
            "student",
            "when",
            "id",
            "does",
            "not",
            "equal",
            "18338"
        ],
        "query_toks": [
            "SELECT",
            "dept_name",
            "FROM",
            "student",
            "WHERE",
            "ID",
            "!=",
            "18338"
        ],
        "query_toks_no_value": [
            "select",
            "dept_name",
            "from",
            "student",
            "where",
            "id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.dept_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__student.id__",
                            false
                        ],
                        null
                    ],
                    18338.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT * FROM teaches WHERE sec_id != 2;",
        "question": "Select all columns from teaches when section id does not equal 2",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "teaches",
            "when",
            "section",
            "id",
            "does",
            "not",
            "equal",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "teaches",
            "WHERE",
            "sec_id",
            "!=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "teaches",
            "where",
            "sec_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__teaches__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__teaches.sec_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT semester FROM takes WHERE course_id != 696;",
        "question": "Select semester from takes classes when course id does not equal 696",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "semester",
            "from",
            "takes",
            "classes",
            "when",
            "course",
            "id",
            "does",
            "not",
            "equal",
            "696"
        ],
        "query_toks": [
            "SELECT",
            "semester",
            "FROM",
            "takes",
            "WHERE",
            "course_id",
            "!=",
            "696"
        ],
        "query_toks_no_value": [
            "select",
            "semester",
            "from",
            "takes",
            "where",
            "course_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__takes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__takes.semester__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__takes.course_id__",
                            false
                        ],
                        null
                    ],
                    696.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_2",
        "query": "SELECT * FROM section WHERE year != 2006;",
        "question": "Select all columns from section when year does not equal 2006",
        "tables": [
            "advisor",
            "prereq",
            "department",
            "student",
            "classroom",
            "teaches",
            "takes",
            "section",
            "instructor",
            "course",
            "time_slot"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "section",
            "when",
            "year",
            "does",
            "not",
            "equal",
            "2006"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "section",
            "WHERE",
            "year",
            "!=",
            "2006"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "section",
            "where",
            "year",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__section__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__section.year__",
                            false
                        ],
                        null
                    ],
                    2006.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_company",
        "query": "SELECT * FROM airport WHERE id != 6;",
        "question": "Select all columns from airport when id does not equal 6",
        "tables": [
            "airport",
            "operate_company",
            "flight"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "airport",
            "when",
            "id",
            "does",
            "not",
            "equal",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "airport",
            "WHERE",
            "id",
            "!=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "airport",
            "where",
            "id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__airport__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__airport.id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "icfp_1",
        "query": "SELECT instID FROM Authorship WHERE paperID != 204;",
        "question": "Select institution id from authorship count when paper id does not equal 204",
        "tables": [
            "Authorship",
            "Papers",
            "Inst",
            "Authors"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "institution",
            "id",
            "from",
            "authorship",
            "count",
            "when",
            "paper",
            "id",
            "does",
            "not",
            "equal",
            "204"
        ],
        "query_toks": [
            "SELECT",
            "instID",
            "FROM",
            "Authorship",
            "WHERE",
            "paperID",
            "!=",
            "204"
        ],
        "query_toks_no_value": [
            "select",
            "instid",
            "from",
            "authorship",
            "where",
            "paperid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__authorship__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__authorship.instid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__authorship.paperid__",
                            false
                        ],
                        null
                    ],
                    204.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "body_builder",
        "query": "SELECT * FROM body_builder WHERE People_ID != 1;",
        "question": "Select all columns from body builder when people id does not equal 1",
        "tables": [
            "people",
            "body_builder"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "body",
            "builder",
            "when",
            "people",
            "id",
            "does",
            "not",
            "equal",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "body_builder",
            "WHERE",
            "People_ID",
            "!=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "body_builder",
            "where",
            "people_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__body_builder__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__body_builder.people_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "storm_record",
        "query": "SELECT Max_speed FROM storm WHERE Number_Deaths != 52;",
        "question": "Select max speed from storm when number deaths does not equal 52",
        "tables": [
            "storm",
            "affected_region",
            "region"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "max",
            "speed",
            "from",
            "storm",
            "when",
            "number",
            "deaths",
            "does",
            "not",
            "equal",
            "52"
        ],
        "query_toks": [
            "SELECT",
            "Max_spee",
            "(",
            "Max_spee",
            ")",
            "FROM",
            "storm",
            "WHERE",
            "Number_Deaths",
            "!=",
            "52"
        ],
        "query_toks_no_value": [
            "select",
            "max_spee",
            "(",
            "max_spee",
            ")",
            "from",
            "storm",
            "where",
            "number_deaths",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__storm__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__storm.max_speed__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__storm.number_deaths__",
                            false
                        ],
                        null
                    ],
                    52.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pilot_record",
        "query": "SELECT Fleet_Series FROM aircraft WHERE Aircraft_ID != 2;",
        "question": "Select fleet series from aircraft when aircraft id does not equal 2",
        "tables": [
            "pilot",
            "aircraft",
            "pilot_record"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "fleet",
            "series",
            "from",
            "aircraft",
            "when",
            "aircraft",
            "id",
            "does",
            "not",
            "equal",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Fleet_Series",
            "FROM",
            "aircraft",
            "WHERE",
            "Aircraft_ID",
            "!=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "fleet_series",
            "from",
            "aircraft",
            "where",
            "aircraft_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__aircraft__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__aircraft.fleet_series__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__aircraft.aircraft_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pilot_record",
        "query": "SELECT * FROM pilot_record WHERE Record_ID != 4;",
        "question": "Select all columns from pilot record when record id does not equal 4",
        "tables": [
            "pilot",
            "aircraft",
            "pilot_record"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "pilot",
            "record",
            "when",
            "record",
            "id",
            "does",
            "not",
            "equal",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "pilot_record",
            "WHERE",
            "Record_ID",
            "!=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "pilot_record",
            "where",
            "record_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__pilot_record__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__pilot_record.record_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT staff_name FROM Staff WHERE staff_gender != 1;",
        "question": "Select staff name from staff when staff gender does not equal 1",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "staff",
            "name",
            "from",
            "staff",
            "when",
            "staff",
            "gender",
            "does",
            "not",
            "equal",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "staff_name",
            "FROM",
            "Staff",
            "WHERE",
            "staff_gender",
            "!=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "staff_name",
            "from",
            "staff",
            "where",
            "staff_gender",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__staff__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__staff.staff_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__staff.staff_gender__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT * FROM Products WHERE product_id != 4;",
        "question": "Select all columns from products when product id does not equal 4",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "products",
            "when",
            "product",
            "id",
            "does",
            "not",
            "equal",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Products",
            "WHERE",
            "product_id",
            "!=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "products",
            "where",
            "product_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__products.product_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT * FROM Order_Items WHERE product_id != 12;",
        "question": "Select all columns from order items when product id does not equal 12",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "order",
            "items",
            "when",
            "product",
            "id",
            "does",
            "not",
            "equal",
            "12"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Order_Items",
            "WHERE",
            "product_id",
            "!=",
            "12"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "order_items",
            "where",
            "product_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__order_items__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__order_items.product_id__",
                            false
                        ],
                        null
                    ],
                    12.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT date_from FROM Customer_Addresses WHERE address_id != 8;",
        "question": "Select date from from customer addresses when address id does not equal 8",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "date",
            "from",
            "from",
            "customer",
            "addresses",
            "when",
            "address",
            "id",
            "does",
            "not",
            "equal",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "date_from",
            "FROM",
            "Customer_Addresses",
            "WHERE",
            "address_id",
            "!=",
            "8"
        ],
        "query_toks_no_value": [
            "select",
            "date_from",
            "from",
            "customer_addresses",
            "where",
            "address_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_addresses.date_from__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__customer_addresses.address_id__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT department_name FROM Departments WHERE department_id != 3;",
        "question": "Select department name from departments when department id does not equal 3",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "department",
            "name",
            "from",
            "departments",
            "when",
            "department",
            "id",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "department_name",
            "FROM",
            "Departments",
            "WHERE",
            "department_id",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "department_name",
            "from",
            "departments",
            "where",
            "department_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__departments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__departments.department_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__departments.department_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_store",
        "query": "SELECT supplier_id FROM Supplier_Addresses WHERE address_id != 2;",
        "question": "Select supplier id from supplier addresses when address id does not equal 2",
        "tables": [
            "Staff",
            "Products",
            "Suppliers",
            "Order_Items",
            "Staff_Department_Assignments",
            "Addresses",
            "Customer_Orders",
            "Department_Stores",
            "Customer_Addresses",
            "Departments",
            "Customers",
            "Supplier_Addresses",
            "Department_Store_Chain",
            "Product_Suppliers"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "supplier",
            "id",
            "from",
            "supplier",
            "addresses",
            "when",
            "address",
            "id",
            "does",
            "not",
            "equal",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "supplier_id",
            "FROM",
            "Supplier_Addresses",
            "WHERE",
            "address_id",
            "!=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "supplier_id",
            "from",
            "supplier_addresses",
            "where",
            "address_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__supplier_addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__supplier_addresses.supplier_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__supplier_addresses.address_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_fnol",
        "query": "SELECT Settlement_ID FROM Settlements WHERE Claim_ID != 428;",
        "question": "Select settlement id from settlements when claim id does not equal 428",
        "tables": [
            "Settlements",
            "Claims",
            "Services",
            "First_Notification_of_Loss",
            "Customers_Policies",
            "Customers",
            "Available_Policies"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "settlement",
            "id",
            "from",
            "settlements",
            "when",
            "claim",
            "id",
            "does",
            "not",
            "equal",
            "428"
        ],
        "query_toks": [
            "SELECT",
            "Settlement_ID",
            "FROM",
            "Settlements",
            "WHERE",
            "Claim_ID",
            "!=",
            "428"
        ],
        "query_toks_no_value": [
            "select",
            "settlement_id",
            "from",
            "settlements",
            "where",
            "claim_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__settlements__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__settlements.settlement_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__settlements.claim_id__",
                            false
                        ],
                        null
                    ],
                    428.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_fnol",
        "query": "SELECT * FROM Claims WHERE FNOL_ID != 1611;",
        "question": "Select all columns from claims when fnol id does not equal 1611",
        "tables": [
            "Settlements",
            "Claims",
            "Services",
            "First_Notification_of_Loss",
            "Customers_Policies",
            "Customers",
            "Available_Policies"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "claims",
            "when",
            "fnol",
            "id",
            "does",
            "not",
            "equal",
            "1611"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Claims",
            "WHERE",
            "FNOL_ID",
            "!=",
            "1611"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "claims",
            "where",
            "fnol_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__claims__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__claims.fnol_id__",
                            false
                        ],
                        null
                    ],
                    1611.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_fnol",
        "query": "SELECT Service_name FROM Services WHERE Service_ID != 4;",
        "question": "Select service name from services when service id does not equal 4",
        "tables": [
            "Settlements",
            "Claims",
            "Services",
            "First_Notification_of_Loss",
            "Customers_Policies",
            "Customers",
            "Available_Policies"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "service",
            "name",
            "from",
            "services",
            "when",
            "service",
            "id",
            "does",
            "not",
            "equal",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Service_name",
            "FROM",
            "Services",
            "WHERE",
            "Service_ID",
            "!=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "service_name",
            "from",
            "services",
            "where",
            "service_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__services__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__services.service_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__services.service_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_fnol",
        "query": "SELECT * FROM First_Notification_of_Loss WHERE Customer_ID != 996;",
        "question": "Select all columns from first notification of loss when customer id does not equal 996",
        "tables": [
            "Settlements",
            "Claims",
            "Services",
            "First_Notification_of_Loss",
            "Customers_Policies",
            "Customers",
            "Available_Policies"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "first",
            "notification",
            "of",
            "loss",
            "when",
            "customer",
            "id",
            "does",
            "not",
            "equal",
            "996"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "First_Notification_of_Loss",
            "WHERE",
            "Customer_ID",
            "!=",
            "996"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "first_notification_of_loss",
            "where",
            "customer_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__first_notification_of_loss__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__first_notification_of_loss.customer_id__",
                            false
                        ],
                        null
                    ],
                    996.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_fnol",
        "query": "SELECT Customer_ID FROM Customers_Policies WHERE Policy_ID != 583;",
        "question": "Select customer id from customers policies when policy id does not equal 583",
        "tables": [
            "Settlements",
            "Claims",
            "Services",
            "First_Notification_of_Loss",
            "Customers_Policies",
            "Customers",
            "Available_Policies"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "customer",
            "id",
            "from",
            "customers",
            "policies",
            "when",
            "policy",
            "id",
            "does",
            "not",
            "equal",
            "583"
        ],
        "query_toks": [
            "SELECT",
            "Customer_ID",
            "FROM",
            "Customers_Policies",
            "WHERE",
            "Policy_ID",
            "!=",
            "583"
        ],
        "query_toks_no_value": [
            "select",
            "customer_id",
            "from",
            "customers_policies",
            "where",
            "policy_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers_policies__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers_policies.customer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__customers_policies.policy_id__",
                            false
                        ],
                        null
                    ],
                    583.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_fnol",
        "query": "SELECT Customer_name FROM Customers WHERE Customer_ID != 582;",
        "question": "Select customer name from customers when customer id does not equal 582",
        "tables": [
            "Settlements",
            "Claims",
            "Services",
            "First_Notification_of_Loss",
            "Customers_Policies",
            "Customers",
            "Available_Policies"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "customer",
            "name",
            "from",
            "customers",
            "when",
            "customer",
            "id",
            "does",
            "not",
            "equal",
            "582"
        ],
        "query_toks": [
            "SELECT",
            "Customer_name",
            "FROM",
            "Customers",
            "WHERE",
            "Customer_ID",
            "!=",
            "582"
        ],
        "query_toks_no_value": [
            "select",
            "customer_name",
            "from",
            "customers",
            "where",
            "customer_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__customers.customer_id__",
                            false
                        ],
                        null
                    ],
                    582.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_fnol",
        "query": "SELECT Customer_Phone FROM Available_Policies WHERE Policy_ID != 751;",
        "question": "Select customer phone from available policies when policy id does not equal 751",
        "tables": [
            "Settlements",
            "Claims",
            "Services",
            "First_Notification_of_Loss",
            "Customers_Policies",
            "Customers",
            "Available_Policies"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "customer",
            "phone",
            "from",
            "available",
            "policies",
            "when",
            "policy",
            "id",
            "does",
            "not",
            "equal",
            "751"
        ],
        "query_toks": [
            "SELECT",
            "Customer_Phone",
            "FROM",
            "Available_Policies",
            "WHERE",
            "Policy_ID",
            "!=",
            "751"
        ],
        "query_toks_no_value": [
            "select",
            "customer_phone",
            "from",
            "available_policies",
            "where",
            "policy_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__available_policies__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__available_policies.customer_phone__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__available_policies.policy_id__",
                            false
                        ],
                        null
                    ],
                    751.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cinema",
        "query": "SELECT Openning_year FROM cinema WHERE Cinema_ID != 10;",
        "question": "Select openning year from cinema when cinema id does not equal 10",
        "tables": [
            "film",
            "cinema",
            "schedule"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "openning",
            "year",
            "from",
            "cinema",
            "when",
            "cinema",
            "id",
            "does",
            "not",
            "equal",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "Openning_year",
            "FROM",
            "cinema",
            "WHERE",
            "Cinema_ID",
            "!=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "openning_year",
            "from",
            "cinema",
            "where",
            "cinema_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__cinema__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__cinema.openning_year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__cinema.cinema_id__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "decoration_competition",
        "query": "SELECT * FROM member WHERE College_ID != 3;",
        "question": "Select all columns from member when college id does not equal 3",
        "tables": [
            "member",
            "round",
            "college"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "member",
            "when",
            "college",
            "id",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "member",
            "WHERE",
            "College_ID",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "member",
            "where",
            "college_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__member__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__member.college_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "decoration_competition",
        "query": "SELECT Decoration_Theme FROM round WHERE Member_ID != 9;",
        "question": "Select decoration theme from round when member id does not equal 9",
        "tables": [
            "member",
            "round",
            "college"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "decoration",
            "theme",
            "from",
            "round",
            "when",
            "member",
            "id",
            "does",
            "not",
            "equal",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "Decoration_Theme",
            "FROM",
            "round",
            "WHERE",
            "Member_ID",
            "!=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "decoration_theme",
            "from",
            "round",
            "where",
            "member_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__round__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__round.decoration_theme__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__round.member_id__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "phone_market",
        "query": "SELECT Market_ID FROM phone_market WHERE Num_of_stock != 2232;",
        "question": "Select market id from phone market when num of stock does not equal 2232",
        "tables": [
            "phone_market",
            "market",
            "phone"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "market",
            "id",
            "from",
            "phone",
            "market",
            "when",
            "num",
            "of",
            "stock",
            "does",
            "not",
            "equal",
            "2232"
        ],
        "query_toks": [
            "SELECT",
            "Market_ID",
            "FROM",
            "phone_market",
            "WHERE",
            "Num_of_stock",
            "!=",
            "2232"
        ],
        "query_toks_no_value": [
            "select",
            "market_id",
            "from",
            "phone_market",
            "where",
            "num_of_stock",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__phone_market__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__phone_market.market_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__phone_market.num_of_stock__",
                            false
                        ],
                        null
                    ],
                    2232.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_product",
        "query": "SELECT * FROM store_district WHERE District_ID != 3;",
        "question": "Select all columns from store district when district id does not equal 3",
        "tables": [
            "product",
            "store",
            "store_district",
            "district",
            "store_product"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "store",
            "district",
            "when",
            "district",
            "id",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "store_district",
            "WHERE",
            "District_ID",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "store_district",
            "where",
            "district_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__store_district__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__store_district.district_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_product",
        "query": "SELECT Store_ID FROM store_product WHERE Product_ID != 6;",
        "question": "Select store id from store product when product id does not equal 6",
        "tables": [
            "product",
            "store",
            "store_district",
            "district",
            "store_product"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "store",
            "id",
            "from",
            "store",
            "product",
            "when",
            "product",
            "id",
            "does",
            "not",
            "equal",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "Store_ID",
            "FROM",
            "store_product",
            "WHERE",
            "Product_ID",
            "!=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "store_id",
            "from",
            "store_product",
            "where",
            "product_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__store_product__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__store_product.store_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__store_product.product_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT staff_name FROM Staff WHERE staff_id != 4;",
        "question": "Select staff name from staff when staff id does not equal 4",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "staff",
            "name",
            "from",
            "staff",
            "when",
            "staff",
            "id",
            "does",
            "not",
            "equal",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "staff_name",
            "FROM",
            "Staff",
            "WHERE",
            "staff_id",
            "!=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "staff_name",
            "from",
            "staff",
            "where",
            "staff_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__staff__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__staff.staff_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__staff.staff_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT part_name FROM Parts WHERE chargeable_amount != 4;",
        "question": "Select part name from parts when chargeable amount does not equal 4",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "part",
            "name",
            "from",
            "parts",
            "when",
            "chargeable",
            "amount",
            "does",
            "not",
            "equal",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "part_name",
            "FROM",
            "Parts",
            "WHERE",
            "chargeable_amount",
            "!=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "part_name",
            "from",
            "parts",
            "where",
            "chargeable_amount",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__parts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__parts.part_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__parts.chargeable_amount__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT engineer_id FROM Engineer_Skills WHERE skill_id != 3;",
        "question": "Select engineer id from engineer skills when skill id does not equal 3",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "engineer",
            "id",
            "from",
            "engineer",
            "skills",
            "when",
            "skill",
            "id",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "engineer_id",
            "FROM",
            "Engineer_Skills",
            "WHERE",
            "skill_id",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "engineer_id",
            "from",
            "engineer_skills",
            "where",
            "skill_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__engineer_skills__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__engineer_skills.engineer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__engineer_skills.skill_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT * FROM Part_Faults WHERE part_id != 1;",
        "question": "Select all columns from part faults when part id does not equal 1",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "part",
            "faults",
            "when",
            "part",
            "id",
            "does",
            "not",
            "equal",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Part_Faults",
            "WHERE",
            "part_id",
            "!=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "part_faults",
            "where",
            "part_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__part_faults__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__part_faults.part_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT other_visit_details FROM Engineer_Visits WHERE contact_staff_id != 6;",
        "question": "Select other visit details from engineer visits when contact staff id does not equal 6",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "other",
            "visit",
            "details",
            "from",
            "engineer",
            "visits",
            "when",
            "contact",
            "staff",
            "id",
            "does",
            "not",
            "equal",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "other_visit_details",
            "FROM",
            "Engineer_Visits",
            "WHERE",
            "contact_staff_id",
            "!=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "other_visit_details",
            "from",
            "engineer_visits",
            "where",
            "contact_staff_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__engineer_visits__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__engineer_visits.other_visit_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__engineer_visits.contact_staff_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT other_contract_details FROM Maintenance_Contracts WHERE maintenance_contract_id != 8;",
        "question": "Select other contract details from maintenance contracts when maintenance contract id does not equal 8",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "other",
            "contract",
            "details",
            "from",
            "maintenance",
            "contracts",
            "when",
            "maintenance",
            "contract",
            "id",
            "does",
            "not",
            "equal",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "other_contract_details",
            "FROM",
            "Maintenance_Contracts",
            "WHERE",
            "maintenance_contract_id",
            "!=",
            "8"
        ],
        "query_toks_no_value": [
            "select",
            "other_contract_details",
            "from",
            "maintenance_contracts",
            "where",
            "maintenance_contract_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__maintenance_contracts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__maintenance_contracts.other_contract_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__maintenance_contracts.maintenance_contract_id__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT * FROM Skills_Required_To_Fix WHERE skill_id != 2;",
        "question": "Select all columns from skills required to fix when skill id does not equal 2",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "skills",
            "required",
            "to",
            "fix",
            "when",
            "skill",
            "id",
            "does",
            "not",
            "equal",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Skills_Required_To_Fix",
            "WHERE",
            "skill_id",
            "!=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "skills_required_to_fix",
            "where",
            "skill_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__skills_required_to_fix__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__skills_required_to_fix.skill_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT part_id FROM Asset_Parts WHERE asset_id != 1;",
        "question": "Select part id from asset parts when asset id does not equal 1",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "part",
            "id",
            "from",
            "asset",
            "parts",
            "when",
            "asset",
            "id",
            "does",
            "not",
            "equal",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "part_id",
            "FROM",
            "Asset_Parts",
            "WHERE",
            "asset_id",
            "!=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "part_id",
            "from",
            "asset_parts",
            "where",
            "asset_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__asset_parts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__asset_parts.part_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__asset_parts.asset_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "assets_maintenance",
        "query": "SELECT part_fault_id FROM Fault_Log_Parts WHERE fault_log_entry_id != 3;",
        "question": "Select part fault id from fault log parts when fault log entry id does not equal 3",
        "tables": [
            "Staff",
            "Parts",
            "Assets",
            "Engineer_Skills",
            "Part_Faults",
            "Engineer_Visits",
            "Maintenance_Contracts",
            "Skills",
            "Skills_Required_To_Fix",
            "Maintenance_Engineers",
            "Third_Party_Companies",
            "Fault_Log",
            "Asset_Parts",
            "Fault_Log_Parts"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "part",
            "fault",
            "id",
            "from",
            "fault",
            "log",
            "parts",
            "when",
            "fault",
            "log",
            "entry",
            "id",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "part_fault_id",
            "FROM",
            "Fault_Log_Parts",
            "WHERE",
            "fault_log_entry_id",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "part_fault_id",
            "from",
            "fault_log_parts",
            "where",
            "fault_log_entry_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__fault_log_parts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__fault_log_parts.part_fault_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__fault_log_parts.fault_log_entry_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_assessment",
        "query": "SELECT * FROM People_Addresses WHERE address_id != 99;",
        "question": "Select all columns from people addresses when address id does not equal 99",
        "tables": [
            "Courses",
            "Students",
            "Candidates",
            "Addresses",
            "People_Addresses",
            "Student_Course_Registrations",
            "People",
            "Candidate_Assessments",
            "Student_Course_Attendance"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "people",
            "addresses",
            "when",
            "address",
            "id",
            "does",
            "not",
            "equal",
            "99"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "People_Addresses",
            "WHERE",
            "address_id",
            "!=",
            "99"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "people_addresses",
            "where",
            "address_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__people_addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__people_addresses.address_id__",
                            false
                        ],
                        null
                    ],
                    99.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_assessment",
        "query": "SELECT course_id FROM Student_Course_Registrations WHERE student_id != 131;",
        "question": "Select course id from student course registrations when student id does not equal 131",
        "tables": [
            "Courses",
            "Students",
            "Candidates",
            "Addresses",
            "People_Addresses",
            "Student_Course_Registrations",
            "People",
            "Candidate_Assessments",
            "Student_Course_Attendance"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "course",
            "id",
            "from",
            "student",
            "course",
            "registrations",
            "when",
            "student",
            "id",
            "does",
            "not",
            "equal",
            "131"
        ],
        "query_toks": [
            "SELECT",
            "course_id",
            "FROM",
            "Student_Course_Registrations",
            "WHERE",
            "student_id",
            "!=",
            "131"
        ],
        "query_toks_no_value": [
            "select",
            "course_id",
            "from",
            "student_course_registrations",
            "where",
            "student_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student_course_registrations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student_course_registrations.course_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__student_course_registrations.student_id__",
                            false
                        ],
                        null
                    ],
                    131.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_assessment",
        "query": "SELECT * FROM People WHERE cell_mobile_number != 01955267735;",
        "question": "Select all columns from people when cell mobile number does not equal 01955267735",
        "tables": [
            "Courses",
            "Students",
            "Candidates",
            "Addresses",
            "People_Addresses",
            "Student_Course_Registrations",
            "People",
            "Candidate_Assessments",
            "Student_Course_Attendance"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "people",
            "when",
            "cell",
            "mobile",
            "number",
            "does",
            "not",
            "equal",
            "01955267735"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "People",
            "WHERE",
            "cell_mobile_number",
            "!=",
            "01955267735"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "people",
            "where",
            "cell_mobile_number",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__people__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__people.cell_mobile_number__",
                            false
                        ],
                        null
                    ],
                    1955267735.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_assessment",
        "query": "SELECT date_of_attendance FROM Student_Course_Attendance WHERE course_id != 303;",
        "question": "Select date of attendance from student course attendance when course id does not equal 303",
        "tables": [
            "Courses",
            "Students",
            "Candidates",
            "Addresses",
            "People_Addresses",
            "Student_Course_Registrations",
            "People",
            "Candidate_Assessments",
            "Student_Course_Attendance"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "date",
            "of",
            "attendance",
            "from",
            "student",
            "course",
            "attendance",
            "when",
            "course",
            "id",
            "does",
            "not",
            "equal",
            "303"
        ],
        "query_toks": [
            "SELECT",
            "date_of_attendance",
            "FROM",
            "Student_Course_Attendance",
            "WHERE",
            "course_id",
            "!=",
            "303"
        ],
        "query_toks_no_value": [
            "select",
            "date_of_attendance",
            "from",
            "student_course_attendance",
            "where",
            "course_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student_course_attendance__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student_course_attendance.date_of_attendance__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__student_course_attendance.course_id__",
                            false
                        ],
                        null
                    ],
                    303.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT first_name FROM Owners WHERE owner_id != 2;",
        "question": "Select first name from owners when owner id does not equal 2",
        "tables": [
            "Owners",
            "Breeds",
            "Treatment_Types",
            "Dogs",
            "Professionals",
            "Treatments",
            "Charges",
            "Sizes"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "first",
            "name",
            "from",
            "owners",
            "when",
            "owner",
            "id",
            "does",
            "not",
            "equal",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "first_name",
            "FROM",
            "Owners",
            "WHERE",
            "owner_id",
            "!=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            "from",
            "owners",
            "where",
            "owner_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__owners__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__owners.first_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__owners.owner_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dog_kennels",
        "query": "SELECT charge_id FROM Charges WHERE charge_amount != 322;",
        "question": "Select charge id from charges when charge amount does not equal 322",
        "tables": [
            "Owners",
            "Breeds",
            "Treatment_Types",
            "Dogs",
            "Professionals",
            "Treatments",
            "Charges",
            "Sizes"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "charge",
            "id",
            "from",
            "charges",
            "when",
            "charge",
            "amount",
            "does",
            "not",
            "equal",
            "322"
        ],
        "query_toks": [
            "SELECT",
            "charge_id",
            "FROM",
            "Charges",
            "WHERE",
            "charge_amount",
            "!=",
            "322"
        ],
        "query_toks_no_value": [
            "select",
            "charge_id",
            "from",
            "charges",
            "where",
            "charge_amount",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__charges__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__charges.charge_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__charges.charge_amount__",
                            false
                        ],
                        null
                    ],
                    322.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "music_1",
        "query": "SELECT * FROM song WHERE rating != 6;",
        "question": "Select all columns from song when rating does not equal 6",
        "tables": [
            "artist",
            "song",
            "genre",
            "files"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "song",
            "when",
            "rating",
            "does",
            "not",
            "equal",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "song",
            "WHERE",
            "rating",
            "!=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "song",
            "where",
            "rating",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__song__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__song.rating__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "music_1",
        "query": "SELECT g_name FROM genre WHERE rating != 9;",
        "question": "Select genre name from genre when rating does not equal 9",
        "tables": [
            "artist",
            "song",
            "genre",
            "files"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "genre",
            "name",
            "from",
            "genre",
            "when",
            "rating",
            "does",
            "not",
            "equal",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "g_name",
            "FROM",
            "genre",
            "WHERE",
            "rating",
            "!=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "g_name",
            "from",
            "genre",
            "where",
            "rating",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__genre__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__genre.g_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__genre.rating__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_employee",
        "query": "SELECT Year_working FROM employment WHERE Company_ID != 13;",
        "question": "Select year working from employment when company id does not equal 13",
        "tables": [
            "employment",
            "people",
            "company"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "year",
            "working",
            "from",
            "employment",
            "when",
            "company",
            "id",
            "does",
            "not",
            "equal",
            "13"
        ],
        "query_toks": [
            "SELECT",
            "Year_working",
            "FROM",
            "employment",
            "WHERE",
            "Company_ID",
            "!=",
            "13"
        ],
        "query_toks_no_value": [
            "select",
            "year_working",
            "from",
            "employment",
            "where",
            "company_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__employment__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__employment.year_working__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__employment.company_id__",
                            false
                        ],
                        null
                    ],
                    13.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_employee",
        "query": "SELECT * FROM people WHERE Age != 25;",
        "question": "Select all columns from people when age does not equal 25",
        "tables": [
            "employment",
            "people",
            "company"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "people",
            "when",
            "age",
            "does",
            "not",
            "equal",
            "25"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "people",
            "WHERE",
            "Age",
            "!=",
            "25"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "people",
            "where",
            "age",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__people__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__people.age__",
                            false
                        ],
                        null
                    ],
                    25.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "farm",
        "query": "SELECT * FROM competition_record WHERE Farm_ID != 3;",
        "question": "Select all columns from competition record when farm id does not equal 3",
        "tables": [
            "farm_competition",
            "farm",
            "city",
            "competition_record"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "competition",
            "record",
            "when",
            "farm",
            "id",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "competition_record",
            "WHERE",
            "Farm_ID",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "competition_record",
            "where",
            "farm_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__competition_record__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__competition_record.farm_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT Event_ID FROM Assets_in_Events WHERE Asset_ID != 3;",
        "question": "Select event id from assets in events when asset id does not equal 3",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "event",
            "id",
            "from",
            "assets",
            "in",
            "events",
            "when",
            "asset",
            "id",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Event_ID",
            "FROM",
            "Assets_in_Events",
            "WHERE",
            "Asset_ID",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "event_id",
            "from",
            "assets_in_events",
            "where",
            "asset_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__assets_in_events__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__assets_in_events.event_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__assets_in_events.asset_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT * FROM Assets WHERE Asset_ID != 2;",
        "question": "Select all columns from assets when asset id does not equal 2",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "assets",
            "when",
            "asset",
            "id",
            "does",
            "not",
            "equal",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Assets",
            "WHERE",
            "Asset_ID",
            "!=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "assets",
            "where",
            "asset_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__assets__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__assets.asset_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT Event_Type_Code FROM Events WHERE Finance_ID != 7;",
        "question": "Select event type code from events when finance id does not equal 7",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "event",
            "type",
            "code",
            "from",
            "events",
            "when",
            "finance",
            "id",
            "does",
            "not",
            "equal",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "Event_Type_Code",
            "FROM",
            "Events",
            "WHERE",
            "Finance_ID",
            "!=",
            "7"
        ],
        "query_toks_no_value": [
            "select",
            "event_type_code",
            "from",
            "events",
            "where",
            "finance_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__events__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__events.event_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__events.finance_id__",
                            false
                        ],
                        null
                    ],
                    7.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT * FROM Addresses WHERE Address_ID != 4;",
        "question": "Select all columns from addresses when address id does not equal 4",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "addresses",
            "when",
            "address",
            "id",
            "does",
            "not",
            "equal",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Addresses",
            "WHERE",
            "Address_ID",
            "!=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "addresses",
            "where",
            "address_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__addresses.address_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT * FROM Agreements WHERE Document_ID != 3;",
        "question": "Select all columns from agreements when document id does not equal 3",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "agreements",
            "when",
            "document",
            "id",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Agreements",
            "WHERE",
            "Document_ID",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "agreements",
            "where",
            "document_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__agreements__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__agreements.document_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT Other_Details FROM Locations WHERE Location_ID != 13;",
        "question": "Select other details from locations when location id does not equal 13",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "other",
            "details",
            "from",
            "locations",
            "when",
            "location",
            "id",
            "does",
            "not",
            "equal",
            "13"
        ],
        "query_toks": [
            "SELECT",
            "Other_Details",
            "FROM",
            "Locations",
            "WHERE",
            "Location_ID",
            "!=",
            "13"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            "from",
            "locations",
            "where",
            "location_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__locations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__locations.other_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__locations.location_id__",
                            false
                        ],
                        null
                    ],
                    13.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT * FROM Channels WHERE Channel_ID != 14;",
        "question": "Select all columns from channels when channel id does not equal 14",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "channels",
            "when",
            "channel",
            "id",
            "does",
            "not",
            "equal",
            "14"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Channels",
            "WHERE",
            "Channel_ID",
            "!=",
            "14"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "channels",
            "where",
            "channel_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__channels__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__channels.channel_id__",
                            false
                        ],
                        null
                    ],
                    14.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "solvency_ii",
        "query": "SELECT Event_ID FROM Products_in_Events WHERE Product_ID != 6;",
        "question": "Select event id from products in events when product id does not equal 6",
        "tables": [
            "Assets_in_Events",
            "Products",
            "Assets",
            "Events",
            "Addresses",
            "Parties_in_Events",
            "Agreements",
            "Finances",
            "Locations",
            "Channels",
            "Products_in_Events",
            "Parties"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "event",
            "id",
            "from",
            "products",
            "in",
            "events",
            "when",
            "product",
            "id",
            "does",
            "not",
            "equal",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "Event_ID",
            "FROM",
            "Products_in_Events",
            "WHERE",
            "Product_ID",
            "!=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "event_id",
            "from",
            "products_in_events",
            "where",
            "product_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products_in_events__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products_in_events.event_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__products_in_events.product_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "city_record",
        "query": "SELECT * FROM hosting_city WHERE Year != 2009;",
        "question": "Select all columns from hosting city when year does not equal 2009",
        "tables": [
            "temperature",
            "hosting_city",
            "city",
            "match"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "hosting",
            "city",
            "when",
            "year",
            "does",
            "not",
            "equal",
            "2009"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "hosting_city",
            "WHERE",
            "Year",
            "!=",
            "2009"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "hosting_city",
            "where",
            "year",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__hosting_city__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__hosting_city.year__",
                            false
                        ],
                        null
                    ],
                    2009.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "city_record",
        "query": "SELECT Hanzi FROM city WHERE Regional_Population != 8700400;",
        "question": "Select hanzi from city when regional population does not equal 8700400",
        "tables": [
            "temperature",
            "hosting_city",
            "city",
            "match"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "hanzi",
            "from",
            "city",
            "when",
            "regional",
            "population",
            "does",
            "not",
            "equal",
            "8700400"
        ],
        "query_toks": [
            "SELECT",
            "Hanzi",
            "FROM",
            "city",
            "WHERE",
            "Regional_Population",
            "!=",
            "8700400"
        ],
        "query_toks_no_value": [
            "select",
            "hanzi",
            "from",
            "city",
            "where",
            "regional_population",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__city__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__city.hanzi__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__city.regional_population__",
                            false
                        ],
                        null
                    ],
                    8700400.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "swimming",
        "query": "SELECT Stadium_ID FROM event WHERE Year != 2012;",
        "question": "Select stadium id from event when year does not equal 2012",
        "tables": [
            "event",
            "stadium",
            "record",
            "swimmer"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "stadium",
            "id",
            "from",
            "event",
            "when",
            "year",
            "does",
            "not",
            "equal",
            "2012"
        ],
        "query_toks": [
            "SELECT",
            "Stadium_ID",
            "FROM",
            "event",
            "WHERE",
            "Year",
            "!=",
            "2012"
        ],
        "query_toks_no_value": [
            "select",
            "stadium_id",
            "from",
            "event",
            "where",
            "year",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__event__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__event.stadium_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__event.year__",
                            false
                        ],
                        null
                    ],
                    2012.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "swimming",
        "query": "SELECT Event_ID FROM record WHERE ID != 3;",
        "question": "Select event id from record when id does not equal 3",
        "tables": [
            "event",
            "stadium",
            "record",
            "swimmer"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "event",
            "id",
            "from",
            "record",
            "when",
            "id",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Event_ID",
            "FROM",
            "record",
            "WHERE",
            "ID",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "event_id",
            "from",
            "record",
            "where",
            "id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__record__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__record.event_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__record.id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "manufactory_1",
        "query": "SELECT Price FROM Products WHERE Code != 5;",
        "question": "Select price from products when code does not equal 5",
        "tables": [
            "Manufacturers",
            "Products"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "price",
            "from",
            "products",
            "when",
            "code",
            "does",
            "not",
            "equal",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "Price",
            "FROM",
            "Products",
            "WHERE",
            "Code",
            "!=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "price",
            "from",
            "products",
            "where",
            "code",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products.price__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__products.code__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "debate",
        "query": "SELECT Date FROM debate WHERE Num_of_Audience != 159;",
        "question": "Select date from debate when num of audience does not equal 159",
        "tables": [
            "debate",
            "people",
            "debate_people"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "date",
            "from",
            "debate",
            "when",
            "num",
            "of",
            "audience",
            "does",
            "not",
            "equal",
            "159"
        ],
        "query_toks": [
            "SELECT",
            "Date",
            "FROM",
            "debate",
            "WHERE",
            "Num_of_Audience",
            "!=",
            "159"
        ],
        "query_toks_no_value": [
            "select",
            "date",
            "from",
            "debate",
            "where",
            "num_of_audience",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__debate__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__debate.date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__debate.num_of_audience__",
                            false
                        ],
                        null
                    ],
                    159.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "debate",
        "query": "SELECT Name FROM people WHERE People_ID != 9;",
        "question": "Select name from people when people id does not equal 9",
        "tables": [
            "debate",
            "people",
            "debate_people"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "name",
            "from",
            "people",
            "when",
            "people",
            "id",
            "does",
            "not",
            "equal",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "people",
            "WHERE",
            "People_ID",
            "!=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "people",
            "where",
            "people_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__people__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__people.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__people.people_id__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "debate",
        "query": "SELECT If_Affirmative_Win FROM debate_people WHERE Negative != 10;",
        "question": "Select if affirmative win from debate people when negative does not equal 10",
        "tables": [
            "debate",
            "people",
            "debate_people"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "if",
            "affirmative",
            "win",
            "from",
            "debate",
            "people",
            "when",
            "negative",
            "does",
            "not",
            "equal",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "If_Affirmative_Win",
            "FROM",
            "debate_people",
            "WHERE",
            "Negative",
            "!=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "if_affirmative_win",
            "from",
            "debate_people",
            "where",
            "negative",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__debate_people__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__debate_people.if_affirmative_win__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__debate_people.negative__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_2",
        "query": "SELECT job FROM Person WHERE age != 35;",
        "question": "Select job from person when age does not equal 35",
        "tables": [
            "Person",
            "PersonFriend"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "job",
            "from",
            "person",
            "when",
            "age",
            "does",
            "not",
            "equal",
            "35"
        ],
        "query_toks": [
            "SELECT",
            "job",
            "FROM",
            "Person",
            "WHERE",
            "age",
            "!=",
            "35"
        ],
        "query_toks_no_value": [
            "select",
            "job",
            "from",
            "person",
            "where",
            "age",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__person__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__person.job__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__person.age__",
                            false
                        ],
                        null
                    ],
                    35.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_2",
        "query": "SELECT * FROM PersonFriend WHERE year != 12;",
        "question": "Select all columns from person friend when year does not equal 12",
        "tables": [
            "Person",
            "PersonFriend"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "person",
            "friend",
            "when",
            "year",
            "does",
            "not",
            "equal",
            "12"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "PersonFriend",
            "WHERE",
            "year",
            "!=",
            "12"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "personfriend",
            "where",
            "year",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__personfriend__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__personfriend.year__",
                            false
                        ],
                        null
                    ],
                    12.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_in_alabama",
        "query": "SELECT Service_Type_Code FROM Services WHERE Service_ID != 8;",
        "question": "Select service type code from services when service id does not equal 8",
        "tables": [
            "Participants",
            "Services",
            "Events",
            "Participants_in_Events"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "service",
            "type",
            "code",
            "from",
            "services",
            "when",
            "service",
            "id",
            "does",
            "not",
            "equal",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "Service_Type_Code",
            "FROM",
            "Services",
            "WHERE",
            "Service_ID",
            "!=",
            "8"
        ],
        "query_toks_no_value": [
            "select",
            "service_type_code",
            "from",
            "services",
            "where",
            "service_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__services__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__services.service_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__services.service_id__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_in_alabama",
        "query": "SELECT Service_ID FROM Events WHERE Event_ID != 40;",
        "question": "Select service id from events when event id does not equal 40",
        "tables": [
            "Participants",
            "Services",
            "Events",
            "Participants_in_Events"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "service",
            "id",
            "from",
            "events",
            "when",
            "event",
            "id",
            "does",
            "not",
            "equal",
            "40"
        ],
        "query_toks": [
            "SELECT",
            "Service_ID",
            "FROM",
            "Events",
            "WHERE",
            "Event_ID",
            "!=",
            "40"
        ],
        "query_toks_no_value": [
            "select",
            "service_id",
            "from",
            "events",
            "where",
            "event_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__events__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__events.service_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__events.event_id__",
                            false
                        ],
                        null
                    ],
                    40.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_in_alabama",
        "query": "SELECT * FROM Participants_in_Events WHERE Participant_ID != 60;",
        "question": "Select all columns from participants in events when participant id does not equal 60",
        "tables": [
            "Participants",
            "Services",
            "Events",
            "Participants_in_Events"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "participants",
            "in",
            "events",
            "when",
            "participant",
            "id",
            "does",
            "not",
            "equal",
            "60"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Participants_in_Events",
            "WHERE",
            "Participant_ID",
            "!=",
            "60"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "participants_in_events",
            "where",
            "participant_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__participants_in_events__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__participants_in_events.participant_id__",
                            false
                        ],
                        null
                    ],
                    60.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "climbing",
        "query": "SELECT * FROM climber WHERE Mountain_ID != 1;",
        "question": "Select all columns from climber when mountain id does not equal 1",
        "tables": [
            "climber",
            "mountain"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "climber",
            "when",
            "mountain",
            "id",
            "does",
            "not",
            "equal",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "climber",
            "WHERE",
            "Mountain_ID",
            "!=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "climber",
            "where",
            "mountain_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__climber__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__climber.mountain_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_learning",
        "query": "SELECT * FROM Student_Course_Enrolment WHERE course_id != 2;",
        "question": "Select all columns from student course enrolment when course id does not equal 2",
        "tables": [
            "Courses",
            "Students",
            "Subjects",
            "Course_Authors_and_Tutors",
            "Student_Course_Enrolment",
            "Student_Tests_Taken"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "student",
            "course",
            "enrolment",
            "when",
            "course",
            "id",
            "does",
            "not",
            "equal",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Student_Course_Enrolment",
            "WHERE",
            "course_id",
            "!=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "student_course_enrolment",
            "where",
            "course_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student_course_enrolment__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__student_course_enrolment.course_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_learning",
        "query": "SELECT * FROM Student_Tests_Taken WHERE registration_id != 19;",
        "question": "Select all columns from student tests taken when registration id does not equal 19",
        "tables": [
            "Courses",
            "Students",
            "Subjects",
            "Course_Authors_and_Tutors",
            "Student_Course_Enrolment",
            "Student_Tests_Taken"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "student",
            "tests",
            "taken",
            "when",
            "registration",
            "id",
            "does",
            "not",
            "equal",
            "19"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Student_Tests_Taken",
            "WHERE",
            "registration_id",
            "!=",
            "19"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "student_tests_taken",
            "where",
            "registration_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student_tests_taken__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__student_tests_taken.registration_id__",
                            false
                        ],
                        null
                    ],
                    19.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "scientist_1",
        "query": "SELECT * FROM Projects WHERE Hours != 189;",
        "question": "Select all columns from projects when hours does not equal 189",
        "tables": [
            "AssignedTo",
            "Projects",
            "Scientists"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "projects",
            "when",
            "hours",
            "does",
            "not",
            "equal",
            "189"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Projects",
            "WHERE",
            "Hours",
            "!=",
            "189"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "projects",
            "where",
            "hours",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__projects__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__projects.hours__",
                            false
                        ],
                        null
                    ],
                    189.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "scientist_1",
        "query": "SELECT Name FROM Scientists WHERE SSN != 222364883;",
        "question": "Select name from scientists when ssn does not equal 222364883",
        "tables": [
            "AssignedTo",
            "Projects",
            "Scientists"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "name",
            "from",
            "scientists",
            "when",
            "ssn",
            "does",
            "not",
            "equal",
            "222364883"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "Scientists",
            "WHERE",
            "SSN",
            "!=",
            "222364883"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "scientists",
            "where",
            "ssn",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__scientists__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__scientists.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__scientists.ssn__",
                            false
                        ],
                        null
                    ],
                    222364883.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "ship_1",
        "query": "SELECT Captain_ID FROM captain WHERE Ship_ID != 3;",
        "question": "Select captain id from captain when ship id does not equal 3",
        "tables": [
            "captain",
            "Ship"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "captain",
            "id",
            "from",
            "captain",
            "when",
            "ship",
            "id",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Captain_ID",
            "FROM",
            "captain",
            "WHERE",
            "Ship_ID",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "captain_id",
            "from",
            "captain",
            "where",
            "ship_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__captain__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__captain.captain_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__captain.ship_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "entertainment_awards",
        "query": "SELECT Result FROM nomination WHERE Festival_ID != 1;",
        "question": "Select result from nomination when festival id does not equal 1",
        "tables": [
            "nomination",
            "festival_detail",
            "artwork"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "result",
            "from",
            "nomination",
            "when",
            "festival",
            "id",
            "does",
            "not",
            "equal",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Result",
            "FROM",
            "nomination",
            "WHERE",
            "Festival_ID",
            "!=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "result",
            "from",
            "nomination",
            "where",
            "festival_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__nomination__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__nomination.result__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__nomination.festival_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "entertainment_awards",
        "query": "SELECT * FROM festival_detail WHERE Festival_ID != 3;",
        "question": "Select all columns from festival detail when festival id does not equal 3",
        "tables": [
            "nomination",
            "festival_detail",
            "artwork"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "festival",
            "detail",
            "when",
            "festival",
            "id",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "festival_detail",
            "WHERE",
            "Festival_ID",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "festival_detail",
            "where",
            "festival_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__festival_detail__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__festival_detail.festival_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "allergy_1",
        "query": "SELECT LName FROM Student WHERE Major != 50;",
        "question": "Select last name from student when major does not equal 50",
        "tables": [
            "Allergy_Type",
            "Student",
            "Has_Allergy"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "last",
            "name",
            "from",
            "student",
            "when",
            "major",
            "does",
            "not",
            "equal",
            "50"
        ],
        "query_toks": [
            "SELECT",
            "LName",
            "FROM",
            "Student",
            "WHERE",
            "Major",
            "!=",
            "50"
        ],
        "query_toks_no_value": [
            "select",
            "lname",
            "from",
            "student",
            "where",
            "major",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.lname__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__student.major__",
                            false
                        ],
                        null
                    ],
                    50.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "allergy_1",
        "query": "SELECT * FROM Has_Allergy WHERE StuID != 1001;",
        "question": "Select all columns from has allergy when stuid does not equal 1001",
        "tables": [
            "Allergy_Type",
            "Student",
            "Has_Allergy"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "has",
            "allergy",
            "when",
            "stuid",
            "does",
            "not",
            "equal",
            "1001"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Has_Allergy",
            "WHERE",
            "StuID",
            "!=",
            "1001"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "has_allergy",
            "where",
            "stuid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__has_allergy__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__has_allergy.stuid__",
                            false
                        ],
                        null
                    ],
                    1001.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_for_hire",
        "query": "SELECT * FROM Products_Booked WHERE returned_yn != 1;",
        "question": "Select all columns from products booked when returned yes or no does not equal 1",
        "tables": [
            "Products_Booked",
            "Bookings",
            "Customers",
            "Discount_Coupons",
            "View_Product_Availability",
            "Products_for_Hire",
            "Payments"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "products",
            "booked",
            "when",
            "returned",
            "yes",
            "or",
            "no",
            "does",
            "not",
            "equal",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Products_Booked",
            "WHERE",
            "returned_yn",
            "!=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "products_booked",
            "where",
            "returned_yn",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products_booked__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__products_booked.returned_yn__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_for_hire",
        "query": "SELECT * FROM Bookings WHERE booking_id != 3;",
        "question": "Select all columns from bookings when booking id does not equal 3",
        "tables": [
            "Products_Booked",
            "Bookings",
            "Customers",
            "Discount_Coupons",
            "View_Product_Availability",
            "Products_for_Hire",
            "Payments"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "bookings",
            "when",
            "booking",
            "id",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Bookings",
            "WHERE",
            "booking_id",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "bookings",
            "where",
            "booking_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__bookings__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__bookings.booking_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_for_hire",
        "query": "SELECT good_or_bad_customer FROM Customers WHERE gender_mf != 1;",
        "question": "Select good or bad customer from customers when gender does not equal 1",
        "tables": [
            "Products_Booked",
            "Bookings",
            "Customers",
            "Discount_Coupons",
            "View_Product_Availability",
            "Products_for_Hire",
            "Payments"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "good",
            "or",
            "bad",
            "customer",
            "from",
            "customers",
            "when",
            "gender",
            "does",
            "not",
            "equal",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "good_or_bad_customer",
            "FROM",
            "Customers",
            "WHERE",
            "gender_mf",
            "!=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "good_or_bad_customer",
            "from",
            "customers",
            "where",
            "gender_mf",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.good_or_bad_customer__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__customers.gender_mf__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_for_hire",
        "query": "SELECT coupon_amount FROM Discount_Coupons WHERE coupon_id != 12;",
        "question": "Select coupon amount from discount coupons when coupon id does not equal 12",
        "tables": [
            "Products_Booked",
            "Bookings",
            "Customers",
            "Discount_Coupons",
            "View_Product_Availability",
            "Products_for_Hire",
            "Payments"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "coupon",
            "amount",
            "from",
            "discount",
            "coupons",
            "when",
            "coupon",
            "id",
            "does",
            "not",
            "equal",
            "12"
        ],
        "query_toks": [
            "SELECT",
            "coupon_amount",
            "FROM",
            "Discount_Coupons",
            "WHERE",
            "coupon_id",
            "!=",
            "12"
        ],
        "query_toks_no_value": [
            "select",
            "coupon_amount",
            "from",
            "discount_coupons",
            "where",
            "coupon_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__discount_coupons__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__discount_coupons.coupon_amount__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__discount_coupons.coupon_id__",
                            false
                        ],
                        null
                    ],
                    12.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_for_hire",
        "query": "SELECT * FROM View_Product_Availability WHERE available_yn != 1;",
        "question": "Select all columns from view product availability when available yes or no does not equal 1",
        "tables": [
            "Products_Booked",
            "Bookings",
            "Customers",
            "Discount_Coupons",
            "View_Product_Availability",
            "Products_for_Hire",
            "Payments"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "view",
            "product",
            "availability",
            "when",
            "available",
            "yes",
            "or",
            "no",
            "does",
            "not",
            "equal",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "View_Product_Availability",
            "WHERE",
            "available_yn",
            "!=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "view_product_availability",
            "where",
            "available_yn",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__view_product_availability__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__view_product_availability.available_yn__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_for_hire",
        "query": "SELECT product_type_code FROM Products_for_Hire WHERE product_id != 3;",
        "question": "Select product type code from products for hire when product id does not equal 3",
        "tables": [
            "Products_Booked",
            "Bookings",
            "Customers",
            "Discount_Coupons",
            "View_Product_Availability",
            "Products_for_Hire",
            "Payments"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "product",
            "type",
            "code",
            "from",
            "products",
            "for",
            "hire",
            "when",
            "product",
            "id",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "product_type_code",
            "FROM",
            "Products_for_Hire",
            "WHERE",
            "product_id",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "product_type_code",
            "from",
            "products_for_hire",
            "where",
            "product_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products_for_hire__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products_for_hire.product_type_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__products_for_hire.product_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_for_hire",
        "query": "SELECT * FROM Payments WHERE payment_id != 12;",
        "question": "Select all columns from payments when payment id does not equal 12",
        "tables": [
            "Products_Booked",
            "Bookings",
            "Customers",
            "Discount_Coupons",
            "View_Product_Availability",
            "Products_for_Hire",
            "Payments"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "payments",
            "when",
            "payment",
            "id",
            "does",
            "not",
            "equal",
            "12"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Payments",
            "WHERE",
            "payment_id",
            "!=",
            "12"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "payments",
            "where",
            "payment_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__payments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__payments.payment_id__",
                            false
                        ],
                        null
                    ],
                    12.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "chinook_1",
        "query": "SELECT * FROM Artist WHERE ArtistId != 171;",
        "question": "Select all columns from artist when artist id does not equal 171",
        "tables": [
            "Invoice",
            "Artist",
            "Album",
            "Track",
            "InvoiceLine",
            "Employee",
            "Playlist",
            "Genre",
            "Customer",
            "PlaylistTrack",
            "MediaType"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "artist",
            "when",
            "artist",
            "id",
            "does",
            "not",
            "equal",
            "171"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Artist",
            "WHERE",
            "ArtistId",
            "!=",
            "171"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "artist",
            "where",
            "artistid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__artist__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__artist.artistid__",
                            false
                        ],
                        null
                    ],
                    171.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "chinook_1",
        "query": "SELECT * FROM Album WHERE ArtistId != 88;",
        "question": "Select all columns from album when artist id does not equal 88",
        "tables": [
            "Invoice",
            "Artist",
            "Album",
            "Track",
            "InvoiceLine",
            "Employee",
            "Playlist",
            "Genre",
            "Customer",
            "PlaylistTrack",
            "MediaType"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "album",
            "when",
            "artist",
            "id",
            "does",
            "not",
            "equal",
            "88"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Album",
            "WHERE",
            "ArtistId",
            "!=",
            "88"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "album",
            "where",
            "artistid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__album__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__album.artistid__",
                            false
                        ],
                        null
                    ],
                    88.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "chinook_1",
        "query": "SELECT Composer FROM Track WHERE GenreId != 16;",
        "question": "Select composer from track when genre id does not equal 16",
        "tables": [
            "Invoice",
            "Artist",
            "Album",
            "Track",
            "InvoiceLine",
            "Employee",
            "Playlist",
            "Genre",
            "Customer",
            "PlaylistTrack",
            "MediaType"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "composer",
            "from",
            "track",
            "when",
            "genre",
            "id",
            "does",
            "not",
            "equal",
            "16"
        ],
        "query_toks": [
            "SELECT",
            "Composer",
            "FROM",
            "Track",
            "WHERE",
            "GenreId",
            "!=",
            "16"
        ],
        "query_toks_no_value": [
            "select",
            "composer",
            "from",
            "track",
            "where",
            "genreid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__track__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__track.composer__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__track.genreid__",
                            false
                        ],
                        null
                    ],
                    16.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "chinook_1",
        "query": "SELECT * FROM InvoiceLine WHERE InvoiceLineId != 1047;",
        "question": "Select all columns from invoice line when invoice line id does not equal 1047",
        "tables": [
            "Invoice",
            "Artist",
            "Album",
            "Track",
            "InvoiceLine",
            "Employee",
            "Playlist",
            "Genre",
            "Customer",
            "PlaylistTrack",
            "MediaType"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "invoice",
            "line",
            "when",
            "invoice",
            "line",
            "id",
            "does",
            "not",
            "equal",
            "1047"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "InvoiceLine",
            "WHERE",
            "InvoiceLineId",
            "!=",
            "1047"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "invoiceline",
            "where",
            "invoicelineid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__invoiceline__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__invoiceline.invoicelineid__",
                            false
                        ],
                        null
                    ],
                    1047.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "chinook_1",
        "query": "SELECT Name FROM Playlist WHERE PlaylistId != 15;",
        "question": "Select name from playlist when play list id does not equal 15",
        "tables": [
            "Invoice",
            "Artist",
            "Album",
            "Track",
            "InvoiceLine",
            "Employee",
            "Playlist",
            "Genre",
            "Customer",
            "PlaylistTrack",
            "MediaType"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "name",
            "from",
            "playlist",
            "when",
            "play",
            "list",
            "id",
            "does",
            "not",
            "equal",
            "15"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "Playlist",
            "WHERE",
            "PlaylistId",
            "!=",
            "15"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "playlist",
            "where",
            "playlistid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__playlist__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__playlist.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__playlist.playlistid__",
                            false
                        ],
                        null
                    ],
                    15.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "chinook_1",
        "query": "SELECT Name FROM Genre WHERE GenreId != 18;",
        "question": "Select name from genre when genre id does not equal 18",
        "tables": [
            "Invoice",
            "Artist",
            "Album",
            "Track",
            "InvoiceLine",
            "Employee",
            "Playlist",
            "Genre",
            "Customer",
            "PlaylistTrack",
            "MediaType"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "name",
            "from",
            "genre",
            "when",
            "genre",
            "id",
            "does",
            "not",
            "equal",
            "18"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "Genre",
            "WHERE",
            "GenreId",
            "!=",
            "18"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "genre",
            "where",
            "genreid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__genre__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__genre.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__genre.genreid__",
                            false
                        ],
                        null
                    ],
                    18.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "chinook_1",
        "query": "SELECT TrackId FROM PlaylistTrack WHERE PlaylistId != 11;",
        "question": "Select track id from playlist track when play list id does not equal 11",
        "tables": [
            "Invoice",
            "Artist",
            "Album",
            "Track",
            "InvoiceLine",
            "Employee",
            "Playlist",
            "Genre",
            "Customer",
            "PlaylistTrack",
            "MediaType"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "track",
            "id",
            "from",
            "playlist",
            "track",
            "when",
            "play",
            "list",
            "id",
            "does",
            "not",
            "equal",
            "11"
        ],
        "query_toks": [
            "SELECT",
            "TrackId",
            "FROM",
            "PlaylistTrack",
            "WHERE",
            "PlaylistId",
            "!=",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "trackid",
            "from",
            "playlisttrack",
            "where",
            "playlistid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__playlisttrack__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__playlisttrack.trackid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__playlisttrack.playlistid__",
                            false
                        ],
                        null
                    ],
                    11.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "chinook_1",
        "query": "SELECT Name FROM MediaType WHERE MediaTypeId != 1;",
        "question": "Select name from media type when media type id does not equal 1",
        "tables": [
            "Invoice",
            "Artist",
            "Album",
            "Track",
            "InvoiceLine",
            "Employee",
            "Playlist",
            "Genre",
            "Customer",
            "PlaylistTrack",
            "MediaType"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "name",
            "from",
            "media",
            "type",
            "when",
            "media",
            "type",
            "id",
            "does",
            "not",
            "equal",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "MediaType",
            "WHERE",
            "MediaTypeId",
            "!=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "mediatype",
            "where",
            "mediatypeid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__mediatype__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__mediatype.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__mediatype.mediatypeid__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_4",
        "query": "SELECT airline FROM routes WHERE src_apid != 1251;",
        "question": "Select airline from routes when source airport id does not equal 1251",
        "tables": [
            "airports",
            "routes",
            "airlines"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "airline",
            "from",
            "routes",
            "when",
            "source",
            "airport",
            "id",
            "does",
            "not",
            "equal",
            "1251"
        ],
        "query_toks": [
            "SELECT",
            "airline",
            "FROM",
            "routes",
            "WHERE",
            "src_apid",
            "!=",
            "1251"
        ],
        "query_toks_no_value": [
            "select",
            "airline",
            "from",
            "routes",
            "where",
            "src_apid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__routes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__routes.airline__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__routes.src_apid__",
                            false
                        ],
                        null
                    ],
                    1251.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "pets_1",
        "query": "SELECT PetID FROM Has_Pet WHERE StuID != 1001;",
        "question": "Select pet id from has pet when student id does not equal 1001",
        "tables": [
            "Has_Pet",
            "Student",
            "Pets"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "pet",
            "id",
            "from",
            "has",
            "pet",
            "when",
            "student",
            "id",
            "does",
            "not",
            "equal",
            "1001"
        ],
        "query_toks": [
            "SELECT",
            "PetID",
            "FROM",
            "Has_Pet",
            "WHERE",
            "StuID",
            "!=",
            "1001"
        ],
        "query_toks_no_value": [
            "select",
            "petid",
            "from",
            "has_pet",
            "where",
            "stuid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__has_pet__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__has_pet.petid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__has_pet.stuid__",
                            false
                        ],
                        null
                    ],
                    1001.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dorm_1",
        "query": "SELECT dorm_name FROM Dorm WHERE student_capacity != 85;",
        "question": "Select dorm name from dorm when student capacity does not equal 85",
        "tables": [
            "Dorm",
            "Has_amenity",
            "Student",
            "Lives_in",
            "Dorm_amenity"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "dorm",
            "name",
            "from",
            "dorm",
            "when",
            "student",
            "capacity",
            "does",
            "not",
            "equal",
            "85"
        ],
        "query_toks": [
            "SELECT",
            "dorm_name",
            "FROM",
            "Dorm",
            "WHERE",
            "student_capacity",
            "!=",
            "85"
        ],
        "query_toks_no_value": [
            "select",
            "dorm_name",
            "from",
            "dorm",
            "where",
            "student_capacity",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__dorm__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__dorm.dorm_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__dorm.student_capacity__",
                            false
                        ],
                        null
                    ],
                    85.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dorm_1",
        "query": "SELECT * FROM Has_amenity WHERE dormid != 104;",
        "question": "Select all columns from has amenity when dorm id does not equal 104",
        "tables": [
            "Dorm",
            "Has_amenity",
            "Student",
            "Lives_in",
            "Dorm_amenity"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "has",
            "amenity",
            "when",
            "dorm",
            "id",
            "does",
            "not",
            "equal",
            "104"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Has_amenity",
            "WHERE",
            "dormid",
            "!=",
            "104"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "has_amenity",
            "where",
            "dormid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__has_amenity__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__has_amenity.dormid__",
                            false
                        ],
                        null
                    ],
                    104.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "dorm_1",
        "query": "SELECT dormid FROM Lives_in WHERE stuid != 1032;",
        "question": "Select dorm id from lives in when student id does not equal 1032",
        "tables": [
            "Dorm",
            "Has_amenity",
            "Student",
            "Lives_in",
            "Dorm_amenity"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "dorm",
            "id",
            "from",
            "lives",
            "in",
            "when",
            "student",
            "id",
            "does",
            "not",
            "equal",
            "1032"
        ],
        "query_toks": [
            "SELECT",
            "dormid",
            "FROM",
            "Lives_in",
            "WHERE",
            "stuid",
            "!=",
            "1032"
        ],
        "query_toks_no_value": [
            "select",
            "dormid",
            "from",
            "lives_in",
            "where",
            "stuid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__lives_in__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__lives_in.dormid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__lives_in.stuid__",
                            false
                        ],
                        null
                    ],
                    1032.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "journal_committee",
        "query": "SELECT Journal_ID FROM journal_committee WHERE Editor_ID != 3;",
        "question": "Select journal id from journal committee when editor id does not equal 3",
        "tables": [
            "journal_committee",
            "editor",
            "journal"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "journal",
            "id",
            "from",
            "journal",
            "committee",
            "when",
            "editor",
            "id",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Journal_ID",
            "FROM",
            "journal_committee",
            "WHERE",
            "Editor_ID",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "journal_id",
            "from",
            "journal_committee",
            "where",
            "editor_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__journal_committee__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__journal_committee.journal_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__journal_committee.editor_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "journal_committee",
        "query": "SELECT Age FROM editor WHERE Editor_ID != 4;",
        "question": "Select age from editor when editor id does not equal 4",
        "tables": [
            "journal_committee",
            "editor",
            "journal"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "age",
            "from",
            "editor",
            "when",
            "editor",
            "id",
            "does",
            "not",
            "equal",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Age",
            "FROM",
            "editor",
            "WHERE",
            "Editor_ID",
            "!=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "age",
            "from",
            "editor",
            "where",
            "editor_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__editor__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__editor.age__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__editor.editor_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "journal_committee",
        "query": "SELECT Theme FROM journal WHERE Journal_ID != 15;",
        "question": "Select theme from journal when journal id does not equal 15",
        "tables": [
            "journal_committee",
            "editor",
            "journal"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "theme",
            "from",
            "journal",
            "when",
            "journal",
            "id",
            "does",
            "not",
            "equal",
            "15"
        ],
        "query_toks": [
            "SELECT",
            "Theme",
            "FROM",
            "journal",
            "WHERE",
            "Journal_ID",
            "!=",
            "15"
        ],
        "query_toks_no_value": [
            "select",
            "theme",
            "from",
            "journal",
            "where",
            "journal_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__journal__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__journal.theme__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__journal.journal_id__",
                            false
                        ],
                        null
                    ],
                    15.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_1",
        "query": "SELECT name FROM aircraft WHERE aid != 10;",
        "question": "Select name from aircraft when airline id does not equal 10",
        "tables": [
            "employee",
            "aircraft",
            "certificate",
            "flight"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "name",
            "from",
            "aircraft",
            "when",
            "airline",
            "id",
            "does",
            "not",
            "equal",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "aircraft",
            "WHERE",
            "aid",
            "!=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "aircraft",
            "where",
            "aid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__aircraft__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__aircraft.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__aircraft.aid__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_1",
        "query": "SELECT * FROM certificate WHERE eid != 90873519;",
        "question": "Select all columns from certificate when employee id does not equal 90873519",
        "tables": [
            "employee",
            "aircraft",
            "certificate",
            "flight"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "certificate",
            "when",
            "employee",
            "id",
            "does",
            "not",
            "equal",
            "90873519"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "certificate",
            "WHERE",
            "eid",
            "!=",
            "90873519"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "certificate",
            "where",
            "eid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__certificate__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__certificate.eid__",
                            false
                        ],
                        null
                    ],
                    90873519.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "flight_1",
        "query": "SELECT * FROM flight WHERE distance != 2551;",
        "question": "Select all columns from flight when distance does not equal 2551",
        "tables": [
            "employee",
            "aircraft",
            "certificate",
            "flight"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "flight",
            "when",
            "distance",
            "does",
            "not",
            "equal",
            "2551"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "flight",
            "WHERE",
            "distance",
            "!=",
            "2551"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "flight",
            "where",
            "distance",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__flight__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__flight.distance__",
                            false
                        ],
                        null
                    ],
                    2551.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "query": "SELECT * FROM medicine_enzyme_interaction WHERE enzyme_id != 3;",
        "question": "Select all columns from medicine enzyme interaction when enzyme id does not equal 3",
        "tables": [
            "medicine_enzyme_interaction",
            "enzyme",
            "medicine"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "medicine",
            "enzyme",
            "interaction",
            "when",
            "enzyme",
            "id",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "medicine_enzyme_interaction",
            "WHERE",
            "enzyme_id",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "medicine_enzyme_interaction",
            "where",
            "enzyme_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__medicine_enzyme_interaction__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__medicine_enzyme_interaction.enzyme_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_and_lot",
        "query": "SELECT * FROM Residents WHERE property_id != 629;",
        "question": "Select all columns from residents when property id does not equal 629",
        "tables": [
            "Residents",
            "Timed_Status_of_Things",
            "Things",
            "Organizations",
            "Services",
            "Residents_Services",
            "Customers",
            "Properties",
            "Customer_Events",
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "residents",
            "when",
            "property",
            "id",
            "does",
            "not",
            "equal",
            "629"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Residents",
            "WHERE",
            "property_id",
            "!=",
            "629"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "residents",
            "where",
            "property_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__residents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__residents.property_id__",
                            false
                        ],
                        null
                    ],
                    629.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_and_lot",
        "query": "SELECT service_details FROM Services WHERE organization_id != 7;",
        "question": "Select service details from services when organization id does not equal 7",
        "tables": [
            "Residents",
            "Timed_Status_of_Things",
            "Things",
            "Organizations",
            "Services",
            "Residents_Services",
            "Customers",
            "Properties",
            "Customer_Events",
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "service",
            "details",
            "from",
            "services",
            "when",
            "organization",
            "id",
            "does",
            "not",
            "equal",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "service_details",
            "FROM",
            "Services",
            "WHERE",
            "organization_id",
            "!=",
            "7"
        ],
        "query_toks_no_value": [
            "select",
            "service_details",
            "from",
            "services",
            "where",
            "organization_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__services__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__services.service_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__services.organization_id__",
                            false
                        ],
                        null
                    ],
                    7.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_and_lot",
        "query": "SELECT date_requested FROM Residents_Services WHERE service_id != 87;",
        "question": "Select date requested from residents services when service id does not equal 87",
        "tables": [
            "Residents",
            "Timed_Status_of_Things",
            "Things",
            "Organizations",
            "Services",
            "Residents_Services",
            "Customers",
            "Properties",
            "Customer_Events",
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "date",
            "requested",
            "from",
            "residents",
            "services",
            "when",
            "service",
            "id",
            "does",
            "not",
            "equal",
            "87"
        ],
        "query_toks": [
            "SELECT",
            "date_requested",
            "FROM",
            "Residents_Services",
            "WHERE",
            "service_id",
            "!=",
            "87"
        ],
        "query_toks_no_value": [
            "select",
            "date_requested",
            "from",
            "residents_services",
            "where",
            "service_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__residents_services__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__residents_services.date_requested__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__residents_services.service_id__",
                            false
                        ],
                        null
                    ],
                    87.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_and_lot",
        "query": "SELECT * FROM Customer_Events WHERE thing_id != 68;",
        "question": "Select all columns from customer events when thing id does not equal 68",
        "tables": [
            "Residents",
            "Timed_Status_of_Things",
            "Things",
            "Organizations",
            "Services",
            "Residents_Services",
            "Customers",
            "Properties",
            "Customer_Events",
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "customer",
            "events",
            "when",
            "thing",
            "id",
            "does",
            "not",
            "equal",
            "68"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Customer_Events",
            "WHERE",
            "thing_id",
            "!=",
            "68"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "customer_events",
            "where",
            "thing_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_events__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__customer_events.thing_id__",
                            false
                        ],
                        null
                    ],
                    68.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "station_weather",
        "query": "SELECT * FROM weekly_weather WHERE low_temperature != 54;",
        "question": "Select all columns from weekly weather when low temperature does not equal 54",
        "tables": [
            "weekly_weather",
            "route",
            "train",
            "station"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "weekly",
            "weather",
            "when",
            "low",
            "temperature",
            "does",
            "not",
            "equal",
            "54"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "weekly_weather",
            "WHERE",
            "low_temperature",
            "!=",
            "54"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "weekly_weather",
            "where",
            "low_temperature",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__weekly_weather__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__weekly_weather.low_temperature__",
                            false
                        ],
                        null
                    ],
                    54.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "station_weather",
        "query": "SELECT train_id FROM route WHERE station_id != 6;",
        "question": "Select train id from route when station id does not equal 6",
        "tables": [
            "weekly_weather",
            "route",
            "train",
            "station"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "train",
            "id",
            "from",
            "route",
            "when",
            "station",
            "id",
            "does",
            "not",
            "equal",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "train_id",
            "FROM",
            "route",
            "WHERE",
            "station_id",
            "!=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "train_id",
            "from",
            "route",
            "where",
            "station_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__route__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__route.train_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__route.station_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "station_weather",
        "query": "SELECT * FROM train WHERE id != 5;",
        "question": "Select all columns from train when id does not equal 5",
        "tables": [
            "weekly_weather",
            "route",
            "train",
            "station"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "train",
            "when",
            "id",
            "does",
            "not",
            "equal",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "train",
            "WHERE",
            "id",
            "!=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "train",
            "where",
            "id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__train__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__train.id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "shop_membership",
        "query": "SELECT Total_pounds FROM purchase WHERE Year != 2017;",
        "question": "Select total pounds from purchase when year does not equal 2017",
        "tables": [
            "purchase",
            "membership_register_branch",
            "member",
            "branch"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "total",
            "pounds",
            "from",
            "purchase",
            "when",
            "year",
            "does",
            "not",
            "equal",
            "2017"
        ],
        "query_toks": [
            "SELECT",
            "Total_pounds",
            "FROM",
            "purchase",
            "WHERE",
            "Year",
            "!=",
            "2017"
        ],
        "query_toks_no_value": [
            "select",
            "total_pounds",
            "from",
            "purchase",
            "where",
            "year",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__purchase__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__purchase.total_pounds__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__purchase.year__",
                            false
                        ],
                        null
                    ],
                    2017.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "shop_membership",
        "query": "SELECT Branch_ID FROM membership_register_branch WHERE Register_Year != 2017;",
        "question": "Select branch id from membership register branch when register year does not equal 2017",
        "tables": [
            "purchase",
            "membership_register_branch",
            "member",
            "branch"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "branch",
            "id",
            "from",
            "membership",
            "register",
            "branch",
            "when",
            "register",
            "year",
            "does",
            "not",
            "equal",
            "2017"
        ],
        "query_toks": [
            "SELECT",
            "Branch_ID",
            "FROM",
            "membership_register_branch",
            "WHERE",
            "Register_Year",
            "!=",
            "2017"
        ],
        "query_toks_no_value": [
            "select",
            "branch_id",
            "from",
            "membership_register_branch",
            "where",
            "register_year",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__membership_register_branch__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__membership_register_branch.branch_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__membership_register_branch.register_year__",
                            false
                        ],
                        null
                    ],
                    2017.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "shop_membership",
        "query": "SELECT Name FROM member WHERE Member_ID != 2;",
        "question": "Select name from member when member id does not equal 2",
        "tables": [
            "purchase",
            "membership_register_branch",
            "member",
            "branch"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "name",
            "from",
            "member",
            "when",
            "member",
            "id",
            "does",
            "not",
            "equal",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "member",
            "WHERE",
            "Member_ID",
            "!=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "member",
            "where",
            "member_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__member__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__member.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__member.member_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "driving_school",
        "query": "SELECT * FROM Addresses WHERE address_id != 3;",
        "question": "Select all columns from addresses when address id does not equal 3",
        "tables": [
            "Staff",
            "Customer_Payments",
            "Addresses",
            "Customers",
            "Vehicles",
            "Lessons"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "addresses",
            "when",
            "address",
            "id",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Addresses",
            "WHERE",
            "address_id",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "addresses",
            "where",
            "address_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__addresses.address_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "driving_school",
        "query": "SELECT * FROM Vehicles WHERE vehicle_id != 1;",
        "question": "Select all columns from vehicles when vehicle id does not equal 1",
        "tables": [
            "Staff",
            "Customer_Payments",
            "Addresses",
            "Customers",
            "Vehicles",
            "Lessons"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "vehicles",
            "when",
            "vehicle",
            "id",
            "does",
            "not",
            "equal",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Vehicles",
            "WHERE",
            "vehicle_id",
            "!=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "vehicles",
            "where",
            "vehicle_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__vehicles__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__vehicles.vehicle_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "driving_school",
        "query": "SELECT * FROM Lessons WHERE vehicle_id != 3;",
        "question": "Select all columns from lessons when vehicle id does not equal 3",
        "tables": [
            "Staff",
            "Customer_Payments",
            "Addresses",
            "Customers",
            "Vehicles",
            "Lessons"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "lessons",
            "when",
            "vehicle",
            "id",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Lessons",
            "WHERE",
            "vehicle_id",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "lessons",
            "where",
            "vehicle_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__lessons__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__lessons.vehicle_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT Stadium_ID FROM stadium WHERE Average != 637;",
        "question": "Select stadium id from stadium when average does not equal 637",
        "tables": [
            "singer",
            "stadium",
            "singer_in_concert",
            "concert"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "stadium",
            "id",
            "from",
            "stadium",
            "when",
            "average",
            "does",
            "not",
            "equal",
            "637"
        ],
        "query_toks": [
            "SELECT",
            "Stadium_ID",
            "FROM",
            "stadium",
            "WHERE",
            "Average",
            "!=",
            "637"
        ],
        "query_toks_no_value": [
            "select",
            "stadium_id",
            "from",
            "stadium",
            "where",
            "average",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__stadium__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__stadium.stadium_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__stadium.average__",
                            false
                        ],
                        null
                    ],
                    637.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT * FROM singer_in_concert WHERE concert_ID != 5;",
        "question": "Select all columns from singer in concert when concert id does not equal 5",
        "tables": [
            "singer",
            "stadium",
            "singer_in_concert",
            "concert"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "singer",
            "in",
            "concert",
            "when",
            "concert",
            "id",
            "does",
            "not",
            "equal",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "singer_in_concert",
            "WHERE",
            "concert_ID",
            "!=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "singer_in_concert",
            "where",
            "concert_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__singer_in_concert__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__singer_in_concert.concert_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "concert_singer",
        "query": "SELECT * FROM concert WHERE Stadium_ID != 10;",
        "question": "Select all columns from concert when stadium id does not equal 10",
        "tables": [
            "singer",
            "stadium",
            "singer_in_concert",
            "concert"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "concert",
            "when",
            "stadium",
            "id",
            "does",
            "not",
            "equal",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "concert",
            "WHERE",
            "Stadium_ID",
            "!=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "concert",
            "where",
            "stadium_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__concert__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__concert.stadium_id__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sports_competition",
        "query": "SELECT Club_ID_1 FROM competition_result WHERE Competition_ID != 1;",
        "question": "Select club id 1 from competition result when competition id does not equal 1",
        "tables": [
            "club_rank",
            "competition",
            "club",
            "competition_result",
            "player"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "club",
            "id",
            "1",
            "from",
            "competition",
            "result",
            "when",
            "competition",
            "id",
            "does",
            "not",
            "equal",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Club_ID_1",
            "FROM",
            "competition_result",
            "WHERE",
            "Competition_ID",
            "!=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "club_id_1",
            "from",
            "competition_result",
            "where",
            "competition_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__competition_result__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__competition_result.club_id_1__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__competition_result.competition_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "railway",
        "query": "SELECT From_Year FROM railway_manage WHERE Manager_ID != 1;",
        "question": "Select from year from railway manage when manager id does not equal 1",
        "tables": [
            "railway_manage",
            "train",
            "manager",
            "railway"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "from",
            "year",
            "from",
            "railway",
            "manage",
            "when",
            "manager",
            "id",
            "does",
            "not",
            "equal",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "From_Year",
            "FROM",
            "railway_manage",
            "WHERE",
            "Manager_ID",
            "!=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "from_year",
            "from",
            "railway_manage",
            "where",
            "manager_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__railway_manage__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__railway_manage.from_year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__railway_manage.manager_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "railway",
        "query": "SELECT Age FROM manager WHERE Level != 11;",
        "question": "Select age from manager when level does not equal 11",
        "tables": [
            "railway_manage",
            "train",
            "manager",
            "railway"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "age",
            "from",
            "manager",
            "when",
            "level",
            "does",
            "not",
            "equal",
            "11"
        ],
        "query_toks": [
            "SELECT",
            "Age",
            "FROM",
            "manager",
            "WHERE",
            "Level",
            "!=",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "age",
            "from",
            "manager",
            "where",
            "level",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__manager__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__manager.age__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__manager.level__",
                            false
                        ],
                        null
                    ],
                    11.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "inn_1",
        "query": "SELECT beds FROM Rooms WHERE maxOccupancy != 2;",
        "question": "Select beds from rooms when max occupancy does not equal 2",
        "tables": [
            "Rooms",
            "Reservations"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "beds",
            "from",
            "rooms",
            "when",
            "max",
            "occupancy",
            "does",
            "not",
            "equal",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "beds",
            "FROM",
            "Rooms",
            "WHERE",
            "maxOccupanc",
            "(",
            "maxOccupanc",
            ")",
            "!=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "beds",
            "from",
            "rooms",
            "where",
            "maxoccupanc",
            "(",
            "maxoccupanc",
            ")",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__rooms__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__rooms.beds__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__rooms.maxoccupancy__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "museum_visit",
        "query": "SELECT Total_spent FROM visit WHERE Num_of_Ticket != 10;",
        "question": "Select total spent from visit when num of ticket does not equal 10",
        "tables": [
            "visit",
            "visitor",
            "museum"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "total",
            "spent",
            "from",
            "visit",
            "when",
            "num",
            "of",
            "ticket",
            "does",
            "not",
            "equal",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "Total_spent",
            "FROM",
            "visit",
            "WHERE",
            "Num_of_Ticket",
            "!=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "total_spent",
            "from",
            "visit",
            "where",
            "num_of_ticket",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__visit__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__visit.total_spent__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__visit.num_of_ticket__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "museum_visit",
        "query": "SELECT * FROM visitor WHERE Age != 27;",
        "question": "Select all columns from customer when age does not equal 27",
        "tables": [
            "visit",
            "visitor",
            "museum"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "customer",
            "when",
            "age",
            "does",
            "not",
            "equal",
            "27"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "visitor",
            "WHERE",
            "Age",
            "!=",
            "27"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "visitor",
            "where",
            "age",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__visitor__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__visitor.age__",
                            false
                        ],
                        null
                    ],
                    27.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "museum_visit",
        "query": "SELECT * FROM museum WHERE Open_Year != 2009;",
        "question": "Select all columns from museum when open year does not equal 2009",
        "tables": [
            "visit",
            "visitor",
            "museum"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "museum",
            "when",
            "open",
            "year",
            "does",
            "not",
            "equal",
            "2009"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "museum",
            "WHERE",
            "Open_Year",
            "!=",
            "2009"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "museum",
            "where",
            "open_year",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__museum__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__museum.open_year__",
                            false
                        ],
                        null
                    ],
                    2009.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "browser_web",
        "query": "SELECT market_share FROM browser WHERE id != 3;",
        "question": "Select market share from browser when id does not equal 3",
        "tables": [
            "browser",
            "accelerator_compatible_browser",
            "Web_client_accelerator"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "market",
            "share",
            "from",
            "browser",
            "when",
            "id",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "market_share",
            "FROM",
            "browser",
            "WHERE",
            "id",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "market_share",
            "from",
            "browser",
            "where",
            "id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__browser__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__browser.market_share__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__browser.id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "browser_web",
        "query": "SELECT * FROM accelerator_compatible_browser WHERE browser_id != 4;",
        "question": "Select all columns from accelerator compatible browser when browser id does not equal 4",
        "tables": [
            "browser",
            "accelerator_compatible_browser",
            "Web_client_accelerator"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "accelerator",
            "compatible",
            "browser",
            "when",
            "browser",
            "id",
            "does",
            "not",
            "equal",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "accelerator_compatible_browser",
            "WHERE",
            "browser_id",
            "!=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "accelerator_compatible_browser",
            "where",
            "browser_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__accelerator_compatible_browser__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__accelerator_compatible_browser.browser_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "architecture",
        "query": "SELECT * FROM bridge WHERE architect_id != 2;",
        "question": "Select all columns from bridge when architect id does not equal 2",
        "tables": [
            "architect",
            "mill",
            "bridge"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "bridge",
            "when",
            "architect",
            "id",
            "does",
            "not",
            "equal",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "bridge",
            "WHERE",
            "architect_id",
            "!=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "bridge",
            "where",
            "architect_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__bridge__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__bridge.architect_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "csu_1",
        "query": "SELECT * FROM discipline_enrollments WHERE Graduate != 386;",
        "question": "Select all columns from discipline enrollments when graduate does not equal 386",
        "tables": [
            "discipline_enrollments",
            "Campuses",
            "degrees",
            "csu_fees",
            "faculty",
            "enrollments"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "discipline",
            "enrollments",
            "when",
            "graduate",
            "does",
            "not",
            "equal",
            "386"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "discipline_enrollments",
            "WHERE",
            "Graduate",
            "!=",
            "386"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "discipline_enrollments",
            "where",
            "graduate",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__discipline_enrollments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__discipline_enrollments.graduate__",
                            false
                        ],
                        null
                    ],
                    386.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "csu_1",
        "query": "SELECT Year FROM Campuses WHERE Id != 6;",
        "question": "Select year from campuses when id does not equal 6",
        "tables": [
            "discipline_enrollments",
            "Campuses",
            "degrees",
            "csu_fees",
            "faculty",
            "enrollments"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "year",
            "from",
            "campuses",
            "when",
            "id",
            "does",
            "not",
            "equal",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "Year",
            "FROM",
            "Campuses",
            "WHERE",
            "Id",
            "!=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "year",
            "from",
            "campuses",
            "where",
            "id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__campuses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__campuses.year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__campuses.id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "csu_1",
        "query": "SELECT * FROM degrees WHERE Campus != 9;",
        "question": "Select all columns from degrees when campus does not equal 9",
        "tables": [
            "discipline_enrollments",
            "Campuses",
            "degrees",
            "csu_fees",
            "faculty",
            "enrollments"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "degrees",
            "when",
            "campus",
            "does",
            "not",
            "equal",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "degrees",
            "WHERE",
            "Campus",
            "!=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "degrees",
            "where",
            "campus",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__degrees__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__degrees.campus__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "csu_1",
        "query": "SELECT * FROM csu_fees WHERE CampusFee != 1951;",
        "question": "Select all columns from csu fees when campus fee does not equal 1951",
        "tables": [
            "discipline_enrollments",
            "Campuses",
            "degrees",
            "csu_fees",
            "faculty",
            "enrollments"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "csu",
            "fees",
            "when",
            "campus",
            "fee",
            "does",
            "not",
            "equal",
            "1951"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "csu_fees",
            "WHERE",
            "CampusFee",
            "!=",
            "1951"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "csu_fees",
            "where",
            "campusfee",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__csu_fees__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__csu_fees.campusfee__",
                            false
                        ],
                        null
                    ],
                    1951.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "csu_1",
        "query": "SELECT * FROM enrollments WHERE FTE_AY != 23075;",
        "question": "Select all columns from enrollments when fte ay does not equal 23075",
        "tables": [
            "discipline_enrollments",
            "Campuses",
            "degrees",
            "csu_fees",
            "faculty",
            "enrollments"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "enrollments",
            "when",
            "fte",
            "ay",
            "does",
            "not",
            "equal",
            "23075"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "enrollments",
            "WHERE",
            "FTE_AY",
            "!=",
            "23075"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "enrollments",
            "where",
            "fte_ay",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__enrollments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__enrollments.fte_ay__",
                            false
                        ],
                        null
                    ],
                    23075.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_orders",
        "query": "SELECT shipment_date FROM Shipments WHERE order_id != 10;",
        "question": "Select shipment date from shipments when order id does not equal 10",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Shipments",
            "Customers",
            "Shipment_Items",
            "Orders"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "shipment",
            "date",
            "from",
            "shipments",
            "when",
            "order",
            "id",
            "does",
            "not",
            "equal",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "shipment_date",
            "FROM",
            "Shipments",
            "WHERE",
            "order_id",
            "!=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "shipment_date",
            "from",
            "shipments",
            "where",
            "order_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__shipments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__shipments.shipment_date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__shipments.order_id__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_orders",
        "query": "SELECT order_item_id FROM Shipment_Items WHERE shipment_id != 15;",
        "question": "Select order item id from shipment items when shipment id does not equal 15",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Shipments",
            "Customers",
            "Shipment_Items",
            "Orders"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "order",
            "item",
            "id",
            "from",
            "shipment",
            "items",
            "when",
            "shipment",
            "id",
            "does",
            "not",
            "equal",
            "15"
        ],
        "query_toks": [
            "SELECT",
            "order_item_id",
            "FROM",
            "Shipment_Items",
            "WHERE",
            "shipment_id",
            "!=",
            "15"
        ],
        "query_toks_no_value": [
            "select",
            "order_item_id",
            "from",
            "shipment_items",
            "where",
            "shipment_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__shipment_items__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__shipment_items.order_item_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__shipment_items.shipment_id__",
                            false
                        ],
                        null
                    ],
                    15.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_policies",
        "query": "SELECT Amount_Settled FROM Settlements WHERE Claim_ID != 761;",
        "question": "Select amount settled from settlements when claim id does not equal 761",
        "tables": [
            "Settlements",
            "Claims",
            "Customer_Policies",
            "Customers",
            "Payments"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "amount",
            "settled",
            "from",
            "settlements",
            "when",
            "claim",
            "id",
            "does",
            "not",
            "equal",
            "761"
        ],
        "query_toks": [
            "SELECT",
            "Amount_Settled",
            "FROM",
            "Settlements",
            "WHERE",
            "Claim_ID",
            "!=",
            "761"
        ],
        "query_toks_no_value": [
            "select",
            "amount_settled",
            "from",
            "settlements",
            "where",
            "claim_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__settlements__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__settlements.amount_settled__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__settlements.claim_id__",
                            false
                        ],
                        null
                    ],
                    761.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_policies",
        "query": "SELECT * FROM Customers WHERE Customer_ID != 9;",
        "question": "Select all columns from customers when customer id does not equal 9",
        "tables": [
            "Settlements",
            "Claims",
            "Customer_Policies",
            "Customers",
            "Payments"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "customers",
            "when",
            "customer",
            "id",
            "does",
            "not",
            "equal",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Customers",
            "WHERE",
            "Customer_ID",
            "!=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "customers",
            "where",
            "customer_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__customers.customer_id__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_policies",
        "query": "SELECT Settlement_ID FROM Payments WHERE Amount_Payment != 423154;",
        "question": "Select settlement id from payments when amount payment does not equal 423154",
        "tables": [
            "Settlements",
            "Claims",
            "Customer_Policies",
            "Customers",
            "Payments"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "settlement",
            "id",
            "from",
            "payments",
            "when",
            "amount",
            "payment",
            "does",
            "not",
            "equal",
            "423154"
        ],
        "query_toks": [
            "SELECT",
            "Settlement_ID",
            "FROM",
            "Payments",
            "WHERE",
            "Amount_Payment",
            "!=",
            "423154"
        ],
        "query_toks_no_value": [
            "select",
            "settlement_id",
            "from",
            "payments",
            "where",
            "amount_payment",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__payments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__payments.settlement_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__payments.amount_payment__",
                            false
                        ],
                        null
                    ],
                    423154.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "gas_company",
        "query": "SELECT * FROM gas_station WHERE Station_ID != 8;",
        "question": "Select all columns from gas station when station id does not equal 8",
        "tables": [
            "gas_station",
            "company",
            "station_company"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "gas",
            "station",
            "when",
            "station",
            "id",
            "does",
            "not",
            "equal",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "gas_station",
            "WHERE",
            "Station_ID",
            "!=",
            "8"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "gas_station",
            "where",
            "station_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__gas_station__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__gas_station.station_id__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "gas_company",
        "query": "SELECT Rank_of_the_Year FROM station_company WHERE Company_ID != 3;",
        "question": "Select rank of the year from station company when company id does not equal 3",
        "tables": [
            "gas_station",
            "company",
            "station_company"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "rank",
            "of",
            "the",
            "year",
            "from",
            "station",
            "company",
            "when",
            "company",
            "id",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Rank_of_the_Year",
            "FROM",
            "station_company",
            "WHERE",
            "Company_ID",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "rank_of_the_year",
            "from",
            "station_company",
            "where",
            "company_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__station_company__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__station_company.rank_of_the_year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__station_company.company_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_government",
        "query": "SELECT date_contact_from FROM Organization_Contact_Individuals WHERE organization_id != 3;",
        "question": "Select date contact from from organization contact individuals when organization id does not equal 3",
        "tables": [
            "Individuals",
            "Organization_Contact_Individuals",
            "Addresses",
            "Organizations",
            "Services",
            "Party_Forms",
            "Party_Addresses",
            "Party_Services",
            "Parties",
            "Forms"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "date",
            "contact",
            "from",
            "from",
            "organization",
            "contact",
            "individuals",
            "when",
            "organization",
            "id",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "date_contact_from",
            "FROM",
            "Organization_Contact_Individuals",
            "WHERE",
            "organization_id",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "date_contact_from",
            "from",
            "organization_contact_individuals",
            "where",
            "organization_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__organization_contact_individuals__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__organization_contact_individuals.date_contact_from__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__organization_contact_individuals.organization_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_government",
        "query": "SELECT date_fully_completed FROM Party_Forms WHERE form_id != 4;",
        "question": "Select date fully completed from party forms when form id does not equal 4",
        "tables": [
            "Individuals",
            "Organization_Contact_Individuals",
            "Addresses",
            "Organizations",
            "Services",
            "Party_Forms",
            "Party_Addresses",
            "Party_Services",
            "Parties",
            "Forms"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "date",
            "fully",
            "completed",
            "from",
            "party",
            "forms",
            "when",
            "form",
            "id",
            "does",
            "not",
            "equal",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "date_fully_completed",
            "FROM",
            "Party_Forms",
            "WHERE",
            "form_id",
            "!=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "date_fully_completed",
            "from",
            "party_forms",
            "where",
            "form_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__party_forms__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__party_forms.date_fully_completed__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__party_forms.form_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "e_government",
        "query": "SELECT * FROM Parties WHERE party_id != 13;",
        "question": "Select all columns from parties when party id does not equal 13",
        "tables": [
            "Individuals",
            "Organization_Contact_Individuals",
            "Addresses",
            "Organizations",
            "Services",
            "Party_Forms",
            "Party_Addresses",
            "Party_Services",
            "Parties",
            "Forms"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "parties",
            "when",
            "party",
            "id",
            "does",
            "not",
            "equal",
            "13"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Parties",
            "WHERE",
            "party_id",
            "!=",
            "13"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "parties",
            "where",
            "party_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__parties__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__parties.party_id__",
                            false
                        ],
                        null
                    ],
                    13.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "school_bus",
        "query": "SELECT Years_Working FROM school_bus WHERE School_ID != 4;",
        "question": "Select years working from school bus when school id does not equal 4",
        "tables": [
            "school_bus",
            "school",
            "driver"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "years",
            "working",
            "from",
            "school",
            "bus",
            "when",
            "school",
            "id",
            "does",
            "not",
            "equal",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Years_Working",
            "FROM",
            "school_bus",
            "WHERE",
            "School_ID",
            "!=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "years_working",
            "from",
            "school_bus",
            "where",
            "school_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__school_bus__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__school_bus.years_working__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__school_bus.school_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "machine_repair",
        "query": "SELECT * FROM repair WHERE repair_ID != 6;",
        "question": "Select all columns from repair when repair id does not equal 6",
        "tables": [
            "technician",
            "repair",
            "machine",
            "repair_assignment"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "repair",
            "when",
            "repair",
            "id",
            "does",
            "not",
            "equal",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "repair",
            "WHERE",
            "repair_ID",
            "!=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "repair",
            "where",
            "repair_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__repair__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__repair.repair_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "machine_repair",
        "query": "SELECT technician_id FROM repair_assignment WHERE Machine_ID != 7;",
        "question": "Select technician id from repair assignment when machine id does not equal 7",
        "tables": [
            "technician",
            "repair",
            "machine",
            "repair_assignment"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "technician",
            "id",
            "from",
            "repair",
            "assignment",
            "when",
            "machine",
            "id",
            "does",
            "not",
            "equal",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "technician_id",
            "FROM",
            "repair_assignment",
            "WHERE",
            "Machine_ID",
            "!=",
            "7"
        ],
        "query_toks_no_value": [
            "select",
            "technician_id",
            "from",
            "repair_assignment",
            "where",
            "machine_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__repair_assignment__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__repair_assignment.technician_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__repair_assignment.machine_id__",
                            false
                        ],
                        null
                    ],
                    7.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "theme_gallery",
        "query": "SELECT Name FROM artist WHERE Artist_ID != 3;",
        "question": "Select name from artist when artist id does not equal 3",
        "tables": [
            "artist",
            "exhibition_record",
            "exhibition"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "name",
            "from",
            "artist",
            "when",
            "artist",
            "id",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "artist",
            "WHERE",
            "Artist_ID",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "artist",
            "where",
            "artist_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__artist__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__artist.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__artist.artist_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "theme_gallery",
        "query": "SELECT Date FROM exhibition_record WHERE Attendance != 2983;",
        "question": "Select date from exhibition record when attendance does not equal 2983",
        "tables": [
            "artist",
            "exhibition_record",
            "exhibition"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "date",
            "from",
            "exhibition",
            "record",
            "when",
            "attendance",
            "does",
            "not",
            "equal",
            "2983"
        ],
        "query_toks": [
            "SELECT",
            "Date",
            "FROM",
            "exhibition_record",
            "WHERE",
            "Attendance",
            "!=",
            "2983"
        ],
        "query_toks_no_value": [
            "select",
            "date",
            "from",
            "exhibition_record",
            "where",
            "attendance",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__exhibition_record__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__exhibition_record.date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__exhibition_record.attendance__",
                            false
                        ],
                        null
                    ],
                    2983.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "theme_gallery",
        "query": "SELECT Theme FROM exhibition WHERE Year != 2009;",
        "question": "Select theme from exhibition when year does not equal 2009",
        "tables": [
            "artist",
            "exhibition_record",
            "exhibition"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "theme",
            "from",
            "exhibition",
            "when",
            "year",
            "does",
            "not",
            "equal",
            "2009"
        ],
        "query_toks": [
            "SELECT",
            "Theme",
            "FROM",
            "exhibition",
            "WHERE",
            "Year",
            "!=",
            "2009"
        ],
        "query_toks_no_value": [
            "select",
            "theme",
            "from",
            "exhibition",
            "where",
            "year",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__exhibition__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__exhibition.theme__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__exhibition.year__",
                            false
                        ],
                        null
                    ],
                    2009.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "film_rank",
        "query": "SELECT * FROM film WHERE Film_ID != 10;",
        "question": "Select all columns from film when film id does not equal 10",
        "tables": [
            "film",
            "market",
            "film_market_estimation"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "film",
            "when",
            "film",
            "id",
            "does",
            "not",
            "equal",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "film",
            "WHERE",
            "Film_ID",
            "!=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "film",
            "where",
            "film_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__film__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__film.film_id__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "film_rank",
        "query": "SELECT * FROM market WHERE Number_cities != 700;",
        "question": "Select all columns from market when number cities does not equal 700",
        "tables": [
            "film",
            "market",
            "film_market_estimation"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "market",
            "when",
            "number",
            "cities",
            "does",
            "not",
            "equal",
            "700"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "market",
            "WHERE",
            "Number_cities",
            "!=",
            "700"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "market",
            "where",
            "number_cities",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__market__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__market.number_cities__",
                            false
                        ],
                        null
                    ],
                    700.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "film_rank",
        "query": "SELECT * FROM film_market_estimation WHERE Market_ID != 1;",
        "question": "Select all columns from film market estimation when market id does not equal 1",
        "tables": [
            "film",
            "market",
            "film_market_estimation"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "film",
            "market",
            "estimation",
            "when",
            "market",
            "id",
            "does",
            "not",
            "equal",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "film_market_estimation",
            "WHERE",
            "Market_ID",
            "!=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "film_market_estimation",
            "where",
            "market_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__film_market_estimation__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__film_market_estimation.market_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "party_people",
        "query": "SELECT * FROM party_events WHERE Member_in_charge_ID != 3;",
        "question": "Select all columns from party events when member in charge id does not equal 3",
        "tables": [
            "member",
            "party_events",
            "party",
            "region"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "party",
            "events",
            "when",
            "member",
            "in",
            "charge",
            "id",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "party_events",
            "WHERE",
            "Member_in_charge_ID",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "party_events",
            "where",
            "member_in_charge_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__party_events__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__party_events.member_in_charge_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "party_people",
        "query": "SELECT * FROM party WHERE Took_office != 1961;",
        "question": "Select all columns from party when took office does not equal 1961",
        "tables": [
            "member",
            "party_events",
            "party",
            "region"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "party",
            "when",
            "took",
            "office",
            "does",
            "not",
            "equal",
            "1961"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "party",
            "WHERE",
            "Took_office",
            "!=",
            "1961"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "party",
            "where",
            "took_office",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__party__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__party.took_office__",
                            false
                        ],
                        null
                    ],
                    1961.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT Medication FROM Prescribes WHERE Dose != 5;",
        "question": "Select medication from prescribes when dose does not equal 5",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "medication",
            "from",
            "prescribes",
            "when",
            "dose",
            "does",
            "not",
            "equal",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "Medication",
            "FROM",
            "Prescribes",
            "WHERE",
            "Dose",
            "!=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "medication",
            "from",
            "prescribes",
            "where",
            "dose",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__prescribes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__prescribes.medication__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__prescribes.dose__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT StayID FROM Stay WHERE Room != 111;",
        "question": "Select stay id from stay when room does not equal 111",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "stay",
            "id",
            "from",
            "stay",
            "when",
            "room",
            "does",
            "not",
            "equal",
            "111"
        ],
        "query_toks": [
            "SELECT",
            "StayID",
            "FROM",
            "Stay",
            "WHERE",
            "Room",
            "!=",
            "111"
        ],
        "query_toks_no_value": [
            "select",
            "stayid",
            "from",
            "stay",
            "where",
            "room",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__stay__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__stay.stayid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__stay.room__",
                            false
                        ],
                        null
                    ],
                    111.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT BlockFloor FROM On_Call WHERE BlockCode != 2;",
        "question": "Select block floor from on call when block code does not equal 2",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "block",
            "floor",
            "from",
            "on",
            "call",
            "when",
            "block",
            "code",
            "does",
            "not",
            "equal",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "BlockFloor",
            "FROM",
            "On_Call",
            "WHERE",
            "BlockCode",
            "!=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "blockfloor",
            "from",
            "on_call",
            "where",
            "blockcode",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__on_call__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__on_call.blockfloor__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__on_call.blockcode__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT RoomNumber FROM Room WHERE Unavailable != 1;",
        "question": "Select roomnumber from room when unavailable does not equal 1",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "roomnumber",
            "from",
            "room",
            "when",
            "unavailable",
            "does",
            "not",
            "equal",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "RoomNumber",
            "FROM",
            "Room",
            "WHERE",
            "Unavailable",
            "!=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "roomnumber",
            "from",
            "room",
            "where",
            "unavailable",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__room__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__room.roomnumber__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__room.unavailable__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT * FROM Affiliated_With WHERE Physician != 3;",
        "question": "Select all columns from affiliated with when physician does not equal 3",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "affiliated",
            "with",
            "when",
            "physician",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Affiliated_With",
            "WHERE",
            "Physician",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "affiliated_with",
            "where",
            "physician",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__affiliated_with__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__affiliated_with.physician__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT * FROM Procedures WHERE Code != 4;",
        "question": "Select all columns from procedures when code does not equal 4",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "procedures",
            "when",
            "code",
            "does",
            "not",
            "equal",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Procedures",
            "WHERE",
            "Code",
            "!=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "procedures",
            "where",
            "code",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__procedures__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__procedures.code__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT Head FROM Department WHERE DepartmentID != 2;",
        "question": "Select head from department when departmentid does not equal 2",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "head",
            "from",
            "department",
            "when",
            "departmentid",
            "does",
            "not",
            "equal",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Head",
            "FROM",
            "Department",
            "WHERE",
            "DepartmentID",
            "!=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "head",
            "from",
            "department",
            "where",
            "departmentid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__department__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__department.head__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__department.departmentid__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT * FROM Patient WHERE PCP != 2;",
        "question": "Select all columns from patient when pcp does not equal 2",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "patient",
            "when",
            "pcp",
            "does",
            "not",
            "equal",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Patient",
            "WHERE",
            "PCP",
            "!=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "patient",
            "where",
            "pcp",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__patient__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__patient.pcp__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT * FROM Undergoes WHERE AssistingNurse != 102;",
        "question": "Select all columns from undergoes when assisting nurse does not equal 102",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "undergoes",
            "when",
            "assisting",
            "nurse",
            "does",
            "not",
            "equal",
            "102"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Undergoes",
            "WHERE",
            "AssistingNurse",
            "!=",
            "102"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "undergoes",
            "where",
            "assistingnurse",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__undergoes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__undergoes.assistingnurse__",
                            false
                        ],
                        null
                    ],
                    102.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT * FROM Physician WHERE EmployeeID != 4;",
        "question": "Select all columns from physician when employee id does not equal 4",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "physician",
            "when",
            "employee",
            "id",
            "does",
            "not",
            "equal",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Physician",
            "WHERE",
            "EmployeeID",
            "!=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "physician",
            "where",
            "employeeid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__physician__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__physician.employeeid__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT * FROM Trained_In WHERE Treatment != 3;",
        "question": "Select all columns from trained in when treatment does not equal 3",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "trained",
            "in",
            "when",
            "treatment",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Trained_In",
            "WHERE",
            "Treatment",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "trained_in",
            "where",
            "treatment",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__trained_in__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__trained_in.treatment__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hospital_1",
        "query": "SELECT BlockFloor FROM Block WHERE BlockCode != 3;",
        "question": "Select block floor from block when block code does not equal 3",
        "tables": [
            "Prescribes",
            "Stay",
            "On_Call",
            "Room",
            "Affiliated_With",
            "Procedures",
            "Department",
            "Patient",
            "Undergoes",
            "Physician",
            "Nurse",
            "Appointment",
            "Medication",
            "Trained_In",
            "Block"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "block",
            "floor",
            "from",
            "block",
            "when",
            "block",
            "code",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "BlockFloor",
            "FROM",
            "Block",
            "WHERE",
            "BlockCode",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "blockfloor",
            "from",
            "block",
            "where",
            "blockcode",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__block__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__block.blockfloor__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__block.blockcode__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "query": "SELECT product_category FROM Products WHERE product_id != 3;",
        "question": "Select product category from products when product id does not equal 3",
        "tables": [
            "Mailshot_Campaigns",
            "Products",
            "Mailshot_Customers",
            "Order_Items",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers",
            "Premises"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "product",
            "category",
            "from",
            "products",
            "when",
            "product",
            "id",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "product_category",
            "FROM",
            "Products",
            "WHERE",
            "product_id",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "product_category",
            "from",
            "products",
            "where",
            "product_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products.product_category__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__products.product_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "query": "SELECT * FROM Mailshot_Customers WHERE customer_id != 14;",
        "question": "Select all columns from mailshot customers when customer id does not equal 14",
        "tables": [
            "Mailshot_Campaigns",
            "Products",
            "Mailshot_Customers",
            "Order_Items",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers",
            "Premises"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "mailshot",
            "customers",
            "when",
            "customer",
            "id",
            "does",
            "not",
            "equal",
            "14"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Mailshot_Customers",
            "WHERE",
            "customer_id",
            "!=",
            "14"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "mailshot_customers",
            "where",
            "customer_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__mailshot_customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__mailshot_customers.customer_id__",
                            false
                        ],
                        null
                    ],
                    14.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "mountain_photos",
        "query": "SELECT * FROM photos WHERE camera_lens_id != 5;",
        "question": "Select all columns from photos when camera lens id does not equal 5",
        "tables": [
            "mountain",
            "camera_lens",
            "photos"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "photos",
            "when",
            "camera",
            "lens",
            "id",
            "does",
            "not",
            "equal",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "photos",
            "WHERE",
            "camera_lens_id",
            "!=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "photos",
            "where",
            "camera_lens_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__photos__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__photos.camera_lens_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "battle_death",
        "query": "SELECT * FROM death WHERE id != 7;",
        "question": "Select all columns from death when id does not equal 7",
        "tables": [
            "ship",
            "battle",
            "death"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "death",
            "when",
            "id",
            "does",
            "not",
            "equal",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "death",
            "WHERE",
            "id",
            "!=",
            "7"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "death",
            "where",
            "id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__death__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__death.id__",
                            false
                        ],
                        null
                    ],
                    7.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "query": "SELECT * FROM Draft_Copies WHERE copy_number != 4;",
        "question": "Select all columns from draft copies when copy number does not equal 4",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Document_Status",
            "Draft_Copies",
            "Documents",
            "Addresses",
            "Circulation_History",
            "Document_Drafts",
            "Documents_Mailed",
            "Ref_Shipping_Agents",
            "Employees"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "draft",
            "copies",
            "when",
            "copy",
            "number",
            "does",
            "not",
            "equal",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Draft_Copies",
            "WHERE",
            "copy_number",
            "!=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "draft_copies",
            "where",
            "copy_number",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__draft_copies__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__draft_copies.copy_number__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "query": "SELECT * FROM Addresses WHERE address_id != 1;",
        "question": "Select all columns from addresses when address id does not equal 1",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Document_Status",
            "Draft_Copies",
            "Documents",
            "Addresses",
            "Circulation_History",
            "Document_Drafts",
            "Documents_Mailed",
            "Ref_Shipping_Agents",
            "Employees"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "addresses",
            "when",
            "address",
            "id",
            "does",
            "not",
            "equal",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Addresses",
            "WHERE",
            "address_id",
            "!=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "addresses",
            "where",
            "address_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__addresses.address_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "query": "SELECT * FROM Circulation_History WHERE copy_number != 4;",
        "question": "Select all columns from circulation history when copy number does not equal 4",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Document_Status",
            "Draft_Copies",
            "Documents",
            "Addresses",
            "Circulation_History",
            "Document_Drafts",
            "Documents_Mailed",
            "Ref_Shipping_Agents",
            "Employees"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "circulation",
            "history",
            "when",
            "copy",
            "number",
            "does",
            "not",
            "equal",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Circulation_History",
            "WHERE",
            "copy_number",
            "!=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "circulation_history",
            "where",
            "copy_number",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__circulation_history__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__circulation_history.copy_number__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "query": "SELECT draft_details FROM Document_Drafts WHERE draft_number != 2;",
        "question": "Select draft details from document drafts when draft number does not equal 2",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Document_Status",
            "Draft_Copies",
            "Documents",
            "Addresses",
            "Circulation_History",
            "Document_Drafts",
            "Documents_Mailed",
            "Ref_Shipping_Agents",
            "Employees"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "draft",
            "details",
            "from",
            "document",
            "drafts",
            "when",
            "draft",
            "number",
            "does",
            "not",
            "equal",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "draft_details",
            "FROM",
            "Document_Drafts",
            "WHERE",
            "draft_number",
            "!=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "draft_details",
            "from",
            "document_drafts",
            "where",
            "draft_number",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__document_drafts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__document_drafts.draft_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__document_drafts.draft_number__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "query": "SELECT mailing_date FROM Documents_Mailed WHERE document_id != 23;",
        "question": "Select mailing date from documents mailed when document id does not equal 23",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Document_Status",
            "Draft_Copies",
            "Documents",
            "Addresses",
            "Circulation_History",
            "Document_Drafts",
            "Documents_Mailed",
            "Ref_Shipping_Agents",
            "Employees"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "mailing",
            "date",
            "from",
            "documents",
            "mailed",
            "when",
            "document",
            "id",
            "does",
            "not",
            "equal",
            "23"
        ],
        "query_toks": [
            "SELECT",
            "mailing_date",
            "FROM",
            "Documents_Mailed",
            "WHERE",
            "document_id",
            "!=",
            "23"
        ],
        "query_toks_no_value": [
            "select",
            "mailing_date",
            "from",
            "documents_mailed",
            "where",
            "document_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__documents_mailed__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__documents_mailed.mailing_date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__documents_mailed.document_id__",
                            false
                        ],
                        null
                    ],
                    23.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_share_transactions",
        "query": "SELECT * FROM Transactions WHERE investor_id != 19;",
        "question": "Select all columns from transactions when investor id does not equal 19",
        "tables": [
            "Transactions",
            "Ref_Transaction_Types",
            "Purchases",
            "Investors",
            "Sales",
            "Lots",
            "Transactions_Lots"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "transactions",
            "when",
            "investor",
            "id",
            "does",
            "not",
            "equal",
            "19"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Transactions",
            "WHERE",
            "investor_id",
            "!=",
            "19"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "transactions",
            "where",
            "investor_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__transactions__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__transactions.investor_id__",
                            false
                        ],
                        null
                    ],
                    19.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_share_transactions",
        "query": "SELECT * FROM Sales WHERE sales_transaction_id != 1;",
        "question": "Select all columns from sales when sales transaction id does not equal 1",
        "tables": [
            "Transactions",
            "Ref_Transaction_Types",
            "Purchases",
            "Investors",
            "Sales",
            "Lots",
            "Transactions_Lots"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "sales",
            "when",
            "sales",
            "transaction",
            "id",
            "does",
            "not",
            "equal",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Sales",
            "WHERE",
            "sales_transaction_id",
            "!=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "sales",
            "where",
            "sales_transaction_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__sales__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__sales.sales_transaction_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_share_transactions",
        "query": "SELECT transaction_id FROM Transactions_Lots WHERE lot_id != 3;",
        "question": "Select transaction id from transactions lots when lot id does not equal 3",
        "tables": [
            "Transactions",
            "Ref_Transaction_Types",
            "Purchases",
            "Investors",
            "Sales",
            "Lots",
            "Transactions_Lots"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "transaction",
            "id",
            "from",
            "transactions",
            "lots",
            "when",
            "lot",
            "id",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "transaction_id",
            "FROM",
            "Transactions_Lots",
            "WHERE",
            "lot_id",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "transaction_id",
            "from",
            "transactions_lots",
            "where",
            "lot_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__transactions_lots__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__transactions_lots.transaction_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__transactions_lots.lot_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "apartment_rentals",
        "query": "SELECT * FROM Apartments WHERE building_id != 624;",
        "question": "Select all columns from apartments when building id does not equal 624",
        "tables": [
            "Apartments",
            "Apartment_Bookings",
            "View_Unit_Status",
            "Guests",
            "Apartment_Facilities",
            "Apartment_Buildings"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "apartments",
            "when",
            "building",
            "id",
            "does",
            "not",
            "equal",
            "624"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Apartments",
            "WHERE",
            "building_id",
            "!=",
            "624"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "apartments",
            "where",
            "building_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__apartments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__apartments.building_id__",
                            false
                        ],
                        null
                    ],
                    624.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "apartment_rentals",
        "query": "SELECT * FROM Apartment_Bookings WHERE apt_booking_id != 924;",
        "question": "Select all columns from apartment bookings when apartment booking id does not equal 924",
        "tables": [
            "Apartments",
            "Apartment_Bookings",
            "View_Unit_Status",
            "Guests",
            "Apartment_Facilities",
            "Apartment_Buildings"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "apartment",
            "bookings",
            "when",
            "apartment",
            "booking",
            "id",
            "does",
            "not",
            "equal",
            "924"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Apartment_Bookings",
            "WHERE",
            "apt_booking_id",
            "!=",
            "924"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "apartment_bookings",
            "where",
            "apt_booking_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__apartment_bookings__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__apartment_bookings.apt_booking_id__",
                            false
                        ],
                        null
                    ],
                    924.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "apartment_rentals",
        "query": "SELECT * FROM Apartment_Facilities WHERE apt_id != 2;",
        "question": "Select all columns from apartment facilities when apartment id does not equal 2",
        "tables": [
            "Apartments",
            "Apartment_Bookings",
            "View_Unit_Status",
            "Guests",
            "Apartment_Facilities",
            "Apartment_Buildings"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "apartment",
            "facilities",
            "when",
            "apartment",
            "id",
            "does",
            "not",
            "equal",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Apartment_Facilities",
            "WHERE",
            "apt_id",
            "!=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "apartment_facilities",
            "where",
            "apt_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__apartment_facilities__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__apartment_facilities.apt_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT * FROM Transcript_Contents WHERE student_course_id != 0;",
        "question": "Select all columns from transcript contents when student course id does not equal 0",
        "tables": [
            "Transcript_Contents",
            "Student_Enrolment",
            "Courses",
            "Students",
            "Student_Enrolment_Courses",
            "Addresses",
            "Transcripts",
            "Sections",
            "Degree_Programs",
            "Semesters",
            "Departments"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "transcript",
            "contents",
            "when",
            "student",
            "course",
            "id",
            "does",
            "not",
            "equal",
            "0"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Transcript_Contents",
            "WHERE",
            "student_course_id",
            "!=",
            "0"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "transcript_contents",
            "where",
            "student_course_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__transcript_contents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__transcript_contents.student_course_id__",
                            false
                        ],
                        null
                    ],
                    0.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT ssn FROM Students WHERE permanent_address_id != 5;",
        "question": "Select ssn from students when permanent address id does not equal 5",
        "tables": [
            "Transcript_Contents",
            "Student_Enrolment",
            "Courses",
            "Students",
            "Student_Enrolment_Courses",
            "Addresses",
            "Transcripts",
            "Sections",
            "Degree_Programs",
            "Semesters",
            "Departments"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "ssn",
            "from",
            "students",
            "when",
            "permanent",
            "address",
            "id",
            "does",
            "not",
            "equal",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "ssn",
            "FROM",
            "Students",
            "WHERE",
            "permanent_address_id",
            "!=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "ssn",
            "from",
            "students",
            "where",
            "permanent_address_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__students__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__students.ssn__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__students.permanent_address_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "SELECT * FROM Student_Enrolment_Courses WHERE course_id != 3;",
        "question": "Select all columns from student enrolment courses when course id does not equal 3",
        "tables": [
            "Transcript_Contents",
            "Student_Enrolment",
            "Courses",
            "Students",
            "Student_Enrolment_Courses",
            "Addresses",
            "Transcripts",
            "Sections",
            "Degree_Programs",
            "Semesters",
            "Departments"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "student",
            "enrolment",
            "courses",
            "when",
            "course",
            "id",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Student_Enrolment_Courses",
            "WHERE",
            "course_id",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "student_enrolment_courses",
            "where",
            "course_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student_enrolment_courses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__student_enrolment_courses.course_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "query": "SELECT Project_Details FROM Projects WHERE Project_ID != 30;",
        "question": "Select project details from projects when project id does not equal 30",
        "tables": [
            "Ref_Document_Types",
            "Projects",
            "Documents",
            "Ref_Budget_Codes",
            "Accounts",
            "Statements",
            "Documents_with_Expenses"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "project",
            "details",
            "from",
            "projects",
            "when",
            "project",
            "id",
            "does",
            "not",
            "equal",
            "30"
        ],
        "query_toks": [
            "SELECT",
            "Project_Details",
            "FROM",
            "Projects",
            "WHERE",
            "Project_ID",
            "!=",
            "30"
        ],
        "query_toks_no_value": [
            "select",
            "project_details",
            "from",
            "projects",
            "where",
            "project_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__projects__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__projects.project_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__projects.project_id__",
                            false
                        ],
                        null
                    ],
                    30.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "query": "SELECT * FROM Accounts WHERE Account_ID != 414;",
        "question": "Select all columns from accounts when account id does not equal 414",
        "tables": [
            "Ref_Document_Types",
            "Projects",
            "Documents",
            "Ref_Budget_Codes",
            "Accounts",
            "Statements",
            "Documents_with_Expenses"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "accounts",
            "when",
            "account",
            "id",
            "does",
            "not",
            "equal",
            "414"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Accounts",
            "WHERE",
            "Account_ID",
            "!=",
            "414"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "accounts",
            "where",
            "account_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__accounts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__accounts.account_id__",
                            false
                        ],
                        null
                    ],
                    414.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "query": "SELECT * FROM Statements WHERE Statement_ID != 192;",
        "question": "Select all columns from statements when statement id does not equal 192",
        "tables": [
            "Ref_Document_Types",
            "Projects",
            "Documents",
            "Ref_Budget_Codes",
            "Accounts",
            "Statements",
            "Documents_with_Expenses"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "statements",
            "when",
            "statement",
            "id",
            "does",
            "not",
            "equal",
            "192"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Statements",
            "WHERE",
            "Statement_ID",
            "!=",
            "192"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "statements",
            "where",
            "statement_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__statements__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__statements.statement_id__",
                            false
                        ],
                        null
                    ],
                    192.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "query": "SELECT * FROM Documents_with_Expenses WHERE Document_ID != 226;",
        "question": "Select all columns from documents with expenses when document id does not equal 226",
        "tables": [
            "Ref_Document_Types",
            "Projects",
            "Documents",
            "Ref_Budget_Codes",
            "Accounts",
            "Statements",
            "Documents_with_Expenses"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "documents",
            "with",
            "expenses",
            "when",
            "document",
            "id",
            "does",
            "not",
            "equal",
            "226"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Documents_with_Expenses",
            "WHERE",
            "Document_ID",
            "!=",
            "226"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "documents_with_expenses",
            "where",
            "document_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__documents_with_expenses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__documents_with_expenses.document_id__",
                            false
                        ],
                        null
                    ],
                    226.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "ship_mission",
        "query": "SELECT Tonnage FROM ship WHERE Ship_ID != 1;",
        "question": "Select tonnage from ship when ship id does not equal 1",
        "tables": [
            "ship",
            "mission"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "tonnage",
            "from",
            "ship",
            "when",
            "ship",
            "id",
            "does",
            "not",
            "equal",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Tonnage",
            "FROM",
            "ship",
            "WHERE",
            "Ship_ID",
            "!=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "tonnage",
            "from",
            "ship",
            "where",
            "ship_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__ship__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__ship.tonnage__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__ship.ship_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "ship_mission",
        "query": "SELECT Code FROM mission WHERE Launched_Year != 1932;",
        "question": "Select code from mission when launched year does not equal 1932",
        "tables": [
            "ship",
            "mission"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "code",
            "from",
            "mission",
            "when",
            "launched",
            "year",
            "does",
            "not",
            "equal",
            "1932"
        ],
        "query_toks": [
            "SELECT",
            "Code",
            "FROM",
            "mission",
            "WHERE",
            "Launched_Year",
            "!=",
            "1932"
        ],
        "query_toks_no_value": [
            "select",
            "code",
            "from",
            "mission",
            "where",
            "launched_year",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__mission__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__mission.code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__mission.launched_year__",
                            false
                        ],
                        null
                    ],
                    1932.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_office",
        "query": "SELECT * FROM Office_locations WHERE move_in_year != 2028;",
        "question": "Select all columns from office locations when move in year does not equal 2028",
        "tables": [
            "Office_locations",
            "Companies",
            "buildings"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "office",
            "locations",
            "when",
            "move",
            "in",
            "year",
            "does",
            "not",
            "equal",
            "2028"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Office_locations",
            "WHERE",
            "move_in_year",
            "!=",
            "2028"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "office_locations",
            "where",
            "move_in_year",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__office_locations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__office_locations.move_in_year__",
                            false
                        ],
                        null
                    ],
                    2028.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_office",
        "query": "SELECT * FROM buildings WHERE Stories != 20;",
        "question": "Select all columns from buildings when stories does not equal 20",
        "tables": [
            "Office_locations",
            "Companies",
            "buildings"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "buildings",
            "when",
            "stories",
            "does",
            "not",
            "equal",
            "20"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "buildings",
            "WHERE",
            "Stories",
            "!=",
            "20"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "buildings",
            "where",
            "stories",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__buildings__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__buildings.stories__",
                            false
                        ],
                        null
                    ],
                    20.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_software_problems",
        "query": "SELECT * FROM Product WHERE product_id != 13;",
        "question": "Select all columns from product when product id does not equal 13",
        "tables": [
            "Staff",
            "Product",
            "Problem_Log",
            "Problems",
            "Problem_Category_Codes",
            "Problem_Status_Codes"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "product",
            "when",
            "product",
            "id",
            "does",
            "not",
            "equal",
            "13"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Product",
            "WHERE",
            "product_id",
            "!=",
            "13"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "product",
            "where",
            "product_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__product__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__product.product_id__",
                            false
                        ],
                        null
                    ],
                    13.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "coffee_shop",
        "query": "SELECT * FROM shop WHERE Shop_ID != 10;",
        "question": "Select all columns from shop when shop id does not equal 10",
        "tables": [
            "happy_hour_member",
            "member",
            "shop",
            "happy_hour"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "shop",
            "when",
            "shop",
            "id",
            "does",
            "not",
            "equal",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "shop",
            "WHERE",
            "Shop_ID",
            "!=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "shop",
            "where",
            "shop_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__shop__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__shop.shop_id__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "riding_club",
        "query": "SELECT Coach_name FROM coach WHERE Club_ID != 1;",
        "question": "Select player name from coach when club id does not equal 1",
        "tables": [
            "club",
            "player",
            "coach",
            "match_result",
            "player_coach"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "player",
            "name",
            "from",
            "coach",
            "when",
            "club",
            "id",
            "does",
            "not",
            "equal",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Coach_name",
            "FROM",
            "coach",
            "WHERE",
            "Club_ID",
            "!=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "coach_name",
            "from",
            "coach",
            "where",
            "club_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__coach__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__coach.coach_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__coach.club_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "riding_club",
        "query": "SELECT * FROM match_result WHERE Small_Silver != 6;",
        "question": "Select all columns from match result when small silver does not equal 6",
        "tables": [
            "club",
            "player",
            "coach",
            "match_result",
            "player_coach"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "match",
            "result",
            "when",
            "small",
            "silver",
            "does",
            "not",
            "equal",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "match_result",
            "WHERE",
            "Small_Silver",
            "!=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "match_result",
            "where",
            "small_silver",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__match_result__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__match_result.small_silver__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "riding_club",
        "query": "SELECT * FROM player_coach WHERE Coach_ID != 2;",
        "question": "Select all columns from player coach when coach id does not equal 2",
        "tables": [
            "club",
            "player",
            "coach",
            "match_result",
            "player_coach"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "player",
            "coach",
            "when",
            "coach",
            "id",
            "does",
            "not",
            "equal",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "player_coach",
            "WHERE",
            "Coach_ID",
            "!=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "player_coach",
            "where",
            "coach_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__player_coach__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__player_coach.coach_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_card_transactions",
        "query": "SELECT * FROM Customers_Cards WHERE customer_id != 14;",
        "question": "Select all columns from customers cards when customer id does not equal 14",
        "tables": [
            "Customers_Cards",
            "Customers",
            "Financial_Transactions",
            "Accounts"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "customers",
            "cards",
            "when",
            "customer",
            "id",
            "does",
            "not",
            "equal",
            "14"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Customers_Cards",
            "WHERE",
            "customer_id",
            "!=",
            "14"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "customers_cards",
            "where",
            "customer_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers_cards__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__customers_cards.customer_id__",
                            false
                        ],
                        null
                    ],
                    14.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_card_transactions",
        "query": "SELECT transaction_date FROM Financial_Transactions WHERE transaction_id != 15;",
        "question": "Select transaction date from financial transactions when transaction id does not equal 15",
        "tables": [
            "Customers_Cards",
            "Customers",
            "Financial_Transactions",
            "Accounts"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "transaction",
            "date",
            "from",
            "financial",
            "transactions",
            "when",
            "transaction",
            "id",
            "does",
            "not",
            "equal",
            "15"
        ],
        "query_toks": [
            "SELECT",
            "transaction_date",
            "FROM",
            "Financial_Transactions",
            "WHERE",
            "transaction_id",
            "!=",
            "15"
        ],
        "query_toks_no_value": [
            "select",
            "transaction_date",
            "from",
            "financial_transactions",
            "where",
            "transaction_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__financial_transactions__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__financial_transactions.transaction_date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__financial_transactions.transaction_id__",
                            false
                        ],
                        null
                    ],
                    15.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_card_transactions",
        "query": "SELECT account_id FROM Accounts WHERE account_name != 767;",
        "question": "Select account id from accounts when account name does not equal 767",
        "tables": [
            "Customers_Cards",
            "Customers",
            "Financial_Transactions",
            "Accounts"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "account",
            "id",
            "from",
            "accounts",
            "when",
            "account",
            "name",
            "does",
            "not",
            "equal",
            "767"
        ],
        "query_toks": [
            "SELECT",
            "account_id",
            "FROM",
            "Accounts",
            "WHERE",
            "account_name",
            "!=",
            "767"
        ],
        "query_toks_no_value": [
            "select",
            "account_id",
            "from",
            "accounts",
            "where",
            "account_name",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__accounts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__accounts.account_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__accounts.account_name__",
                            false
                        ],
                        null
                    ],
                    767.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "performance_attendance",
        "query": "SELECT * FROM member WHERE Member_ID != 10;",
        "question": "Select all columns from member when member id does not equal 10",
        "tables": [
            "member",
            "member_attendance",
            "performance"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "member",
            "when",
            "member",
            "id",
            "does",
            "not",
            "equal",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "member",
            "WHERE",
            "Member_ID",
            "!=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "member",
            "where",
            "member_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__member__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__member.member_id__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "performance_attendance",
        "query": "SELECT Performance_ID FROM member_attendance WHERE Member_ID != 7;",
        "question": "Select performance id from member attendance when member id does not equal 7",
        "tables": [
            "member",
            "member_attendance",
            "performance"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "performance",
            "id",
            "from",
            "member",
            "attendance",
            "when",
            "member",
            "id",
            "does",
            "not",
            "equal",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "Performance_ID",
            "FROM",
            "member_attendance",
            "WHERE",
            "Member_ID",
            "!=",
            "7"
        ],
        "query_toks_no_value": [
            "select",
            "performance_id",
            "from",
            "member_attendance",
            "where",
            "member_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__member_attendance__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__member_attendance.performance_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__member_attendance.member_id__",
                            false
                        ],
                        null
                    ],
                    7.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "performance_attendance",
        "query": "SELECT Location FROM performance WHERE Attendance != 1820;",
        "question": "Select location from performance when attendance does not equal 1820",
        "tables": [
            "member",
            "member_attendance",
            "performance"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "location",
            "from",
            "performance",
            "when",
            "attendance",
            "does",
            "not",
            "equal",
            "1820"
        ],
        "query_toks": [
            "SELECT",
            "Location",
            "FROM",
            "performance",
            "WHERE",
            "Attendance",
            "!=",
            "1820"
        ],
        "query_toks_no_value": [
            "select",
            "location",
            "from",
            "performance",
            "where",
            "attendance",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__performance__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__performance.location__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__performance.attendance__",
                            false
                        ],
                        null
                    ],
                    1820.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "club_1",
        "query": "SELECT Age FROM Student WHERE StuID != 1018;",
        "question": "Select age from student when student id does not equal 1018",
        "tables": [
            "Student",
            "Member_of_club",
            "Club"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "age",
            "from",
            "student",
            "when",
            "student",
            "id",
            "does",
            "not",
            "equal",
            "1018"
        ],
        "query_toks": [
            "SELECT",
            "Age",
            "FROM",
            "Student",
            "WHERE",
            "StuID",
            "!=",
            "1018"
        ],
        "query_toks_no_value": [
            "select",
            "age",
            "from",
            "student",
            "where",
            "stuid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.age__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__student.stuid__",
                            false
                        ],
                        null
                    ],
                    1018.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "club_1",
        "query": "SELECT * FROM Member_of_club WHERE ClubID != 2;",
        "question": "Select all columns from member of club when club id does not equal 2",
        "tables": [
            "Student",
            "Member_of_club",
            "Club"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "member",
            "of",
            "club",
            "when",
            "club",
            "id",
            "does",
            "not",
            "equal",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Member_of_club",
            "WHERE",
            "ClubID",
            "!=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "member_of_club",
            "where",
            "clubid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__member_of_club__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__member_of_club.clubid__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "query": "SELECT * FROM singer WHERE Singer_ID != 1;",
        "question": "Select all columns from singer when singer id does not equal 1",
        "tables": [
            "singer",
            "song"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "singer",
            "when",
            "singer",
            "id",
            "does",
            "not",
            "equal",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "singer",
            "WHERE",
            "Singer_ID",
            "!=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "singer",
            "where",
            "singer_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__singer__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__singer.singer_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "singer",
        "query": "SELECT Highest_Position FROM song WHERE Song_ID != 4;",
        "question": "Select highest position from song when song id does not equal 4",
        "tables": [
            "singer",
            "song"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "highest",
            "position",
            "from",
            "song",
            "when",
            "song",
            "id",
            "does",
            "not",
            "equal",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Highest_Position",
            "FROM",
            "song",
            "WHERE",
            "Song_ID",
            "!=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "highest_position",
            "from",
            "song",
            "where",
            "song_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__song__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__song.highest_position__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__song.song_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "culture_company",
        "query": "SELECT Author_or_Editor FROM book_club WHERE book_club_id != 11;",
        "question": "Select author or editor from book club when book club id does not equal 11",
        "tables": [
            "movie",
            "book_club",
            "culture_company"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "author",
            "or",
            "editor",
            "from",
            "book",
            "club",
            "when",
            "book",
            "club",
            "id",
            "does",
            "not",
            "equal",
            "11"
        ],
        "query_toks": [
            "SELECT",
            "Author_or_Editor",
            "FROM",
            "book_club",
            "WHERE",
            "book_club_id",
            "!=",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "author_or_editor",
            "from",
            "book_club",
            "where",
            "book_club_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__book_club__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__book_club.author_or_editor__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__book_club.book_club_id__",
                            false
                        ],
                        null
                    ],
                    11.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT Document_ID FROM Paragraphs WHERE Paragraph_ID != 765713812;",
        "question": "Select document id from paragraphs when paragraph id does not equal 765713812",
        "tables": [
            "Paragraphs",
            "Templates",
            "Ref_Template_Types",
            "Documents"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "document",
            "id",
            "from",
            "paragraphs",
            "when",
            "paragraph",
            "id",
            "does",
            "not",
            "equal",
            "765713812"
        ],
        "query_toks": [
            "SELECT",
            "Document_ID",
            "FROM",
            "Paragraphs",
            "WHERE",
            "Paragraph_ID",
            "!=",
            "765713812"
        ],
        "query_toks_no_value": [
            "select",
            "document_id",
            "from",
            "paragraphs",
            "where",
            "paragraph_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__paragraphs__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__paragraphs.document_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__paragraphs.paragraph_id__",
                            false
                        ],
                        null
                    ],
                    765713812.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT Other_Details FROM Documents WHERE Document_ID != 80;",
        "question": "Select other details from documents when document id does not equal 80",
        "tables": [
            "Paragraphs",
            "Templates",
            "Ref_Template_Types",
            "Documents"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "other",
            "details",
            "from",
            "documents",
            "when",
            "document",
            "id",
            "does",
            "not",
            "equal",
            "80"
        ],
        "query_toks": [
            "SELECT",
            "Other_Details",
            "FROM",
            "Documents",
            "WHERE",
            "Document_ID",
            "!=",
            "80"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            "from",
            "documents",
            "where",
            "document_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__documents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__documents.other_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__documents.document_id__",
                            false
                        ],
                        null
                    ],
                    80.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "musical",
        "query": "SELECT * FROM actor WHERE age != 17;",
        "question": "Select all columns from actor when age does not equal 17",
        "tables": [
            "actor",
            "musical"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "actor",
            "when",
            "age",
            "does",
            "not",
            "equal",
            "17"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "actor",
            "WHERE",
            "age",
            "!=",
            "17"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "actor",
            "where",
            "age",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__actor__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__actor.age__",
                            false
                        ],
                        null
                    ],
                    17.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "world_1",
        "query": "SELECT * FROM sqlite_sequence WHERE seq != 4079;",
        "question": "Select all columns from sqlite sequence when seq does not equal 4079",
        "tables": [
            "sqlite_sequence",
            "countrylanguage",
            "city",
            "country"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "sqlite",
            "sequence",
            "when",
            "seq",
            "does",
            "not",
            "equal",
            "4079"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "sqlite_sequence",
            "WHERE",
            "seq",
            "!=",
            "4079"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "sqlite_sequence",
            "where",
            "seq",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__sqlite_sequence__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__sqlite_sequence.seq__",
                            false
                        ],
                        null
                    ],
                    4079.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "device",
        "query": "SELECT Quantity FROM stock WHERE Shop_ID != 4;",
        "question": "Select quantity from stock when shop id does not equal 4",
        "tables": [
            "shop",
            "device",
            "stock"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "quantity",
            "from",
            "stock",
            "when",
            "shop",
            "id",
            "does",
            "not",
            "equal",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "Quantity",
            "FROM",
            "stock",
            "WHERE",
            "Shop_ID",
            "!=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "quantity",
            "from",
            "stock",
            "where",
            "shop_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__stock__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__stock.quantity__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__stock.shop_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_grants_for_research",
        "query": "SELECT organisation_id FROM Projects WHERE project_id != 12;",
        "question": "Select organisation id from projects when project id does not equal 12",
        "tables": [
            "Projects",
            "Research_Outcomes",
            "Documents",
            "Document_Types",
            "Organisations",
            "Project_Outcomes",
            "Organisation_Types",
            "Project_Staff",
            "Grants",
            "Tasks",
            "Staff_Roles",
            "Research_Staff"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "organisation",
            "id",
            "from",
            "projects",
            "when",
            "project",
            "id",
            "does",
            "not",
            "equal",
            "12"
        ],
        "query_toks": [
            "SELECT",
            "organisation_id",
            "FROM",
            "Projects",
            "WHERE",
            "project_id",
            "!=",
            "12"
        ],
        "query_toks_no_value": [
            "select",
            "organisation_id",
            "from",
            "projects",
            "where",
            "project_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__projects__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__projects.organisation_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__projects.project_id__",
                            false
                        ],
                        null
                    ],
                    12.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_grants_for_research",
        "query": "SELECT * FROM Tasks WHERE task_id != 15;",
        "question": "Select all columns from tasks when task id does not equal 15",
        "tables": [
            "Projects",
            "Research_Outcomes",
            "Documents",
            "Document_Types",
            "Organisations",
            "Project_Outcomes",
            "Organisation_Types",
            "Project_Staff",
            "Grants",
            "Tasks",
            "Staff_Roles",
            "Research_Staff"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "tasks",
            "when",
            "task",
            "id",
            "does",
            "not",
            "equal",
            "15"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Tasks",
            "WHERE",
            "task_id",
            "!=",
            "15"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "tasks",
            "where",
            "task_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__tasks__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__tasks.task_id__",
                            false
                        ],
                        null
                    ],
                    15.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_grants_for_research",
        "query": "SELECT staff_details FROM Research_Staff WHERE staff_id != 15;",
        "question": "Select staff details from research staff when staff id does not equal 15",
        "tables": [
            "Projects",
            "Research_Outcomes",
            "Documents",
            "Document_Types",
            "Organisations",
            "Project_Outcomes",
            "Organisation_Types",
            "Project_Staff",
            "Grants",
            "Tasks",
            "Staff_Roles",
            "Research_Staff"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "staff",
            "details",
            "from",
            "research",
            "staff",
            "when",
            "staff",
            "id",
            "does",
            "not",
            "equal",
            "15"
        ],
        "query_toks": [
            "SELECT",
            "staff_details",
            "FROM",
            "Research_Staff",
            "WHERE",
            "staff_id",
            "!=",
            "15"
        ],
        "query_toks_no_value": [
            "select",
            "staff_details",
            "from",
            "research_staff",
            "where",
            "staff_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__research_staff__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__research_staff.staff_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__research_staff.staff_id__",
                            false
                        ],
                        null
                    ],
                    15.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "SELECT * FROM employee WHERE Employee_ID != 3;",
        "question": "Select all columns from employee when employee id does not equal 3",
        "tables": [
            "hiring",
            "shop",
            "evaluation",
            "employee"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "employee",
            "when",
            "employee",
            "id",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "employee",
            "WHERE",
            "Employee_ID",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "employee",
            "where",
            "employee_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__employee__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__employee.employee_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "movie_1",
        "query": "SELECT mID FROM Rating WHERE stars != 2;",
        "question": "Select movie id from rating when rating stars does not equal 2",
        "tables": [
            "Rating",
            "Movie",
            "Reviewer"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "movie",
            "id",
            "from",
            "rating",
            "when",
            "rating",
            "stars",
            "does",
            "not",
            "equal",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "mID",
            "FROM",
            "Rating",
            "WHERE",
            "stars",
            "!=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "mid",
            "from",
            "rating",
            "where",
            "stars",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__rating__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__rating.mid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__rating.stars__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "query": "SELECT grade FROM Highschooler WHERE ID != 1510;",
        "question": "Select grade from high schooler when id does not equal 1510",
        "tables": [
            "Highschooler",
            "Likes",
            "Friend"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "grade",
            "from",
            "high",
            "schooler",
            "when",
            "id",
            "does",
            "not",
            "equal",
            "1510"
        ],
        "query_toks": [
            "SELECT",
            "grade",
            "FROM",
            "Highschooler",
            "WHERE",
            "ID",
            "!=",
            "1510"
        ],
        "query_toks_no_value": [
            "select",
            "grade",
            "from",
            "highschooler",
            "where",
            "id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__highschooler__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__highschooler.grade__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__highschooler.id__",
                            false
                        ],
                        null
                    ],
                    1510.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "query": "SELECT * FROM Likes WHERE student_id != 1689;",
        "question": "Select all columns from likes when student id does not equal 1689",
        "tables": [
            "Highschooler",
            "Likes",
            "Friend"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "likes",
            "when",
            "student",
            "id",
            "does",
            "not",
            "equal",
            "1689"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Likes",
            "WHERE",
            "student_id",
            "!=",
            "1689"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "likes",
            "where",
            "student_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__likes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__likes.student_id__",
                            false
                        ],
                        null
                    ],
                    1689.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "network_1",
        "query": "SELECT student_id FROM Friend WHERE friend_id != 1101;",
        "question": "Select student id from friend when friend id does not equal 1101",
        "tables": [
            "Highschooler",
            "Likes",
            "Friend"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "student",
            "id",
            "from",
            "friend",
            "when",
            "friend",
            "id",
            "does",
            "not",
            "equal",
            "1101"
        ],
        "query_toks": [
            "SELECT",
            "student_id",
            "FROM",
            "Friend",
            "WHERE",
            "friend_id",
            "!=",
            "1101"
        ],
        "query_toks_no_value": [
            "select",
            "student_id",
            "from",
            "friend",
            "where",
            "friend_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__friend__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__friend.student_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__friend.friend_id__",
                            false
                        ],
                        null
                    ],
                    1101.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "program_share",
        "query": "SELECT * FROM broadcast WHERE Program_ID != 1;",
        "question": "Select all columns from broadcast when program id does not equal 1",
        "tables": [
            "program",
            "broadcast",
            "channel",
            "broadcast_share"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "broadcast",
            "when",
            "program",
            "id",
            "does",
            "not",
            "equal",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "broadcast",
            "WHERE",
            "Program_ID",
            "!=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "broadcast",
            "where",
            "program_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__broadcast__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__broadcast.program_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "program_share",
        "query": "SELECT * FROM broadcast_share WHERE Program_ID != 3;",
        "question": "Select all columns from broadcast share when program id does not equal 3",
        "tables": [
            "program",
            "broadcast",
            "channel",
            "broadcast_share"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "broadcast",
            "share",
            "when",
            "program",
            "id",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "broadcast_share",
            "WHERE",
            "Program_ID",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "broadcast_share",
            "where",
            "program_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__broadcast_share__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__broadcast_share.program_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "aircraft",
        "query": "SELECT Name FROM pilot WHERE Pilot_Id != 1;",
        "question": "Select name from pilot when pilot id does not equal 1",
        "tables": [
            "airport",
            "match",
            "pilot",
            "airport_aircraft",
            "aircraft"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "name",
            "from",
            "pilot",
            "when",
            "pilot",
            "id",
            "does",
            "not",
            "equal",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "pilot",
            "WHERE",
            "Pilot_Id",
            "!=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "pilot",
            "where",
            "pilot_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__pilot__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__pilot.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__pilot.pilot_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "aircraft",
        "query": "SELECT ID FROM airport_aircraft WHERE Aircraft_ID != 2;",
        "question": "Select id from airport aircraft when aircraft id does not equal 2",
        "tables": [
            "airport",
            "match",
            "pilot",
            "airport_aircraft",
            "aircraft"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "id",
            "from",
            "airport",
            "aircraft",
            "when",
            "aircraft",
            "id",
            "does",
            "not",
            "equal",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "ID",
            "FROM",
            "airport_aircraft",
            "WHERE",
            "Aircraft_ID",
            "!=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "id",
            "from",
            "airport_aircraft",
            "where",
            "aircraft_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__airport_aircraft__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__airport_aircraft.id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__airport_aircraft.aircraft_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "aircraft",
        "query": "SELECT * FROM aircraft WHERE Aircraft_ID != 4;",
        "question": "Select all columns from aircraft when aircraft id does not equal 4",
        "tables": [
            "airport",
            "match",
            "pilot",
            "airport_aircraft",
            "aircraft"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "aircraft",
            "when",
            "aircraft",
            "id",
            "does",
            "not",
            "equal",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "aircraft",
            "WHERE",
            "Aircraft_ID",
            "!=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "aircraft",
            "where",
            "aircraft_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__aircraft__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__aircraft.aircraft_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "restaurant_1",
        "query": "SELECT ResTypeName FROM Restaurant_Type WHERE ResTypeID != 1;",
        "question": "Select restaurant type name from restaurant type when restaurant type id does not equal 1",
        "tables": [
            "Restaurant_Type",
            "Student",
            "Type_Of_Restaurant",
            "Visits_Restaurant",
            "Restaurant"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "restaurant",
            "type",
            "name",
            "from",
            "restaurant",
            "type",
            "when",
            "restaurant",
            "type",
            "id",
            "does",
            "not",
            "equal",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "ResTypeName",
            "FROM",
            "Restaurant_Type",
            "WHERE",
            "ResTypeID",
            "!=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "restypename",
            "from",
            "restaurant_type",
            "where",
            "restypeid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__restaurant_type__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__restaurant_type.restypename__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__restaurant_type.restypeid__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "restaurant_1",
        "query": "SELECT city_code FROM Student WHERE Advisor != 8772;",
        "question": "Select city code from student when advisor does not equal 8772",
        "tables": [
            "Restaurant_Type",
            "Student",
            "Type_Of_Restaurant",
            "Visits_Restaurant",
            "Restaurant"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "city",
            "code",
            "from",
            "student",
            "when",
            "advisor",
            "does",
            "not",
            "equal",
            "8772"
        ],
        "query_toks": [
            "SELECT",
            "city_code",
            "FROM",
            "Student",
            "WHERE",
            "Advisor",
            "!=",
            "8772"
        ],
        "query_toks_no_value": [
            "select",
            "city_code",
            "from",
            "student",
            "where",
            "advisor",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.city_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__student.advisor__",
                            false
                        ],
                        null
                    ],
                    8772.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "restaurant_1",
        "query": "SELECT ResTypeID FROM Type_Of_Restaurant WHERE ResID != 1;",
        "question": "Select restaurant type id from type of restaurant when restaurant id does not equal 1",
        "tables": [
            "Restaurant_Type",
            "Student",
            "Type_Of_Restaurant",
            "Visits_Restaurant",
            "Restaurant"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "restaurant",
            "type",
            "id",
            "from",
            "type",
            "of",
            "restaurant",
            "when",
            "restaurant",
            "id",
            "does",
            "not",
            "equal",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "ResTypeID",
            "FROM",
            "Type_Of_Restaurant",
            "WHERE",
            "ResID",
            "!=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "restypeid",
            "from",
            "type_of_restaurant",
            "where",
            "resid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__type_of_restaurant__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__type_of_restaurant.restypeid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__type_of_restaurant.resid__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_invoices",
        "query": "SELECT * FROM Order_Items WHERE product_quantity != 5;",
        "question": "Select all columns from order items when product quantity does not equal 5",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Accounts",
            "Customers",
            "Product_Categories",
            "Invoice_Line_Items",
            "Financial_Transactions",
            "Orders"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "order",
            "items",
            "when",
            "product",
            "quantity",
            "does",
            "not",
            "equal",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Order_Items",
            "WHERE",
            "product_quantity",
            "!=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "order_items",
            "where",
            "product_quantity",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__order_items__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__order_items.product_quantity__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_invoices",
        "query": "SELECT invoice_number FROM Invoices WHERE order_id != 12;",
        "question": "Select invoice number from invoices when order id does not equal 12",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Accounts",
            "Customers",
            "Product_Categories",
            "Invoice_Line_Items",
            "Financial_Transactions",
            "Orders"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "invoice",
            "number",
            "from",
            "invoices",
            "when",
            "order",
            "id",
            "does",
            "not",
            "equal",
            "12"
        ],
        "query_toks": [
            "SELECT",
            "invoice_number",
            "FROM",
            "Invoices",
            "WHERE",
            "order_id",
            "!=",
            "12"
        ],
        "query_toks_no_value": [
            "select",
            "invoice_number",
            "from",
            "invoices",
            "where",
            "order_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__invoices__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__invoices.invoice_number__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__invoices.order_id__",
                            false
                        ],
                        null
                    ],
                    12.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_invoices",
        "query": "SELECT * FROM Accounts WHERE account_name != 272;",
        "question": "Select all columns from accounts when account name does not equal 272",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Accounts",
            "Customers",
            "Product_Categories",
            "Invoice_Line_Items",
            "Financial_Transactions",
            "Orders"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "accounts",
            "when",
            "account",
            "name",
            "does",
            "not",
            "equal",
            "272"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Accounts",
            "WHERE",
            "account_name",
            "!=",
            "272"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "accounts",
            "where",
            "account_name",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__accounts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__accounts.account_name__",
                            false
                        ],
                        null
                    ],
                    272.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_invoices",
        "query": "SELECT * FROM Financial_Transactions WHERE invoice_number != 5;",
        "question": "Select all columns from financial transactions when invoice number does not equal 5",
        "tables": [
            "Products",
            "Order_Items",
            "Invoices",
            "Accounts",
            "Customers",
            "Product_Categories",
            "Invoice_Line_Items",
            "Financial_Transactions",
            "Orders"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "financial",
            "transactions",
            "when",
            "invoice",
            "number",
            "does",
            "not",
            "equal",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Financial_Transactions",
            "WHERE",
            "invoice_number",
            "!=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "financial_transactions",
            "where",
            "invoice_number",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__financial_transactions__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__financial_transactions.invoice_number__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_and_eClaims",
        "query": "SELECT * FROM Claims_Processing WHERE Claim_Stage_ID != 1;",
        "question": "Select all columns from claims processing when claim stage id does not equal 1",
        "tables": [
            "Staff",
            "Claim_Headers",
            "Claims_Processing",
            "Policies",
            "Customers",
            "Claims_Documents",
            "Claims_Processing_Stages"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "claims",
            "processing",
            "when",
            "claim",
            "stage",
            "id",
            "does",
            "not",
            "equal",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Claims_Processing",
            "WHERE",
            "Claim_Stage_ID",
            "!=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "claims_processing",
            "where",
            "claim_stage_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__claims_processing__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__claims_processing.claim_stage_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_and_eClaims",
        "query": "SELECT Customer_ID FROM Policies WHERE Policy_ID != 626;",
        "question": "Select customer id from policies when policy id does not equal 626",
        "tables": [
            "Staff",
            "Claim_Headers",
            "Claims_Processing",
            "Policies",
            "Customers",
            "Claims_Documents",
            "Claims_Processing_Stages"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "customer",
            "id",
            "from",
            "policies",
            "when",
            "policy",
            "id",
            "does",
            "not",
            "equal",
            "626"
        ],
        "query_toks": [
            "SELECT",
            "Customer_ID",
            "FROM",
            "Policies",
            "WHERE",
            "Policy_ID",
            "!=",
            "626"
        ],
        "query_toks_no_value": [
            "select",
            "customer_id",
            "from",
            "policies",
            "where",
            "policy_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__policies__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__policies.customer_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__policies.policy_id__",
                            false
                        ],
                        null
                    ],
                    626.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_and_eClaims",
        "query": "SELECT Customer_Details FROM Customers WHERE Customer_ID != 252;",
        "question": "Select customer details from customers when customer id does not equal 252",
        "tables": [
            "Staff",
            "Claim_Headers",
            "Claims_Processing",
            "Policies",
            "Customers",
            "Claims_Documents",
            "Claims_Processing_Stages"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "customer",
            "details",
            "from",
            "customers",
            "when",
            "customer",
            "id",
            "does",
            "not",
            "equal",
            "252"
        ],
        "query_toks": [
            "SELECT",
            "Customer_Details",
            "FROM",
            "Customers",
            "WHERE",
            "Customer_ID",
            "!=",
            "252"
        ],
        "query_toks_no_value": [
            "select",
            "customer_details",
            "from",
            "customers",
            "where",
            "customer_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__customers.customer_id__",
                            false
                        ],
                        null
                    ],
                    252.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_1",
        "query": "SELECT STU_DOB FROM STUDENT WHERE STU_TRANSFER != 1;",
        "question": "Select student date of birth from student when student transfer does not equal 1",
        "tables": [
            "DEPARTMENT",
            "STUDENT",
            "PROFESSOR",
            "CLASS",
            "EMPLOYEE",
            "ENROLL",
            "COURSE"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "student",
            "date",
            "of",
            "birth",
            "from",
            "student",
            "when",
            "student",
            "transfer",
            "does",
            "not",
            "equal",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "STU_DOB",
            "FROM",
            "STUDENT",
            "WHERE",
            "STU_TRANSFER",
            "!=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "stu_dob",
            "from",
            "student",
            "where",
            "stu_transfer",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.stu_dob__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__student.stu_transfer__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_mdm",
        "query": "SELECT cmi_details FROM Customer_Master_Index WHERE master_customer_id != 9;",
        "question": "Select cmi details from customer master index when master customer id does not equal 9",
        "tables": [
            "Customer_Master_Index",
            "Parking_Fines",
            "Benefits_Overpayments",
            "CMI_Cross_References",
            "Council_Tax",
            "Rent_Arrears",
            "Electoral_Register",
            "Business_Rates"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "cmi",
            "details",
            "from",
            "customer",
            "master",
            "index",
            "when",
            "master",
            "customer",
            "id",
            "does",
            "not",
            "equal",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "cmi_details",
            "FROM",
            "Customer_Master_Index",
            "WHERE",
            "master_customer_id",
            "!=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "cmi_details",
            "from",
            "customer_master_index",
            "where",
            "master_customer_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_master_index__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_master_index.cmi_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__customer_master_index.master_customer_id__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_mdm",
        "query": "SELECT council_tax_id FROM Parking_Fines WHERE cmi_cross_ref_id != 81;",
        "question": "Select council tax id from parking fines when cmi cross reference id does not equal 81",
        "tables": [
            "Customer_Master_Index",
            "Parking_Fines",
            "Benefits_Overpayments",
            "CMI_Cross_References",
            "Council_Tax",
            "Rent_Arrears",
            "Electoral_Register",
            "Business_Rates"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "council",
            "tax",
            "id",
            "from",
            "parking",
            "fines",
            "when",
            "cmi",
            "cross",
            "reference",
            "id",
            "does",
            "not",
            "equal",
            "81"
        ],
        "query_toks": [
            "SELECT",
            "council_tax_id",
            "FROM",
            "Parking_Fines",
            "WHERE",
            "cmi_cross_ref_id",
            "!=",
            "81"
        ],
        "query_toks_no_value": [
            "select",
            "council_tax_id",
            "from",
            "parking_fines",
            "where",
            "cmi_cross_ref_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__parking_fines__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__parking_fines.council_tax_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__parking_fines.cmi_cross_ref_id__",
                            false
                        ],
                        null
                    ],
                    81.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_mdm",
        "query": "SELECT cmi_cross_ref_id FROM Benefits_Overpayments WHERE council_tax_id != 8;",
        "question": "Select cmi cross ref id from benefits overpayments when council tax id does not equal 8",
        "tables": [
            "Customer_Master_Index",
            "Parking_Fines",
            "Benefits_Overpayments",
            "CMI_Cross_References",
            "Council_Tax",
            "Rent_Arrears",
            "Electoral_Register",
            "Business_Rates"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "cmi",
            "cross",
            "ref",
            "id",
            "from",
            "benefits",
            "overpayments",
            "when",
            "council",
            "tax",
            "id",
            "does",
            "not",
            "equal",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "cmi_cross_ref_id",
            "FROM",
            "Benefits_Overpayments",
            "WHERE",
            "council_tax_id",
            "!=",
            "8"
        ],
        "query_toks_no_value": [
            "select",
            "cmi_cross_ref_id",
            "from",
            "benefits_overpayments",
            "where",
            "council_tax_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__benefits_overpayments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__benefits_overpayments.cmi_cross_ref_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__benefits_overpayments.council_tax_id__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_mdm",
        "query": "SELECT source_system_code FROM CMI_Cross_References WHERE master_customer_id != 5;",
        "question": "Select source system code from cmi cross references when master customer id does not equal 5",
        "tables": [
            "Customer_Master_Index",
            "Parking_Fines",
            "Benefits_Overpayments",
            "CMI_Cross_References",
            "Council_Tax",
            "Rent_Arrears",
            "Electoral_Register",
            "Business_Rates"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "source",
            "system",
            "code",
            "from",
            "cmi",
            "cross",
            "references",
            "when",
            "master",
            "customer",
            "id",
            "does",
            "not",
            "equal",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "source_system_code",
            "FROM",
            "CMI_Cross_References",
            "WHERE",
            "master_customer_id",
            "!=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "source_system_code",
            "from",
            "cmi_cross_references",
            "where",
            "master_customer_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__cmi_cross_references__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__cmi_cross_references.source_system_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__cmi_cross_references.master_customer_id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_mdm",
        "query": "SELECT * FROM Council_Tax WHERE cmi_cross_ref_id != 105;",
        "question": "Select all columns from council tax when cmi cross reference id does not equal 105",
        "tables": [
            "Customer_Master_Index",
            "Parking_Fines",
            "Benefits_Overpayments",
            "CMI_Cross_References",
            "Council_Tax",
            "Rent_Arrears",
            "Electoral_Register",
            "Business_Rates"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "council",
            "tax",
            "when",
            "cmi",
            "cross",
            "reference",
            "id",
            "does",
            "not",
            "equal",
            "105"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Council_Tax",
            "WHERE",
            "cmi_cross_ref_id",
            "!=",
            "105"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "council_tax",
            "where",
            "cmi_cross_ref_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__council_tax__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__council_tax.cmi_cross_ref_id__",
                            false
                        ],
                        null
                    ],
                    105.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_mdm",
        "query": "SELECT * FROM Rent_Arrears WHERE council_tax_id != 7;",
        "question": "Select all columns from rent arrears when council tax id does not equal 7",
        "tables": [
            "Customer_Master_Index",
            "Parking_Fines",
            "Benefits_Overpayments",
            "CMI_Cross_References",
            "Council_Tax",
            "Rent_Arrears",
            "Electoral_Register",
            "Business_Rates"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "rent",
            "arrears",
            "when",
            "council",
            "tax",
            "id",
            "does",
            "not",
            "equal",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Rent_Arrears",
            "WHERE",
            "council_tax_id",
            "!=",
            "7"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "rent_arrears",
            "where",
            "council_tax_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__rent_arrears__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__rent_arrears.council_tax_id__",
                            false
                        ],
                        null
                    ],
                    7.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_mdm",
        "query": "SELECT electoral_register_id FROM Electoral_Register WHERE cmi_cross_ref_id != 65;",
        "question": "Select electoral register id from electoral register when cmi cross reference id does not equal 65",
        "tables": [
            "Customer_Master_Index",
            "Parking_Fines",
            "Benefits_Overpayments",
            "CMI_Cross_References",
            "Council_Tax",
            "Rent_Arrears",
            "Electoral_Register",
            "Business_Rates"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "electoral",
            "register",
            "id",
            "from",
            "electoral",
            "register",
            "when",
            "cmi",
            "cross",
            "reference",
            "id",
            "does",
            "not",
            "equal",
            "65"
        ],
        "query_toks": [
            "SELECT",
            "electoral_register_id",
            "FROM",
            "Electoral_Register",
            "WHERE",
            "cmi_cross_ref_id",
            "!=",
            "65"
        ],
        "query_toks_no_value": [
            "select",
            "electoral_register_id",
            "from",
            "electoral_register",
            "where",
            "cmi_cross_ref_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__electoral_register__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__electoral_register.electoral_register_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__electoral_register.cmi_cross_ref_id__",
                            false
                        ],
                        null
                    ],
                    65.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "local_govt_mdm",
        "query": "SELECT cmi_cross_ref_id FROM Business_Rates WHERE business_rates_id != 8;",
        "question": "Select cmi cross reference id from business rates when business rates id does not equal 8",
        "tables": [
            "Customer_Master_Index",
            "Parking_Fines",
            "Benefits_Overpayments",
            "CMI_Cross_References",
            "Council_Tax",
            "Rent_Arrears",
            "Electoral_Register",
            "Business_Rates"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "cmi",
            "cross",
            "reference",
            "id",
            "from",
            "business",
            "rates",
            "when",
            "business",
            "rates",
            "id",
            "does",
            "not",
            "equal",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "cmi_cross_ref_id",
            "FROM",
            "Business_Rates",
            "WHERE",
            "business_rates_id",
            "!=",
            "8"
        ],
        "query_toks_no_value": [
            "select",
            "cmi_cross_ref_id",
            "from",
            "business_rates",
            "where",
            "business_rates_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__business_rates__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__business_rates.cmi_cross_ref_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__business_rates.business_rates_id__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "book_2",
        "query": "SELECT * FROM book WHERE Book_ID != 8;",
        "question": "Select all columns from book when book id does not equal 8",
        "tables": [
            "book",
            "publication"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "book",
            "when",
            "book",
            "id",
            "does",
            "not",
            "equal",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "book",
            "WHERE",
            "Book_ID",
            "!=",
            "8"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "book",
            "where",
            "book_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__book__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__book.book_id__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hr_1",
        "query": "SELECT COUNTRY_ID FROM countries WHERE REGION_ID != 1;",
        "question": "Select country id from countries when region id does not equal 1",
        "tables": [
            "countries",
            "regions",
            "locations",
            "jobs",
            "job_history",
            "departments",
            "employees"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "country",
            "id",
            "from",
            "countries",
            "when",
            "region",
            "id",
            "does",
            "not",
            "equal",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "COUNTRY_I",
            "(",
            "COUNTRY_I",
            ")",
            "FROM",
            "countrie",
            "(",
            "countrie",
            ")",
            "WHERE",
            "REGION_ID",
            "!=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "country_i",
            "(",
            "country_i",
            ")",
            "from",
            "countrie",
            "(",
            "countrie",
            ")",
            "where",
            "region_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__countries__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__countries.country_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__countries.region_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hr_1",
        "query": "SELECT * FROM regions WHERE REGION_ID != 2;",
        "question": "Select all columns from regions when region id does not equal 2",
        "tables": [
            "countries",
            "regions",
            "locations",
            "jobs",
            "job_history",
            "departments",
            "employees"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "regions",
            "when",
            "region",
            "id",
            "does",
            "not",
            "equal",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "regions",
            "WHERE",
            "REGION_ID",
            "!=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "regions",
            "where",
            "region_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__regions__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__regions.region_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "hr_1",
        "query": "SELECT LOCATION_ID FROM departments WHERE MANAGER_ID != 114;",
        "question": "Select location id from departments when manager id does not equal 114",
        "tables": [
            "countries",
            "regions",
            "locations",
            "jobs",
            "job_history",
            "departments",
            "employees"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "location",
            "id",
            "from",
            "departments",
            "when",
            "manager",
            "id",
            "does",
            "not",
            "equal",
            "114"
        ],
        "query_toks": [
            "SELECT",
            "LOCATION_ID",
            "FROM",
            "departments",
            "WHERE",
            "MANAGER_ID",
            "!=",
            "114"
        ],
        "query_toks_no_value": [
            "select",
            "location_id",
            "from",
            "departments",
            "where",
            "manager_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__departments__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__departments.location_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__departments.manager_id__",
                            false
                        ],
                        null
                    ],
                    114.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_1",
        "query": "SELECT * FROM Player_Attributes WHERE penalties != 72;",
        "question": "Select all columns from player attributes when penalties does not equal 72",
        "tables": [
            "sqlite_sequence",
            "Player_Attributes",
            "League",
            "Team_Attributes",
            "Player",
            "Team",
            "Country"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "player",
            "attributes",
            "when",
            "penalties",
            "does",
            "not",
            "equal",
            "72"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Player_Attributes",
            "WHERE",
            "penalties",
            "!=",
            "72"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "player_attributes",
            "where",
            "penalties",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__player_attributes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__player_attributes.penalties__",
                            false
                        ],
                        null
                    ],
                    72.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_1",
        "query": "SELECT * FROM League WHERE country_id != 15722;",
        "question": "Select all columns from league when country id does not equal 15722",
        "tables": [
            "sqlite_sequence",
            "Player_Attributes",
            "League",
            "Team_Attributes",
            "Player",
            "Team",
            "Country"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "league",
            "when",
            "country",
            "id",
            "does",
            "not",
            "equal",
            "15722"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "League",
            "WHERE",
            "country_i",
            "(",
            "country_i",
            ")",
            "!=",
            "15722"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "league",
            "where",
            "country_i",
            "(",
            "country_i",
            ")",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__league__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__league.country_id__",
                            false
                        ],
                        null
                    ],
                    15722.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_1",
        "query": "SELECT * FROM Team_Attributes WHERE defenceTeamWidth != 42;",
        "question": "Select all columns from team attributes when defence team width does not equal 42",
        "tables": [
            "sqlite_sequence",
            "Player_Attributes",
            "League",
            "Team_Attributes",
            "Player",
            "Team",
            "Country"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "team",
            "attributes",
            "when",
            "defence",
            "team",
            "width",
            "does",
            "not",
            "equal",
            "42"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Team_Attributes",
            "WHERE",
            "defenceTeamWidth",
            "!=",
            "42"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "team_attributes",
            "where",
            "defenceteamwidth",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__team_attributes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__team_attributes.defenceteamwidth__",
                            false
                        ],
                        null
                    ],
                    42.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_1",
        "query": "SELECT team_short_name FROM Team WHERE id != 43040;",
        "question": "Select team short name from team when id does not equal 43040",
        "tables": [
            "sqlite_sequence",
            "Player_Attributes",
            "League",
            "Team_Attributes",
            "Player",
            "Team",
            "Country"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "team",
            "short",
            "name",
            "from",
            "team",
            "when",
            "id",
            "does",
            "not",
            "equal",
            "43040"
        ],
        "query_toks": [
            "SELECT",
            "team_short_name",
            "FROM",
            "Team",
            "WHERE",
            "id",
            "!=",
            "43040"
        ],
        "query_toks_no_value": [
            "select",
            "team_short_name",
            "from",
            "team",
            "where",
            "id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__team__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__team.team_short_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__team.id__",
                            false
                        ],
                        null
                    ],
                    43040.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_1",
        "query": "SELECT * FROM Country WHERE id != 15722;",
        "question": "Select all columns from country when id does not equal 15722",
        "tables": [
            "sqlite_sequence",
            "Player_Attributes",
            "League",
            "Team_Attributes",
            "Player",
            "Team",
            "Country"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "country",
            "when",
            "id",
            "does",
            "not",
            "equal",
            "15722"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Countr",
            "(",
            "Countr",
            ")",
            "WHERE",
            "id",
            "!=",
            "15722"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "countr",
            "(",
            "countr",
            ")",
            "where",
            "id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__country__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__country.id__",
                            false
                        ],
                        null
                    ],
                    15722.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT city FROM city WHERE city_id != 277;",
        "question": "Select city from city when city id does not equal 277",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "city",
            "from",
            "city",
            "when",
            "city",
            "id",
            "does",
            "not",
            "equal",
            "277"
        ],
        "query_toks": [
            "SELECT",
            "city",
            "FROM",
            "city",
            "WHERE",
            "city_id",
            "!=",
            "277"
        ],
        "query_toks_no_value": [
            "select",
            "city",
            "from",
            "city",
            "where",
            "city_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__city__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__city.city__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__city.city_id__",
                            false
                        ],
                        null
                    ],
                    277.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT store_id FROM inventory WHERE film_id != 911;",
        "question": "Select store id from inventory when film id does not equal 911",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "store",
            "id",
            "from",
            "inventory",
            "when",
            "film",
            "id",
            "does",
            "not",
            "equal",
            "911"
        ],
        "query_toks": [
            "SELECT",
            "store_id",
            "FROM",
            "inventory",
            "WHERE",
            "film_id",
            "!=",
            "911"
        ],
        "query_toks_no_value": [
            "select",
            "store_id",
            "from",
            "inventory",
            "where",
            "film_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__inventory__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__inventory.store_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__inventory.film_id__",
                            false
                        ],
                        null
                    ],
                    911.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT * FROM film_category WHERE category_id != 9;",
        "question": "Select all columns from film category when category id does not equal 9",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "film",
            "category",
            "when",
            "category",
            "id",
            "does",
            "not",
            "equal",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "film_category",
            "WHERE",
            "category_id",
            "!=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "film_category",
            "where",
            "category_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__film_category__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__film_category.category_id__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT * FROM film_actor WHERE film_id != 335;",
        "question": "Select all columns from film actor when film id does not equal 335",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "film",
            "actor",
            "when",
            "film",
            "id",
            "does",
            "not",
            "equal",
            "335"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "film_actor",
            "WHERE",
            "film_id",
            "!=",
            "335"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "film_actor",
            "where",
            "film_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__film_actor__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__film_actor.film_id__",
                            false
                        ],
                        null
                    ],
                    335.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT * FROM payment WHERE rental_id != 12827;",
        "question": "Select all columns from payment when rental id does not equal 12827",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "payment",
            "when",
            "rental",
            "id",
            "does",
            "not",
            "equal",
            "12827"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "payment",
            "WHERE",
            "rental_id",
            "!=",
            "12827"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "payment",
            "where",
            "rental_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__payment__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__payment.rental_id__",
                            false
                        ],
                        null
                    ],
                    12827.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT * FROM category WHERE category_id != 6;",
        "question": "Select all columns from category when category id does not equal 6",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "category",
            "when",
            "category",
            "id",
            "does",
            "not",
            "equal",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "category",
            "WHERE",
            "category_id",
            "!=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "category",
            "where",
            "category_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__category__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__category.category_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT last_update FROM actor WHERE actor_id != 95;",
        "question": "Select last update from actor when actor id does not equal 95",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "last",
            "update",
            "from",
            "actor",
            "when",
            "actor",
            "id",
            "does",
            "not",
            "equal",
            "95"
        ],
        "query_toks": [
            "SELECT",
            "last_update",
            "FROM",
            "actor",
            "WHERE",
            "actor_id",
            "!=",
            "95"
        ],
        "query_toks_no_value": [
            "select",
            "last_update",
            "from",
            "actor",
            "where",
            "actor_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__actor__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__actor.last_update__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__actor.actor_id__",
                            false
                        ],
                        null
                    ],
                    95.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "sakila_1",
        "query": "SELECT last_update FROM rental WHERE rental_id != 6580;",
        "question": "Select last update from rental when rental id does not equal 6580",
        "tables": [
            "staff",
            "film_text",
            "store",
            "city",
            "inventory",
            "film",
            "film_category",
            "language",
            "address",
            "film_actor",
            "payment",
            "category",
            "actor",
            "rental",
            "customer",
            "country"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "last",
            "update",
            "from",
            "rental",
            "when",
            "rental",
            "id",
            "does",
            "not",
            "equal",
            "6580"
        ],
        "query_toks": [
            "SELECT",
            "last_update",
            "FROM",
            "rental",
            "WHERE",
            "rental_id",
            "!=",
            "6580"
        ],
        "query_toks_no_value": [
            "select",
            "last_update",
            "from",
            "rental",
            "where",
            "rental_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__rental__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__rental.last_update__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__rental.rental_id__",
                            false
                        ],
                        null
                    ],
                    6580.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_3",
        "query": "SELECT StuID FROM Minor_in WHERE DNO != 540;",
        "question": "Select student id from minor in when department number does not equal 540",
        "tables": [
            "Minor_in",
            "Department",
            "Student",
            "Enrolled_in",
            "Gradeconversion",
            "Member_of",
            "Faculty",
            "Course"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "student",
            "id",
            "from",
            "minor",
            "in",
            "when",
            "department",
            "number",
            "does",
            "not",
            "equal",
            "540"
        ],
        "query_toks": [
            "SELECT",
            "StuID",
            "FROM",
            "Minor_i",
            "(",
            "Minor_i",
            ")",
            "WHERE",
            "DNO",
            "!=",
            "540"
        ],
        "query_toks_no_value": [
            "select",
            "stuid",
            "from",
            "minor_i",
            "(",
            "minor_i",
            ")",
            "where",
            "dno",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__minor_in__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__minor_in.stuid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__minor_in.dno__",
                            false
                        ],
                        null
                    ],
                    540.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_3",
        "query": "SELECT DName FROM Department WHERE DNO != 100;",
        "question": "Select department name from department when department number does not equal 100",
        "tables": [
            "Minor_in",
            "Department",
            "Student",
            "Enrolled_in",
            "Gradeconversion",
            "Member_of",
            "Faculty",
            "Course"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "department",
            "name",
            "from",
            "department",
            "when",
            "department",
            "number",
            "does",
            "not",
            "equal",
            "100"
        ],
        "query_toks": [
            "SELECT",
            "DName",
            "FROM",
            "Department",
            "WHERE",
            "DNO",
            "!=",
            "100"
        ],
        "query_toks_no_value": [
            "select",
            "dname",
            "from",
            "department",
            "where",
            "dno",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__department__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__department.dname__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__department.dno__",
                            false
                        ],
                        null
                    ],
                    100.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_3",
        "query": "SELECT Major FROM Student WHERE StuID != 1027;",
        "question": "Select major from student when student id does not equal 1027",
        "tables": [
            "Minor_in",
            "Department",
            "Student",
            "Enrolled_in",
            "Gradeconversion",
            "Member_of",
            "Faculty",
            "Course"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "major",
            "from",
            "student",
            "when",
            "student",
            "id",
            "does",
            "not",
            "equal",
            "1027"
        ],
        "query_toks": [
            "SELECT",
            "Major",
            "FROM",
            "Student",
            "WHERE",
            "StuID",
            "!=",
            "1027"
        ],
        "query_toks_no_value": [
            "select",
            "major",
            "from",
            "student",
            "where",
            "stuid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.major__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__student.stuid__",
                            false
                        ],
                        null
                    ],
                    1027.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_3",
        "query": "SELECT * FROM Enrolled_in WHERE StuID != 1023;",
        "question": "Select all columns from enrolled in when student id does not equal 1023",
        "tables": [
            "Minor_in",
            "Department",
            "Student",
            "Enrolled_in",
            "Gradeconversion",
            "Member_of",
            "Faculty",
            "Course"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "enrolled",
            "in",
            "when",
            "student",
            "id",
            "does",
            "not",
            "equal",
            "1023"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Enrolled_in",
            "WHERE",
            "StuID",
            "!=",
            "1023"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "enrolled_in",
            "where",
            "stuid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__enrolled_in__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__enrolled_in.stuid__",
                            false
                        ],
                        null
                    ],
                    1023.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_3",
        "query": "SELECT * FROM Member_of WHERE FacID != 1082;",
        "question": "Select all columns from member of when faculty id does not equal 1082",
        "tables": [
            "Minor_in",
            "Department",
            "Student",
            "Enrolled_in",
            "Gradeconversion",
            "Member_of",
            "Faculty",
            "Course"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "member",
            "of",
            "when",
            "faculty",
            "id",
            "does",
            "not",
            "equal",
            "1082"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Member_of",
            "WHERE",
            "FacID",
            "!=",
            "1082"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "member_of",
            "where",
            "facid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__member_of__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__member_of.facid__",
                            false
                        ],
                        null
                    ],
                    1082.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "college_3",
        "query": "SELECT Fname FROM Faculty WHERE Phone != 2672;",
        "question": "Select first name from faculty when phone does not equal 2672",
        "tables": [
            "Minor_in",
            "Department",
            "Student",
            "Enrolled_in",
            "Gradeconversion",
            "Member_of",
            "Faculty",
            "Course"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "first",
            "name",
            "from",
            "faculty",
            "when",
            "phone",
            "does",
            "not",
            "equal",
            "2672"
        ],
        "query_toks": [
            "SELECT",
            "Fname",
            "FROM",
            "Faculty",
            "WHERE",
            "Phone",
            "!=",
            "2672"
        ],
        "query_toks_no_value": [
            "select",
            "fname",
            "from",
            "faculty",
            "where",
            "phone",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__faculty__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__faculty.fname__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__faculty.phone__",
                            false
                        ],
                        null
                    ],
                    2672.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Teacher_ID FROM course_arrange WHERE Grade != 1;",
        "question": "Select teacher id from course arrange when grade does not equal 1",
        "tables": [
            "course_arrange",
            "teacher",
            "course"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "teacher",
            "id",
            "from",
            "course",
            "arrange",
            "when",
            "grade",
            "does",
            "not",
            "equal",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Teacher_ID",
            "FROM",
            "course_arrange",
            "WHERE",
            "Grade",
            "!=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "teacher_id",
            "from",
            "course_arrange",
            "where",
            "grade",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__course_arrange__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__course_arrange.teacher_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__course_arrange.grade__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "query": "SELECT Hometown FROM teacher WHERE Age != 33;",
        "question": "Select hometown from teacher when age does not equal 33",
        "tables": [
            "course_arrange",
            "teacher",
            "course"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "hometown",
            "from",
            "teacher",
            "when",
            "age",
            "does",
            "not",
            "equal",
            "33"
        ],
        "query_toks": [
            "SELECT",
            "Hometown",
            "FROM",
            "teacher",
            "WHERE",
            "Age",
            "!=",
            "33"
        ],
        "query_toks_no_value": [
            "select",
            "hometown",
            "from",
            "teacher",
            "where",
            "age",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__teacher__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__teacher.hometown__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__teacher.age__",
                            false
                        ],
                        null
                    ],
                    33.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "course_teach",
        "query": "SELECT * FROM course WHERE Course_ID != 10;",
        "question": "Select all columns from course when course id does not equal 10",
        "tables": [
            "course_arrange",
            "teacher",
            "course"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "course",
            "when",
            "course",
            "id",
            "does",
            "not",
            "equal",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "course",
            "WHERE",
            "Course_ID",
            "!=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "course",
            "where",
            "course_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__course__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__course.course_id__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "roller_coaster",
        "query": "SELECT Height FROM roller_coaster WHERE Country_ID != 3;",
        "question": "Select height from roller coaster when country id does not equal 3",
        "tables": [
            "roller_coaster",
            "country"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "height",
            "from",
            "roller",
            "coaster",
            "when",
            "country",
            "id",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Height",
            "FROM",
            "roller_coaster",
            "WHERE",
            "Country_I",
            "(",
            "Country_I",
            ")",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "height",
            "from",
            "roller_coaster",
            "where",
            "country_i",
            "(",
            "country_i",
            ")",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__roller_coaster__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__roller_coaster.height__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__roller_coaster.country_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT * FROM Delivery_Routes WHERE route_id != 6;",
        "question": "Select all columns from delivery routes when route id does not equal 6",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "delivery",
            "routes",
            "when",
            "route",
            "id",
            "does",
            "not",
            "equal",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Delivery_Routes",
            "WHERE",
            "route_id",
            "!=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "delivery_routes",
            "where",
            "route_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__delivery_routes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__delivery_routes.route_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT * FROM Actual_Order_Products WHERE actual_order_id != 15;",
        "question": "Select all columns from actual order products when actual order id does not equal 15",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "actual",
            "order",
            "products",
            "when",
            "actual",
            "order",
            "id",
            "does",
            "not",
            "equal",
            "15"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Actual_Order_Products",
            "WHERE",
            "actual_order_id",
            "!=",
            "15"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "actual_order_products",
            "where",
            "actual_order_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__actual_order_products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__actual_order_products.actual_order_id__",
                            false
                        ],
                        null
                    ],
                    15.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT * FROM Regular_Order_Products WHERE regular_order_id != 8;",
        "question": "Select all columns from regular order products when regular order id does not equal 8",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "regular",
            "order",
            "products",
            "when",
            "regular",
            "order",
            "id",
            "does",
            "not",
            "equal",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Regular_Order_Products",
            "WHERE",
            "regular_order_id",
            "!=",
            "8"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "regular_order_products",
            "where",
            "regular_order_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__regular_order_products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__regular_order_products.regular_order_id__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT regular_order_id FROM Regular_Orders WHERE distributer_id != 14;",
        "question": "Select regular order id from regular orders when distributer id does not equal 14",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "regular",
            "order",
            "id",
            "from",
            "regular",
            "orders",
            "when",
            "distributer",
            "id",
            "does",
            "not",
            "equal",
            "14"
        ],
        "query_toks": [
            "SELECT",
            "regular_order_id",
            "FROM",
            "Regular_Orders",
            "WHERE",
            "distributer_id",
            "!=",
            "14"
        ],
        "query_toks_no_value": [
            "select",
            "regular_order_id",
            "from",
            "regular_orders",
            "where",
            "distributer_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__regular_orders__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__regular_orders.regular_order_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__regular_orders.distributer_id__",
                            false
                        ],
                        null
                    ],
                    14.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_deliveries",
        "query": "SELECT * FROM Order_Deliveries WHERE truck_id != 2;",
        "question": "Select all columns from order deliveries when truck id does not equal 2",
        "tables": [
            "Actual_Orders",
            "Products",
            "Delivery_Routes",
            "Addresses",
            "Delivery_Route_Locations",
            "Actual_Order_Products",
            "Customer_Addresses",
            "Regular_Order_Products",
            "Customers",
            "Regular_Orders",
            "Order_Deliveries",
            "Trucks",
            "Employees"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "order",
            "deliveries",
            "when",
            "truck",
            "id",
            "does",
            "not",
            "equal",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Order_Deliveries",
            "WHERE",
            "truck_id",
            "!=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "order_deliveries",
            "where",
            "truck_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__order_deliveries__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__order_deliveries.truck_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "game_injury",
        "query": "SELECT * FROM injury_accident WHERE game_id != 11;",
        "question": "Select all columns from injury accident when game id does not equal 11",
        "tables": [
            "injury_accident",
            "stadium",
            "game"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "injury",
            "accident",
            "when",
            "game",
            "id",
            "does",
            "not",
            "equal",
            "11"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "injury_accident",
            "WHERE",
            "game_id",
            "!=",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "injury_accident",
            "where",
            "game_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__injury_accident__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__injury_accident.game_id__",
                            false
                        ],
                        null
                    ],
                    11.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "game_injury",
        "query": "SELECT Home_team FROM game WHERE stadium_id != 12;",
        "question": "Select home team from game when stadium id does not equal 12",
        "tables": [
            "injury_accident",
            "stadium",
            "game"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "home",
            "team",
            "from",
            "game",
            "when",
            "stadium",
            "id",
            "does",
            "not",
            "equal",
            "12"
        ],
        "query_toks": [
            "SELECT",
            "Home_team",
            "FROM",
            "game",
            "WHERE",
            "stadium_id",
            "!=",
            "12"
        ],
        "query_toks_no_value": [
            "select",
            "home_team",
            "from",
            "game",
            "where",
            "stadium_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__game__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__game.home_team__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__game.stadium_id__",
                            false
                        ],
                        null
                    ],
                    12.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "school_finance",
        "query": "SELECT Budgeted FROM budget WHERE Year != 2004;",
        "question": "Select budgeted from budget when year does not equal 2004",
        "tables": [
            "budget",
            "School",
            "endowment"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "budgeted",
            "from",
            "budget",
            "when",
            "year",
            "does",
            "not",
            "equal",
            "2004"
        ],
        "query_toks": [
            "SELECT",
            "Budgeted",
            "FROM",
            "budget",
            "WHERE",
            "Year",
            "!=",
            "2004"
        ],
        "query_toks_no_value": [
            "select",
            "budgeted",
            "from",
            "budget",
            "where",
            "year",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__budget__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__budget.budgeted__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__budget.year__",
                            false
                        ],
                        null
                    ],
                    2004.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_1",
        "query": "SELECT contestant_name FROM CONTESTANTS WHERE contestant_number != 11;",
        "question": "Select contestant name from contestants when contestant number does not equal 11",
        "tables": [
            "CONTESTANTS",
            "VOTES",
            "AREA_CODE_STATE"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "contestant",
            "name",
            "from",
            "contestants",
            "when",
            "contestant",
            "number",
            "does",
            "not",
            "equal",
            "11"
        ],
        "query_toks": [
            "SELECT",
            "contestant_name",
            "FROM",
            "CONTESTANTS",
            "WHERE",
            "contestant_number",
            "!=",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "contestant_name",
            "from",
            "contestants",
            "where",
            "contestant_number",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__contestants__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__contestants.contestant_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__contestants.contestant_number__",
                            false
                        ],
                        null
                    ],
                    11.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_1",
        "query": "SELECT * FROM VOTES WHERE vote_id != 3;",
        "question": "Select all columns from votes when vote id does not equal 3",
        "tables": [
            "CONTESTANTS",
            "VOTES",
            "AREA_CODE_STATE"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "votes",
            "when",
            "vote",
            "id",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "VOTES",
            "WHERE",
            "vote_id",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "votes",
            "where",
            "vote_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__votes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__votes.vote_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "match_season",
        "query": "SELECT Draft_Class FROM match_season WHERE Country != 1;",
        "question": "Select draft class from match season when country does not equal 1",
        "tables": [
            "player",
            "match_season",
            "team",
            "country"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "draft",
            "class",
            "from",
            "match",
            "season",
            "when",
            "country",
            "does",
            "not",
            "equal",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Draft_Class",
            "FROM",
            "match_season",
            "WHERE",
            "Countr",
            "(",
            "Countr",
            ")",
            "!=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "draft_class",
            "from",
            "match_season",
            "where",
            "countr",
            "(",
            "countr",
            ")",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__match_season__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__match_season.draft_class__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__match_season.country__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "match_season",
        "query": "SELECT * FROM country WHERE Country_id != 4;",
        "question": "Select all columns from country when country id does not equal 4",
        "tables": [
            "player",
            "match_season",
            "team",
            "country"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "country",
            "when",
            "country",
            "id",
            "does",
            "not",
            "equal",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "countr",
            "(",
            "countr",
            ")",
            "WHERE",
            "Country_i",
            "(",
            "Country_i",
            ")",
            "!=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "countr",
            "(",
            "countr",
            ")",
            "where",
            "country_i",
            "(",
            "country_i",
            ")",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__country__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__country.country_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "small_bank_1",
        "query": "SELECT balance FROM SAVINGS WHERE custid != 2;",
        "question": "Select balance from savings when customer id does not equal 2",
        "tables": [
            "SAVINGS",
            "CHECKING",
            "ACCOUNTS"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "balance",
            "from",
            "savings",
            "when",
            "customer",
            "id",
            "does",
            "not",
            "equal",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "balance",
            "FROM",
            "SAVINGS",
            "WHERE",
            "custid",
            "!=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "balance",
            "from",
            "savings",
            "where",
            "custid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__savings__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__savings.balance__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__savings.custid__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "small_bank_1",
        "query": "SELECT * FROM CHECKING WHERE custid != 5;",
        "question": "Select all columns from checking when customer id does not equal 5",
        "tables": [
            "SAVINGS",
            "CHECKING",
            "ACCOUNTS"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "checking",
            "when",
            "customer",
            "id",
            "does",
            "not",
            "equal",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "CHECKING",
            "WHERE",
            "custid",
            "!=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "checking",
            "where",
            "custid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__checking__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__checking.custid__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "small_bank_1",
        "query": "SELECT name FROM ACCOUNTS WHERE custid != 5;",
        "question": "Select name from accounts when customer id does not equal 5",
        "tables": [
            "SAVINGS",
            "CHECKING",
            "ACCOUNTS"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "name",
            "from",
            "accounts",
            "when",
            "customer",
            "id",
            "does",
            "not",
            "equal",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "ACCOUNTS",
            "WHERE",
            "custid",
            "!=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "accounts",
            "where",
            "custid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__accounts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__accounts.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__accounts.custid__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wta_1",
        "query": "SELECT * FROM rankings WHERE player_id != 208733;",
        "question": "Select all columns from rankings when player id does not equal 208733",
        "tables": [
            "matches",
            "players",
            "rankings"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "rankings",
            "when",
            "player",
            "id",
            "does",
            "not",
            "equal",
            "208733"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "rankings",
            "WHERE",
            "player_id",
            "!=",
            "208733"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "rankings",
            "where",
            "player_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__rankings__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__rankings.player_id__",
                            false
                        ],
                        null
                    ],
                    208733.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "manufacturer",
        "query": "SELECT Market_Rate FROM furniture WHERE Furniture_ID != 7;",
        "question": "Select market rate from furniture when furniture id does not equal 7",
        "tables": [
            "manufacturer",
            "furniture",
            "furniture_manufacte"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "market",
            "rate",
            "from",
            "furniture",
            "when",
            "furniture",
            "id",
            "does",
            "not",
            "equal",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "Market_Rate",
            "FROM",
            "furniture",
            "WHERE",
            "Furniture_ID",
            "!=",
            "7"
        ],
        "query_toks_no_value": [
            "select",
            "market_rate",
            "from",
            "furniture",
            "where",
            "furniture_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__furniture__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__furniture.market_rate__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__furniture.furniture_id__",
                            false
                        ],
                        null
                    ],
                    7.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT name FROM sqlite_sequence WHERE seq != 3503;",
        "question": "Select id from artists when name does not equal 3503",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "id",
            "from",
            "artists",
            "when",
            "name",
            "does",
            "not",
            "equal",
            "3503"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "sqlite_sequence",
            "WHERE",
            "seq",
            "!=",
            "3503"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "sqlite_sequence",
            "where",
            "seq",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__sqlite_sequence__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__sqlite_sequence.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__sqlite_sequence.seq__",
                            false
                        ],
                        null
                    ],
                    3503.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT * FROM artists WHERE id != 198;",
        "question": "Select all columns from sqlite sequence when name does not equal 198",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "sqlite",
            "sequence",
            "when",
            "name",
            "does",
            "not",
            "equal",
            "198"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "artists",
            "WHERE",
            "id",
            "!=",
            "198"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "artists",
            "where",
            "id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__artists__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__artists.id__",
                            false
                        ],
                        null
                    ],
                    198.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT name FROM genres WHERE id != 9;",
        "question": "Select name from genres when id does not equal 9",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "name",
            "from",
            "genres",
            "when",
            "id",
            "does",
            "not",
            "equal",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "genres",
            "WHERE",
            "id",
            "!=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "genres",
            "where",
            "id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__genres__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__genres.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__genres.id__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT name FROM media_types WHERE id != 5;",
        "question": "Select name from media types when id does not equal 5",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "name",
            "from",
            "media",
            "types",
            "when",
            "id",
            "does",
            "not",
            "equal",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "media_types",
            "WHERE",
            "id",
            "!=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "media_types",
            "where",
            "id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__media_types__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__media_types.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__media_types.id__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT * FROM invoices WHERE customer_id != 21;",
        "question": "Select all columns from invoices when customer id does not equal 21",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "invoices",
            "when",
            "customer",
            "id",
            "does",
            "not",
            "equal",
            "21"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "invoices",
            "WHERE",
            "customer_id",
            "!=",
            "21"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "invoices",
            "where",
            "customer_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__invoices__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__invoices.customer_id__",
                            false
                        ],
                        null
                    ],
                    21.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT * FROM playlists WHERE id != 13;",
        "question": "Select all columns from playlists when id does not equal 13",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "playlists",
            "when",
            "id",
            "does",
            "not",
            "equal",
            "13"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "playlists",
            "WHERE",
            "id",
            "!=",
            "13"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "playlists",
            "where",
            "id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__playlists__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__playlists.id__",
                            false
                        ],
                        null
                    ],
                    13.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT track_id FROM playlist_tracks WHERE playlist_id != 3;",
        "question": "Select track id from playlist tracks when playlist id does not equal 3",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "track",
            "id",
            "from",
            "playlist",
            "tracks",
            "when",
            "playlist",
            "id",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "track_id",
            "FROM",
            "playlist_tracks",
            "WHERE",
            "playlist_id",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "track_id",
            "from",
            "playlist_tracks",
            "where",
            "playlist_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__playlist_tracks__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__playlist_tracks.track_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__playlist_tracks.playlist_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT * FROM invoice_lines WHERE id != 1239;",
        "question": "Select all columns from invoice lines when id does not equal 1239",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "invoice",
            "lines",
            "when",
            "id",
            "does",
            "not",
            "equal",
            "1239"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "invoice_lines",
            "WHERE",
            "id",
            "!=",
            "1239"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "invoice_lines",
            "where",
            "id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__invoice_lines__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__invoice_lines.id__",
                            false
                        ],
                        null
                    ],
                    1239.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT artist_id FROM albums WHERE id != 122;",
        "question": "Select artist id from albums when id does not equal 122",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "artist",
            "id",
            "from",
            "albums",
            "when",
            "id",
            "does",
            "not",
            "equal",
            "122"
        ],
        "query_toks": [
            "SELECT",
            "artist_id",
            "FROM",
            "albums",
            "WHERE",
            "id",
            "!=",
            "122"
        ],
        "query_toks_no_value": [
            "select",
            "artist_id",
            "from",
            "albums",
            "where",
            "id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__albums__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__albums.artist_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__albums.id__",
                            false
                        ],
                        null
                    ],
                    122.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "store_1",
        "query": "SELECT name FROM tracks WHERE id != 2643;",
        "question": "Select name from tracks when id does not equal 2643",
        "tables": [
            "sqlite_sequence",
            "artists",
            "genres",
            "media_types",
            "invoices",
            "playlists",
            "playlist_tracks",
            "customers",
            "invoice_lines",
            "albums",
            "tracks",
            "employees"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "name",
            "from",
            "tracks",
            "when",
            "id",
            "does",
            "not",
            "equal",
            "2643"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "tracks",
            "WHERE",
            "id",
            "!=",
            "2643"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "tracks",
            "where",
            "id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__tracks__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__tracks.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__tracks.id__",
                            false
                        ],
                        null
                    ],
                    2643.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "train_station",
        "query": "SELECT Train_ID FROM train_station WHERE Station_ID != 9;",
        "question": "Select train id from train station when station id does not equal 9",
        "tables": [
            "train_station",
            "train",
            "station"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "train",
            "id",
            "from",
            "train",
            "station",
            "when",
            "station",
            "id",
            "does",
            "not",
            "equal",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "Train_ID",
            "FROM",
            "train_station",
            "WHERE",
            "Station_ID",
            "!=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "train_id",
            "from",
            "train_station",
            "where",
            "station_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__train_station__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__train_station.train_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__train_station.station_id__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "train_station",
        "query": "SELECT * FROM station WHERE Station_ID != 7;",
        "question": "Select all columns from station when station id does not equal 7",
        "tables": [
            "train_station",
            "train",
            "station"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "station",
            "when",
            "station",
            "id",
            "does",
            "not",
            "equal",
            "7"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "station",
            "WHERE",
            "Station_ID",
            "!=",
            "7"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "station",
            "where",
            "station_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__station__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__station.station_id__",
                            false
                        ],
                        null
                    ],
                    7.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "document_management",
        "query": "SELECT parent_functional_area_code FROM Functional_Areas WHERE functional_area_code != 8;",
        "question": "Select parent functional area code from functional areas when functional area code does not equal 8",
        "tables": [
            "Roles",
            "Functional_Areas",
            "Documents",
            "Document_Sections",
            "Document_Sections_Images",
            "Images",
            "Users",
            "Document_Functional_Areas",
            "Document_Structures"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "parent",
            "functional",
            "area",
            "code",
            "from",
            "functional",
            "areas",
            "when",
            "functional",
            "area",
            "code",
            "does",
            "not",
            "equal",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "parent_functional_area_code",
            "FROM",
            "Functional_Areas",
            "WHERE",
            "functional_area_code",
            "!=",
            "8"
        ],
        "query_toks_no_value": [
            "select",
            "parent_functional_area_code",
            "from",
            "functional_areas",
            "where",
            "functional_area_code",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__functional_areas__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__functional_areas.parent_functional_area_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__functional_areas.functional_area_code__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "document_management",
        "query": "SELECT * FROM Documents WHERE document_structure_code != 9;",
        "question": "Select all columns from documents when document structure code does not equal 9",
        "tables": [
            "Roles",
            "Functional_Areas",
            "Documents",
            "Document_Sections",
            "Document_Sections_Images",
            "Images",
            "Users",
            "Document_Functional_Areas",
            "Document_Structures"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "documents",
            "when",
            "document",
            "structure",
            "code",
            "does",
            "not",
            "equal",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Documents",
            "WHERE",
            "document_structure_code",
            "!=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "documents",
            "where",
            "document_structure_code",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__documents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__documents.document_structure_code__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "document_management",
        "query": "SELECT section_sequence FROM Document_Sections WHERE section_code != 91;",
        "question": "Select section sequence from document sections when section code does not equal 91",
        "tables": [
            "Roles",
            "Functional_Areas",
            "Documents",
            "Document_Sections",
            "Document_Sections_Images",
            "Images",
            "Users",
            "Document_Functional_Areas",
            "Document_Structures"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "section",
            "sequence",
            "from",
            "document",
            "sections",
            "when",
            "section",
            "code",
            "does",
            "not",
            "equal",
            "91"
        ],
        "query_toks": [
            "SELECT",
            "section_sequence",
            "FROM",
            "Document_Sections",
            "WHERE",
            "section_code",
            "!=",
            "91"
        ],
        "query_toks_no_value": [
            "select",
            "section_sequence",
            "from",
            "document_sections",
            "where",
            "section_code",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__document_sections__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__document_sections.section_sequence__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__document_sections.section_code__",
                            false
                        ],
                        null
                    ],
                    91.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "document_management",
        "query": "SELECT image_id FROM Document_Sections_Images WHERE section_id != 86;",
        "question": "Select image id from document sections images when section id does not equal 86",
        "tables": [
            "Roles",
            "Functional_Areas",
            "Documents",
            "Document_Sections",
            "Document_Sections_Images",
            "Images",
            "Users",
            "Document_Functional_Areas",
            "Document_Structures"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "image",
            "id",
            "from",
            "document",
            "sections",
            "images",
            "when",
            "section",
            "id",
            "does",
            "not",
            "equal",
            "86"
        ],
        "query_toks": [
            "SELECT",
            "image_id",
            "FROM",
            "Document_Sections_Images",
            "WHERE",
            "section_id",
            "!=",
            "86"
        ],
        "query_toks_no_value": [
            "select",
            "image_id",
            "from",
            "document_sections_images",
            "where",
            "section_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__document_sections_images__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__document_sections_images.image_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__document_sections_images.section_id__",
                            false
                        ],
                        null
                    ],
                    86.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "document_management",
        "query": "SELECT * FROM Document_Functional_Areas WHERE document_code != 706;",
        "question": "Select all columns from document functional areas when document code does not equal 706",
        "tables": [
            "Roles",
            "Functional_Areas",
            "Documents",
            "Document_Sections",
            "Document_Sections_Images",
            "Images",
            "Users",
            "Document_Functional_Areas",
            "Document_Structures"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "document",
            "functional",
            "areas",
            "when",
            "document",
            "code",
            "does",
            "not",
            "equal",
            "706"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Document_Functional_Areas",
            "WHERE",
            "document_code",
            "!=",
            "706"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "document_functional_areas",
            "where",
            "document_code",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__document_functional_areas__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__document_functional_areas.document_code__",
                            false
                        ],
                        null
                    ],
                    706.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "document_management",
        "query": "SELECT document_structure_code FROM Document_Structures WHERE parent_document_structure_code != 8;",
        "question": "Select document structure code from document structures when parent document structure code does not equal 8",
        "tables": [
            "Roles",
            "Functional_Areas",
            "Documents",
            "Document_Sections",
            "Document_Sections_Images",
            "Images",
            "Users",
            "Document_Functional_Areas",
            "Document_Structures"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "document",
            "structure",
            "code",
            "from",
            "document",
            "structures",
            "when",
            "parent",
            "document",
            "structure",
            "code",
            "does",
            "not",
            "equal",
            "8"
        ],
        "query_toks": [
            "SELECT",
            "document_structure_code",
            "FROM",
            "Document_Structures",
            "WHERE",
            "parent_document_structure_code",
            "!=",
            "8"
        ],
        "query_toks_no_value": [
            "select",
            "document_structure_code",
            "from",
            "document_structures",
            "where",
            "parent_document_structure_code",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__document_structures__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__document_structures.document_structure_code__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__document_structures.parent_document_structure_code__",
                            false
                        ],
                        null
                    ],
                    8.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT * FROM constructorResults WHERE constructorResultsId != 11560;",
        "question": "Select all columns from constructor results when constructor results id does not equal 11560",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "constructor",
            "results",
            "when",
            "constructor",
            "results",
            "id",
            "does",
            "not",
            "equal",
            "11560"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "constructorResults",
            "WHERE",
            "constructorResultsId",
            "!=",
            "11560"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "constructorresults",
            "where",
            "constructorresultsid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__constructorresults__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__constructorresults.constructorresultsid__",
                            false
                        ],
                        null
                    ],
                    11560.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT * FROM qualifying WHERE driverId != 105;",
        "question": "Select all columns from qualifying when driver id does not equal 105",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "qualifying",
            "when",
            "driver",
            "id",
            "does",
            "not",
            "equal",
            "105"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "qualifying",
            "WHERE",
            "driverId",
            "!=",
            "105"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "qualifying",
            "where",
            "driverid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__qualifying__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__qualifying.driverid__",
                            false
                        ],
                        null
                    ],
                    105.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT driverId FROM driverStandings WHERE position != 97;",
        "question": "Select driver id from driver standings when position does not equal 97",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "driver",
            "id",
            "from",
            "driver",
            "standings",
            "when",
            "position",
            "does",
            "not",
            "equal",
            "97"
        ],
        "query_toks": [
            "SELECT",
            "driverId",
            "FROM",
            "driverStandings",
            "WHERE",
            "position",
            "!=",
            "97"
        ],
        "query_toks_no_value": [
            "select",
            "driverid",
            "from",
            "driverstandings",
            "where",
            "position",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__driverstandings__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__driverstandings.driverid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__driverstandings.position__",
                            false
                        ],
                        null
                    ],
                    97.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT position FROM constructorStandings WHERE constructorStandingsId != 1569;",
        "question": "Select position from constructor standings when constructor standings id does not equal 1569",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "position",
            "from",
            "constructor",
            "standings",
            "when",
            "constructor",
            "standings",
            "id",
            "does",
            "not",
            "equal",
            "1569"
        ],
        "query_toks": [
            "SELECT",
            "position",
            "FROM",
            "constructorStandings",
            "WHERE",
            "constructorStandingsId",
            "!=",
            "1569"
        ],
        "query_toks_no_value": [
            "select",
            "position",
            "from",
            "constructorstandings",
            "where",
            "constructorstandingsid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__constructorstandings__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__constructorstandings.position__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__constructorstandings.constructorstandingsid__",
                            false
                        ],
                        null
                    ],
                    1569.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT position FROM results WHERE grid != 23;",
        "question": "Select position from results when grid does not equal 23",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "position",
            "from",
            "results",
            "when",
            "grid",
            "does",
            "not",
            "equal",
            "23"
        ],
        "query_toks": [
            "SELECT",
            "position",
            "FROM",
            "results",
            "WHERE",
            "grid",
            "!=",
            "23"
        ],
        "query_toks_no_value": [
            "select",
            "position",
            "from",
            "results",
            "where",
            "grid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__results__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__results.position__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__results.grid__",
                            false
                        ],
                        null
                    ],
                    23.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT * FROM circuits WHERE alt != 10;",
        "question": "Select all columns from circuits when altitude does not equal 10",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "circuits",
            "when",
            "altitude",
            "does",
            "not",
            "equal",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "circuits",
            "WHERE",
            "alt",
            "!=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "circuits",
            "where",
            "alt",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__circuits__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__circuits.alt__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "formula_1",
        "query": "SELECT * FROM status WHERE statusId != 76;",
        "question": "Select all columns from status when status id does not equal 76",
        "tables": [
            "constructorResults",
            "constructors",
            "seasons",
            "qualifying",
            "driverStandings",
            "constructorStandings",
            "drivers",
            "lapTimes",
            "pitStops",
            "results",
            "races",
            "circuits",
            "status"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "status",
            "when",
            "status",
            "id",
            "does",
            "not",
            "equal",
            "76"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "status",
            "WHERE",
            "statusId",
            "!=",
            "76"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "status",
            "where",
            "statusid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__status__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__status.statusid__",
                            false
                        ],
                        null
                    ],
                    76.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "game_1",
        "query": "SELECT * FROM Video_Games WHERE GameID != 5;",
        "question": "Select all columns from video games when game id does not equal 5",
        "tables": [
            "SportsInfo",
            "Student",
            "Video_Games",
            "Plays_Games"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "video",
            "games",
            "when",
            "game",
            "id",
            "does",
            "not",
            "equal",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Video_Games",
            "WHERE",
            "GameID",
            "!=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "video_games",
            "where",
            "gameid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__video_games__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__video_games.gameid__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "game_1",
        "query": "SELECT * FROM Plays_Games WHERE GameID != 5;",
        "question": "Select all columns from plays games when game id does not equal 5",
        "tables": [
            "SportsInfo",
            "Student",
            "Video_Games",
            "Plays_Games"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "plays",
            "games",
            "when",
            "game",
            "id",
            "does",
            "not",
            "equal",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Plays_Games",
            "WHERE",
            "GameID",
            "!=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "plays_games",
            "where",
            "gameid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__plays_games__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__plays_games.gameid__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "loan_1",
        "query": "SELECT credit_score FROM customer WHERE branch_ID != 1;",
        "question": "Select credit score from customer when branch id does not equal 1",
        "tables": [
            "customer",
            "loan",
            "bank"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "credit",
            "score",
            "from",
            "customer",
            "when",
            "branch",
            "id",
            "does",
            "not",
            "equal",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "credit_score",
            "FROM",
            "customer",
            "WHERE",
            "branch_ID",
            "!=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "credit_score",
            "from",
            "customer",
            "where",
            "branch_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer.credit_score__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__customer.branch_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "loan_1",
        "query": "SELECT * FROM loan WHERE cust_ID != 3;",
        "question": "Select all columns from loan when customer id does not equal 3",
        "tables": [
            "customer",
            "loan",
            "bank"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "loan",
            "when",
            "customer",
            "id",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "loan",
            "WHERE",
            "cust_ID",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "loan",
            "where",
            "cust_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__loan__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__loan.cust_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "bike_1",
        "query": "SELECT * FROM weather WHERE max_humidity != 66;",
        "question": "Select all columns from weather when max humidity does not equal 66",
        "tables": [
            "status",
            "weather",
            "trip",
            "station"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "weather",
            "when",
            "max",
            "humidity",
            "does",
            "not",
            "equal",
            "66"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "weather",
            "WHERE",
            "max_humidit",
            "(",
            "max_humidit",
            ")",
            "!=",
            "66"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "weather",
            "where",
            "max_humidit",
            "(",
            "max_humidit",
            ")",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__weather__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__weather.max_humidity__",
                            false
                        ],
                        null
                    ],
                    66.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "bike_1",
        "query": "SELECT * FROM trip WHERE bike_id != 40;",
        "question": "Select all columns from trip when bike id does not equal 40",
        "tables": [
            "status",
            "weather",
            "trip",
            "station"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "trip",
            "when",
            "bike",
            "id",
            "does",
            "not",
            "equal",
            "40"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "trip",
            "WHERE",
            "bike_id",
            "!=",
            "40"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "trip",
            "where",
            "bike_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__trip__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__trip.bike_id__",
                            false
                        ],
                        null
                    ],
                    40.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "entrepreneur",
        "query": "SELECT Date_of_Birth FROM people WHERE People_ID != 6;",
        "question": "Select date of birth from people when people id does not equal 6",
        "tables": [
            "entrepreneur",
            "people"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "date",
            "of",
            "birth",
            "from",
            "people",
            "when",
            "people",
            "id",
            "does",
            "not",
            "equal",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "Date_of_Birth",
            "FROM",
            "people",
            "WHERE",
            "People_ID",
            "!=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "date_of_birth",
            "from",
            "people",
            "where",
            "people_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__people__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__people.date_of_birth__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__people.people_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "orchestra",
        "query": "SELECT * FROM conductor WHERE Age != 40;",
        "question": "Select all columns from conductor when age does not equal 40",
        "tables": [
            "orchestra",
            "show",
            "conductor",
            "performance"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "conductor",
            "when",
            "age",
            "does",
            "not",
            "equal",
            "40"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "conductor",
            "WHERE",
            "Age",
            "!=",
            "40"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "conductor",
            "where",
            "age",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__conductor__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__conductor.age__",
                            false
                        ],
                        null
                    ],
                    40.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Store_Phone FROM Drama_Workshop_Groups WHERE Address_ID != 230;",
        "question": "Select store phone from drama workshop groups when address id does not equal 230",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "store",
            "phone",
            "from",
            "drama",
            "workshop",
            "groups",
            "when",
            "address",
            "id",
            "does",
            "not",
            "equal",
            "230"
        ],
        "query_toks": [
            "SELECT",
            "Store_Phone",
            "FROM",
            "Drama_Workshop_Groups",
            "WHERE",
            "Address_ID",
            "!=",
            "230"
        ],
        "query_toks_no_value": [
            "select",
            "store_phone",
            "from",
            "drama_workshop_groups",
            "where",
            "address_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__drama_workshop_groups__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__drama_workshop_groups.store_phone__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__drama_workshop_groups.address_id__",
                            false
                        ],
                        null
                    ],
                    230.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Order_Item_ID FROM Order_Items WHERE Product_ID != 46;",
        "question": "Select order item id from order items when product id does not equal 46",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "order",
            "item",
            "id",
            "from",
            "order",
            "items",
            "when",
            "product",
            "id",
            "does",
            "not",
            "equal",
            "46"
        ],
        "query_toks": [
            "SELECT",
            "Order_Item_ID",
            "FROM",
            "Order_Items",
            "WHERE",
            "Product_ID",
            "!=",
            "46"
        ],
        "query_toks_no_value": [
            "select",
            "order_item_id",
            "from",
            "order_items",
            "where",
            "product_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__order_items__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__order_items.order_item_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__order_items.product_id__",
                            false
                        ],
                        null
                    ],
                    46.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Product_ID FROM Bookings_Services WHERE Order_ID != 1;",
        "question": "Select product id from bookings services when order id does not equal 1",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "product",
            "id",
            "from",
            "bookings",
            "services",
            "when",
            "order",
            "id",
            "does",
            "not",
            "equal",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Product_ID",
            "FROM",
            "Bookings_Services",
            "WHERE",
            "Order_ID",
            "!=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "product_id",
            "from",
            "bookings_services",
            "where",
            "order_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__bookings_services__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__bookings_services.product_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__bookings_services.order_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Customer_Email_Address FROM Customers WHERE Address_ID != 98;",
        "question": "Select customer email address from customers when address id does not equal 98",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "customer",
            "email",
            "address",
            "from",
            "customers",
            "when",
            "address",
            "id",
            "does",
            "not",
            "equal",
            "98"
        ],
        "query_toks": [
            "SELECT",
            "Customer_Email_Address",
            "FROM",
            "Customers",
            "WHERE",
            "Address_ID",
            "!=",
            "98"
        ],
        "query_toks_no_value": [
            "select",
            "customer_email_address",
            "from",
            "customers",
            "where",
            "address_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customers.customer_email_address__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__customers.address_id__",
                            false
                        ],
                        null
                    ],
                    98.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT * FROM Performers_in_Bookings WHERE Performer_ID != 153;",
        "question": "Select all columns from performers in bookings when performer id does not equal 153",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "performers",
            "in",
            "bookings",
            "when",
            "performer",
            "id",
            "does",
            "not",
            "equal",
            "153"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Performers_in_Bookings",
            "WHERE",
            "Performer_ID",
            "!=",
            "153"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "performers_in_bookings",
            "where",
            "performer_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__performers_in_bookings__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__performers_in_bookings.performer_id__",
                            false
                        ],
                        null
                    ],
                    153.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT Other_Details FROM Stores WHERE Address_ID != 192;",
        "question": "Select other details from stores when address id does not equal 192",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "other",
            "details",
            "from",
            "stores",
            "when",
            "address",
            "id",
            "does",
            "not",
            "equal",
            "192"
        ],
        "query_toks": [
            "SELECT",
            "Other_Details",
            "FROM",
            "Stores",
            "WHERE",
            "Address_ID",
            "!=",
            "192"
        ],
        "query_toks_no_value": [
            "select",
            "other_details",
            "from",
            "stores",
            "where",
            "address_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__stores__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__stores.other_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__stores.address_id__",
                            false
                        ],
                        null
                    ],
                    192.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "query": "SELECT * FROM Ref_Service_Types WHERE Service_Type_Code != 4;",
        "question": "Select all columns from reference service types when service type code does not equal 4",
        "tables": [
            "Performers",
            "Products",
            "Drama_Workshop_Groups",
            "Order_Items",
            "Invoices",
            "Addresses",
            "Customer_Orders",
            "Services",
            "Bookings_Services",
            "Invoice_Items",
            "Marketing_Regions",
            "Customers",
            "Performers_in_Bookings",
            "Stores",
            "Clients",
            "Bookings",
            "Ref_Service_Types",
            "Ref_Payment_Methods"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "reference",
            "service",
            "types",
            "when",
            "service",
            "type",
            "code",
            "does",
            "not",
            "equal",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Ref_Service_Types",
            "WHERE",
            "Service_Type_Code",
            "!=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "ref_service_types",
            "where",
            "service_type_code",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__ref_service_types__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__ref_service_types.service_type_code__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "query": "SELECT * FROM model_list WHERE Maker != 3;",
        "question": "Select all columns from model list when maker does not equal 3",
        "tables": [
            "car_makers",
            "car_names",
            "countries",
            "model_list",
            "cars_data",
            "continents"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "model",
            "list",
            "when",
            "maker",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "model_list",
            "WHERE",
            "Maker",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "model_list",
            "where",
            "maker",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__model_list__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__model_list.maker__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "query": "SELECT Year FROM cars_data WHERE Id != 339;",
        "question": "Select year from cars data when id does not equal 339",
        "tables": [
            "car_makers",
            "car_names",
            "countries",
            "model_list",
            "cars_data",
            "continents"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "year",
            "from",
            "cars",
            "data",
            "when",
            "id",
            "does",
            "not",
            "equal",
            "339"
        ],
        "query_toks": [
            "SELECT",
            "Year",
            "FROM",
            "cars_data",
            "WHERE",
            "Id",
            "!=",
            "339"
        ],
        "query_toks_no_value": [
            "select",
            "year",
            "from",
            "cars_data",
            "where",
            "id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__cars_data__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__cars_data.year__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__cars_data.id__",
                            false
                        ],
                        null
                    ],
                    339.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "car_1",
        "query": "SELECT Continent FROM continents WHERE ContId != 2;",
        "question": "Select continent from continents when cont id does not equal 2",
        "tables": [
            "car_makers",
            "car_names",
            "countries",
            "model_list",
            "cars_data",
            "continents"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "continent",
            "from",
            "continents",
            "when",
            "cont",
            "id",
            "does",
            "not",
            "equal",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "Continent",
            "FROM",
            "continents",
            "WHERE",
            "ContId",
            "!=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "continent",
            "from",
            "continents",
            "where",
            "contid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__continents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__continents.continent__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__continents.contid__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "behavior_monitoring",
        "query": "SELECT * FROM Teachers WHERE teacher_id != 3;",
        "question": "Select all columns from teachers when teacher id does not equal 3",
        "tables": [
            "Ref_Detention_Type",
            "Teachers",
            "Students",
            "Addresses",
            "Assessment_Notes",
            "Detention",
            "Students_in_Detention",
            "Student_Addresses",
            "Ref_Incident_Type",
            "Behavior_Incident",
            "Ref_Address_Types"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "teachers",
            "when",
            "teacher",
            "id",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Teachers",
            "WHERE",
            "teacher_id",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "teachers",
            "where",
            "teacher_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__teachers__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__teachers.teacher_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "behavior_monitoring",
        "query": "SELECT * FROM Addresses WHERE zip_postcode != 435;",
        "question": "Select all columns from addresses when zip postcode does not equal 435",
        "tables": [
            "Ref_Detention_Type",
            "Teachers",
            "Students",
            "Addresses",
            "Assessment_Notes",
            "Detention",
            "Students_in_Detention",
            "Student_Addresses",
            "Ref_Incident_Type",
            "Behavior_Incident",
            "Ref_Address_Types"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "addresses",
            "when",
            "zip",
            "postcode",
            "does",
            "not",
            "equal",
            "435"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Addresses",
            "WHERE",
            "zip_postcode",
            "!=",
            "435"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "addresses",
            "where",
            "zip_postcode",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__addresses.zip_postcode__",
                            false
                        ],
                        null
                    ],
                    435.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "behavior_monitoring",
        "query": "SELECT student_id FROM Assessment_Notes WHERE notes_id != 3;",
        "question": "Select student id from assessment notes when notes id does not equal 3",
        "tables": [
            "Ref_Detention_Type",
            "Teachers",
            "Students",
            "Addresses",
            "Assessment_Notes",
            "Detention",
            "Students_in_Detention",
            "Student_Addresses",
            "Ref_Incident_Type",
            "Behavior_Incident",
            "Ref_Address_Types"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "student",
            "id",
            "from",
            "assessment",
            "notes",
            "when",
            "notes",
            "id",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "student_id",
            "FROM",
            "Assessment_Notes",
            "WHERE",
            "notes_id",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "student_id",
            "from",
            "assessment_notes",
            "where",
            "notes_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__assessment_notes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__assessment_notes.student_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__assessment_notes.notes_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "behavior_monitoring",
        "query": "SELECT * FROM Students_in_Detention WHERE detention_id != 6;",
        "question": "Select all columns from students in detention when detention id does not equal 6",
        "tables": [
            "Ref_Detention_Type",
            "Teachers",
            "Students",
            "Addresses",
            "Assessment_Notes",
            "Detention",
            "Students_in_Detention",
            "Student_Addresses",
            "Ref_Incident_Type",
            "Behavior_Incident",
            "Ref_Address_Types"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "students",
            "in",
            "detention",
            "when",
            "detention",
            "id",
            "does",
            "not",
            "equal",
            "6"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Students_in_Detention",
            "WHERE",
            "detention_id",
            "!=",
            "6"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "students_in_detention",
            "where",
            "detention_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__students_in_detention__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__students_in_detention.detention_id__",
                            false
                        ],
                        null
                    ],
                    6.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "query": "SELECT Document_Description FROM All_Documents WHERE Document_ID != 170;",
        "question": "Select document description from all documents when document id does not equal 170",
        "tables": [
            "Ref_Document_Types",
            "Roles",
            "Ref_Calendar",
            "Documents_to_be_Destroyed",
            "Document_Locations",
            "All_Documents",
            "Ref_Locations",
            "Employees"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "document",
            "description",
            "from",
            "all",
            "documents",
            "when",
            "document",
            "id",
            "does",
            "not",
            "equal",
            "170"
        ],
        "query_toks": [
            "SELECT",
            "Document_Description",
            "FROM",
            "All_Documents",
            "WHERE",
            "Document_ID",
            "!=",
            "170"
        ],
        "query_toks_no_value": [
            "select",
            "document_description",
            "from",
            "all_documents",
            "where",
            "document_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__all_documents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all_documents.document_description__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__all_documents.document_id__",
                            false
                        ],
                        null
                    ],
                    170.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "university_basketball",
        "query": "SELECT * FROM university WHERE School_ID != 1;",
        "question": "Select all columns from university when school id does not equal 1",
        "tables": [
            "basketball_match",
            "university"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "university",
            "when",
            "school",
            "id",
            "does",
            "not",
            "equal",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "university",
            "WHERE",
            "School_ID",
            "!=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "university",
            "where",
            "school_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__university__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__university.school_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_2",
        "query": "SELECT decision FROM Tryout WHERE pID != 10001;",
        "question": "Select decision from tryout when player id does not equal 10001",
        "tables": [
            "Tryout",
            "Player",
            "College"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "decision",
            "from",
            "tryout",
            "when",
            "player",
            "id",
            "does",
            "not",
            "equal",
            "10001"
        ],
        "query_toks": [
            "SELECT",
            "decision",
            "FROM",
            "Tryout",
            "WHERE",
            "pID",
            "!=",
            "10001"
        ],
        "query_toks_no_value": [
            "select",
            "decision",
            "from",
            "tryout",
            "where",
            "pid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__tryout__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__tryout.decision__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__tryout.pid__",
                            false
                        ],
                        null
                    ],
                    10001.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "soccer_2",
        "query": "SELECT cName FROM College WHERE enr != 22000;",
        "question": "Select college name from college when enrollment does not equal 22000",
        "tables": [
            "Tryout",
            "Player",
            "College"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "college",
            "name",
            "from",
            "college",
            "when",
            "enrollment",
            "does",
            "not",
            "equal",
            "22000"
        ],
        "query_toks": [
            "SELECT",
            "cName",
            "FROM",
            "College",
            "WHERE",
            "enr",
            "!=",
            "22000"
        ],
        "query_toks_no_value": [
            "select",
            "cname",
            "from",
            "college",
            "where",
            "enr",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__college__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__college.cname__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__college.enr__",
                            false
                        ],
                        null
                    ],
                    22000.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "activity_1",
        "query": "SELECT Advisor FROM Student WHERE StuID != 1006;",
        "question": "Select advisor from student when student id does not equal 1006",
        "tables": [
            "Student",
            "Faculty_Participates_in",
            "Activity",
            "Faculty",
            "Participates_in"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "advisor",
            "from",
            "student",
            "when",
            "student",
            "id",
            "does",
            "not",
            "equal",
            "1006"
        ],
        "query_toks": [
            "SELECT",
            "Advisor",
            "FROM",
            "Student",
            "WHERE",
            "StuID",
            "!=",
            "1006"
        ],
        "query_toks_no_value": [
            "select",
            "advisor",
            "from",
            "student",
            "where",
            "stuid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__student.advisor__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__student.stuid__",
                            false
                        ],
                        null
                    ],
                    1006.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "activity_1",
        "query": "SELECT * FROM Faculty_Participates_in WHERE FacID != 1193;",
        "question": "Select all columns from faculty participates in when faculty id does not equal 1193",
        "tables": [
            "Student",
            "Faculty_Participates_in",
            "Activity",
            "Faculty",
            "Participates_in"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "faculty",
            "participates",
            "in",
            "when",
            "faculty",
            "id",
            "does",
            "not",
            "equal",
            "1193"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Faculty_Participates_in",
            "WHERE",
            "FacID",
            "!=",
            "1193"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "faculty_participates_in",
            "where",
            "facid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__faculty_participates_in__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__faculty_participates_in.facid__",
                            false
                        ],
                        null
                    ],
                    1193.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "activity_1",
        "query": "SELECT * FROM Activity WHERE actid != 776;",
        "question": "Select all columns from activity when activity id does not equal 776",
        "tables": [
            "Student",
            "Faculty_Participates_in",
            "Activity",
            "Faculty",
            "Participates_in"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "activity",
            "when",
            "activity",
            "id",
            "does",
            "not",
            "equal",
            "776"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Activity",
            "WHERE",
            "actid",
            "!=",
            "776"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "activity",
            "where",
            "actid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__activity__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__activity.actid__",
                            false
                        ],
                        null
                    ],
                    776.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "activity_1",
        "query": "SELECT Rank FROM Faculty WHERE FacID != 9824;",
        "question": "Select rank from faculty when faculty id does not equal 9824",
        "tables": [
            "Student",
            "Faculty_Participates_in",
            "Activity",
            "Faculty",
            "Participates_in"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "rank",
            "from",
            "faculty",
            "when",
            "faculty",
            "id",
            "does",
            "not",
            "equal",
            "9824"
        ],
        "query_toks": [
            "SELECT",
            "Rank",
            "FROM",
            "Faculty",
            "WHERE",
            "FacID",
            "!=",
            "9824"
        ],
        "query_toks_no_value": [
            "select",
            "rank",
            "from",
            "faculty",
            "where",
            "facid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__faculty__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__faculty.rank__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__faculty.facid__",
                            false
                        ],
                        null
                    ],
                    9824.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "activity_1",
        "query": "SELECT actid FROM Participates_in WHERE stuid != 1025;",
        "question": "Select activity id from participates in when student id does not equal 1025",
        "tables": [
            "Student",
            "Faculty_Participates_in",
            "Activity",
            "Faculty",
            "Participates_in"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "activity",
            "id",
            "from",
            "participates",
            "in",
            "when",
            "student",
            "id",
            "does",
            "not",
            "equal",
            "1025"
        ],
        "query_toks": [
            "SELECT",
            "actid",
            "FROM",
            "Participates_in",
            "WHERE",
            "stuid",
            "!=",
            "1025"
        ],
        "query_toks_no_value": [
            "select",
            "actid",
            "from",
            "participates_in",
            "where",
            "stuid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__participates_in__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__participates_in.actid__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__participates_in.stuid__",
                            false
                        ],
                        null
                    ],
                    1025.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT * FROM Staff WHERE Staff_ID != 219;",
        "question": "Select all columns from staff when staff id does not equal 219",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "staff",
            "when",
            "staff",
            "id",
            "does",
            "not",
            "equal",
            "219"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Staff",
            "WHERE",
            "Staff_ID",
            "!=",
            "219"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "staff",
            "where",
            "staff_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__staff__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__staff.staff_id__",
                            false
                        ],
                        null
                    ],
                    219.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Tourist_Attraction_ID FROM Visits WHERE Tourist_ID != 513;",
        "question": "Select tourist attraction id from visits when tourist id does not equal 513",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "tourist",
            "attraction",
            "id",
            "from",
            "visits",
            "when",
            "tourist",
            "id",
            "does",
            "not",
            "equal",
            "513"
        ],
        "query_toks": [
            "SELECT",
            "Tourist_Attraction_ID",
            "FROM",
            "Visits",
            "WHERE",
            "Tourist_ID",
            "!=",
            "513"
        ],
        "query_toks_no_value": [
            "select",
            "tourist_attraction_id",
            "from",
            "visits",
            "where",
            "tourist_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__visits__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__visits.tourist_attraction_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__visits.tourist_id__",
                            false
                        ],
                        null
                    ],
                    513.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Feature_Details FROM Features WHERE Feature_ID != 955;",
        "question": "Select feature details from features when feature id does not equal 955",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "feature",
            "details",
            "from",
            "features",
            "when",
            "feature",
            "id",
            "does",
            "not",
            "equal",
            "955"
        ],
        "query_toks": [
            "SELECT",
            "Feature_Details",
            "FROM",
            "Features",
            "WHERE",
            "Feature_ID",
            "!=",
            "955"
        ],
        "query_toks_no_value": [
            "select",
            "feature_details",
            "from",
            "features",
            "where",
            "feature_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__features__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__features.feature_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__features.feature_id__",
                            false
                        ],
                        null
                    ],
                    955.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT Royal_Family_Details FROM Royal_Family WHERE Royal_Family_ID != 9561;",
        "question": "Select royal family details from royal family when royal family id does not equal 9561",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "royal",
            "family",
            "details",
            "from",
            "royal",
            "family",
            "when",
            "royal",
            "family",
            "id",
            "does",
            "not",
            "equal",
            "9561"
        ],
        "query_toks": [
            "SELECT",
            "Royal_Family_Details",
            "FROM",
            "Royal_Family",
            "WHERE",
            "Royal_Family_ID",
            "!=",
            "9561"
        ],
        "query_toks_no_value": [
            "select",
            "royal_family_details",
            "from",
            "royal_family",
            "where",
            "royal_family_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__royal_family__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__royal_family.royal_family_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__royal_family.royal_family_id__",
                            false
                        ],
                        null
                    ],
                    9561.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT other_hotel_details FROM Hotels WHERE star_rating_code != 5;",
        "question": "Select other hotel details from hotels when star rating code does not equal 5",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "other",
            "hotel",
            "details",
            "from",
            "hotels",
            "when",
            "star",
            "rating",
            "code",
            "does",
            "not",
            "equal",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "other_hotel_details",
            "FROM",
            "Hotels",
            "WHERE",
            "star_rating_code",
            "!=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "other_hotel_details",
            "from",
            "hotels",
            "where",
            "star_rating_code",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__hotels__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__hotels.other_hotel_details__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__hotels.star_rating_code__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT * FROM Street_Markets WHERE Market_ID != 7067;",
        "question": "Select all columns from street markets when market id does not equal 7067",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "street",
            "markets",
            "when",
            "market",
            "id",
            "does",
            "not",
            "equal",
            "7067"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Street_Markets",
            "WHERE",
            "Market_ID",
            "!=",
            "7067"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "street_markets",
            "where",
            "market_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__street_markets__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__street_markets.market_id__",
                            false
                        ],
                        null
                    ],
                    7067.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT * FROM Visitors WHERE Tourist_ID != 211;",
        "question": "Select all columns from visitors when tourist id does not equal 211",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "visitors",
            "when",
            "tourist",
            "id",
            "does",
            "not",
            "equal",
            "211"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Visitors",
            "WHERE",
            "Tourist_ID",
            "!=",
            "211"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "visitors",
            "where",
            "tourist_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__visitors__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__visitors.tourist_id__",
                            false
                        ],
                        null
                    ],
                    211.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Theme_park",
        "query": "SELECT * FROM Tourist_Attraction_Features WHERE Feature_ID != 528;",
        "question": "Select all columns from tourist attraction features when feature id does not equal 528",
        "tables": [
            "Staff",
            "Visits",
            "Features",
            "Royal_Family",
            "Hotels",
            "Street_Markets",
            "Ref_Hotel_Star_Ratings",
            "Visitors",
            "Museums",
            "Photos",
            "Shops",
            "Locations",
            "Theme_Parks",
            "Ref_Attraction_Types",
            "Tourist_Attraction_Features",
            "Tourist_Attractions"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "tourist",
            "attraction",
            "features",
            "when",
            "feature",
            "id",
            "does",
            "not",
            "equal",
            "528"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Tourist_Attraction_Features",
            "WHERE",
            "Feature_ID",
            "!=",
            "528"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "tourist_attraction_features",
            "where",
            "feature_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__tourist_attraction_features__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__tourist_attraction_features.feature_id__",
                            false
                        ],
                        null
                    ],
                    528.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "twitter_1",
        "query": "SELECT * FROM user_profiles WHERE partitionid != 23;",
        "question": "Select all columns from user profiles when partition id does not equal 23",
        "tables": [
            "user_profiles",
            "follows",
            "tweets"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "user",
            "profiles",
            "when",
            "partition",
            "id",
            "does",
            "not",
            "equal",
            "23"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "user_profiles",
            "WHERE",
            "partitionid",
            "!=",
            "23"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "user_profiles",
            "where",
            "partitionid",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__user_profiles__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__user_profiles.partitionid__",
                            false
                        ],
                        null
                    ],
                    23.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "twitter_1",
        "query": "SELECT * FROM follows WHERE f2 != 5;",
        "question": "Select all columns from follows when follower id does not equal 5",
        "tables": [
            "user_profiles",
            "follows",
            "tweets"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "follows",
            "when",
            "follower",
            "id",
            "does",
            "not",
            "equal",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "follows",
            "WHERE",
            "f2",
            "!=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "follows",
            "where",
            "f2",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__follows__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__follows.f2__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "twitter_1",
        "query": "SELECT * FROM tweets WHERE id != 4;",
        "question": "Select all columns from tweets when id does not equal 4",
        "tables": [
            "user_profiles",
            "follows",
            "tweets"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "tweets",
            "when",
            "id",
            "does",
            "not",
            "equal",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "tweets",
            "WHERE",
            "id",
            "!=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "tweets",
            "where",
            "id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__tweets__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__tweets.id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "election_representative",
        "query": "SELECT * FROM election WHERE Election_ID != 1;",
        "question": "Select all columns from election when election id does not equal 1",
        "tables": [
            "election",
            "representative"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "election",
            "when",
            "election",
            "id",
            "does",
            "not",
            "equal",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "election",
            "WHERE",
            "Election_ID",
            "!=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "election",
            "where",
            "election_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__election__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__election.election_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_2",
        "query": "SELECT * FROM Student WHERE Major != 540;",
        "question": "Select all columns from student when major does not equal 540",
        "tables": [
            "Student",
            "Voting_record"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "student",
            "when",
            "major",
            "does",
            "not",
            "equal",
            "540"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Student",
            "WHERE",
            "Major",
            "!=",
            "540"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "student",
            "where",
            "major",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__student__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__student.major__",
                            false
                        ],
                        null
                    ],
                    540.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_2",
        "query": "SELECT * FROM Voting_record WHERE President_Vote != 1014;",
        "question": "Select all columns from voting record when president vote does not equal 1014",
        "tables": [
            "Student",
            "Voting_record"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "voting",
            "record",
            "when",
            "president",
            "vote",
            "does",
            "not",
            "equal",
            "1014"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Voting_record",
            "WHERE",
            "President_Vote",
            "!=",
            "1014"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "voting_record",
            "where",
            "president_vote",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__voting_record__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__voting_record.president_vote__",
                            false
                        ],
                        null
                    ],
                    1014.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wedding",
        "query": "SELECT Male_ID FROM wedding WHERE Church_ID != 3;",
        "question": "Select male id from wedding when church id does not equal 3",
        "tables": [
            "church",
            "wedding",
            "people"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "male",
            "id",
            "from",
            "wedding",
            "when",
            "church",
            "id",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Male_ID",
            "FROM",
            "wedding",
            "WHERE",
            "Church_ID",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "male_id",
            "from",
            "wedding",
            "where",
            "church_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__wedding__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__wedding.male_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__wedding.church_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "news_report",
        "query": "SELECT Date FROM event WHERE Event_ID != 3;",
        "question": "Select date from event when event id does not equal 3",
        "tables": [
            "event",
            "journalist",
            "news_report"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "date",
            "from",
            "event",
            "when",
            "event",
            "id",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "Date",
            "FROM",
            "event",
            "WHERE",
            "Event_ID",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "date",
            "from",
            "event",
            "where",
            "event_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__event__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__event.date__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__event.event_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_addresses",
        "query": "SELECT order_quantity FROM Order_Items WHERE order_id != 13;",
        "question": "Select order quantity from order items when order id does not equal 13",
        "tables": [
            "Customer_Contact_Channels",
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "order",
            "quantity",
            "from",
            "order",
            "items",
            "when",
            "order",
            "id",
            "does",
            "not",
            "equal",
            "13"
        ],
        "query_toks": [
            "SELECT",
            "order_quantity",
            "FROM",
            "Order_Items",
            "WHERE",
            "order_id",
            "!=",
            "13"
        ],
        "query_toks_no_value": [
            "select",
            "order_quantity",
            "from",
            "order_items",
            "where",
            "order_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__order_items__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__order_items.order_quantity__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__order_items.order_id__",
                            false
                        ],
                        null
                    ],
                    13.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_addresses",
        "query": "SELECT order_status FROM Customer_Orders WHERE order_id != 9;",
        "question": "Select order status from customer orders when order id does not equal 9",
        "tables": [
            "Customer_Contact_Channels",
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "order",
            "status",
            "from",
            "customer",
            "orders",
            "when",
            "order",
            "id",
            "does",
            "not",
            "equal",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "order_status",
            "FROM",
            "Customer_Orders",
            "WHERE",
            "order_id",
            "!=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "order_status",
            "from",
            "customer_orders",
            "where",
            "order_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_orders__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__customer_orders.order_status__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__customer_orders.order_id__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_addresses",
        "query": "SELECT * FROM Customer_Addresses WHERE address_id != 3;",
        "question": "Select all columns from customer addresses when address id does not equal 3",
        "tables": [
            "Customer_Contact_Channels",
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Orders",
            "Customer_Addresses",
            "Customers"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "customer",
            "addresses",
            "when",
            "address",
            "id",
            "does",
            "not",
            "equal",
            "3"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Customer_Addresses",
            "WHERE",
            "address_id",
            "!=",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "customer_addresses",
            "where",
            "address_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_addresses__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__customer_addresses.address_id__",
                            false
                        ],
                        null
                    ],
                    3.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "school_player",
        "query": "SELECT Team FROM player WHERE Age != 17;",
        "question": "Select team from player when age does not equal 17",
        "tables": [
            "school_performance",
            "school",
            "player",
            "school_details"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "team",
            "from",
            "player",
            "when",
            "age",
            "does",
            "not",
            "equal",
            "17"
        ],
        "query_toks": [
            "SELECT",
            "Team",
            "FROM",
            "player",
            "WHERE",
            "Age",
            "!=",
            "17"
        ],
        "query_toks_no_value": [
            "select",
            "team",
            "from",
            "player",
            "where",
            "age",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__player__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__player.team__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__player.age__",
                            false
                        ],
                        null
                    ],
                    17.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tvshow",
        "query": "SELECT * FROM Cartoon WHERE Channel != 728;",
        "question": "Select all columns from cartoon when channel does not equal 728",
        "tables": [
            "Cartoon",
            "TV_Channel",
            "TV_series"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "cartoon",
            "when",
            "channel",
            "does",
            "not",
            "equal",
            "728"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Cartoon",
            "WHERE",
            "Channel",
            "!=",
            "728"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "cartoon",
            "where",
            "channel",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__cartoon__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__cartoon.channel__",
                            false
                        ],
                        null
                    ],
                    728.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wrestler",
        "query": "SELECT * FROM Elimination WHERE Elimination_ID != 2;",
        "question": "Select all columns from elimination when elimination id does not equal 2",
        "tables": [
            "Elimination",
            "wrestler"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "elimination",
            "when",
            "elimination",
            "id",
            "does",
            "not",
            "equal",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Elimination",
            "WHERE",
            "Elimination_ID",
            "!=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "elimination",
            "where",
            "elimination_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__elimination__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__elimination.elimination_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "wrestler",
        "query": "SELECT * FROM wrestler WHERE Days_held != 113;",
        "question": "Select all columns from wrestler when days held does not equal 113",
        "tables": [
            "Elimination",
            "wrestler"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "wrestler",
            "when",
            "days",
            "held",
            "does",
            "not",
            "equal",
            "113"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "wrestler",
            "WHERE",
            "Days_held",
            "!=",
            "113"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "wrestler",
            "where",
            "days_held",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__wrestler__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__wrestler.days_held__",
                            false
                        ],
                        null
                    ],
                    113.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customer_complaints",
        "query": "SELECT date_product_discontinued FROM Products WHERE parent_product_id != 4;",
        "question": "Select date product discontinued from products when parent product id does not equal 4",
        "tables": [
            "Staff",
            "Complaints",
            "Products",
            "Customers"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "date",
            "product",
            "discontinued",
            "from",
            "products",
            "when",
            "parent",
            "product",
            "id",
            "does",
            "not",
            "equal",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "date_product_discontinued",
            "FROM",
            "Products",
            "WHERE",
            "parent_product_id",
            "!=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "date_product_discontinued",
            "from",
            "products",
            "where",
            "parent_product_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__products__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__products.date_product_discontinued__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__products.parent_product_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "department_management",
        "query": "SELECT head_ID FROM management WHERE department_ID != 2;",
        "question": "Select head id from management when department id does not equal 2",
        "tables": [
            "management",
            "department",
            "head"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "head",
            "id",
            "from",
            "management",
            "when",
            "department",
            "id",
            "does",
            "not",
            "equal",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "head_ID",
            "FROM",
            "management",
            "WHERE",
            "department_ID",
            "!=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "head_id",
            "from",
            "management",
            "where",
            "department_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__management__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__management.head_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__management.department_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_products_contacts",
        "query": "SELECT * FROM Order_Items WHERE order_id != 15;",
        "question": "Select all columns from order items when order id does not equal 15",
        "tables": [
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Address_History",
            "Customer_Orders",
            "Customers",
            "Contacts"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "order",
            "items",
            "when",
            "order",
            "id",
            "does",
            "not",
            "equal",
            "15"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Order_Items",
            "WHERE",
            "order_id",
            "!=",
            "15"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "order_items",
            "where",
            "order_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__order_items__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__order_items.order_id__",
                            false
                        ],
                        null
                    ],
                    15.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_products_contacts",
        "query": "SELECT * FROM Customer_Address_History WHERE customer_id != 2;",
        "question": "Select all columns from customer address history when customer id does not equal 2",
        "tables": [
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Address_History",
            "Customer_Orders",
            "Customers",
            "Contacts"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "customer",
            "address",
            "history",
            "when",
            "customer",
            "id",
            "does",
            "not",
            "equal",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Customer_Address_History",
            "WHERE",
            "customer_id",
            "!=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "customer_address_history",
            "where",
            "customer_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_address_history__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__customer_address_history.customer_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_products_contacts",
        "query": "SELECT * FROM Customer_Orders WHERE order_id != 10;",
        "question": "Select all columns from customer orders when order id does not equal 10",
        "tables": [
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Address_History",
            "Customer_Orders",
            "Customers",
            "Contacts"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "customer",
            "orders",
            "when",
            "order",
            "id",
            "does",
            "not",
            "equal",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Customer_Orders",
            "WHERE",
            "order_id",
            "!=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "customer_orders",
            "where",
            "order_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__customer_orders__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__customer_orders.order_id__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "customers_and_products_contacts",
        "query": "SELECT last_name FROM Contacts WHERE contact_id != 13;",
        "question": "Select last name from contacts when contact id does not equal 13",
        "tables": [
            "Products",
            "Order_Items",
            "Addresses",
            "Customer_Address_History",
            "Customer_Orders",
            "Customers",
            "Contacts"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "last",
            "name",
            "from",
            "contacts",
            "when",
            "contact",
            "id",
            "does",
            "not",
            "equal",
            "13"
        ],
        "query_toks": [
            "SELECT",
            "last_name",
            "FROM",
            "Contacts",
            "WHERE",
            "contact_id",
            "!=",
            "13"
        ],
        "query_toks_no_value": [
            "select",
            "last_name",
            "from",
            "contacts",
            "where",
            "contact_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__contacts__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__contacts.last_name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__contacts.contact_id__",
                            false
                        ],
                        null
                    ],
                    13.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_1",
        "query": "SELECT Dlocation FROM dept_locations WHERE Dnumber != 1;",
        "question": "Select department location from department locations when department number does not equal 1",
        "tables": [
            "works_on",
            "dept_locations",
            "dependent",
            "department",
            "project",
            "employee"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "department",
            "location",
            "from",
            "department",
            "locations",
            "when",
            "department",
            "number",
            "does",
            "not",
            "equal",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "Dlocation",
            "FROM",
            "dept_locations",
            "WHERE",
            "Dnumber",
            "!=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "dlocation",
            "from",
            "dept_locations",
            "where",
            "dnumber",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__dept_locations__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__dept_locations.dlocation__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__dept_locations.dnumber__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_1",
        "query": "SELECT * FROM project WHERE Pnumber != 20;",
        "question": "Select all columns from project when dependent number does not equal 20",
        "tables": [
            "works_on",
            "dept_locations",
            "dependent",
            "department",
            "project",
            "employee"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "project",
            "when",
            "dependent",
            "number",
            "does",
            "not",
            "equal",
            "20"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "project",
            "WHERE",
            "Pnumber",
            "!=",
            "20"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "project",
            "where",
            "pnumber",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__project__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__project.pnumber__",
                            false
                        ],
                        null
                    ],
                    20.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "company_1",
        "query": "SELECT * FROM employee WHERE Salary != 55000;",
        "question": "Select all columns from employee when salary does not equal 55000",
        "tables": [
            "works_on",
            "dept_locations",
            "dependent",
            "department",
            "project",
            "employee"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "employee",
            "when",
            "salary",
            "does",
            "not",
            "equal",
            "55000"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "employee",
            "WHERE",
            "Salary",
            "!=",
            "55000"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "employee",
            "where",
            "salary",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__employee__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__employee.salary__",
                            false
                        ],
                        null
                    ],
                    55000.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "workshop_paper",
        "query": "SELECT College FROM submission WHERE Submission_ID != 9;",
        "question": "Select college from submission when submission id does not equal 9",
        "tables": [
            "Acceptance",
            "submission",
            "workshop"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "college",
            "from",
            "submission",
            "when",
            "submission",
            "id",
            "does",
            "not",
            "equal",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "College",
            "FROM",
            "submission",
            "WHERE",
            "Submission_ID",
            "!=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "college",
            "from",
            "submission",
            "where",
            "submission_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__submission__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__submission.college__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__submission.submission_id__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "epinions_1",
        "query": "SELECT u_id FROM review WHERE rank != 5;",
        "question": "Select user id from review when rank does not equal 5",
        "tables": [
            "item",
            "review",
            "useracct",
            "trust"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "user",
            "id",
            "from",
            "review",
            "when",
            "rank",
            "does",
            "not",
            "equal",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "u_id",
            "FROM",
            "review",
            "WHERE",
            "rank",
            "!=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "u_id",
            "from",
            "review",
            "where",
            "rank",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__review__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__review.u_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__review.rank__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "epinions_1",
        "query": "SELECT name FROM useracct WHERE u_id != 1;",
        "question": "Select name from useracct when user id does not equal 1",
        "tables": [
            "item",
            "review",
            "useracct",
            "trust"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "name",
            "from",
            "useracct",
            "when",
            "user",
            "id",
            "does",
            "not",
            "equal",
            "1"
        ],
        "query_toks": [
            "SELECT",
            "name",
            "FROM",
            "useracct",
            "WHERE",
            "u_id",
            "!=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "useracct",
            "where",
            "u_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__useracct__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__useracct.name__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__useracct.u_id__",
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "epinions_1",
        "query": "SELECT * FROM trust WHERE source_u_id != 2;",
        "question": "Select all columns from trust when source user id does not equal 2",
        "tables": [
            "item",
            "review",
            "useracct",
            "trust"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "trust",
            "when",
            "source",
            "user",
            "id",
            "does",
            "not",
            "equal",
            "2"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "trust",
            "WHERE",
            "source_u_id",
            "!=",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "trust",
            "where",
            "source_u_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__trust__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__trust.source_u_id__",
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "party_host",
        "query": "SELECT * FROM host WHERE Age != 30;",
        "question": "Select all columns from host when age does not equal 30",
        "tables": [
            "host",
            "party",
            "party_host"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "host",
            "when",
            "age",
            "does",
            "not",
            "equal",
            "30"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "host",
            "WHERE",
            "Age",
            "!=",
            "30"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "host",
            "where",
            "age",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__host__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__host.age__",
                            false
                        ],
                        null
                    ],
                    30.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "party_host",
        "query": "SELECT * FROM party WHERE First_year != 2002;",
        "question": "Select all columns from party when first year does not equal 2002",
        "tables": [
            "host",
            "party",
            "party_host"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "party",
            "when",
            "first",
            "year",
            "does",
            "not",
            "equal",
            "2002"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "party",
            "WHERE",
            "First_year",
            "!=",
            "2002"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "party",
            "where",
            "first_year",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__party__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__party.first_year__",
                            false
                        ],
                        null
                    ],
                    2002.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "party_host",
        "query": "SELECT * FROM party_host WHERE Host_ID != 10;",
        "question": "Select all columns from party host when host id does not equal 10",
        "tables": [
            "host",
            "party",
            "party_host"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "party",
            "host",
            "when",
            "host",
            "id",
            "does",
            "not",
            "equal",
            "10"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "party_host",
            "WHERE",
            "Host_ID",
            "!=",
            "10"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "party_host",
            "where",
            "host_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__party_host__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__party_host.host_id__",
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "product_catalog",
        "query": "SELECT * FROM Catalog_Contents WHERE capacity != 5;",
        "question": "Select all columns from catalog contents when capacity does not equal 5",
        "tables": [
            "Catalog_Contents",
            "Catalogs",
            "Attribute_Definitions",
            "Catalog_Contents_Additional_Attributes",
            "Catalog_Structure"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "catalog",
            "contents",
            "when",
            "capacity",
            "does",
            "not",
            "equal",
            "5"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Catalog_Contents",
            "WHERE",
            "capacity",
            "!=",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "catalog_contents",
            "where",
            "capacity",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__catalog_contents__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__catalog_contents.capacity__",
                            false
                        ],
                        null
                    ],
                    5.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "product_catalog",
        "query": "SELECT * FROM Attribute_Definitions WHERE attribute_id != 4;",
        "question": "Select all columns from attribute definitions when attribute id does not equal 4",
        "tables": [
            "Catalog_Contents",
            "Catalogs",
            "Attribute_Definitions",
            "Catalog_Contents_Additional_Attributes",
            "Catalog_Structure"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "attribute",
            "definitions",
            "when",
            "attribute",
            "id",
            "does",
            "not",
            "equal",
            "4"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Attribute_Definitions",
            "WHERE",
            "attribute_id",
            "!=",
            "4"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "attribute_definitions",
            "where",
            "attribute_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__attribute_definitions__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__attribute_definitions.attribute_id__",
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "product_catalog",
        "query": "SELECT * FROM Catalog_Contents_Additional_Attributes WHERE catalog_entry_id != 11;",
        "question": "Select all columns from catalog contents additional attributes when catalog entry id does not equal 11",
        "tables": [
            "Catalog_Contents",
            "Catalogs",
            "Attribute_Definitions",
            "Catalog_Contents_Additional_Attributes",
            "Catalog_Structure"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "all",
            "columns",
            "from",
            "catalog",
            "contents",
            "additional",
            "attributes",
            "when",
            "catalog",
            "entry",
            "id",
            "does",
            "not",
            "equal",
            "11"
        ],
        "query_toks": [
            "SELECT",
            "*",
            "FROM",
            "Catalog_Contents_Additional_Attributes",
            "WHERE",
            "catalog_entry_id",
            "!=",
            "11"
        ],
        "query_toks_no_value": [
            "select",
            "*",
            "from",
            "catalog_contents_additional_attributes",
            "where",
            "catalog_entry_id",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__catalog_contents_additional_attributes__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__all__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__catalog_contents_additional_attributes.catalog_entry_id__",
                            false
                        ],
                        null
                    ],
                    11.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "product_catalog",
        "query": "SELECT catalog_id FROM Catalog_Structure WHERE catalog_level_number != 9;",
        "question": "Select catalog id from catalog structure when catalog level number does not equal 9",
        "tables": [
            "Catalog_Contents",
            "Catalogs",
            "Attribute_Definitions",
            "Catalog_Contents_Additional_Attributes",
            "Catalog_Structure"
        ],
        "rule": "notequal",
        "question_toks": [
            "Select",
            "catalog",
            "id",
            "from",
            "catalog",
            "structure",
            "when",
            "catalog",
            "level",
            "number",
            "does",
            "not",
            "equal",
            "9"
        ],
        "query_toks": [
            "SELECT",
            "catalog_id",
            "FROM",
            "Catalog_Structure",
            "WHERE",
            "catalog_level_number",
            "!=",
            "9"
        ],
        "query_toks_no_value": [
            "select",
            "catalog_id",
            "from",
            "catalog_structure",
            "where",
            "catalog_level_number",
            "!=",
            "value"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        "__catalog_structure__"
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                "__catalog_structure.catalog_id__",
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            "__catalog_structure.catalog_level_number__",
                            false
                        ],
                        null
                    ],
                    9.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    }
]